var searchIndex = new Map(JSON.parse('[\
["coaster",{"doc":"Provides a simple and unified API to run fast and highly …","t":"EEEEEEEEEEEECCCCCCCCCCCFFRKNNNNNNNNNMNNNNNNONNNNNNNNNNNNNNNNNKPGRKKRPKPPPMNNNNNNNNNNMMNNMMNNNNNPGPPPNNNNNNNNNNNNNNNRPRGRMKPMNNNNNNMNMMMNNNNNEECCPPPPEPPPFPEEFGPPEPPPNPPPPPPPPPPPPPPPPPEPEPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNCNNNNCNNNNNNNNCHNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNFNNNNNNNNNNNNFNNNNNNNNNNNNEEGENKPFHCNNNNNNNNNNNCNCNNNNNCHCNNNNNNNNNNNNNNNFNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNFNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNPPPGKPNNMNNMNNNMNMNMMMMNNNNKGKPPPPMMMMMMMMMNNMMMNMMNMMMMNNMNNNMMMNMMMMMMMMMMMMMMMMMMMMCMMMMMMMMNMMMNNNMNNNKKKKKKKKKKKMPKMMMMMMMMMKKGKRKPMMNMNMKKKKKKKKKKRRRMFKKKMKKKKKNKKKKKKKKKHMMHMMMMMMMMMMNNNNCCHMMMMMMMHMMMMMHHHMNMMMMMNMMMCMNNNMMNNMNNNNNMNNMMNNNMNNMCMCMNNMMMMMMNMMMMONMMMMMMMMMMMMMMMMMMMHMCCHMMMMCMMNMMMMMMMMNNCMMHMMMMMMMMMMNNNNNNMNNMNNNNNMNNNMMNNNNNNMMMMMMMMHMKKKMMMMKKKKMHMNNNNNMNNNNNMNNNNNNNMNNNNNMNNMMMMMMMMMMKKKMMNMNMMMNMNMMMMMMMMMMNMMNMMMNMMMMNMNMMMMMMNMNMNMNMNMNMMMMMMNMMMNMMMMMMMMMMMMMNMNMNMNMMMMMMMNMNMNKKNMHMNNHMKMMMMNMMNMMMMMMMNMMMCCCCCCCKKKKKKKKMMMMMMMMKKMMMMKRMKKRMMKKKMMMKKKKMMMMMKKKKKKMMMMMMRKHHMKMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKKHMHMMMHMEEEEEEEEEEEEPPGKKPPFIPNNNNNNNNNNMNMNNNNNNNNNMNNNNMNNNNNMNNNNNNNNNNN","n":["Cuda","Error","HardwareType","IDevice","IFramework","IHardware","IMemory","ITensorDesc","IntoTensorDesc","Native","SharedTensor","TensorDesc","backend","binary","device","error","framework","frameworks","hardware","operation","plugin","prelude","tensor","Backend","BackendConfig","F","IBackend","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","device","device","device","device","fmt","fmt","framework","framework","from","from","hardwares","into","into","new","new","synchronize","synchronize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","IBinary","Cuda","Error","H","IDevice","IMemory","M","MemoryAllocationError","MemorySync","MemorySyncError","Native","NoMemorySyncRoute","alloc_memory","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from","from","hardwares","id","into","source","sync_in","sync_out","to_owned","to_string","try_from","try_into","type_id","Device","Error","Framework","Plugin","Tensor","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","into","source","to_string","try_from","try_into","type_id","B","Cuda","D","Error","H","ID","IFramework","Implementation","binary","borrow","borrow_mut","fmt","fmt","from","from","hardwares","into","load_hardwares","new","new_device","source","to_string","try_from","try_into","type_id","Cuda","Native","cuda","native","AlreadyAquired","AlreadyMapped","ArrayIsMapped","Assert","Context","ContextAlreadyCurrent","ContextAlreadyInUse","ContextIsDestroyed","Cuda","Deinitialized","Device","DeviceInfo","Driver","DriverError","EccUncorrectable","FileNotFound","Function","HardwareStackError","HostMemoryAlreadyRegistered","HostMemoryNotRegistered","ID","IllegalAddress","IllegalInstruction","InvalidAddressSpace","InvalidContext","InvalidDevice","InvalidGraphicsContent","InvalidHandle","InvalidImage","InvalidPc","InvalidPtx","InvalidSource","InvalidValue","LauncIncompatibleTexturing","LaunchFailed","LaunchOutOfResources","LaunchTimeout","MapFailed","Memory","MisalignedAddress","Module","NoBinaryForGpu","NoDevice","NotFound","NotInitialized","NotMapped","NotMappedAsArray","NotMappedAsPointer","NotPermitted","NotReady","NotSupported","OperatingSystem","OutOfMemory","PeerAccessAlreadyEnabled","PeerAccessNotEnabled","PeerAccessUnsupported","PrimaryContextActive","ProfilerAlreadyStarted","ProfilerAlreadyStopped","ProfilerDisabled","ProfilerNotInitialized","SharedObjectInitFailed","SharedObjectSymbolNotFound","TooManyPeers","Unknown","UnmapFailed","UnsupportedLimit","binary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","context","create_context","cublas","cudnn","destroy_context","device","eq","fmt","fmt","fmt","fmt","from","from","from","function","get_cuda_backend","hardwares","init","initialise_cublas","initialise_cudnn","into","into","into","load_device_info","load_device_list","load_devices","load_hardwares","mem_alloc","mem_cpy_d_to_h","mem_cpy_h_to_d","mem_free","memory","module","new","new_device","synchronize_context","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Context","alloc_memory","borrow","borrow_mut","clone","clone_into","drop","eq","fmt","from","from_c","hardwares","hash","id","id","id_c","into","new","sync_in","sync_out","synchronize","to_owned","try_from","try_into","type_id","Device","DeviceInfo","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","compute_units","default","eq","fmt","fmt","fmt","from","from","from_c","from_isize","hardware_type","id","id_c","into","into","load_compute_units","load_device_type","load_name","name","new","set_compute_units","set_hardware_type","set_name","to_isize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Function","borrow","borrow_mut","clone","clone_into","fmt","from","from_isize","into","to_owned","try_from","try_into","type_id","Memory","borrow","borrow_mut","drop","fmt","from","from_c","id_c","into","new","try_from","try_into","type_id","Module","borrow","borrow_mut","clone","clone_into","fmt","from","from_isize","into","to_owned","try_from","try_into","type_id","Binary","Cpu","Error","Function","ID","INative","Memory","Native","allocate_boxed_slice","binary","binary","borrow","borrow","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","description","device","eq","flatbox","fmt","fmt","fmt","from","from","function","get_native_backend","hardware","hardwares","into","into","load_hardwares","new","new_device","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Binary","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","new","to_owned","try_from","try_into","type_id","Cpu","alloc_memory","borrow","borrow_mut","clone","clone_into","eq","fmt","from","hardwares","hash","id","into","new","sync_in","sync_out","to_owned","try_from","try_into","type_id","FlatBox","as_mut_slice","as_slice","borrow","borrow_mut","byte_size","drop","fmt","from","from_box","into","try_from","try_into","type_id","Function","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","new","to_owned","try_from","try_into","type_id","Hardware","borrow","borrow_mut","build","clone","clone_into","compute_units","default","fmt","from","hardware_type","id","into","name","new","set_compute_units","set_hardware_type","set_name","to_owned","try_from","try_into","type_id","ACCELERATOR","CPU","GPU","HardwareType","IHardware","OTHER","borrow","borrow_mut","build","clone","clone_into","compute_units","eq","fmt","from","hardware_type","hash","id","into","name","set_compute_units","set_hardware_type","set_name","to_owned","try_from","try_into","type_id","IOperation","Error","Float","Operation","Plugin","PluginInner","SharedTensor","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","borrow","borrow_mut","cbrt","ceil","classify","copysign","cos","cosh","epsilon","exp","exp2","exp_m1","floor","fmt","fmt","fract","from","from","from","hypot","infinity","integer_decode","into","is_finite","is_infinite","is_nan","is_normal","is_sign_negative","is_sign_positive","ln","ln_1p","log","log10","log2","max","max_value","min","min_positive_value","min_value","mul_add","nan","neg_infinity","neg_zero","numeric_helpers","powf","powi","recip","round","signum","sin","sin_cos","sinh","source","sqrt","tan","tanh","to_degrees","to_radians","to_string","trunc","try_from","try_into","type_id","AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedEuclid","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","E","Empty","Euclid","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatErrorKind","FromPrimitive","FromStrRadixErr","Inv","Invalid","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","Output","Output","Output","PI","ParseFloatError","Pow","PrimInt","RefNum","SQRT_2","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","TAU","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs","abs","abs_sub","abs_sub","abs_sub","acos","acosh","as_","asin","asinh","atan","atan2","atanh","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","cbrt","ceil","checked_add","checked_div","checked_div_euclid","checked_mul","checked_neg","checked_pow","checked_rem","checked_rem_euclid","checked_shl","checked_shr","checked_sub","clamp","clamp_max","clamp_min","classify","copysign","cos","cosh","count_ones","count_zeros","div_euclid","epsilon","exp","exp2","exp_m1","float","floor","fmt","fmt","fmt","fract","from","from","from","from_be","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_le","from_str_radix","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","hypot","identities","infinity","int","integer_decode","into","into","inv","is_finite","is_infinite","is_nan","is_negative","is_normal","is_one","is_positive","is_sign_negative","is_sign_positive","is_zero","kind","leading_ones","leading_zeros","ln","ln_1p","log","log10","log2","max","max_value","max_value","min","min_positive_value","min_value","min_value","mul_add","mul_add","mul_add_assign","nan","neg_infinity","neg_zero","one","one","ops","pow","pow","pow","pow","powf","powi","real","recip","rem_euclid","reverse_bits","rotate_left","rotate_right","round","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","set_one","set_zero","sign","signed_shl","signed_shr","signum","signum","signum","sin","sin_cos","sinh","sqrt","swap_bytes","tan","tanh","to_be","to_degrees","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_le","to_radians","to_string","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","trailing_ones","trailing_zeros","trunc","try_from","try_from","try_into","try_into","type_id","type_id","unsigned_shl","unsigned_shr","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","zero","zero","Bounded","LowerBounded","UpperBounded","max_value","max_value","min_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","ceil","classify","classify","copysign","cos","cosh","epsilon","epsilon","exp","exp2","exp_m1","floor","floor","fract","fract","hypot","infinity","infinity","integer_decode","integer_decode","is_finite","is_finite","is_infinite","is_infinite","is_nan","is_nan","is_normal","is_normal","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","ln","ln_1p","log","log10","log2","max","max","max_value","max_value","min","min","min_positive_value","min_positive_value","min_value","min_value","mul_add","nan","nan","neg_infinity","neg_infinity","neg_zero","neg_zero","powf","powi","powi","recip","recip","round","round","signum","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_degrees","to_radians","to_radians","trunc","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_ones","leading_zeros","pow","reverse_bits","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_ones","trailing_zeros","unsigned_shl","unsigned_shr","checked","euclid","inv","mul_add","overflowing","saturating","wrapping","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","CheckedEuclid","Euclid","checked_div_euclid","checked_rem_euclid","div_euclid","rem_euclid","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Real","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","cos","cosh","epsilon","exp","exp2","exp_m1","floor","fract","hypot","is_sign_negative","is_sign_positive","ln","ln_1p","log","log10","log2","max","max_value","min","min_positive_value","min_value","mul_add","powf","powi","recip","round","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_radians","trunc","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum","Cuda","FlatBox","HardwareType","IDevice","IFramework","IHardware","IMemory","ITensorDesc","IntoTensorDesc","Native","SharedTensor","TensorDesc","CapacityExceeded","DeviceError","Error","ITensorDesc","IntoTensorDesc","InvalidRemove","InvalidShape","SharedTensor","TensorDesc","UninitializedMemory","borrow","borrow","borrow_mut","borrow_mut","capacity","clone","clone_into","default_stride","default_stride_i32","desc","dims","dims","dims_i32","dims_i32","drop","eq","fmt","fmt","fmt","from","from","from","into","into","into","mem_size","new","rank","rank","read","read_write","reshape","resize","size","size","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","write_only"],"q":[[0,"coaster"],[23,"coaster::backend"],[61,"coaster::binary"],[62,"coaster::device"],[95,"coaster::error"],[115,"coaster::framework"],[140,"coaster::frameworks"],[144,"coaster::frameworks::cuda"],[273,"coaster::frameworks::cuda::context"],[298,"coaster::frameworks::cuda::device"],[342,"coaster::frameworks::cuda::function"],[355,"coaster::frameworks::cuda::memory"],[368,"coaster::frameworks::cuda::module"],[381,"coaster::frameworks::native"],[428,"coaster::frameworks::native::binary"],[442,"coaster::frameworks::native::device"],[462,"coaster::frameworks::native::flatbox"],[476,"coaster::frameworks::native::function"],[490,"coaster::frameworks::native::hardware"],[512,"coaster::hardware"],[539,"coaster::operation"],[540,"coaster::plugin"],[618,"coaster::plugin::numeric_helpers"],[875,"coaster::plugin::numeric_helpers::bounds"],[882,"coaster::plugin::numeric_helpers::cast"],[917,"coaster::plugin::numeric_helpers::float"],[1026,"coaster::plugin::numeric_helpers::identities"],[1036,"coaster::plugin::numeric_helpers::int"],[1056,"coaster::plugin::numeric_helpers::ops"],[1063,"coaster::plugin::numeric_helpers::ops::checked"],[1079,"coaster::plugin::numeric_helpers::ops::euclid"],[1085,"coaster::plugin::numeric_helpers::ops::inv"],[1088,"coaster::plugin::numeric_helpers::ops::mul_add"],[1093,"coaster::plugin::numeric_helpers::ops::overflowing"],[1099,"coaster::plugin::numeric_helpers::ops::saturating"],[1108,"coaster::plugin::numeric_helpers::ops::wrapping"],[1120,"coaster::plugin::numeric_helpers::pow"],[1125,"coaster::plugin::numeric_helpers::real"],[1173,"coaster::plugin::numeric_helpers::sign"],[1183,"coaster::prelude"],[1195,"coaster::tensor"],[1250,"core::clone"],[1251,"core::result"],[1252,"core::fmt"],[1253,"core::fmt"],[1254,"core::any"],[1255,"core::error"],[1256,"core::option"],[1257,"alloc::string"],[1258,"rcublas::api::context"],[1259,"rcudnn::cudnn"],[1260,"libc::unix"],[1261,"libc::unix"],[1262,"libc::unix"],[1263,"core::num"],[1264,"core::marker"],[1265,"core::cmp"],[1266,"core::fmt"]],"d":["","","","","","","","","","","","","Provides the interface for running parallel computations …","Provides the generic functionality for a backend-specific …","Provides a representation for one or many ready to use …","Defines the general set of error types in Coaster.","Provides the generic functionality of a hardware …","Exposes the specific Framework implementations.","Provides a representation for a collection of available …","Provides the generic functionality for backend-agnostic …","Provides helpers for explicit implementations of Backend […","A module meant to be glob imported when using Coaster.","Provides the functionality for memory management across …","Defines the main and highest struct of Coaster.","Provides Backend Configuration.","Represents the Framework of a Backend.","Describes a Backend.","","","","","","","","","Try to create a default backend.","Returns the backend device.","","","Returns the backend device.","","","Returns the backend framework.","Provides the Framework.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the available hardware.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Initialize a new native Backend from a BackendConfig.","Creates a new BackendConfig.","Synchronize backend.","","","","","","","","","","Defines the functionality for turning a library into …","Failures related to the Cuda framework implementation.","Defines a generic set of Memory Errors.","The Hardware representation for this Device.","Specifies Hardware behavior across frameworks.","Marker trait for backing memory.","The Memory representation for this Device.","Framework error at memory allocation.","This trait should be implemented for <code>Device</code>. Use of <code>Any</code> …","Framework error at memory synchronization.","Failures related to the Native framework implementation.","No route found for memory transfer between devices","Allocate memory on the Device.","","","","","","","","Returns the argument unchanged.","","","Returns the hardwares, which define the Device.","Returns the unique identifier of the Device.","Calls <code>U::from(self)</code>.","","FIXME","FIXME","","","","","","Failure related to a Device.","Defines the set of available Coaster error types.","Failure related to the Framework implementation.","Failure at Plugin Operation.","Failure related to the Tensor.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","The Binary representation for this Framework.","Failures related to the Cuda framework implementation.","The Device representation for this Framework.","Defines a generic set of Framework Errors.","The Hardware representation for this Framework.","Defines the Framework by a Name.","Defines a Framework.","Failure related to the Coaster implementation of a …","Returns the initialized binary.","","","","","Returns the argument unchanged.","","Returns the cached and available hardwares.","Calls <code>U::from(self)</code>.","Initializes all the available hardwares.","Initializes a new Framework.","Initializes a new Device from the provided hardwares.","","","","","","","","Provides informations about the software system, such as …","Provides informations about the software system, such as …","","","","","","","","","Provides the Cuda Framework.","","","","Defines the Cuda API.","OpenCL device errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides a Rust wrapper around Cuda’s context.","Creates a Cuda context.","Return a reference to the CUBLAS Handle","Return a reference to the CUDNN Handle","Removes a created Cuda context from the device.","Provides a Rust wrapper around Cuda’s device.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Provides a Rust wrapper around Cuda’s Function.","Initialise the CUDA, CUBLAS, and CUDNN APIs","","Initialize the Cuda Driver API.","Create a handle to CUBLAS and assign it to CUDA Object","Create a handle to CUDNN and assign it to CUDA Object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the requested DeviceInfo for the provided device.","Returns a list of available devices for the provided …","Returns fully initialized devices available through Cuda.","","Allocates memory on the Cuda device.","Copies memory from the Cuda device to the Host.","Copies memory from the Host to the Cuda device.","Releases allocated memory from the Cuda device.","Provides a Rust wrapper around Cuda’s memory.","Provides a Rust wrapper around Cuda’s Module.","","Creates a new Cuda context for computation.","Synchronize the CUDA context associated with the current …","","","","","","","","","","","","","","Defines a Cuda Context.","","","","","","","","","Returns the argument unchanged.","Initializes a new Cuda platform from its C type.","","","","Returns the id as isize.","Returns the id as its C type.","Calls <code>U::from(self)</code>.","Initializes a new Cuda context.","","","Synchronize this Context.","","","","","Defines a Cuda Device.","Defines a generic DeviceInfo container.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Initializes a new Cuda device from its C type.","Initializes a new Cuda device.","","","Returns the id as its C type.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Loads the compute units of the device via a foreign Cuda …","Loads the device type via a foreign Cuda call.","Loads the name of the device via a foreign Cuda call.","","Initializes a new Device Info","","","","","","","","","","","","","","Defines a Cuda Function.","","","","","","Returns the argument unchanged.","Initializes a new OpenCL device.","Calls <code>U::from(self)</code>.","","","","","Defines a Cuda Memory.","","","","","Returns the argument unchanged.","Initializes a new Cuda memory from its C type.","Returns the memory id as its C type.","Calls <code>U::from(self)</code>.","Initializes a new Cuda memory.","","","","Defines a Cuda Module.","","","","","","Returns the argument unchanged.","Initializes a new Cuda Module.","Calls <code>U::from(self)</code>.","","","","","","","Defines the Native Error.","","","Provides the Native framework trait for explicit Backend …","Failure related to allocation, syncing memory","Provides the Native framework.","Traditional allocation via creation of a filled Vec.","Provides a binary on native CPU.","","","","","","","","","","","","Provides a hardware aka. the host CPU.","","Provides a Box without any knowledge of its underlying …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Provides a operation on native CPU.","Initialise the Native Backend for running Tensor Operations","Provides a hardware aka. the host CPU.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Defines a host CPU binary.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Initializes the native CPU binary.","","","","","Defines the host CPU Hardware.","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Initializes a new OpenCL hardware.","","","","","","","A Box without any knowledge of its underlying type.","Access memory as mutable slice.","Access memory as slice.","","","Returns memory size of the Flatbox.","","","Returns the argument unchanged.","Create FlatBox from Box, consuming it.","Calls <code>U::from(self)</code>.","","","","Defines a host CPU operation.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Initializes a native CPU hardware.","","","","","Defines the host CPU Hardware.","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Initializes a new OpenCL hardware.","","","","","","","","Hardware Accelerator devices","CPU devices","GPU devices","Specifies the available Hardware types.","Specifies Hardware behavior accross frameworks.","Used for anything else","","","Build an inmutable Hardware","","","Returns the compute_units of the Hardware","","","Returns the argument unchanged.","Returns the device_type of the Hardware","","Returns the ID of the Hardware","Calls <code>U::from(self)</code>.","Returns the name of the Hardware","Defines the compute_units of the Hardware","Defines the hardware_type of the Hardware","Defines the name of the Hardware","","","","","Defines the functionality of an operation.","Defines a high-level Plugin Error.","Generic trait for floating point numbers","Failure at the execution of the Operation.","","Failure at the Plugin with an inner error type.","Failure related to <code>SharedTensor</code>: use of uninitialized …","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","","","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns a number composed of the magnitude of <code>self</code> and the …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","","","Returns the fractional part of a number.","","","Returns the argument unchanged.","Calculate the length of the hypotenuse of a right-angle …","Returns the infinite value.","Returns the mantissa, base 2 exponent, and sign as …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Returns the <code>NaN</code> value.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Describes numeric types and traits for a Plugin.","Raise a number to a floating point power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts radians to degrees.","Converts degrees to radians.","","Return the integer part of a number.","","","","A generic interface for casting between machine scalars …","Numbers which have upper and lower bounds","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Return Euler’s number.","","","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","","A generic trait for converting a number to a value.","","Unary operator for retrieving the multiplicative inverse, …","","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","Generic trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","An interface for casting between machine scalars.","Generic trait for types implementing basic numeric …","The trait for <code>Num</code> types which also implement numeric …","Defines a multiplicative identity element for <code>Self</code>.","The result after applying the operator.","The resulting type after applying the fused multiply-add.","The result after applying the operator.","Return Archimedes’ constant <code>π</code>.","","Binary operator for raising a value to a power.","Generic trait for primitive integers.","The trait for <code>Num</code> references which implement numeric …","Return <code>sqrt(2.0)</code>.","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Useful functions for signed numbers (i.e. numbers that can …","Return the full circle constant <code>τ</code>.","A generic trait for converting a value to a number.","A trait for values which cannot be negative","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Defines an additive identity element for <code>Self</code>.","Computes the absolute value.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Convert a value to another, using the <code>as</code> operator.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","","","","","","","Cast from one machine scalar to another.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Performs euclid division that returns <code>None</code> instead of …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Raises a value to the power of exp, returning <code>None</code> if an …","Finds the remainder of dividing two numbers, checking for …","Finds the euclid remainder of dividing two numbers, …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","Returns the floating point category of the number. If only …","Returns a number composed of the magnitude of <code>self</code> and the …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Calculates Euclidean division, the matching method for …","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","","Returns the largest integer less than or equal to a number.","","","","Returns the fractional part of a number.","Creates a number from another value that can be converted …","Returns the argument unchanged.","Returns the argument unchanged.","Convert an integer from big endian to the target’s …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Convert an integer from little endian to the target’s …","Convert from a string and radix (typically <code>2..=36</code>).","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Calculate the length of the hypotenuse of a right-angle …","","Returns the infinite value.","","Returns the mantissa, base 2 exponent, and sign as …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the multiplicative inverse of <code>self</code>.","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns true if the number is negative and false if the …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns true if the number is positive and false if the …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite number this type can represent","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite number this type can represent","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Returns the <code>NaN</code> value.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","","","Raises a value to the power of exp, using exponentiation …","Raises self to the power of <code>exp</code>, using exponentiation by …","Returns <code>self</code> to the power <code>rhs</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the nearest integer to a number. Round half-way …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the sign of the number.","Returns a number that represents the sign of <code>self</code>.","Returns the sign of the number.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Reverses the byte order of the integer.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Convert <code>self</code> to big endian from the target’s endianness.","Converts radians to degrees.","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Convert <code>self</code> to little endian from the target’s …","Converts degrees to radians.","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Return the integer part of a number.","","","","","","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Numbers which have upper and lower bounds","Numbers which have lower bounds","Numbers which have upper bounds","Returns the largest finite number this type can represent","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value of <code>self</code>. Returns …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Returns a number composed of the magnitude of <code>self</code> and the …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns positive infinity.","Returns the infinite value.","Returns the mantissa, base 2 exponent, and sign as …","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Returns NaN.","Returns the <code>NaN</code> value.","Returns negative infinity.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns <code>-0.0</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts to degrees, assuming the number is in radians.","Converts radians to degrees.","Converts to radians, assuming the number is in degrees.","Converts degrees to radians.","Return the integer part of a number.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","Performs euclid division that returns <code>None</code> instead of …","Finds the euclid remainder of dividing two numbers, …","Calculates Euclidean division, the matching method for …","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","A trait for real number types that do not necessarily have …","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Raise a number to a real number power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts radians to degrees.","Converts degrees to radians.","Return the integer part of a number.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number.","","","","","","","","","","","","","Maximal number of backing memories has been reached.","Error caused by operations with device: allocation, memory …","Errors than can occur when synchronizing memory.","Describes the Descriptor of a Tensor.","Describes a conversion into a Tensor Descriptor.","Unable to remove Memory copy from SharedTensor.","Shape provided for reshaping is not compatible with old …","Container that handles synchronization of [Memory][1] of …","Describes the Descriptor of a SharedTensor.","Memory is requested for reading, but it hasn’t been …","","","","","Returns the number of elements for which the Tensor has …","","","Returns the default stride for an Rust allocated Tensor.","Returns the default stride for a Rust allocated Tensor as …","Returns the descriptor of the Tensor.","Returns the dimensions of the Tensor.","","Returns the dimensions of the Tensor as Vec.","","Drops memory allocation on the specified device. Returns …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Converts the implemented type into a TensorDesc.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the allocated Memory size in bytes.","Create new Tensor by allocating [Memory][1] on a Device. [1…","Returns the rank of the Tensor.","","Get memory for reading on the specified <code>device</code>. Can fail …","Get memory for reading and writing on the specified <code>device</code>.","Change the shape of the Tensor.","Change the size and shape of the Tensor.","Returns the summed up length of all dimensions of the …","","","","","","","","","","","Get memory for writing only. This function skips …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,1,4,1,4,1,4,1,4,9,9,1,1,1,1,4,1,1,1,4,1,1,4,1,4,9,1,1,4,1,4,1,4,1,4,0,24,0,22,0,0,22,24,0,24,24,24,22,24,24,24,24,24,24,24,24,24,24,22,22,24,24,35,35,24,24,24,24,24,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,18,3,0,3,3,0,18,3,18,18,18,18,18,18,3,18,3,3,3,18,18,18,18,18,0,0,0,0,29,29,29,29,0,29,29,29,0,29,0,0,0,0,29,29,0,29,29,29,10,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,29,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,10,43,29,10,43,29,10,43,29,10,43,29,10,0,43,10,10,43,0,29,43,29,29,10,43,29,10,0,0,10,43,10,10,43,29,10,43,43,43,10,43,43,43,43,0,0,10,10,43,43,29,10,29,43,29,10,43,29,10,43,29,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,44,47,44,47,44,44,47,44,47,44,44,44,44,47,47,44,47,44,44,44,44,44,44,47,44,44,44,44,47,44,44,44,47,44,47,47,44,47,44,47,44,47,0,56,56,56,56,56,56,56,56,56,56,56,56,0,49,49,49,49,49,49,49,49,49,49,49,49,0,57,57,57,57,57,57,57,57,57,57,57,57,0,0,0,0,12,0,30,0,0,0,12,30,12,30,12,30,30,12,30,12,30,0,30,0,30,30,12,30,12,0,0,0,12,30,12,12,12,12,30,12,30,30,12,30,12,30,12,0,59,59,59,59,59,59,59,59,59,59,59,59,59,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,50,50,50,50,50,50,50,50,50,50,50,50,50,0,61,61,61,61,61,61,61,61,61,61,61,61,61,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,54,54,54,0,0,54,54,54,25,54,54,25,54,54,54,25,54,25,54,25,25,25,25,54,54,54,54,0,0,0,38,38,38,38,62,62,62,62,62,62,62,62,62,38,38,62,62,62,62,62,62,62,62,62,62,62,38,38,62,38,38,38,62,62,62,38,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,62,62,62,62,62,62,62,62,38,62,62,62,62,62,38,62,38,38,38,0,0,0,0,0,0,0,0,0,0,0,69,88,0,69,69,69,69,69,69,69,69,69,0,0,0,0,98,0,88,69,69,69,69,69,69,0,0,0,0,0,0,0,0,0,0,102,105,107,69,0,0,0,0,69,0,0,0,0,0,69,0,0,0,0,0,0,0,0,0,0,62,70,0,62,70,62,62,71,62,62,62,62,62,88,90,88,90,0,0,0,62,62,74,75,76,77,78,0,80,76,81,83,84,0,0,0,62,62,62,62,86,86,87,62,62,62,62,0,62,88,90,90,62,73,88,90,86,93,93,93,93,93,93,93,93,86,98,93,93,93,93,93,93,62,0,62,0,62,88,90,102,62,62,62,70,62,79,70,62,62,103,90,86,86,62,62,62,62,62,62,104,62,62,62,104,62,62,105,106,62,62,62,0,79,0,0,0,86,107,62,62,0,62,87,86,86,86,62,108,109,110,108,111,79,103,0,86,86,0,62,70,62,62,62,62,86,62,62,86,62,91,91,91,91,91,91,91,91,86,62,90,91,91,91,91,91,91,86,86,62,88,90,88,90,88,90,86,86,112,113,114,115,116,117,0,103,0,0,0,104,118,104,119,0,0,0,0,71,0,73,93,93,93,93,93,93,93,93,93,93,93,93,93,93,91,91,91,91,91,91,91,91,91,91,91,91,91,91,69,69,69,69,69,69,69,69,69,69,0,0,0,69,69,69,69,69,69,69,69,69,62,120,62,62,62,62,62,62,62,62,62,62,120,120,62,62,62,62,120,62,62,62,62,62,120,62,120,62,120,62,120,62,62,120,62,120,62,120,62,120,62,120,62,120,62,62,62,62,62,62,120,120,62,62,120,120,62,120,62,62,120,62,120,62,120,62,62,62,120,62,120,62,120,62,120,62,62,62,62,62,62,120,62,120,62,62,120,0,0,79,103,0,79,79,103,0,103,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,75,77,78,80,81,83,84,0,0,76,76,87,87,0,102,102,0,0,105,105,106,0,0,0,121,122,123,0,0,0,0,108,109,110,108,111,0,0,0,0,0,0,112,113,114,115,116,117,107,0,0,0,107,0,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,0,0,0,70,0,70,70,70,0,70,0,0,0,0,0,0,0,0,0,0,0,0,37,37,0,0,0,37,37,0,0,37,125,37,125,37,125,37,37,126,126,125,126,127,126,127,125,37,125,37,37,125,37,37,128,125,37,125,125,126,127,125,125,125,125,126,127,37,37,37,125,37,125,37,125,37,125],"f":"```````````````````````````{ce{}{}}000{{{b{c}}}{{b{c}}}{df}}{{{h{c}}}{{h{c}}}{df}}{{ce}j{}{}}0{{}{{n{{b{c}}l}}}{}}{{{Ab{}{{A`{c}}}}}{}{fd}}{{{b{Ad}}}Af}{{{b{Ah}}}Aj}{{{b{c}}}{}{fd}}{{{b{c}}Al}An{B`f}}{{{h{c}}Al}An{B`f}}{{{b{c}}}c{fd}}`{cc{}}0{{{b{c}}}Bb{fd}}=={{{h{c}}}{{n{{b{c}}l}}}{fd}}{{cBb}{{h{c}}}{fd}}{{{Ab{}{{A`{c}}}}}{{n{jBd}}}{fd}}{{{b{Ad}}}{{n{jBd}}}}{ce{}{}}0{c{{n{e}}}{}{}}000{cBf{}}0````````````{{{Bl{}{{Bh{c}}{Bj{e}}}}Bn}{{n{eC`}}}Cb{CdCf}}33{C`C`}{{ce}j{}{}}{{C`C`}Ch}{{C`Al}An}0={CjC`}{ClC`}{{{Bl{}{{Bh{c}}{Bj{e}}}}}{{Cn{c}}}Cb{CdCf}}{{{Bl{}{{Bh{c}}{Bj{e}}}}}D`Cb{CdCf}};{C`{{Dd{Db}}}}{{DfCfCfCf}{{n{jC`}}}}0={cDh{}}==<`````>>{{lAl}An}0{C`l}{Bdl}{Djl}{Dll}{cc{}}{ce{}{}}{l{{Dd{Db}}}}8{c{{n{e}}}{}{}}0{cBf{}}`````{{}Dn}``{{{f{}{{Bh{c}}{E`{e}}{Eb{g}}}}}gCb{Bld}{Edd}}55{{BdAl}An}07{CjBd}{{{f{}{{Bh{c}}{E`{e}}{Eb{g}}}}}{{Bb{c}}}Cb{Bld}{Edd}}8{{}{{n{{Cn{c}}Bd}}}{}}{{}{{f{}{{Bh{c}}{E`{e}}{Eb{g}}}}}Cb{Bld}{Edd}}{{{f{}{{Bh{c}}{E`{e}}{Eb{g}}}}{Bb{c}}}{{n{eBd}}}Cb{Bld}{Edd}}{Bd{{Dd{Db}}}}{cDh{}};;:````````````````````````9``````````````````````````````````````````````{Adc{}}>>>>>>{EfEf}{CjCj}{AdAd}{{ce}j{}{}}00`{Eh{{n{`Cj}}}}{AdEj}{AdEl}``{{CjCj}Ch}{{EfAl}An}{{CjAl}An}0{{AdAl}An}{cc{}}00`{{}{{b{Ad}}}}{Ad{{Bb{Eh}}}}{{}{{n{jCj}}}}{Ad{{n{jBd}}}}0{ce{}{}}00`{{}{{n{{Cn{Eh}}Cj}}}}0{{}{{n{{Cn{Eh}}Bd}}}}{F`{{n{FbCj}}}}{{FbFd}{{n{jCj}}}}{{FdFb}{{n{jCj}}}}{Ff{{n{jCj}}}}``{{}Ad}{{Ad{Bb{Eh}}}{{n{cBd}}}{}}:888{cDh{}}{c{{n{e}}}{}{}}00000{cBf{}}00`{{AfF`}{{n{FbC`}}}}<<{AfAf}{{ce}j{}{}}{Afj}{{AfAf}Ch}{{AfAl}An}{cc{}}`{Af{{Cn{Eh}}}}{{Afc}jFh}{AfD`}0`{ce{}{}}{Eh{{n{AfCj}}}}{{AfCfCfCf}{{n{jC`}}}}0{Af{{n{jCj}}}}3??>``3333{EhEh}0{EnEn}=={Eh{{Dd{D`}}}}{{}Eh}{{EhEh}Ch}{{EhAl}An}{{EnAl}An}0>>{FjEh}{D`Eh}{Eh{{Dd{Fl}}}}{EhD`}{EhFj}??;;;{Eh{{Dd{Dh}}}}{{{Cn{Fn}}}En}{{Eh{Dd{D`}}}Eh}{{Eh{Dd{Fl}}}Eh}{{Eh{Dd{Dh}}}Eh}{EnD`}{ce{}{}}0{cDh{}}{c{{n{e}}}{}{}}000{cBf{}}0`33{G`G`}{{ce}j{}{}}{{G`Al}An}{cc{}}{D`G`}88665`88{Fbj}{{FbAl}An}3{FfFb}{FbFf}<{Bn{{n{FbCj}}}};;:`=={GbGb}9{{GbAl}An}8{D`Gb}{ce{}{}}0??>````{{}Dn}```{Bn{{Gd{{Bb{Fn}}}}}}`{AhGf}3333{Cl{{Dd{Db}}}}{ClCl}{AhAh}{{ce}j{}{}}0{ClDn}`{{ClCl}Ch}`{{ClAl}An}0{{AhAl}An}{cc{}}0`{{}{{b{Ah}}}}`{Ah{{Bb{Gh}}}}>>{{}{{n{{Cn{Gh}}Bd}}}}{{}Ah}{{Ah{Bb{Gh}}}{{n{cBd}}}{}}{ce{}{}}0{cDh{}}{c{{n{e}}}{}{}}000{cBf{}}0`33{GfGf}?{{}Gf}{{GfAl}An}<616443`{{AjBn}{{n{FdC`}}}}77{AjAj}{{ce}j{}{}}{{AjAj}Ch}{{AjAl}An}{cc{}}{Aj{{Cn{Gh}}}}{{Ajc}jFh}{AjD`}?{{{Cn{Gh}}}Aj}{{AjCfCfCf}{{n{jC`}}}}0{ce{}{}}{c{{n{e}}}{}{}}0{cBf{}}`{Fd{{Bb{c}}}{}}033{FdBn}{Fdj}{{FdAl}An}<{{{Gd{{Bb{Fn}}}}}Fd}7665`77{GjGj}{{ce}j{}{}}{{}Gj}{{GjAl}An}{cc{}}<2<;;:`<<{GhGh}04{Gh{{Dd{D`}}}}{{}Gh}{{GhAl}An}4{Gh{{Dd{Fl}}}}{GhD`}{ce{}{}}{Gh{{Dd{Dh}}}}{D`Gh}{{Gh{Dd{D`}}}Gh}{{Gh{Dd{Fl}}}Gh}{{Gh{Dd{Dh}}}Gh}5{c{{n{e}}}{}{}}0{cBf{}}``````77{CbCb}{FlFl}{{ce}j{}{}}{Cb{{Dd{D`}}}}{{FlFl}Ch}{{FlAl}An}{cc{}}{Cb{{Dd{Fl}}}}{{Flc}jFh}{CbD`}{ce{}{}}{Cb{{Dd{Dh}}}}{{Cb{Dd{D`}}}Cb}{{Cb{Dd{Fl}}}Cb}{{Cb{Dd{Dh}}}Cb}4{c{{n{e}}}{}{}}0{cBf{}}```````{GlGl}{{GlGl}Gl}11111018811{GlGn}122{{}Gl}3333{{DlAl}An}04{DjDl}{{{Gd{Db}}}Dl}{cc{}}64{Gl{{Hf{H`HbHd}}}}?{GlCh}000009989986866{{GlGlGl}Gl}777`9{{GlHh}Gl};;;;{Gl{{Hf{GlGl}}}}<{Dl{{Dd{Db}}}}====={cDh{}}>{c{{n{e}}}{}{}}0{cBf{}}```````````{{}Hj}``000000000```````000000`````````````0````0`````0`````````{ccHl}{GlGl}{HlHl}{{cc}cHl}{{GlGl}Gl}{{HlHl}Hl}44{HncI`}55525{ce{}{}}000``{c{{Dd{e}}}IbIb}77{{IdId}{{Dd{Id}}}}{{IfIf}{{Dd{If}}}}{{IhIh}{{Dd{Ih}}}}{{IjIj}{{Dd{Ij}}}}{Il{{Dd{Il}}}}{{cBn}{{Dd{c}}}{dInIj}}{{J`J`}{{Dd{J`}}}}4{{JbJd}{{Dd{Jb}}}}{{JfJd}{{Dd{Jf}}}}{{JhJh}{{Dd{Jh}}}}{{ccc}cJj}{{cc}cJj}0{GlGn}{{GlGl}Gl}{GlGl}0{JlJd}0{{JnJn}Jn}{{}Gl}333`3{{K`Al}{{n{jKb}}}}{{KdAl}{{n{jKb}}}}05{c{{Dd{Ib}}}Kf}{cc{}}0{JlJl}{Kh{{Dd{Kj}}}}{Kl{{Dd{Kj}}}}{Kn{{Dd{Kj}}}}{Hb{{Dd{Kj}}}}{Hh{{Dd{Kj}}}}{L`{{Dd{Kj}}}}{Hd{{Dd{Kj}}}}{D`{{Dd{Kj}}}}8{{DnJd}{{n{{Ld{}{{Lb{c}}}}c}}}{}}{Lf{{Dd{Kj}}}}{Lh{{Dd{Kj}}}}{Jd{{Dd{Kj}}}}{H`{{Dd{Kj}}}}{Fn{{Dd{Kj}}}}{Bn{{Dd{Kj}}}}{{GlGl}Gl}`{{}Gl}`{Gl{{Hf{H`HbHd}}}}{ce{}{}}0{{{Ll{}{{Lj{c}}}}}c{}}{GlCh}00{HlCh}1{InCh}122{LnCh}`{JlJd}0{GlGl}0:00:{{}M`}:;:0:{{GlGlGl}Gl}{{{Mb{}{{Lj{c}}}}eg}c{}{}{}}{{Mdce}j{}{}}==={{}cIn}{{}In}``{{cBn}c{}}{{JlJd}Jl}{{{Mf{}{{Lj{c}}}}e}c{}{}}{{GlGl}Gl}{{GlHh}Gl}`;{{JnJn}Jn}{JlJl}55={{MhMh}Mh}{{MjMj}Mj}{{MlMl}Ml}2{{MnMn}Mn}{Inj}{Lnj}`;;{ccHl}{GlGl}{HlHl}1{Gl{{Hf{GlGl}}}}22:22:2{Kf{{Dd{Kh}}}}{Kf{{Dd{Kl}}}}{Kf{{Dd{Kn}}}}{Kf{{Dd{Hb}}}}{Kf{{Dd{Hh}}}}{Kf{{Dd{L`}}}}{Kf{{Dd{Hd}}}}{Kf{{Dd{D`}}}}{JlJl};{cDh{}}{Kf{{Dd{Lf}}}}{Kf{{Dd{Lh}}}}{Kf{{Dd{Jd}}}}{Kf{{Dd{H`}}}}{Kf{{Dd{Fn}}}}{Kf{{Dd{Bn}}}}{JlJd}0{GlGl}{c{{n{e}}}{}{}}000{cBf{}}0{{JlJd}Jl}0{{N`N`}N`}{{NbNb}Nb}{NdNd}{{NfJd}Nf}{{NhJd}Nh}{{NjNj}Nj}{{}cLn}{{}Ln}```{{}M`}{{}Nl}1{{}Nn}````{HncI`}{c{{Dd{e}}}IbIb}{c{{Dd{Ib}}}Kf}{Kh{{Dd{Kj}}}}{Kl{{Dd{Kj}}}}{Kn{{Dd{Kj}}}}{Hb{{Dd{Kj}}}}{Hh{{Dd{Kj}}}}{L`{{Dd{Kj}}}}{Hd{{Dd{Kj}}}}{D`{{Dd{Kj}}}}{Lf{{Dd{Kj}}}}{Lh{{Dd{Kj}}}}{Jd{{Dd{Kj}}}}{H`{{Dd{Kj}}}}{Fn{{Dd{Kj}}}}{Bn{{Dd{Kj}}}}{Kf{{Dd{Kh}}}}{Kf{{Dd{Kl}}}}{Kf{{Dd{Kn}}}}{Kf{{Dd{Hb}}}}{Kf{{Dd{Hh}}}}{Kf{{Dd{L`}}}}{Kf{{Dd{Hd}}}}{Kf{{Dd{D`}}}}{Kf{{Dd{Lf}}}}{Kf{{Dd{Lh}}}}{Kf{{Dd{Jd}}}}{Kf{{Dd{H`}}}}{Kf{{Dd{Fn}}}}{Kf{{Dd{Bn}}}}{{}Hj}000000000```000000000{GlGl}{O`O`}{{GlGl}Gl}2222202221{O`Gn}{GlGn}244{{}O`}{{}Gl}6666565410{O`{{Hf{H`HbHd}}}}{Gl{{Hf{H`HbHd}}}}{GlCh}{O`Ch}1010101010::8::8{{O`O`}O`}65906565{{GlGlGl}Gl}767676:{{GlHh}Gl}{{O`Hh}O`}>=>=>=>{Gl{{Hf{GlGl}}}}????>?>??>``{InCh}{LnCh}{{}cIn}{{}In}{Inj}{Lnj}{{}cLn}{{}Ln}`{JlJd}0{JlJl}011{{JlJd}Jl}100001112200```````````````{{IdId}{{Dd{Id}}}}{{IfIf}{{Dd{If}}}}{{IjIj}{{Dd{Ij}}}}{Il{{Dd{Il}}}}{{J`J`}{{Dd{J`}}}}{{JbJd}{{Dd{Jb}}}}{{JfJd}{{Dd{Jf}}}}{{JhJh}{{Dd{Jh}}}}``{{IhIh}{{Dd{Ih}}}}0{{JnJn}Jn}0``{{{Ll{}{{Lj{c}}}}}c{}}```{{{Mb{}{{Lj{c}}}}eg}c{}{}{}}{{Mdce}j{}{}}```{{ObOb}{{Hf{ObCh}}}}{{OdOd}{{Hf{OdCh}}}}{{OfOf}{{Hf{OfCh}}}}````{{MhMh}Mh}{{MjMj}Mj}{{MlMl}Ml}2{{MnMn}Mn}``````{{N`N`}N`}{{NbNb}Nb}{NdNd}{{NfJd}Nf}{{NhJd}Nh}{{NjNj}Nj}``{{cBn}{{Dd{c}}}{dInIj}}{{cBn}c{}}{{{Mf{}{{Lj{c}}}}e}c{}{}}`{OhOh}{{OhOh}Oh}11111011111{{}Oh}222221{OhCh}03323321211{{OhOhOh}Oh}3{{OhHh}Oh}5555{Oh{{Hf{OhOh}}}}6666666``{ccHl}{HlHl}{{cc}cHl}{{HlHl}Hl}{HlCh}043``````````````````````{ce{}{}}000{{{Oj{c}}}Bn{}}{DjDj}{{ce}j{}{}}{Ol{{Cn{Bn}}}}{Ol{{Cn{Hh}}}}{{{Oj{c}}}On{}}2{On{{Cn{Bn}}}}2{On{{Cn{Hh}}}}{{{Oj{c}}e}{{n{jDj}}}{}Bl}{{DjDj}Ch}{{{Oj{c}}Al}An{}}{{DjAl}An}0{cc{}}0{C`Dj}{A`On}??{BnBn}{c{{Oj{e}}}A`{}}{OlBn}{OnBn}{{{Oj{c}}e}{{n{Dj}}}{}Bl}0{{{Oj{c}}e}{{n{jDj}}}{}A`}032{Dj{{Dd{Db}}}}{ce{}{}}{cDh{}}{c{{n{e}}}{}{}}000{cBf{}}06","c":[],"p":[[5,"Backend",23],[10,"Clone",1250],[10,"IFramework",115],[5,"BackendConfig",23],[1,"unit"],[6,"Error",95],[6,"Result",1251],[17,"F"],[10,"IBackend",23],[5,"Cuda",144],[5,"Context",273],[5,"Native",381],[5,"Cpu",442],[5,"Formatter",1252],[8,"Result",1252],[10,"Debug",1252],[1,"slice"],[6,"Error",115],[5,"TypeId",1253],[17,"H"],[17,"M"],[10,"IDevice",62],[1,"usize"],[6,"Error",62],[10,"IHardware",512],[10,"IMemory",62],[10,"Any",1253],[1,"bool"],[6,"DriverError",144],[6,"Error",381],[5,"Vec",1254],[1,"isize"],[10,"Error",1255],[6,"Option",1256],[10,"MemorySync",62],[5,"String",1257],[6,"Error",1195],[6,"Error",540],[1,"str"],[17,"D"],[17,"B"],[10,"IBinary",61],[5,"Driver",144],[5,"Device",298],[5,"Context",1258],[5,"Cudnn",1259],[5,"DeviceInfo",298],[8,"size_t",1260],[5,"Memory",355],[5,"FlatBox",462],[8,"c_ulonglong",1260],[10,"Hasher",1261],[8,"c_int",1260],[6,"HardwareType",512],[1,"u8"],[5,"Function",342],[5,"Module",368],[5,"Box",1262],[5,"Binary",428],[5,"Hardware",490],[5,"Function",476],[10,"Float",540],[6,"FpCategory",1263],[1,"u64"],[1,"i16"],[1,"i8"],[1,"tuple"],[1,"i32"],[10,"FloatConst",618],[10,"Signed",618],[10,"AsPrimitive",618],[10,"Copy",1264],[10,"NumCast",618],[10,"CheckedAdd",618],[10,"CheckedDiv",618],[10,"CheckedEuclid",618],[10,"CheckedMul",618],[10,"CheckedNeg",618],[10,"One",618],[10,"CheckedRem",618],[10,"CheckedShl",618],[1,"u32"],[10,"CheckedShr",618],[10,"CheckedSub",618],[10,"PartialOrd",1265],[10,"PrimInt",618],[10,"Euclid",618],[6,"FloatErrorKind",618],[5,"Error",1252],[5,"ParseFloatError",618],[10,"ToPrimitive",618],[1,"f32"],[10,"FromPrimitive",618],[1,"f64"],[1,"i128"],[1,"i64"],[17,"FromStrRadixErr"],[10,"Num",618],[1,"u128"],[1,"u16"],[17,"Output"],[10,"Inv",618],[10,"Zero",618],[10,"Bounded",618],[10,"MulAdd",618],[10,"MulAddAssign",618],[10,"Pow",618],[10,"Saturating",618],[10,"SaturatingAdd",618],[10,"SaturatingMul",618],[10,"SaturatingSub",618],[10,"WrappingAdd",618],[10,"WrappingMul",618],[10,"WrappingNeg",618],[10,"WrappingShl",618],[10,"WrappingShr",618],[10,"WrappingSub",618],[10,"UpperBounded",875],[10,"LowerBounded",875],[10,"FloatCore",917],[10,"OverflowingAdd",1093],[10,"OverflowingMul",1093],[10,"OverflowingSub",1093],[10,"Real",1125],[5,"SharedTensor",1195],[10,"ITensorDesc",1195],[8,"TensorDesc",1195],[10,"IntoTensorDesc",1195]],"b":[[37,"impl-IBackend-for-Backend%3CCuda%3E"],[38,"impl-IBackend-for-Backend%3CNative%3E"],[39,"impl-Backend%3CF%3E"],[79,"impl-Debug-for-Error"],[80,"impl-Display-for-Error"],[82,"impl-From%3CError%3E-for-Error"],[83,"impl-From%3CError%3E-for-Error"],[102,"impl-Display-for-Error"],[103,"impl-Debug-for-Error"],[104,"impl-From%3CError%3E-for-Error"],[105,"impl-From%3CError%3E-for-Error"],[106,"impl-From%3CError%3E-for-Error"],[107,"impl-From%3CError%3E-for-Error"],[126,"impl-Display-for-Error"],[127,"impl-Debug-for-Error"],[232,"impl-Debug-for-Error"],[233,"impl-Display-for-Error"],[286,"impl-IDevice-for-Context"],[287,"impl-Context"],[313,"impl-Debug-for-DeviceInfo"],[314,"impl-Display-for-DeviceInfo"],[405,"impl-Display-for-Error"],[406,"impl-Debug-for-Error"],[568,"impl-Display-for-Error"],[569,"impl-Debug-for-Error"],[571,"impl-From%3CError%3E-for-Error"],[572,"impl-From%3CBox%3Cdyn+Error+%2B+Send+%2B+Sync%3E%3E-for-Error"],[739,"impl-Debug-for-ParseFloatError"],[740,"impl-Display-for-ParseFloatError"],[1222,"impl-Debug-for-Error"],[1223,"impl-Display-for-Error"]]}],\
["coaster_blas",{"doc":"Provides backend-agnostic BLAS operations for Coaster.","t":"CCQQQQQQQQQCCCRRRRKRRRMMMMMMMCCCKKKKKKKKMMMMMMMMKKKKKKKKKKKMMMMMMMMMMPPPGNNNNNNNNNNNNN","n":["binary","frameworks","iblas_asum_for_cuda","iblas_axpy_for_cuda","iblas_copy_for_cuda","iblas_dot_for_cuda","iblas_gbmv_for_cuda","iblas_gemm_for_cuda","iblas_nrm2_for_cuda","iblas_scal_for_cuda","iblas_swap_for_cuda","operation","plugin","transpose","Asum","Axpy","Copy","Dot","IBlasBinary","Nrm2","Scale","Swap","asum","axpy","copy","dot","nrm2","scale","swap","cuda","native","helper","IOperationAsum","IOperationAxpy","IOperationCopy","IOperationDot","IOperationGemm","IOperationNrm2","IOperationScale","IOperationSwap","compute","compute","compute","compute","compute","compute","compute","compute","Asum","Axpy","BlasBinaryProvider","Copy","Dot","Gbmv","Gemm","IBlas","Nrm2","Scal","Swap","asum","axpy","binary","copy","dot","gbmv","gemm","nrm2","scal","swap","ConjTrans","NoTrans","Trans","Transpose","borrow","borrow_mut","clone","clone_into","fmt","from","from","into","to_owned","to_rblas","try_from","try_into","type_id"],"q":[[0,"coaster_blas"],[14,"coaster_blas::binary"],[29,"coaster_blas::frameworks"],[31,"coaster_blas::frameworks::cuda"],[32,"coaster_blas::operation"],[48,"coaster_blas::plugin"],[69,"coaster_blas::transpose"],[86,"coaster::tensor"],[87,"coaster::plugin"],[88,"core::result"],[89,"coaster::error"],[90,"coaster::binary"],[91,"core::fmt"],[92,"core::fmt"],[93,"rust_blas::attribute"],[94,"core::any"]],"d":["Provides the IBlasBinary binary trait for Coaster’s …","Provides the specific Framework implementations for the …","asum with cuda","axpy with cuda","copy for cuda","dot product for cuda","gbmv for cuda","gemm for cuda","nrm2 for cuda","scalar mul for cuda","swap matrices for cuda","Provides the IOperationX operation traits for Coaster’s …","Provides the IBlas library trait for Coaster …","Provides the Transpose functionality for Matrix operations.","Describes the Asum Operation.","Describes the Axpy Operation.","Describes the Copy Operation.","Describes the Dot Operation.","Describes the operation binding for a Blas Binary …","Describes the Nrm2 Operation.","Describes the Scale Operation.","Describes the Swap Operation.","Returns an initialized Asum operation.","Returns an initialized Axpy operation.","Returns an initialized Copy operation.","Returns an initialized Dot operation.","Returns an initialized Nrm2 operation.","Returns an initialized Scale operation.","Returns an initialized Swap operation.","Provides BLAS for a CUDA backend.","Provides BLAS for a Native backend.","","Describes a Asum Operation.","Describes a Axpy Operation.","Describes a Copy Operation.","Describes a Dot Operation.","Describes a Gemm Operation.","Describes a Nrm2 Operation.","Describes a Scale Operation.","Describes a Swap Operation.","Computes the Asum operation.","Computes the Axpy operation.","Computes the Copy operation.","Computes the Dot operation.","Computes the Nrm2 operation.","Computes the Scale operation.","Computes the Swap operation.","Computes the Gemm operation.","Provides the asum operation.","Provides the axpy operation.","Allows a BlasBinary to be provided which is used for a …","Provides the copy operation.","Provides the dot operation.","Provides the gbmv operation","Provides the gemm operation.","Provides the functionality for a backend to support Basic …","Provides the nrm2 operation.","Provides the scal operation.","Provides the swap operation.","Computes the absolute sum of vector <code>x</code>.","Computes a vector <code>x</code> times a constant <code>a</code> plus a vector <code>y</code> …","Returns the binary representation","Copies <code>x.len()</code> elements of vector <code>x</code> into vector <code>y</code>.","Computes the [dot product][dot-product] over x and y. […","Computes a matrix-vector product with a band matrix","Computes a matrix-matrix product with general matrices.","Computes the L2 norm aka. euclidean length of vector <code>x</code>.","Scales a vector <code>x</code> by a constant <code>a</code> aka. <code>a * x</code>.","Swaps the content of vector <code>x</code> and vector <code>y</code> with complete …","Take the conjugate transpose of the matrix.","Take the matrix as it is.","Take the transpose of the matrix.","Possible transpose operations that can be applied in Level …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Create a rust-blas <code>Transpose</code> from coaster-blas <code>Transpose</code>.","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,0,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,9,10,11,12,13,14,15,20,0,0,0,0,0,0,0,0,0,0,0,25,26,27,29,30,31,33,34,35,36,21,21,21,0,21,21,21,21,21,21,21,21,21,21,21,21,21],"f":"``````````````````````{{{A`{}{{b{c}}{d{g}}{f{i}}{h{k}}{j{m}}{l{o}}{n{Aa}}}}}c{{Ab{e}}}{}{{Ad{e}}}{{Af{e}}}{{Ah{e}}}{{Aj{e}}}{{Al{e}}}{{An{e}}}}{{{A`{}{{b{c}}{d{g}}{f{i}}{h{k}}{j{m}}{l{o}}{n{Aa}}}}}g{{Ab{e}}}{}{{Ad{e}}}{{Af{e}}}{{Ah{e}}}{{Aj{e}}}{{Al{e}}}{{An{e}}}}{{{A`{}{{b{c}}{d{g}}{f{i}}{h{k}}{j{m}}{l{o}}{n{Aa}}}}}i{{Ab{e}}}{}{{Ad{e}}}{{Af{e}}}{{Ah{e}}}{{Aj{e}}}{{Al{e}}}{{An{e}}}}{{{A`{}{{b{c}}{d{g}}{f{i}}{h{k}}{j{m}}{l{o}}{n{Aa}}}}}k{{Ab{e}}}{}{{Ad{e}}}{{Af{e}}}{{Ah{e}}}{{Aj{e}}}{{Al{e}}}{{An{e}}}}{{{A`{}{{b{c}}{d{g}}{f{i}}{h{k}}{j{m}}{l{o}}{n{Aa}}}}}m{{Ab{e}}}{}{{Ad{e}}}{{Af{e}}}{{Ah{e}}}{{Aj{e}}}{{Al{e}}}{{An{e}}}}{{{A`{}{{b{c}}{d{g}}{f{i}}{h{k}}{j{m}}{l{o}}{n{Aa}}}}}o{{Ab{e}}}{}{{Ad{e}}}{{Af{e}}}{{Ah{e}}}{{Aj{e}}}{{Al{e}}}{{An{e}}}}{{{A`{}{{b{c}}{d{g}}{f{i}}{h{k}}{j{m}}{l{o}}{n{Aa}}}}}Aa{{Ab{e}}}{}{{Ad{e}}}{{Af{e}}}{{Ah{e}}}{{Aj{e}}}{{Al{e}}}{{An{e}}}}```````````{{Ab{B`{c}}{B`{c}}}{{Bf{BbBd}}}{}}{{Ad{B`{c}}{B`{c}}{B`{c}}}{{Bf{BbBd}}}{}}{{Af{B`{c}}{B`{c}}}{{Bf{BbBd}}}{}}{{Ah{B`{c}}{B`{c}}{B`{c}}}{{Bf{BbBd}}}{}}{{Aj{B`{c}}{B`{c}}}{{Bf{BbBd}}}{}}{{Al{B`{c}}{B`{c}}}{{Bf{BbBd}}}{}}{{An{B`{c}}{B`{c}}}{{Bf{BbBd}}}{}}{{Bh{B`{c}}Bj{Bn{Bl}}{B`{c}}Bj{Bn{Bl}}{B`{c}}{B`{c}}{Bn{Bl}}{B`{c}}}{{Bf{BbC`}}}{}}```````````{{Cb{B`{c}}{B`{c}}}{{Bf{BbC`}}}{}}{{Cd{B`{c}}{B`{c}}{B`{c}}}{{Bf{BbC`}}}{}}{Cfe{}{{A`{c}}Ch}}{{Cj{B`{c}}{B`{c}}}{{Bf{BbC`}}}{}}{{Cl{B`{c}}{B`{c}}{B`{c}}}{{Bf{BbC`}}}{}}{{Cn{B`{c}}Bj{B`{c}}{B`{D`}}{B`{D`}}{B`{c}}{B`{c}}{B`{c}}}{{Bf{BbC`}}}{}}{{Db{B`{c}}Bj{B`{c}}Bj{B`{c}}{B`{c}}{B`{c}}}{{Bf{BbC`}}}{}}{{Dd{B`{c}}{B`{c}}}{{Bf{BbC`}}}{}}{{Df{B`{c}}{B`{c}}}{{Bf{BbC`}}}{}}{{Dh{B`{c}}{B`{c}}}{{Bf{BbC`}}}{}}````{ce{}{}}0{BjBj}{{ce}Bb{}{}}{{BjDj}Dl}{cc{}}{DnBj}55{BjE`}{c{{Bf{e}}}{}{}}0{cEb{}}","c":[],"p":[[17,"Asum"],[17,"Axpy"],[17,"Copy"],[17,"Dot"],[17,"Nrm2"],[17,"Scale"],[17,"Swap"],[10,"IBlasBinary",14],[10,"IOperationAsum",32],[10,"IOperationAxpy",32],[10,"IOperationCopy",32],[10,"IOperationDot",32],[10,"IOperationNrm2",32],[10,"IOperationScale",32],[10,"IOperationSwap",32],[5,"SharedTensor",86],[1,"unit"],[6,"Error",87],[6,"Result",88],[10,"IOperationGemm",32],[6,"Transpose",69],[1,"usize"],[1,"slice"],[6,"Error",89],[10,"Asum",48],[10,"Axpy",48],[10,"BlasBinaryProvider",48],[10,"IBinary",90],[10,"Copy",48],[10,"Dot",48],[10,"Gbmv",48],[1,"u32"],[10,"Gemm",48],[10,"Nrm2",48],[10,"Scal",48],[10,"Swap",48],[5,"Formatter",91],[8,"Result",91],[6,"Operation",92],[6,"Transpose",93],[5,"TypeId",94]],"b":[]}],\
["coaster_nn",{"doc":"Provides a Coaster Plugin, to extend Coaster with Neural …","t":"PPPPRRRRRGGGKKPPPGPKPPPPPPPPPPPPPPPKPPKGKKPPKPKKKGKGGGKKPKPKPKPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMMNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNMQQQQQQMNNNNNNNNNNNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCGKPPPKPPFGNNNNNNNNMMMMMMMOOOOOOOONNNNNNNNCOONNNNNMNNNNNNNNNNNNNNNOOCFFFFFNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNOONNNNNOOOOHHOOHHOOHHNNNNNNNNNNNNNNNNNNNNNNNNNOH","n":["Auto","Auto","Auto","BiDirectional","CC","CDROP","CLRN","CPOOL","CRNN","ConvBackwardDataAlgo","ConvBackwardFilterAlgo","ConvForwardAlgo","Convolution","ConvolutionConfig","Count","Default","Direct","DirectionMode","Disabled","Dropout","Enabled","FFT","FFT","FFT","FFTTiling","FFTTiling","GEMM","GRU","ImplicitGEMM","ImplicitGEMM","ImplicitGEMM","ImplicitGEMMSum","ImplicitGEMMSum","ImplicitPrecompiledGEMM","ImplicitPrecompiledGEMMSum","LRN","LSTM","LinearInput","LogSoftmax","MathType","NN","NNOperationConfig","PersistDynamic","PersistStatic","Pooling","ReLU","Relu","ReluPointwise","Rnn","RnnAlgorithm","RnnConfig","RnnInputMode","RnnNetworkMode","RnnPaddingMode","Sigmoid","SigmoidPointwise","SkipInput","Softmax","Standard","Tanh","Tanh","TanhPointwise","TensorOPMath","TensorOPMathAllowConversion","UniDirectional","Winograd","Winograd","WinogradNonFused","WinogradNonFused","WinogradNonFused","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","convolution","convolution_grad_data","convolution_grad_filter","dropout","dropout_grad","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frameworks","from","from","from","from","from","from","from","from","from","from_string","from_string","from_string","generate_rnn_weight_description","impl_ops_log_softmax_for","impl_ops_lrn_for","impl_ops_relu_for","impl_ops_sigmoid_for","impl_ops_softmax_for","impl_ops_tanh_for","init_nn","into","into","into","into","into","into","into","into","into","is_auto","is_auto","is_auto","log_softmax","log_softmax_grad","lrn","lrn_grad","new_convolution_config","new_dropout_config","new_lrn_config","new_pooling_config","new_rnn_config","pooling_avg","pooling_avg_grad","pooling_max","pooling_max_grad","relu","relu_grad","relu_pointwise","relu_pointwise_grad","rnn_backward_data","rnn_backward_weights","rnn_forward","sigmoid","sigmoid_grad","sigmoid_pointwise","sigmoid_pointwise_grad","softmax","softmax_grad","tanh","tanh_grad","tanh_pointwise","tanh_pointwise_grad","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","workspace_size","workspace_size","workspace_size","workspace_size","cuda","native","DataType","DataTypeInfo","Double","Float","Half","ICudnnDesc","Inner","Misc","RnnSequenceDescriptors","WrappingError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cudnn_convolution_desc","cudnn_data_type","cudnn_filter_desc","cudnn_rnn_desc","cudnn_tensor_desc","cudnn_tensor_desc_flat","cudnn_tensor_desc_softmax","cx_desc","cy_desc","dcx_desc","dcy_desc","dhx_desc","dhy_desc","dx_desc","dy_desc","fmt","fmt","fmt","fmt","from","from","from","from","helper","hx_desc","hy_desc","into","into","into","into","into","size","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","x_desc","y_desc","helper","ConvolutionConfig","DropoutConfig","NormalizationConfig","PoolingConfig","RnnConfig","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","direction_mode","dropout_probability","dropout_seed","filter_shape","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hidden_size","input_mode","into","into","into","into","into","num_layers","padding","padding","probability","relu","relu_grad","rnn_type","seed","sigmoid","sigmoid_grad","stride","stride","tanh","tanh_grad","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","window","write_to_memory"],"q":[[0,"coaster_nn"],[247,"coaster_nn::frameworks"],[249,"coaster_nn::frameworks::cuda"],[316,"coaster_nn::frameworks::native"],[317,"coaster_nn::frameworks::native::helper"],[404,"coaster::tensor"],[405,"coaster::error"],[406,"core::result"],[407,"core::fmt"],[408,"core::fmt"],[409,"core::option"],[410,"alloc::string"],[411,"core::any"],[412,"rcudnn::convolution_descriptor"],[413,"coaster::plugin"],[414,"rcudnn::filter_descriptor"],[415,"rcudnn::cudnn"],[416,"rcudnn::utils"],[417,"rcudnn_sys::generated"],[418,"rcudnn_sys::generated"],[419,"rcudnn::tensor_descriptor"],[420,"core::fmt"],[421,"core::error"],[422,"num_traits::float"],[423,"coaster::frameworks::native::flatbox"],[424,"core::iter::traits::iterator"]],"d":["Attempt to automatically find the best algorithm of all …","Attempt to automatically find the best algorithm of all …","Attempt to automatically find the best algorithm of all …","CUDNN_BIDIRECTION - Concats recurrent output of First -&gt; …","The Convolution Operation Config representation for this …","The Dropout Operation Config representation for this …","The LRN Operation Config representation for this Plugin.","The Pooling Operation Config representation for this …","The RNN Operation Config representation for this Plugin","Different algorithms to compute the gradient with respect …","Different algorithms to compute the gradient with respect …","Different algorithms to compute the convolution forward …","Provides the functionality for a Backend to support …","Provides Convolution Config functionality.","Count - Cannot find in docs but is in Generated - FIXME","No Tensor Core ops","Compute the convolution without implicit or explicit …","Direction Mode for RNN [cudnnDirectionMode_t][1] [1]: …","Padding disabled","Provides the functionality for a Backend to support …","Padding enabled","Compute the convolution as Fast-Fourier Transform.","Compute the convolution as Fast-Fourier Transform.","Compute the convolution as Fast-Fourier Transform.","Compute the convolution as Fast-Fourier Transform with …","Compute the convolution as Fast-Fourier Transform with …","Compute the convolution as explicit matrix product.","Three-gate network with Gated Recurrent Units","Compute the convolution as matrix product without forming …","Compute the convolution as matrix product without forming …","Compute the convolution as matrix product without forming …","Compute the convolution as sum of matrix product without …","Compute the convolution as sum of matrix product without …","Similar to <code>ImplicitGEMM</code> but needs some workspace to …","Similar to <code>ImplicitGEMMSum</code> but needs some workspace to …","Provides the functionality for a Backend to support Local …","Four-gate LSTM Network with no peephole connection","CUDNN_LINEAR_INPUT - A biased matrix multiplication is …","Provides the functionality for a Backend to support …","Indicate if Tensor Core Operations are permitted […","Provides the functionality for a backend to support Neural …","Provides generic NN Operation Config functionality.","RNN parts use a persistent kernel. Fast when the first …","Uses a Persistent Kernel - fast when the first D of the …","Provides the functionality for a Backend to support …","CUDNN_RNN_RELU - Single gate RNN with a ReLU activation …","Provides the functionality for a Backend to support ReLU …","Provides the functionality for pointwise ReLU operations …","Provide the functionality for a Backend to support RNN …","Algorithm for RNN [cudnnRNNAlgo_t][1] [1]: …","Provides Rnn Config functionality.","Input Modes for RNN [cudnnRNNInputMode_t][1] [1]: …","Network Type for RNN Networks [cudnnRNNMOde_t][1] [1]: …","Enables/Disables the padded input/output […","Provides the functionality for a Backend to support …","Provides the functionality for pointwise Sigmoid …","CUDNN_SKIP_INPUT - No operation is performed at the input …","Provides the functionality for a Backend to support …","Sequence of Operations for each RNN Layer","Provides the functionality for a Backend to support TanH …","Single-gate RNN with a tanh activation function","Provides the functionality for pointwise ReLU operations …","Uses Tensor Core ops","Uses FP32 Tensors for input/output","CUDNN_UNIDIRECTIONAL - The network iterates from first to …","Winograd  Transform","Winograd  Transform","Winograd  Transform Non-Fused","Winograd  Transform Non-Fused","Winograd  Transform Non-Fused","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes a [CNN convolution][convolution] over the input …","Computes the gradient of a [CNN convolution][convolution] …","Computes the gradient of a [CNN convolution][convolution] …","Computes non-linear down-sampling ([max Pooling][pooling]) …","Computes non-linear down-sampling ([max Pooling][pooling]) …","","","","","","","","","","","","","","","","","","","","","Provides the specific Framework implementations for the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert RnnNetworkMode to String Representation","Convert to RnnInputMode from String Representation","Convert to DirectionMode from String Representation","Generate Weights for RNN","log softmax impl generation macro","lrn impl generation macro TODO it’s all unimplemented!() …","relu impl generation macro","sigmoid impl generation macro","softmax impl generation macro","tanh impl generation macro","Initializes the Plugin.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if algorithim should be chosen automatically.","Check if algorithim should be chosen automatically.","Check if algorithim should be chosen automatically.","Computes a logarithmic softmax over the input Tensor <code>x</code>.","Computes the gradient of a logarithmic softmax over the …","Computes a [LRN][lrn] over the input Tensor <code>x</code>. [lrn]: …","Computes the gradient of a [LRN][lrn] over the input …","Creates a new ConvolutionConfig, which needs to be passed …","Creates a new DropoutConfig, which needs to be passed to …","Creates a new (Local Response Normalization) LRNConfig, …","Creates a new PoolingConfig, which needs to be passed to …","Create a RnnConfig","Computes non-linear down-sampling ([average Pooling][…","Computes the gradient of [average Pooling][pooling] over …","Computes non-linear down-sampling ([max Pooling][pooling]) …","Computes the gradient of [max Pooling][pooling] over the …","Computes the [Rectified linear units][relu] over the input …","Computes the gradient of [ReLU][relu] over the input …","Computes the [Rectified linear units][relu] over the input …","Computes the gradient of [ReLU][relu] over the input …","Calculates RNN Gradients for Input/Hidden/Cell","Calculates RNN Gradients for Weights","Train a LSTM Network and Return Results","Computes the [Sigmoid function][sigmoid] over the input …","Computes the gradient of a [Sigmoid function][sigmoid] …","Computes the [Sigmoid function][sigmoid] over the input …","Computes the gradient of a [Sigmoid function][sigmoid] …","Computes a [Softmax][softmax] over the input Tensor <code>x</code>. […","Computes the gradient of a [Softmax][softmax] over the …","Computes the [hyperbolic Tangent][tanh] over the input …","Computes the gradient of [hyperbolic Tangent][tanh] over …","Computes the [hyperbolic Tangent][tanh] over the input …","Computes the gradient of [tanh][tanh] over the input …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the largest workspace size in bytes needed for any …","Returns the largest workspace size in bytes needed for any …","Workspace Size - Overwritten by each plugin method except …","Workspace Size - Overwritten by each plugin method except …","Provides NN for a CUDA backend.","Provides NN for a Native backend.","Defines the available data types for the CUDA cuDNN data …","CuDnn type info for generic use.","F64","F32","F16 (no native Rust support yet)","","","","Struct to hold all Sequence Descriptors for an RNN Pass","","","","","","","","","","","Mostly internal.","","","","Creates a TensorDescriptor similar to <code>cudnn_tensor_desc</code>, …","Creates a TensorDescriptor similar to <code>cudnn_tensor_desc</code>, …","Cell Input Descriptor","Cell Output Descriptor","Gradient Cell Input Descriptor","Gradient Cell Output Descriptor","Gradient Hidden Input Descriptor","Gradient Hidden Output Descriptor","Gradient Input Descriptor","Gradient Output Descriptor","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Provides useful macros for easier NN implementation for …","Hidden Input Descriptor","Hidden Output Descriptor","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Input Descriptor","Output Descriptor","Provides useful macros for easier NN implementation for …","","","","","","","","","","","","","","","","","","","","","","","","","","RNN Direction","Dropout Probability","Dropout Seed","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Size of the Hidden Layer","Input Mode","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Number of Hidden Layers","","","","Computes the ReLU Function on the CPU","Computes the ReLU Gradient on the CPU","Type of RNN","","Computes the Sigmoid Function on the CPU","Computes the Sigmoid Gradient on the CPU","","","Computes the Tanh Function on the CPU","Computes the Tanh Gradient on the CPU","","","","","","","","","","","","","","","","","","","","","","","","","","","Just a helper function until SharedTensor has a nice …"],"i":[1,2,3,6,72,72,72,72,72,0,0,0,0,0,7,9,1,0,8,0,8,1,2,3,1,3,1,4,1,2,3,2,3,1,2,0,4,5,0,0,0,0,7,7,0,4,0,0,0,0,0,0,0,0,0,0,5,0,7,0,4,0,9,9,6,1,3,1,2,3,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,11,11,11,16,16,1,2,3,4,5,6,7,1,2,3,4,4,5,5,6,6,7,7,8,9,0,1,2,3,4,5,6,7,8,9,4,5,6,21,0,0,0,0,0,0,72,1,2,3,4,5,6,7,8,9,1,2,3,25,25,26,26,11,16,26,32,21,32,32,32,32,34,34,35,35,21,21,21,36,36,37,37,38,38,39,39,40,40,1,2,3,4,5,6,7,8,9,4,5,6,7,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,43,43,44,44,0,0,0,0,45,45,45,0,60,60,0,0,59,60,45,59,60,45,45,45,46,73,46,46,46,46,46,59,59,59,59,59,59,59,59,59,60,60,45,59,60,60,45,0,59,59,59,60,60,60,45,73,60,45,60,59,60,45,59,60,45,59,60,45,59,60,45,59,59,0,0,0,0,0,0,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,68,68,68,67,64,65,66,67,68,64,65,66,67,68,68,68,64,65,66,67,68,68,65,67,66,0,0,68,66,0,0,65,67,0,0,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,65,0],"f":"``````````````````````````````````````````````````````````````````````{ce{}{}}00000000000000000{bb}{dd}{ff}{hh}{jj}{ll}{nn}{A`A`}{AbAb}{{ce}Ad{}{}}00000000{{Af{Ah{c}}{Ah{c}}{Ah{c}}{Ah{Aj}}e}{{An{AdAl}}}{}{}}00{{B`{Ah{c}}{Ah{c}}e}{{An{AdAl}}}{}{}}{{B`{Ah{c}}{Ah{c}}{Ah{c}}{Ah{c}}e}{{An{AdAl}}}{}{}}{{bb}Bb}{{dd}Bb}{{ff}Bb}{{hh}Bb}{{jj}Bb}{{ll}Bb}{{nn}Bb}{{bBd}Bf}{{dBd}Bf}{{fBd}Bf}{{hBd}Bf}0{{jBd}Bf}0{{lBd}Bf}0{{nBd}Bf}0{{A`Bd}Bf}{{AbBd}Bf}`{cc{}}00000000{Bh{{An{hBh}}}}{Bh{{An{jBh}}}}{Bh{{An{lBh}}}}{{BjcBl}{{An{{C`{Bn}}Al}}}{}}``````{{}Ad}{ce{}{}}00000000{bBb}{dBb}{fBb}{{Cb{Ah{c}}{Ah{c}}}{{An{AdAl}}}{}}{{Cb{Ah{c}}{Ah{c}}{Ah{c}}}{{An{AdAl}}}{}}{{Cd{Ah{c}}{Ah{c}}e}{{An{AdAl}}}{}{}}{{Cd{Ah{c}}{Ah{c}}{Ah{c}}{Ah{c}}e}{{An{AdAl}}}{}{}}{{Af{Ah{c}}{Ah{c}}{Ah{c}}bdf{Cf{Bl}}{Cf{Bl}}}{{An{eAl}}}{}{}}{{B`ChCj}{{An{cAl}}}{}}{{CdClCnCnCn}{{An{cAl}}}{}}{{D`{Cf{Bl}}{Cf{Bl}}{Cf{Bl}}}{{An{cAl}}}{}}{{Bj{Ah{c}}{Db{Ch}}{Db{Cj}}BlhjlnBlBlBl}{{An{eAl}}}{}{}}{{D`{Ah{c}}{Ah{c}}e}{{An{AdAl}}}{}{}}{{D`{Ah{c}}{Ah{c}}{Ah{c}}{Ah{c}}e}{{An{AdAl}}}{}{}}10{{Dd{Ah{c}}{Ah{c}}}{{An{AdAl}}}{}}{{Dd{Ah{c}}{Ah{c}}{Ah{c}}{Ah{c}}}{{An{AdAl}}}{}}{{Df{Ah{c}}}{{An{AdAl}}}{}}{{Df{Ah{c}}{Ah{c}}}{{An{AdAl}}}{}}{{Bj{Ah{c}}{Ah{c}}{Ah{c}}{Ah{c}}e{Ah{c}}{Ah{Aj}}}{{An{AdAl}}}{}{}}{{Bj{Ah{c}}{Ah{c}}{Ah{c}}e{Ah{Aj}}}{{An{AdAl}}}{}{}}{{Bj{Ah{c}}{Ah{c}}e{Ah{c}}{Ah{Aj}}}{{An{AdAl}}}{}{}}{{Dh{Ah{c}}{Ah{c}}}{{An{AdAl}}}{}}{{Dh{Ah{c}}{Ah{c}}{Ah{c}}{Ah{c}}}{{An{AdAl}}}{}}{{Dj{Ah{c}}}{{An{AdAl}}}{}}{{Dj{Ah{c}}{Ah{c}}}{{An{AdAl}}}{}}{{Dl{Ah{c}}{Ah{c}}}{{An{AdAl}}}{}}{{Dl{Ah{c}}{Ah{c}}{Ah{c}}}{{An{AdAl}}}{}}{{Dn{Ah{c}}{Ah{c}}}{{An{AdAl}}}{}}{{Dn{Ah{c}}{Ah{c}}{Ah{c}}{Ah{c}}}{{An{AdAl}}}{}}{{E`{Ah{c}}}{{An{AdAl}}}{}}{{E`{Ah{c}}{Ah{c}}}{{An{AdAl}}}{}}{ce{}{}}00000000{cEb{}}000{c{{An{e}}}{}{}}00000000000000000{cEd{}}00000000333333333{EfBn}0{EhBn}0````````````555555{EjEj}{{ce}Ad{}{}}{{El{Ah{c}}}{{An{EnF`}}}{}}{{}Ej}{El{{An{FbF`}}}}{{ElFdBlBlFfFhFjFlFnG`}{{An{GbF`}}}}{El{{An{GdF`}}}}00````````{{GfBd}Bf}{{GhBd}Bf}0{{EjBd}{{An{AdGj}}}}{cc{}}{GlGh}11```{ce{}{}}{GhAl}1{GhF`}2{{}Bn}{Gh{{Db{Gn}}}}4{cEb{}}{c{{An{e}}}{}{}}00000{cEd{}}00777````````7777777777{H`H`}{HbHb}{HdHd}{HfHf}{HhHh}{{ce}Ad{}{}}0000````{{H`Bd}Bf}{{HbBd}Bf}{{HdBd}Bf}{{HfBd}Bf}{{HhBd}Bf}{cc{}}0000``{ce{}{}}0000````{ccHj}{{cc}cHj}``10``1022222{c{{An{e}}}{}{}}000000000{cEd{}}000044444`{{Hlc}AdHn}","c":[],"p":[[6,"ConvForwardAlgo",0],[6,"ConvBackwardFilterAlgo",0],[6,"ConvBackwardDataAlgo",0],[6,"RnnNetworkMode",0],[6,"RnnInputMode",0],[6,"DirectionMode",0],[6,"RnnAlgorithm",0],[6,"RnnPaddingMode",0],[6,"MathType",0],[1,"unit"],[10,"Convolution",0],[5,"SharedTensor",404],[1,"u8"],[6,"Error",405],[6,"Result",406],[10,"Dropout",0],[1,"bool"],[5,"Formatter",407],[8,"Result",407],[1,"str"],[10,"Rnn",0],[1,"i32"],[1,"usize"],[5,"Vec",408],[10,"LogSoftmax",0],[10,"LRN",0],[1,"slice"],[1,"f32"],[1,"u64"],[1,"u32"],[1,"f64"],[10,"Pooling",0],[6,"Option",409],[10,"Relu",0],[10,"ReluPointwise",0],[10,"Sigmoid",0],[10,"SigmoidPointwise",0],[10,"Softmax",0],[10,"Tanh",0],[10,"TanhPointwise",0],[5,"String",410],[5,"TypeId",411],[10,"ConvolutionConfig",0],[10,"RnnConfig",0],[6,"DataType",249],[10,"ICudnnDesc",249],[5,"ConvolutionDescriptor",412],[6,"Error",413],[5,"FilterDescriptor",414],[5,"Cudnn",415],[5,"DropoutConfig",416],[6,"cudnnRNNInputMode_t",417],[6,"cudnnDirectionMode_t",417],[6,"cudnnRNNMode_t",417],[6,"cudnnRNNAlgo_t",417],[8,"cudnnRNNPaddingMode_t",417],[5,"RnnDescriptor",418],[5,"TensorDescriptor",419],[5,"RnnSequenceDescriptors",249],[6,"WrappingError",249],[5,"Error",407],[6,"Error",420],[10,"Error",421],[5,"NormalizationConfig",317],[5,"PoolingConfig",317],[5,"DropoutConfig",317],[5,"ConvolutionConfig",317],[5,"RnnConfig",317],[10,"Float",422],[5,"FlatBox",423],[10,"Iterator",424],[10,"NN",0],[10,"DataTypeInfo",249]],"b":[[121,"impl-Display-for-RnnNetworkMode"],[122,"impl-Debug-for-RnnNetworkMode"],[123,"impl-Debug-for-RnnInputMode"],[124,"impl-Display-for-RnnInputMode"],[125,"impl-Display-for-DirectionMode"],[126,"impl-Debug-for-DirectionMode"],[127,"impl-Display-for-RnnAlgorithm"],[128,"impl-Debug-for-RnnAlgorithm"],[283,"impl-Debug-for-WrappingError"],[284,"impl-Display-for-WrappingError"],[294,"impl-Into%3CError%3E-for-WrappingError"],[296,"impl-Into%3CError%3E-for-WrappingError"]]}],\
["example_mnist_classification",{"doc":"","t":"FPSGPHHHOOOOONNNNOOONNNNNNHHNNNNNNNN","n":["Args","Fashion","MAIN_USAGE","MnistType","Numbers","add_conv_net","add_linear_net","add_mlp","arg_batch_size","arg_dataset_name","arg_learning_rate","arg_model_name","arg_momentum","borrow","borrow","borrow_mut","borrow_mut","cmd_fashion","cmd_load_dataset","cmd_mnist","deserialize","fmt","from","from","into","into","main","run_mnist","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"example_mnist_classification"],[36,"juice::layers::container::sequential"],[37,"core::result"],[38,"serde::de"],[39,"core::fmt"],[40,"core::fmt"],[41,"core::option"],[42,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,9,0,0,9,0,0,0,3,3,3,3,3,9,3,9,3,3,3,3,3,3,9,3,9,3,0,0,9,3,9,3,9,3,9,3],"f":"`````{{bdd}b}{bb}1`````{ce{}{}}000```{c{{h{f}}}j}{{fl}n}{cc{}}033{{}A`}{{Ab{Af{Ad}}{Af{d}}{Af{Ah}}{Af{Ah}}}A`}{c{{h{e}}}{}{}}000{cAj{}}077","c":[],"p":[[5,"SequentialConfig",36],[1,"usize"],[5,"Args",0],[6,"Result",37],[10,"Deserializer",38],[5,"Formatter",39],[8,"Result",39],[1,"unit"],[6,"MnistType",0],[5,"String",40],[6,"Option",41],[1,"f32"],[5,"TypeId",42]],"b":[]}],\
["example_rnn_regression",{"doc":"","t":"SFSSHCOOOOOOOOOONNNHHNNNNHNOHHNNNNFGSPPONNNNNOONNHHHNNOOONNNNNNNNNNNNN","n":["DATA_COLUMNS","Record","TEST_ROWS","TRAIN_ROWS","add_solver","args","b1","b10","b2","b3","b4","b5","b6","b7","b8","b9","borrow","borrow_mut","bs","create_network","data_generator","deserialize","fmt","from","into","main","target","target","test","train","try_from","try_into","type_id","vzip","Args","DataMode","MAIN_USAGE","Test","Train","arg_networkfile","as_path","borrow","borrow","borrow_mut","borrow_mut","cmd_test","cmd_train","data_mode","default","default_batch_size","default_learning_rate","default_momentum","deserialize","eq","flag_batch_size","flag_learning_rate","flag_momentum","fmt","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"example_rnn_regression"],[34,"example_rnn_regression::args"],[70,"coaster::backend"],[71,"alloc::rc"],[72,"juice::layers::container::sequential"],[73,"juice::solver"],[74,"coaster::framework"],[75,"alloc::vec"],[76,"core::iter::traits::iterator"],[77,"core::result"],[78,"serde::de"],[79,"core::fmt"],[80,"core::fmt"],[81,"core::error"],[82,"alloc::boxed"],[83,"std::path"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Test a the validation subset of data items against the …","Train, and optionally, save the resulting network …","","","","","","","","","","Path to the stored network.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,8,8,8,8,0,8,8,0,0,8,8,8,8,0,0,0,10,10,25,10,10,25,10,25,25,25,25,25,0,0,0,25,25,25,25,25,25,10,25,10,25,10,25,10,25,10,25,10,25],"f":"````{{{d{{b{c}}}}fhjj}{{l{{b{c}}{b{c}}}}}n}```````````{ce{}{}}0{A`{{Ab{j}}}}{{hh}f}{Ad{{`{{Aj{}{{Af{{Ah{j{Ab{j}}}}}}}}}}}}{c{{Al{A`}}}An}{{A`B`}Bb}{cc{}}6{{}Bd}{A`j}`{{{d{{b{c}}}}hBf}{{Al{Bd{Bj{Bh}}}}}n}{{{d{{b{c}}}}hjjBl}Bdn}{c{{Al{e}}}{}{}}0{cBn{}}<``````{AdC`}====``{CbAd}{{}Cb}{{}h}{{}j}0{c{{Al{Cb}}}An}{{CbCb}Cd}```{{CbB`}Bb}>>{ce{}{}}0::::9900","c":[],"p":[[5,"Backend",70],[5,"Rc",71],[5,"SequentialConfig",72],[1,"usize"],[1,"f32"],[5,"Solver",73],[10,"IFramework",74],[5,"Record",0],[5,"Vec",75],[6,"DataMode",34],[17,"Item"],[1,"tuple"],[10,"Iterator",76],[6,"Result",77],[10,"Deserializer",78],[5,"Formatter",79],[8,"Result",79],[1,"unit"],[5,"Path",80],[10,"Error",81],[5,"Box",82],[5,"PathBuf",80],[5,"TypeId",83],[1,"str"],[5,"Args",34],[1,"bool"]],"b":[]}],\
["greenglas",{"doc":"Greenglas provides convenient and universal Machine …","t":"EKEECCNNCCFNNNNNNNNNNNNNNCNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNOOOOKKMNNPPPPPKGNNNNNNNNNNNNNMNNNNNFNNNNNNNNNCNNNNN","n":["Image","Set","Transformer","Word","image","modifier","set","set_mut","transformer","word","Image","borrow","borrow_mut","deref","deref_mut","drop","from","from_buffer","from_luma_pixels","from_lumaa_pixels","from_path","from_rgb_pixels","from_rgba_pixels","init","into","modifiers","new","transform_to_vec","try_from","try_into","type_id","Crop","Grayscale","Resize","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","height","height","init","init","init","into","into","into","modify","modify","modify","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","width","width","x","y","Modifier","Set","modify","set","set_mut","InvalidLumaAlphaPixels","InvalidLumaPixels","InvalidRgbPixels","InvalidRgbaPixels","InvalidShape","Transformer","TransformerError","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","to_owned","transform","transform_to_vec","try_from","try_into","type_id","write_to_memory","write_to_memory_offset","Word","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","modifiers","new","transform_to_vec","try_from","try_into","type_id"],"q":[[0,"greenglas"],[10,"greenglas::image"],[31,"greenglas::image::modifiers"],[88,"greenglas::modifier"],[93,"greenglas::transformer"],[119,"greenglas::word"],[135,"alloc::vec"],[136,"core::result"],[137,"std::path"],[138,"core::convert"],[139,"image::dynimage"],[140,"core::any"],[141,"core::fmt"],[142,"core::fmt"],[143,"coaster::tensor"],[144,"coaster::frameworks::native::flatbox"],[145,"num_traits::cast"],[146,"core::marker"]],"d":["","A trait providing the set and set_mut methods for all …","","","The Image Struct and its Modifiers","Re-exports from the modifier crate.","Modify self using the provided modifier.","Modify self through a mutable reference with the provided …","Transformer","The Word Struct and its Modifiers","The Transformable Data Type <code>Image</code>","","","","","","Returns the argument unchanged.","Create a new Image from Buffer","Create a new Image from Luma (greyscale) style pixel …","Create a new Image from LumaA style pixel container such …","Create a new Image from a Path","Create a new Image from RGB style pixel container such as …","Create a new Image from RGBa style pixel container such as …","","Calls <code>U::from(self)</code>.","The Modifiers form <code>Image</code>","Create a new Image from a DynamicImage","","","","","Crop Modifier for <code>Image</code>","Grayscale Modifier for <code>Image</code>","Resize Modifier for <code>Image</code>","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The resized heigt of the new Image","The height for the new Image","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The resized width of the new Image","The width for the new Image","The x value from where the new Image should start","The y value from where the new Image should start","Allows use of the implemented type as an argument to …","A trait providing the set and set_mut methods for all …","Modify <code>F</code> with self.","Modify self using the provided modifier.","Modify self through a mutable reference with the provided …","When The Image Pixel Buffer can’t be converted to a …","When The Image Pixel Buffer can’t be converted to a …","When The Image Pixel Buffer can’t be converted to a RGB …","When The Image Pixel Buffer can’t be converted to a RGBA …","When the speficied shape capacitiy differs from the actual …","The Transformer Trait","The Transformer Errors","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Transforms non-numeric data into a numeric <code>SharedTensor</code>","Transforms the non-numeric data into a numeric <code>Vec</code>","","","","Write into a native Coaster Memory.","Write into a native Coaster Memory with a offset.","The Transformable Data Type <code>Word</code>","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","The Modifiers for <code>Word</code>","Creates a new <code>Word</code>","","","",""],"i":[0,0,0,0,0,0,1,1,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,7,7,7,7,0,0,0,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,18,18,0,0,2,1,1,10,10,10,10,10,0,0,10,10,10,10,10,10,10,10,10,10,10,10,23,23,10,10,10,23,23,0,28,28,28,28,28,28,28,28,28,0,28,28,28,28,28],"f":"``````{{bc}b{{d{b}}}}0```{ce{}{}}0{fc{}}0{fh}{cc{}}{{{l{j}}}n}{{A`A`{Ab{j}}}{{Af{nAd}}}}0{cn{{Aj{Ah}}}}11{{}f}7`{Aln}{n{{Ab{An}}}}{c{{Af{e}}}{}{}}0{cB`{}}```;;;;;;{BbBb}{BdBd}{BfBf}{{ce}h{}{}}00>>>>>>==={{BbBh}Bj}{{BdBh}Bj}{{BfBh}Bj}???``;;;{ce{}{}}00{{Bbn}h}{{Bdn}h}{{Bfn}h}333<<<<<<;;;``````{{dc}hBl}{{bc}b{{d{b}}}}0```````55{AdAd}:{fc{}}0{fh}{{AdBh}Bj}{cc{}}{{}f};;{{Bn{l{f}}}{{Af{{C`{An}}Ad}}}}{Bn{{Ab{An}}}}{c{{Af{e}}}{}{}}0{cB`{}}{{Cb{l{c}}}{{Af{hAd}}}{CdCf}}{{Cb{l{c}}f}{{Af{hAd}}}{CdCf}}`{ce{}{}}0;;:{{ChBh}Bj}981`{CjCh}{Ch{{Ab{An}}}}776","c":[],"p":[[10,"Set",0],[10,"Modifier",88],[1,"usize"],[1,"unit"],[1,"u8"],[1,"slice"],[5,"Image",10],[1,"u32"],[5,"Vec",135],[6,"TransformerError",93],[6,"Result",136],[5,"Path",137],[10,"AsRef",138],[6,"DynamicImage",139],[1,"f32"],[5,"TypeId",140],[5,"Resize",31],[5,"Crop",31],[5,"Grayscale",31],[5,"Formatter",141],[8,"Result",141],[10,"Sized",142],[10,"Transformer",93],[5,"SharedTensor",143],[5,"FlatBox",144],[10,"NumCast",145],[10,"Copy",142],[5,"Word",119],[5,"String",146]],"b":[]}],\
["juice",{"doc":"Juice is a open, modular and clear-designed Machine …","t":"QQQQCCCCCCKKKPPKFFGPPPPPPPPPPPPNNNNNNNNNNONNNNNNNNNNNNMMNONNNNNNNNNNNNNNNNNNOOOONNNNNNNNONNNNNNNNNNNNOONNOOONNNNONONNNNNNNNNNNNNNNNNNNNNNNOOOEEEEEEEEEEEEEEEEEEEEEEEECCCCCEEECCCFNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNEEEEKEEEEEEEEEMNCCMCCMMNCCCNMNFFNNNNNNNNNNNNNNNNONNNNNNNNONNONNNONNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNFNNNNNNNNNNNNNNNNPPFFGNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNONNONNNNNNNNNNNNNNNFFNNNNNNNNNNNNOOONNNNNNNOONNNONNONNNNNNNNNNFNNNNNNNNNNNNNNNNEECFFNNNNNNNNNNNNNNNNNNONNNNNONNNNNNONNNNNNNNNNNNNNNEEECCFNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNEEECCFNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNEPPKPGPEEGPGFFGPMONNNNNNNNNNNNONNNNNNNNNNMCNNNNNNNNNNNNNNNONNNNNNNNOOONONOOCOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKFNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNECECFNNNNNNNNNNNNNIKKKNHHHHHHPGGPPPFNNNNNNNNNNNNNNONNNNONNNNNNNNNNOOONNNNNNNNNNNNNNNOOO","n":["impl_ilayer_activation","impl_ilayer_common","impl_ilayer_loss","impl_isolver_sgd","layer","layers","solver","solvers","util","weight","ComputeInputGradient","ComputeOutput","ComputeParametersGradient","Convolution","Dropout","ILayer","Layer","LayerConfig","LayerType","Linear","LogSoftmax","MeanSquaredError","NegativeLogLikelihood","Pooling","ReLU","Reshape","Rnn","Sequential","Sigmoid","Softmax","TanH","add_input","add_output","allow_force_backward","auto_output_blobs","auto_weight_blobs","backward","backward_input","backward_input","backward_parameters","backward_parameters","blob_names","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_weights_gradients","clone","clone","clone_into","clone_into","compute_in_place","compute_input_gradient","compute_output","compute_parameters_gradient","config","connect","exact_num_input_blobs","exact_num_output_blobs","fmt","fmt","fmt","fmt","forward","forward","from","from","from","from_config","init","init_backprop","init_force_backward","input","input_blob_names","input_blob_names","input_blobs_data","input_blobs_gradient","inputs","inputs_data","inputs_gradients","inputs_len","into","into","into","is_container","is_using_in_place","layer_type","learnable_weights","learnable_weights_data","learnable_weights_gradients","learnable_weights_gradients","learnable_weights_lr","learnable_weights_lr","learnable_weights_names","learnable_weights_names","load","loss","loss_weight","min_output_blobs","name","name","new","output","output_blobs_data","output_blobs_gradient","outputs","outputs_data","outputs_gradients","outputs_len","param","params","params_len","propagate_down","reshape","resize_shared_workspace","save","set_weight_propagate_down","supports_in_place","sync_native","synchronize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_weights","validate","vzip","vzip","vzip","weights_data","weights_gradient","worker","Convolution","ConvolutionConfig","Dropout","DropoutConfig","Flatten","Linear","LinearConfig","LogSoftmax","MeanSquaredError","NegativeLogLikelihood","NegativeLogLikelihoodConfig","Pooling","PoolingConfig","PoolingMode","ReLU","Reshape","ReshapeConfig","Rnn","RnnConfig","Sequential","SequentialConfig","Sigmoid","Softmax","TanH","activation","common","container","loss","utility","ReLU","Sigmoid","TanH","relu","sigmoid","tanh","ReLU","borrow","borrow_mut","clone","clone_into","compute_in_place","compute_input_gradient","compute_output","exact_num_input_blobs","exact_num_output_blobs","fmt","from","into","reshape","to_owned","try_from","try_into","type_id","vzip","Sigmoid","borrow","borrow_mut","clone","clone_into","compute_in_place","compute_input_gradient","compute_output","exact_num_input_blobs","exact_num_output_blobs","fmt","from","into","reshape","to_owned","try_from","try_into","type_id","vzip","TanH","borrow","borrow_mut","clone","clone_into","compute_in_place","compute_input_gradient","compute_output","exact_num_input_blobs","exact_num_output_blobs","fmt","from","into","reshape","to_owned","try_from","try_into","type_id","vzip","Convolution","ConvolutionConfig","Dropout","DropoutConfig","FilterLayer","Linear","LinearConfig","LogSoftmax","Pooling","PoolingConfig","PoolingMode","Rnn","RnnConfig","Softmax","calculate_output_shape","calculate_spatial_output_dims","convolution","dropout","filter_shape","linear","log_softmax","num_spatial_dims","padding","padding_dims","pooling","rnn","softmax","spatial_filter_dims","stride","stride_dims","Convolution","ConvolutionConfig","auto_weight_blobs","borrow","borrow","borrow_mut","borrow_mut","calculate_output_shape","clone","clone","clone_into","clone_into","compute_input_gradient","compute_output","compute_parameters_gradient","exact_num_input_blobs","exact_num_output_blobs","filter_shape","filter_shape","fmt","fmt","from","from","from_config","into","into","into","num_output","num_spatial_dims","padding","padding","reshape","resize_shared_workspace","stride","stride","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Dropout","DropoutConfig","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_input_gradient","compute_output","default","exact_num_input_blobs","exact_num_output_blobs","fmt","fmt","from","from","from_config","into","into","into","probability","reshape","seed","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Linear","LinearConfig","auto_weight_blobs","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compute_input_gradient","compute_output","compute_parameters_gradient","default","exact_num_output_blobs","fmt","fmt","from","from","from_config","into","into","into","output_size","reshape","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","LogSoftmax","borrow","borrow_mut","clone","clone_into","compute_input_gradient","compute_output","default","fmt","from","into","reshape","to_owned","try_from","try_into","type_id","vzip","Average","Max","Pooling","PoolingConfig","PoolingMode","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_output_shape","clone","clone","clone","clone_into","clone_into","clone_into","compute_input_gradient","compute_output","exact_num_input_blobs","exact_num_output_blobs","filter_shape","filter_shape","fmt","fmt","fmt","from","from","from","from_config","into","into","into","into","mode","num_spatial_dims","padding","padding","reshape","stride","stride","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Rnn","RnnConfig","auto_weight_blobs","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_input_gradient","compute_output","compute_parameters_gradient","direction_mode","dropout_probability","dropout_seed","exact_num_input_blobs","exact_num_output_blobs","fmt","fmt","from","from","from_config","hidden_size","input_mode","into","into","into","num_layers","reshape","resize_shared_workspace","rnn_type","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Softmax","borrow","borrow_mut","clone","clone_into","compute_input_gradient","compute_output","default","fmt","from","into","reshape","to_owned","try_from","try_into","type_id","vzip","Sequential","SequentialConfig","sequential","Sequential","SequentialConfig","add_input","add_layer","backward_input","backward_parameters","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compute_input_gradient","compute_output","compute_parameters_gradient","default","empty","find_in_place_output","fmt","fmt","force_backward","forward","from","from","from_config","init_layers","inputs","inputs_data","inputs_gradients","into","into","into","is_container","layers","learnable_weights","learnable_weights_gradients","learnable_weights_names","outputs_data","outputs_gradients","resize_shared_workspace","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MeanSquaredError","NegativeLogLikelihood","NegativeLogLikelihoodConfig","mean_squared_error","negative_log_likelihood","MeanSquaredError","borrow","borrow_mut","clone","clone_into","compute_input_gradient","compute_output","default","fmt","from","into","reshape","to_owned","try_from","try_into","type_id","vzip","NegativeLogLikelihood","NegativeLogLikelihoodConfig","auto_output_blobs","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_input_gradient","compute_output","exact_num_input_blobs","exact_num_output_blobs","fmt","fmt","from","from","from_config","into","into","into","loss_weight","num_classes","reshape","sync_native","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Flatten","Reshape","ReshapeConfig","flatten","reshape","Flatten","borrow","borrow_mut","clone","clone_into","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","Reshape","ReshapeConfig","auto_output_blobs","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_in_place","compute_input_gradient","compute_output","fmt","fmt","from","from","from_config","into","into","into","of_shape","reshape","shape","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConfusionMatrix","Exp","Fixed","ISolver","L2","LRPolicy","Momentum","RegressionEvaluator","RegressionLoss","RegularizationMethod","SGD","SGDKind","Solver","SolverConfig","SolverKind","Step","backend","base_lr","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clip_gradients","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compute_update","confusion_matrix","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_config","gamma","get_learning_rate","init","into","into","into","into","into","into","lr_policy","minibatch_size","momentum","mut_network","name","network","network","objective","regression_evaluator","regularization_method","solver","stepsize","to_owned","to_owned","to_owned","to_owned","to_owned","train_minibatch","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","weight_decay","with_config","with_config","worker","Accuracy","ConfusionMatrix","Sample","accuracy","add_sample","add_samples","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","correct","fmt","fmt","fmt","fmt","fmt","from","from","from","get_predictions","into","into","into","new","samples","set_capacity","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MeanSquaredErrorAccuracy","RegressionEvaluator","RegressionLoss","Sample","accuracy","add_sample","add_samples","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","fmt","fmt","fmt","from","from","from","get_predictions","into","into","into","loss","loss","new","samples","set_capacity","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Momentum","sgd","Momentum","momentum","Momentum","backend","borrow","borrow_mut","compute_update","fmt","from","init","into","new","try_from","try_into","type_id","vzip","ArcLock","Axpby","LayerOps","SolverOps","axpby","cast_vec_usize_to_i32","native_backend","native_scalar","write_batch_sample","write_to_memory","write_to_memory_offset","Constant","DimCheckMode","FillerType","Glorot","Permissive","Strict","WeightConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_dimensions","clone","clone","clone","clone_into","clone_into","clone_into","decay_mult","decay_mult","default","fill","fill_constant","fill_glorot","filler","fmt","fmt","fmt","from","from","from","into","into","into","lr_mult","lr_mult","name","share_mode","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","input_size","output_size","value"],"q":[[0,"juice"],[10,"juice::layer"],[141,"juice::layers"],[170,"juice::layers::activation"],[176,"juice::layers::activation::relu"],[195,"juice::layers::activation::sigmoid"],[214,"juice::layers::activation::tanh"],[233,"juice::layers::common"],[263,"juice::layers::common::convolution"],[308,"juice::layers::common::dropout"],[344,"juice::layers::common::linear"],[377,"juice::layers::common::log_softmax"],[394,"juice::layers::common::pooling"],[451,"juice::layers::common::rnn"],[494,"juice::layers::common::softmax"],[511,"juice::layers::container"],[514,"juice::layers::container::sequential"],[563,"juice::layers::loss"],[568,"juice::layers::loss::mean_squared_error"],[585,"juice::layers::loss::negative_log_likelihood"],[622,"juice::layers::utility"],[627,"juice::layers::utility::flatten"],[640,"juice::layers::utility::reshape"],[675,"juice::solver"],[788,"juice::solver::confusion_matrix"],[836,"juice::solver::regression_evaluator"],[885,"juice::solvers"],[887,"juice::solvers::sgd"],[889,"juice::solvers::sgd::momentum"],[903,"juice::util"],[914,"juice::weight"],[969,"juice::weight::FillerType"],[972,"coaster::tensor"],[973,"alloc::vec"],[974,"coaster::backend"],[975,"alloc::string"],[976,"std::collections::hash::map"],[977,"core::option"],[978,"core::fmt"],[979,"core::fmt"],[980,"coaster_blas::plugin"],[981,"std::collections::hash::set"],[982,"std::io::error"],[983,"std::path"],[984,"core::convert"],[985,"core::convert"],[986,"core::any"],[987,"coaster_nn::plugin"],[988,"coaster_nn::plugin"],[989,"coaster_nn::plugin"],[990,"alloc::collections::vec_deque"],[991,"coaster::error"],[992,"coaster::frameworks::native"],[993,"coaster::backend"],[994,"core::marker"],[995,"coaster::frameworks::native::flatbox"]],"d":["macro helper to implement activation trait TODO see common","macro to implement ilayer common TODO use Some(1) as a …","macro helper for default loss","Implement [ISolver][1] for [SGD solvers][2]. [1]: …","Provides the generics and interfaces for the specific …","Provides the fundamental units of computation in a Neural …","Provides the generics and interfaces for the specific …","Provides the trainers for the Layers.","Provides common utility functions","Provides configuration of weights and their initialization.","A Layer that can compute the gradient with respect to its …","A Layer that can compute the output for a given input.","A Layer that can compute the gradient with respect to its …","Convolution Layer","Dropout","A Layer in a Neural Network that can handle forward and …","The generic Layer","Layer Configuration Struct","The Layer Types","Linear Layer","LogSoftmax Layer","MeanSquaredError Layer","NegativeLogLikelihood Layer","Pooling Layer","ReLU Layer","Reshape Layer","RNN Layer","Sequential Layer","Sigmoid Layer","Softmax Layer","TanH Layer","Add a input by name","Add a output by name","Return whether to allow force_backward for a given input …","Return whether “anonymous” output blobs are created …","Return whether weight blobs are created automatically for …","Uses the underlying layer implementation to compute a …","Compute the [backpropagation][1] input gradient using the …","Calculate the gradient w.r.t. input.","Compute the [backpropagation][1] parameters gradient using …","Calculate the gradient w.r.t. parameters.","All the blobs of the layer that can be addressed by name.","","","","","","","Clears the [weights][1] gradients and zero-inits them. [1]…","","","","","Return wether the computations of a layer should be done …","Compute gradients with respect to the inputs and write …","Compute output for given input and write them into …","Compute gradients with respect to the parameters and write …","The configuration of the Layer","Connect the layer to another layers and set up tensors for …","Returns the exact number of input blobs required by the …","Returns the exact number of output blobs required by the …","","","","","Compute the [feedforward][1] layer output using the …","Uses the underlying layer implementation to compute a …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new Layer from a [LayerConfig][1]. [1]: …","Initialize the layer for computation.","Initializes layer for [backpropagation][1] [1]: …","Set [backpropagation][1] flags to force this layer to …","Returns the Name of the requested input Blob","Returns the names of all the input blobs.","Names for all the input blobs of the layer.","References to all the input blobs of the layer.","References to all the input blobs of the layer.","The name for each input Blob","Return the input tensors of the layer.","Return the gradients of the input tensors of the layer.","Returns the number of input Blobs","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return wether the layer is a container.","Returns <code>true</code> when the layer is using in-place computation.","The type of the Layer","Return the learnable weights inside the layer.","Returns all the learnable weights in the layer.","Return the gradients for the learnable weights inside the …","Returns the gradients for all the learnable weights in the …","Return the learning rates for the learnable weights inside …","Returns the learning rate for all the learnable weights in …","Return the names of the learnable weights inside the layer.","Returns the names of all the learnable weights in the …","Read a Cap’n Proto file at the specified path and …","Returns the [loss weight][1] associated with the weight …","Return the associated loss weight for a given output blob …","Returns the minimum number of output blobs required by the …","Identifies the Network","The name of the Layer","Creates a new LayerConfig","Returns the Name of the requested output Blob","References to all the output blobs of the layer.","References to all the output blobs of the layer.","The name for each output Blob","Return the output tensors of the layer.","Return the gradients of the output tensors of the layer.","Returns the number of output Blobs","Returns the requested WeightConfig","Specifies training configuration for each weight blob.","Returns the number of params","Specifies on which inputs the backpropagation should be …","Adjust to shapes of the output blobs to fit the shapes of …","Adjust size of shared workspace.","Serialize the Layer and it’s weights to a Cap’n Proto …","Sets whether the layer should compute gradients w.r.t. a …","Returns wether the LayerType supports in-place operations.","Return wether a simple native backend should be used to […","Synchronize the layers backend.","","","","","","","","","","","","Updates the [weights][1] with the weight update computed …","Check if the configured parameters make sense.","","","","The vector that stores shared references to the weights in …","The vector that stores shared references to the weights in …","The [implementation][1] of the Layer. [1]: …","","","","","","","","","","","","","","","Implement [ILayer][1] for [activation layers][2]. [1]: …","","","","","","","Implement [ILayer][1] for [activation layers][2]. [1]: …","","Implement [ILayer][1] for [activation layers][2]. [1]: …","Provides nonlinear activation methods.","Provides common neural network layers.","Provides container layers.","Provides methods to calculate the loss (cost) of some …","Provides various helpful layers, which might be not …","","","","Applies the nonlinear Rectified Linear Unit.","Applies the nonlinear Log-Sigmoid function.","Applies the nonlinear TanH function.","ReLU Activation Layer","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Sigmoid Activation Layer","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","TanH Activation Layer","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Provides common utilities for Layers that utilize a filter …","","","","","","","","","","Calculate output shape based on the shape of filter, …","Computes the shape of the spatial dimensions.","Convolves the input tensor.","Applies a Dropout layer to the input data <code>x</code>","The filter_shape that will be used by <code>spatial_filter_dims</code>.","Applies a linear transformation to the input data …","Computes the logarithmic softmax of its input.","Calculates the number of spatial dimensions for the …","The padding that will be used by <code>padding_dims</code>.","Retrievs the padding for the convolution based on …","Applies pooling to the input.","Create a Recursive Layer","Computes the softmax of its input.","Retrievs the spatial dimensions for the filter based on …","The stride that will be used by <code>stride_dims</code>.","Retrievs the stride for the convolution based on …","Convolution Layer","Specifies configuration parameters for a Convolution Layer.","","","","","","","","","","","","","","","","","The size of the kernel","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a Convolution layer from a ConvolutionConfig.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","The number of output feature maps","Calculates the number of spatial dimensions for the …","","The padding size","","","","The stride size","","","","","","","","","","","Dropout Layer","Specifies configuration parameters for a Dropout Layer.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a Dropout layer from a DropoutConfig.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","The probability to clamp a value to zero","","The initial seed for the (pseudo-)random generator","","","","","","","","","","","Linear Layer","Specifies configuration parameters for a Linear Layer.","","","","","","","","Since we have row vectors instead of columns, xW^T = …","Basically, x has the shape (k, n) where k is the batch …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a Linear layer from a LinearConfig.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","The number of output values","","","","","","","","","","","LogSoftmax Layer","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","The average of all values inside the pooling window will …","The maximum value inside the pooling window will be used …","Pooling Layer","Specifies configuration parameters for a Pooling Layer.","The different modes of pooling that can be calculated.","","","","","","","","","","","","","","","","","","","The shape of the filter","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a Pooling layer from a PoolingConfig.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The PoolingMode to use","Calculates the number of spatial dimensions for the …","","The padding size","","","The stride size","","","","","","","","","","","","","","","","","Specifies configuration parameters for a RNN Layer. TODO: …","","","","","","","","","","","","","RNN Direction","Dropout Probability","Dropout Seed","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a RNN from a RNNConfig","Size of the Hidden Layer","Input Mode","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Number of Hidden Layers","","","Type of RNN","","","","","","","","","","","Softmax Layer","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","A container layer that runs operations sequentially on the …","Sequential Layer","Specifies configuration parameters for a Sequential Layer.","Add a input to the network.","Add layer at the end of the sequential container.","","","","","","","","","","","","","Create a empty Sequential container layer.","Tries to find the output of a previous layer that is …","","","Defines if the container will force every layer to do […","","Returns the argument unchanged.","Returns the argument unchanged.","Create a Sequential layer from a SequentialConfig.","Initializes a sequential container.","Defines the names and shapes of the input tensors.","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Defines the layers of the container via LayerConfigs.","","","","","","","","","","","","","","","","","","","Provides Loss &amp; Gradient for Mean Squared Error","TODO: DOC","Mean Squared Error Layer","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","NegativeLogLikelihood Loss Layer","Specifies configuration parameters for a …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a NegativeLogLikelihood layer from a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","How many different classes can be classified.","","","","","","","","","","","","","","","","Flattens the bottom Blob into a simpler top Blob.","Utility layer to give a tensor another shape.","Flattening Utility Layer","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Reshape Utility Layer","Specifies configuration parameters for a Reshape Layer.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a Reshape layer from a ReshapeConfig.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a ReshapeConfig that describes a Reshape layer with …","","The target shape that the input should assume.","","","","","","","","","","","","return base_lr * gamma ^ iter","always return base_lr","Implementation of a specific Solver.","L2 regularization","Learning Rate Policy for a [Solver][1] [1]: …","Stochastic Gradient Descent with Momentum. See […","","","[Regularization][1] method for a [Solver][2]. [1]: …","Stochastic Gradient Descent. See [SGDKind][1] for all …","All available types of Stochastic Gradient Descent solvers.","Solver that optimizes a [Layer][1] with a given objective. …","Configuration for a Solver","All available types of solvers.","learning rate decays every <code>step</code> iterations. return base_lr …","Returns the backend used by the solver.","The base learning rate.","","","","","","","","","","","","","The threshold for clipping gradients.","","","","","","","","","","","Update the weights of the net with part of the gradient.","TODO: DOC","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create Solver from [SolverConfig][1] [1]: …","gamma as used in the calculation of most learning rate …","Return the learning rate for a supplied iteration.","Initialize the solver, setting up any network related data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The learning rate policy to be used.","Accumulate gradients over <code>minibatch_size</code> instances.","The [momentum][1] multiplier for [SGD solvers][2]. [1]: …","Returns the network trained by the solver.","Name of the solver.","Returns the network trained by the solver.","The [LayerConfig][1] that is used to initialize the …","The [LayerConfig][1] that is used to initialize the …","Set of Evaluators for Regression Problems","The method of [regularization][1] to use. [1]: …","The [Solver implementation][1] to be used. [1]: …","The stepsize used in Step and Sigmoid learning policies.","","","","","","Train the network with one minibatch","","","","","","","","","","","","","","","","","","","","","","","","","The global [weight decay][1] multiplier for [regularization…","Create a Solver of the specified kind with the supplied …","Create a Solver of the specified kind with the supplied …","The implementation of the Solver","The accuracy of the predictions in a ConfusionMatrix.","A ConfusionMatrix.","A single prediction Sample.","Return the accuracy of the collected predictions.","Add a sample by providing the expected <code>target</code> class and …","Add a batch of samples.","","","","","","","","","","","Returns if the prediction is equal to the expected target.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the predicted classes from the output of a network.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a ConfusionMatrix that analyzes the prediction of …","Return all collected samples.","Set the <code>capacity</code> of the ConfusionMatrix","","","","","","","","","","","","","","","","","Provides loss calculated by Mean Squared Error for sampled …","Sampled Evaluator for Regression Problems","Trait to show loss &amp; metric for a Regression Evaluator","A single prediction sample.","Return the accuracy of the collected predictions.","Add a sample by providing the expected <code>target</code> value and …","Add a batch of samples.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the predicted value from the output of a network.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Loss function to produce metric","","Create an evaluator for Regression Problems","Return all collected samples.","Set the <code>capacity</code> of the Regression Evaluator","","","","","","","","","","","","","","","","","Provides ISolver implementations based on [Stochastic …","","A [Stochastic Gradient Descent with Momentum][1] [1]: …","Stochastic Gradient Descent with Momentum.","","","","","","Returns the argument unchanged.","Initialize the SGD Momentum solver, allocating memory for …","Calls <code>U::from(self)</code>.","Create a new SGD Momentum solver.","","","","","Shared Lock used for our tensors","Extends IBlas with Axpby","Encapsulates all traits used in Layers.","Encapsulates all traits required by Solvers.","Performs the operation y := a<em>x + b</em>y .","Casts a Vec to as Vec","Create a simple native backend.","Create a Coaster SharedTensor for a scalar value.","Write the <code>i</code>th sample of a batch into a SharedTensor.","Write into a native Coaster Memory.","Write into a native Coaster Memory with a offset.","Fills the weight blob with a constant <code>value</code> (all values …","Enum for specifing the shared weights behaviour","Enum for specifing the type of Filler.","Fills the weight blobs based on the paper:","Permissive requires only the count of weights to match.","Strict requires that shapes match.","Specifies training configuration for a weight blob.","","","","","","","Checks dimensions of two blobs according to the <code>share_mode</code>.","","","","","","","The multiplier on the global weight decay for this weight …","The multiplier on the global weight decay for this …","","Uses a filler as specified by this FillerType to fill the …","Directly use the Constant Filler.","Directly use the Glorot Filler.","The filler that initializes the weights in the weight blob.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The multiplier on the global learning rate for this weight …","The multiplier on the global learning rate for this …","The name of the weight blob – useful for sharing weights …","Whether to require shared weights to have the same shape, …","","","","","","","","","","","","","","","","Number of input nodes for each output.","Number of output nodes for each input.","The value that will be used to fill the blob."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,1,1,4,4,4,7,4,7,4,7,7,7,1,14,7,1,14,7,1,14,1,14,4,15,16,17,7,7,4,4,4,7,1,14,4,7,7,1,14,7,4,7,7,1,7,7,7,7,1,4,4,1,7,1,14,4,7,1,4,7,4,7,4,7,4,7,7,7,4,4,7,1,1,1,7,7,1,4,4,1,1,1,1,1,4,4,7,7,14,4,7,1,14,7,1,14,7,1,14,7,1,14,7,1,7,1,14,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,47,0,0,47,0,0,47,47,47,0,0,0,47,47,47,0,0,48,48,51,48,51,48,48,51,48,51,48,48,48,48,48,48,51,48,51,48,51,48,48,51,51,51,48,48,51,48,48,48,51,48,51,48,51,48,51,48,51,48,51,0,0,52,54,52,54,52,54,52,54,52,52,54,52,52,52,54,52,54,52,52,54,54,54,52,54,52,54,52,54,52,54,52,54,52,54,0,0,55,55,56,55,56,56,56,55,55,55,55,55,55,56,55,56,55,55,56,56,56,55,56,55,56,55,56,55,56,55,56,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,62,62,0,0,0,59,61,62,59,61,62,59,59,61,62,59,61,62,59,59,59,59,59,61,59,61,62,59,61,62,59,59,61,61,62,61,59,59,61,59,59,61,59,61,62,59,61,62,59,61,62,59,61,62,59,61,62,0,0,63,63,65,63,65,63,65,63,65,63,63,63,65,65,65,63,63,63,65,63,65,63,65,65,63,65,65,65,63,63,65,63,65,63,65,63,65,63,65,63,65,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,0,0,0,68,68,69,69,69,68,69,68,68,68,69,69,69,68,69,68,69,68,68,69,69,68,69,69,68,69,69,69,68,68,69,68,69,69,69,69,69,69,68,69,68,69,68,69,68,69,68,0,0,0,0,0,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,72,72,73,72,73,72,73,72,73,72,72,72,72,72,73,72,73,72,72,73,73,72,73,72,72,72,73,72,73,72,73,72,73,72,73,0,0,0,0,0,0,74,74,74,74,74,74,74,74,74,74,74,74,0,0,75,75,76,75,76,75,76,75,76,75,75,75,75,76,75,76,75,75,76,76,76,75,76,75,76,75,76,75,76,75,76,75,76,0,81,81,0,82,0,80,0,0,0,79,0,0,0,0,81,77,78,83,78,79,80,81,82,83,78,79,80,81,82,78,78,79,80,81,82,78,79,80,81,82,77,0,78,77,83,78,79,80,81,82,83,78,79,80,81,82,83,78,78,77,83,78,79,80,81,82,78,78,78,83,78,83,78,78,0,78,78,78,78,79,80,81,82,83,83,78,79,80,81,82,83,78,79,80,81,82,83,78,79,80,81,82,83,78,79,80,81,82,78,79,80,83,0,0,0,85,85,85,85,87,86,85,87,86,87,86,87,86,87,85,87,87,86,86,85,87,86,85,85,87,86,85,85,85,87,86,87,86,85,87,86,85,87,86,85,87,86,85,87,86,0,0,0,0,89,89,89,89,91,92,89,91,92,91,92,91,92,90,89,91,91,92,89,91,92,89,89,91,92,90,92,89,89,89,91,92,91,89,91,92,89,91,92,89,91,92,89,91,92,0,0,0,0,0,93,93,93,93,93,93,93,93,93,93,93,93,93,0,0,0,0,71,0,0,0,0,0,0,102,0,0,102,101,101,0,33,101,102,33,101,102,33,33,101,102,33,101,102,33,33,33,102,102,102,33,33,101,102,33,101,102,33,101,102,33,33,33,33,33,101,102,33,101,102,33,101,102,33,101,102,33,101,102,103,103,104],"f":"```````````````````````````````{{bd}f}0{{hj}l}{hl}0{{{n{c}}{Af{{Ad{{Ab{A`}}}}}}}{{Ah{{Ad{{Ab{A`}}}}}}}Aj}{{hc{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}}fAj}1{{hc{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}}fAj}{{{n{c}}}fAj}`{ce{}{}}000001{bb}{AlAl}{{ce}f{}{}}08{{Anc{Af{{Ab{e}}}}{Af{{Ab{e}}}}{Af{{Ab{e}}}}{Af{{Ab{e}}}}{Af{{Ab{e}}}}}fAj{}}{{B`c{Af{{Ab{e}}}}{Af{{Ab{e}}}}{Af{{Ab{e}}}}}fAj{}}{{Bbc{Af{{Ab{e}}}}{Af{{Ab{e}}}}{Af{{Ab{e}}}}{Af{{Ab{e}}}}}fAj{}}`{{{n{c}}{Bh{Bd{Bf{{Ad{{Ab{A`}}}}{Ad{{Ab{A`}}}}}}}}{Bh{Bd{Bf{{Ad{{Ab{A`}}}}{Ad{{Ab{A`}}}}{Bj{A`}}{Bj{A`}}}}}}}fAj}{h{{Bj{j}}}}0{{hBl}Bn}{{{n{c}}Bl}Bn{C`Aj}}{{bBl}Bn}{{AlBl}Bn}{{hc{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}}fAj}{{{n{c}}{Af{{Ad{{Ab{A`}}}}}}}{{Ah{{Ad{{Ab{A`}}}}}}}Aj}{cc{}}00{{{Cb{c}}b}{{n{c}}}{Aj{Cd{A`}}{Cf{A`}}}}{{h{Cb{c}}}fAj}{{{n{c}}{Ch{Bd}}{Ch{Bd}}}fAj}{{{n{c}}}fAj}{{bj}{{Bj{Bd}}}}{{{n{c}}}{{Af{Bd}}}Aj}````{h{{Bj{{Ah{{Ad{{Ab{A`}}}}}}}}}}0{bj}{ce{}{}}00{hl}{{{n{c}}}lAj}`4{{{n{c}}}{{Ah{{Ad{{Ab{A`}}}}}}}Aj}50{h{{Bj{{Ah{{Bj{A`}}}}}}}}{{{n{c}}}{{Ah{{Bj{A`}}}}}Aj}{h{{Bj{{Ah{Bd}}}}}}{{{n{c}}}{{Ah{Bd}}}Aj}{{{Cb{c}}e}{{Cj{{n{c}}}}}{Aj{Cd{A`}}}{{Cn{Cl}}}}{{{n{c}}j}{{Bj{A`}}}Aj}{{hj}{{Bj{A`}}}}{hj}``{{dc}b{{D`{Al}}}}{{bj}{{Bj{Bd}}}}```??>{{bj}{{Bj{Db}}}}`?`{{h{Cb{c}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}}fAj}{{h{Cb{c}}{Bj{{Ad{{Ab{Dd}}}}}}}{{Bj{{Ad{{Ab{Dd}}}}}}}Aj}{{{n{c}}e}{{Cj{f}}}Aj{{Cn{Cl}}}}{{{n{c}}jl}fAj}{All}{hl}{{{n{c}}}fAj}{ce{}{}}0{c{{Df{e}}}{}{}}00000{cDh{}}00{{{n{c}}e}fAj{Aj{Dj{A`}}}}{b{{Df{fd}}}}444```````````````````````````````````````44{DlDl}{{ce}f{}{}}{Dll}{{Dlc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Dn{A`}}{E`{A`}}}}{{Dlc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Dn{A`}}{E`{A`}}}}{Dl{{Bj{j}}}}0{{DlBl}Bn}{cc{}}<{{Dl{Cb{c}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}}f{Aj{Dn{A`}}{E`{A`}}}}=<<;=`=={EbEb}8{Ebl}{{Ebc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Ed{A`}}{Ef{A`}}}}{{Ebc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Ed{A`}}{Ef{A`}}}}{Eb{{Bj{j}}}}0{{EbBl}Bn}7{ce{}{}}{{Eb{Cb{c}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}}f{Aj{Ed{A`}}{Ef{A`}}}}1{c{{Df{e}}}{}{}}0{cDh{}}3`33{EhEh}{{ce}f{}{}}{Ehl}{{Ehc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Ej{A`}}{El{A`}}}}{{Ehc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Ej{A`}}{El{A`}}}}{Eh{{Bj{j}}}}0{{EhBl}Bn}{cc{}};{{Eh{Cb{c}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}}f{Aj{Ej{A`}}{El{A`}}}}<::9<``````````````{{En{Af{j}}}{{Ah{j}}}}{{{Af{j}}{Af{j}}{Af{j}}{Af{j}}}{{Ah{j}}}}``{En{{Af{j}}}}``{{En{Af{j}}}j}1{{Enj}{{Ah{j}}}}```020``{{{F`{c}}}l{Aj{Fb{A`}}}}{ce{}{}}000{{{F`{c}}{Af{j}}}{{Ah{j}}}{{Fb{A`}}}}{{{F`{c}}}{{F`{c}}}{Fd{Fb{A`}}}}{FfFf}{{ce}f{}{}}0{{{F`{c}}c{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Fb{A`}}}}{{{F`{c}}c{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Fb{A`}}}}{{{F`{c}}c{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Fb{A`}}}}{{{F`{c}}}{{Bj{j}}}{Aj{Fb{A`}}}}0{{{F`{c}}}{{Af{j}}}{{Fb{A`}}}}`{{{F`{c}}Bl}Bn{C`{Fb{A`}}}}{{FfBl}Bn}{cc{}}0{Ff{{F`{c}}}{{Fb{A`}}}}={FfAl}>`{{{F`{c}}{Af{j}}}j{{Fb{A`}}}}6`{{{F`{c}}{Cb{c}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}}f{Aj{Fb{A`}}}}{{{F`{c}}{Cb{c}}{Bj{{Ad{{Ab{Dd}}}}}}}{{Bj{{Ad{{Ab{Dd}}}}}}}{Aj{Fb{A`}}}}8`{ce{}{}}0{c{{Df{e}}}{}{}}000{cDh{}}022``2222{{{Fh{ce}}}{{Fh{ce}}}Fd{Fd{Fj{c}}}}{FlFl}{{ce}f{}{}}0{{{Fh{A`c}}c{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Fj{A`}}}}{{{Fh{A`c}}c{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Fj{A`}}}}{{}Fl}{{{Fh{A`c}}}{{Bj{j}}}{Aj{Fj{A`}}}}0{{{Fh{ce}}Bl}BnC`{C`{Fj{c}}}}{{FlBl}Bn}{cc{}}0{Fl{{Fh{ce}}}{}{{Fj{c}}}}={FlAl}>`{{{Fh{A`c}}{Cb{c}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}}f{Aj{Fj{A`}}}}`??>>>>==??``{Fnl}{ce{}{}}000{G`G`}={{Fnc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Cd{A`}}}}{{Fnc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Cd{A`}}}}{{Fnc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Cd{A`}}}}{{}Fn}{Fn{{Bj{j}}}}{{FnBl}Bn}{{G`Bl}Bn}=={G`Fn}9{G`Al}:`{{Fn{Cb{c}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}}f{Aj{Cd{A`}}}};{c{{Df{e}}}{}{}}000{cDh{}}0==`=={GbGb}{{ce}f{}{}}{{Gbc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Gd{A`}}}}{{Gbc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Gd{A`}}}}{{}Gb}{{GbBl}Bn}{cc{}}{ce{}{}}{{Gb{Cb{c}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}}f{Aj{Gd{A`}}}}1::91`````111111{{{Gf{ce}}{Af{j}}}{{Ah{j}}}{}{{Gh{c}}}}{{{Gf{ce}}}{{Gf{ce}}}Fd{Fd{Gh{c}}}}{GjGj}{GlGl};;;{{{Gf{A`c}}c{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Gh{A`}}}}{{{Gf{A`c}}c{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Gh{A`}}}}{{{Gf{A`c}}}{{Bj{j}}}{Aj{Gh{A`}}}}0{{{Gf{ce}}}{{Af{j}}}{}{{Gh{c}}}}`{{{Gf{ce}}Bl}BnC`{C`{Gh{c}}}}{{GjBl}Bn}{{GlBl}Bn}==={Gj{{Gf{ce}}}{}{{Gh{c}}}}={GjAl}>>`{{{Gf{ce}}{Af{j}}}j{}{{Gh{c}}}}6`{{{Gf{A`c}}{Cb{c}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}}f{Aj{Gh{A`}}}}7`{ce{}{}}00{c{{Df{e}}}{}{}}00000{cDh{}}00222``{{{Gn{c}}}l{Aj{H`{A`}}}}3333{{{Gn{c}}}{{Gn{c}}}{Fd{H`{A`}}}}{HbHb}{{ce}f{}{}}0{{{Gn{c}}c{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{H`{A`}}}}{{{Gn{c}}c{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{H`{A`}}}}{{{Gn{c}}c{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{H`{A`}}}}```{{{Gn{c}}}{{Bj{j}}}{Aj{H`{A`}}}}0{{{Gn{c}}Bl}Bn{C`{H`{A`}}}}{{HbBl}Bn}{cc{}}0{Hb{{Gn{c}}}{{H`{A`}}}}``>>{HbAl}`{{{Gn{c}}{Cb{c}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}}f{Aj{H`{A`}}}}{{{Gn{c}}{Cb{c}}{Bj{{Ad{{Ab{Dd}}}}}}}{{Bj{{Ad{{Ab{Dd}}}}}}}{Aj{H`{A`}}}}`{ce{}{}}0{c{{Df{e}}}{}{}}000{cDh{}}022`22{HdHd}?{{Hdc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Hf{A`}}}}{{Hdc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Hf{A`}}}}{{}Hd}{{HdBl}Bn}<7{{Hd{Cb{c}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}}f{Aj{Hf{A`}}}}87768`````{{Hhd{Af{j}}}f}{{Hhb}f}{{{Hj{c}}c{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}}f{Aj{Cd{A`}}}}{{{Hj{c}}c{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}}f{Aj{Cd{A`}}}}<<<<{HhHh}{{ce}f{}{}}{{{Hj{c}}c{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Cd{A`}}}}{{{Hj{c}}c{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Cd{A`}}}}{{{Hj{c}}c{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Cd{A`}}}}{{}Hh}{{}{{Hj{c}}}{Aj{Cd{A`}}}}{{Hhj}{{Bj{Bd}}}}{{{Hj{c}}Bl}Bn{C`Aj{Cd{A`}}}}{{HhBl}Bn}`{{{Hj{c}}c{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}{Af{{Ad{{Ab{A`}}}}}}}f{Aj{Cd{A`}}}}{cc{}}0{{{Cb{c}}Hh}{{Hj{c}}}{Aj{Cd{A`}}}}{{{Hj{c}}{Cb{c}}Hh}f{Aj{Cd{A`}}}}`{{{Hj{c}}}{{Bj{{Ah{{Ad{{Ab{A`}}}}}}}}}{Aj{Cd{A`}}}}0{ce{}{}}{HhAl}1{{{Hj{c}}}l{Aj{Cd{A`}}}}`33{{{Hj{c}}}{{Bj{{Ah{Bd}}}}}{Aj{Cd{A`}}}}44{{{Hj{c}}{Cb{c}}{Bj{{Ad{{Ab{Dd}}}}}}}{{Bj{{Ad{{Ab{Dd}}}}}}}{Aj{Cd{A`}}}}4{c{{Df{e}}}{}{}}000{cDh{}}066``````66{HlHl}{{ce}f{}{}}{{Hlc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}f{Aj{Cd{A`}}}}{{Hlc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}fAj}{{}Hl}{{HlBl}Bn}{cc{}}={{Hl{Cb{c}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}}f{Aj{Cd{A`}}{Hn{A`}}}}>998>``{I`l}????{I`I`}{IbIb}99{{I`c{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}fAj}{{I`c{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}fAj}{I`{{Bj{j}}}}0{{I`Bl}Bn}{{IbBl}Bn}99{IbI`}{ce{}{}}0{IbAl}{{I`j}{{Bj{A`}}}}`{{I`{Cb{c}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}}fAj}<33{c{{Df{e}}}{}{}}000{cDh{}}055``````55{IdId}{{ce}f{}{}}{{IdBl}Bn}{cc{}}995549``{Ifl}::::{IfIf}{IhIh}552{{Ifc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}fAj}{{Ifc{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}{Af{{Ab{A`}}}}}fAj}{{IfBl}Bn}{{IhBl}Bn}77{IhIf}{ce{}{}}0{IhAl}{{{Af{j}}}Ih}{{If{Cb{c}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}{Ah{{Ad{{Ab{A`}}}}}}}fAj}`33{c{{Df{e}}}{}{}}000{cDh{}}055````````````````{Ijc{Aj{Dj{A`}}}}`666666666666`{IlIl}{InIn}{J`J`}{JbJb}{JdJd}{{ce}f{}{}}0000{{IjIl{n{c}}j}f{Aj{Cd{A`}}}}`{{}Il}{{IjBl}Bn}{{{Jf{ce}}Bl}Bn{Aj{Dj{A`}}C`}{Aj{Cd{A`}}C`}}{{IlBl}Bn}{{InBl}Bn}{{J`Bl}Bn}{{JbBl}Bn}{{JdBl}Bn}{cc{}}00000{{{Cb{c}}{Cb{e}}Il}{{Jf{ec}}}{Aj{Cd{A`}}}{Aj{Dj{A`}}}}`{{Ilj}A`}{{Ij{n{c}}}f{Aj{Cd{A`}}}}{ce{}{}}00000```{{{Jf{ce}}}{{n{e}}}{Aj{Dj{A`}}}{Aj{Cd{A`}}}}`0``````11111{{{Jf{ce}}{Ad{{Ab{A`}}}}{Ad{{Ab{A`}}}}}{{Ad{{Ab{A`}}}}}{Aj{Dj{A`}}}{Aj{Cd{A`}}}}{c{{Df{e}}}{}{}}00000000000{cDh{}}00000444444`{{In{Cb{c}}Il}{{Jh{Ij}}}{Aj{Dj{A`}}}}{{J`{Cb{c}}Il}{{Jh{Ij}}}{Aj{Dj{A`}}}}````{JjJl}{{Jjjj}f}{{Jj{Af{j}}{Af{j}}}f}999999{JnJn}{JlJl}{{ce}f{}{}}0{Jnl}{{JjBl}Bn}{{JnBl}Bn}0{{JlBl}Bn}0{cc{}}00{{Jj{Ab{A`}}}{{Ah{j}}}}{ce{}{}}00{jJj}{Jj{{K`{Jn}}}}{{Jj{Bj{j}}}f}33{cBd{}}0{c{{Df{e}}}{}{}}00000{cDh{}}00666````{Kb{{`{Kd}}}}{{KbA`A`}f}{{Kb{Af{A`}}{Af{A`}}}f}999999{KfKf}{KhKh}{{ce}f{}{}}0{{KdBl}Bn}{{KbBl}Bn}{{KfBl}Bn}0{{KhBl}Bn}{cc{}}00{{Kb{Ab{A`}}}{{Ah{A`}}}}{ce{}{}}00{KdA`}{KhA`}{{{Bj{Bd}}}Kb}{Kb{{K`{Kf}}}}{{Kb{Bj{j}}}f}55{cBd{}}{c{{Df{e}}}{}{}}00000{cDh{}}00888`````{{{Kj{c}}}c{Aj{Dj{A`}}}}99{{{Kj{c}}Il{n{e}}j}f{Aj{Dj{A`}}}{Aj{Cd{A`}}}}{{{Kj{c}}Bl}Bn{C`Aj{Dj{A`}}}}={{{Kj{c}}{n{e}}}f{Aj{Dj{A`}}}{Aj{Cd{A`}}}}<{{{Cb{c}}}{{Kj{c}}}{Aj{Dj{A`}}}}665=````{{Hn{Ab{c}}{Ab{c}}{Ab{c}}{Ab{c}}}{{Df{fKl}}}{}}{{{Ah{j}}}{{Ah{Kn}}}}{{}{{Lb{L`}}}}{c{{Ab{c}}}{LdLf}}{{{Ab{A`}}{Af{c}}j}f{LdLf}}{{Lh{Af{c}}}f{LdLf}}{{Lh{Af{c}}j}f{LdLf}}```````{ce{}{}}00000{{Db{Ab{c}}{Ab{c}}BdBdBd}{{Df{fBd}}}{}}{DbDb}{LjLj}{LlLl}{{ce}f{}{}}00{DbA`}`{{}Db}{{Ll{Ab{A`}}}f}{{{Ab{A`}}A`}f}{{{Ab{A`}}jj}f}`{{DbBl}Bn}{{LjBl}Bn}{{LlBl}Bn}{cc{}}00>>>8```>>>{c{{Df{e}}}{}{}}00000{cDh{}}00{ce{}{}}00```","c":[],"p":[[5,"LayerConfig",10],[1,"str"],[1,"unit"],[10,"ILayer",10],[1,"usize"],[1,"bool"],[5,"Layer",10],[1,"f32"],[5,"SharedTensor",972],[8,"ArcLock",903],[1,"slice"],[5,"Vec",973],[10,"IBackend",974],[6,"LayerType",10],[10,"ComputeInputGradient",10],[10,"ComputeOutput",10],[10,"ComputeParametersGradient",10],[5,"String",975],[1,"tuple"],[5,"HashMap",976],[6,"Option",977],[5,"Formatter",978],[8,"Result",978],[10,"Debug",978],[5,"Rc",979],[10,"LayerOps",903],[10,"Copy",980],[5,"HashSet",981],[8,"Result",982],[5,"Path",983],[10,"AsRef",984],[10,"Into",984],[5,"WeightConfig",914],[1,"u8"],[6,"Result",985],[5,"TypeId",986],[10,"SolverOps",903],[5,"ReLU",176],[10,"Relu",987],[10,"ReluPointwise",987],[5,"Sigmoid",195],[10,"Sigmoid",987],[10,"SigmoidPointwise",987],[5,"TanH",214],[10,"Tanh",987],[10,"TanhPointwise",987],[10,"FilterLayer",233],[5,"Convolution",263],[10,"Convolution",987],[10,"Clone",988],[5,"ConvolutionConfig",263],[5,"Dropout",308],[10,"Dropout",987],[5,"DropoutConfig",308],[5,"Linear",344],[5,"LinearConfig",344],[5,"LogSoftmax",377],[10,"LogSoftmax",987],[5,"Pooling",394],[10,"Pooling",987],[5,"PoolingConfig",394],[6,"PoolingMode",394],[5,"Rnn",451],[10,"Rnn",987],[5,"RnnConfig",451],[5,"Softmax",494],[10,"Softmax",987],[5,"SequentialConfig",514],[5,"Sequential",514],[5,"MeanSquaredError",568],[10,"Axpby",903],[5,"NegativeLogLikelihood",585],[5,"NegativeLogLikelihoodConfig",585],[5,"Flatten",627],[5,"Reshape",640],[5,"ReshapeConfig",640],[10,"ISolver",675],[5,"SolverConfig",675],[6,"SolverKind",675],[6,"SGDKind",675],[6,"LRPolicy",675],[6,"RegularizationMethod",675],[5,"Solver",675],[5,"Box",989],[5,"ConfusionMatrix",788],[5,"Accuracy",788],[5,"Sample",788],[5,"VecDeque",990],[5,"RegressionEvaluator",836],[10,"RegressionLoss",836],[5,"Sample",836],[5,"MeanSquaredErrorAccuracy",836],[5,"Momentum",889],[6,"Error",991],[1,"i32"],[5,"Native",992],[5,"Backend",974],[10,"NumCast",993],[10,"Copy",994],[5,"FlatBox",995],[6,"DimCheckMode",914],[6,"FillerType",914],[15,"Glorot",969],[15,"Constant",969]],"b":[[806,"impl-Display-for-Sample"],[807,"impl-Debug-for-Sample"],[808,"impl-Display-for-Accuracy"],[809,"impl-Debug-for-Accuracy"],[855,"impl-Display-for-Sample"],[856,"impl-Debug-for-Sample"]]}],\
["juice_utils",{"doc":"","t":"HH","n":["download_datasets","unzip_datasets"],"q":[[0,"juice_utils"],[2,"core::error"],[3,"alloc::boxed"],[4,"core::result"],[5,"std::io::error"]],"d":["",""],"i":[0,0],"f":"{{{d{b}}bb}{{l{f{j{h}}}}}}{{{d{b}}b}{{n{f}}}}","c":[],"p":[[1,"str"],[1,"slice"],[1,"unit"],[10,"Error",2],[5,"Box",3],[6,"Result",4],[8,"Result",5]],"b":[]}],\
["rcublas",{"doc":"","t":"FEECNNNNNNNNNNCNNNNNNNNNNNNNNPFPPPGGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPGPPPPPPPPIPNNNNNNNNNNNNN","n":["API","Context","Error","api","asum","axpy","borrow","borrow_mut","clone","clone_into","copy","create","destroy","dot","error","fmt","from","gemm","get_pointer_mode","get_version","into","nrm2","scal","set_pointer_mode","swap","to_owned","try_from","try_into","type_id","ConjTrans","Context","Device","Host","NoTrans","Operation","PointerMode","Trans","as_c","as_c","asum","axpy","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","copy","dot","drop","eq","eq","fmt","fmt","fmt","from","from","from","from_c","from_c","from_c","gemm","get_version","id_c","into","into","into","new","nrm2","pointer_mode","scal","set_pointer_mode","swap","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","AllocFailed","ArchMismatch","Err","Error","ExecutionFailed","InternalError","InvalidValue","LicenseError","MappingError","NotInitialized","NotSupported","Ok","Result","Unknown","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","into","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"rcublas"],[29,"rcublas::api"],[91,"rcublas::error"],[118,"core::option"],[119,"core::result"],[120,"core::fmt"],[121,"core::fmt"],[122,"rcublas_sys::generated"],[123,"rcublas_sys::generated"]],"d":["Defines the cuBLAS API.","","","","Compute the sum of magnitudes of the provided vector …","Computes a vector-scalar product and adds the result to a …","","","","","Copies a vector into another vector.","Create a new cuBLAS context, allocating resources on the …","Destroys the cuBLAS context, freeing its resources.","TODO: DOC","Provides Rust Errors for every cuBLAS status.","","Returns the argument unchanged.","Performs a general matrix-matrix multiplication.","Retrieve the pointer mode for a given cuBLAS context.","Get CUBLAS Version","Calls <code>U::from(self)</code>.","TODO: DOC","TODO: DOC","Set the pointer mode for a given cuBLAS context.","TODO: DOC","","","","","","Provides a the low-level cuBLAS context.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new cuBLAS Context from its C type.","","","","","Returns the cuBLAS Context as its C type.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new cuBLAS Context by calling the low-level API.","","","","","","","","","","","","","","","","","","Failure with allocation.","Failure with the hardware architecture.","Contains the error value","Defines cuBLAS errors.","Failure with Kernel execution.","Failure with cuDNN.","Failure with provided value.","Failure CUDA License.","Failure with memory access or internal error/bug.","Failure with cuBLAS initialization.","Failure with an unsupported request.","Contains the success value","","Failure","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,8,8,8,8,8,8,8,8,8,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,11,0,12,12,11,0,0,11,12,11,1,1,1,12,11,1,12,11,1,12,11,1,12,11,1,1,1,12,11,1,12,11,1,12,11,1,12,11,1,1,1,1,12,11,1,1,1,1,1,1,1,12,11,1,12,11,1,12,11,1,12,11,6,6,19,0,6,6,6,6,6,6,6,19,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6],"f":"````{{bddf{h{f}}}{{n{jl}}}}{{bdddf{h{f}}{h{f}}}{{n{jl}}}}{ce{}{}}0{A`A`}{{ce}j{}{}}{{bddf{h{f}}{h{f}}}{{n{jl}}}}{{}{{n{bl}}}}{b{{n{jl}}}}6`{{A`Ab}Ad}{cc{}}{{bAfAffffddfdfddf}{{n{jl}}}}{b{{n{Ahl}}}}{b{{n{fl}}}}:<<{{bAh}{{n{jl}}}}8;{c{{n{e}}}{}{}}0{cAj{}}````````{AhAl}{AfAn}{{bddf{h{f}}}{{n{jl}}}}{{bdddf{h{f}}{h{f}}}{{n{jl}}}}{ce{}{}}00000{bb}{AhAh}{AfAf}{{ce}j{}{}}00{{bddf{h{f}}{h{f}}}{{n{jl}}}}6{bj}{{AhAh}B`}{{AfAf}B`}{{bAb}Ad}{{AhAb}Ad}{{AfAb}Ad}{cc{}}00{Bbb}{AlAh}{AnAf}{{bAfAffffddfdfddf}{{n{jl}}}}{bf}{bBb}{ce{}{}}00{{}{{n{bl}}}}{{bddf{h{f}}}{{n{jl}}}}{b{{n{Ahl}}}}1{{bAh}{{n{jl}}}}{{bddf{h{f}}{h{f}}}{{n{jl}}}}555{c{{n{e}}}{}{}}00000{cAj{}}00``````````````77{ll}{{ce}j{}{}}{{lAb}Ad}0{cc{}};;{cBd{}}665","c":[],"p":[[5,"Context",29],[1,"f32"],[1,"i32"],[6,"Option",118],[1,"unit"],[6,"Error",91],[6,"Result",119],[5,"API",0],[5,"Formatter",120],[8,"Result",120],[6,"Operation",29],[6,"PointerMode",29],[5,"TypeId",121],[6,"cublasPointerMode_t",122],[6,"cublasOperation_t",122],[1,"bool"],[8,"cublasHandle_t",122],[5,"String",123],[8,"Result",91]],"b":[[109,"impl-Display-for-Error"],[110,"impl-Debug-for-Error"]]}],\
["rcublas_sys",{"doc":"","t":"PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPTPPTPPPTPPPPPPPPPPPPPPPPPPPSSSSSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFFFFFFFFFFIFOPPPPOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOIIIHGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHGFHHHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHHHHHHHHHHHHHHGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHGGHHHHHHHHHHHHHHHHHHIHHHHHHHHHHIHGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHHHHHHHHHHHHHHGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHFGPPPFFFFIIGPPPPPFGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPGGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPTPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGGFPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGIFFFUFGPPPPPPPPFIFUFGPPPPPPPPPPFFFFUFFFFUFFFFFUFFFFUFIPPGGGPPPGPPPFGPPPPIGPPPGGPPPPPPPPPPPPPPPPPPGPIPPGPPPPGGPPPPPPPPPPPPPIPIGPPPPPPGPPPGPPPPPFIIFFIFIGUPPPFPPFGPPPPPPPFGPPPPPPPPPFGGPPPPPPPFGPPGPPPPPFFPPPIGPPPPFFPPPPPGGGPPPPFFIIGGFFFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFUFFFFGPPPPFGGPPPGPPPPGUPPGPPPGPPPPGIPPPPPPGIGPGIOOOOOOOOOOFOFOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOIISSSOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["CUBLAS_ATOMICS_ALLOWED","CUBLAS_ATOMICS_NOT_ALLOWED","CUBLAS_COMPUTE_16F","CUBLAS_COMPUTE_16F_PEDANTIC","CUBLAS_COMPUTE_32F","CUBLAS_COMPUTE_32F_FAST_16BF","CUBLAS_COMPUTE_32F_FAST_16F","CUBLAS_COMPUTE_32F_FAST_TF32","CUBLAS_COMPUTE_32F_PEDANTIC","CUBLAS_COMPUTE_32I","CUBLAS_COMPUTE_32I_PEDANTIC","CUBLAS_COMPUTE_64F","CUBLAS_COMPUTE_64F_PEDANTIC","CUBLAS_DEFAULT_MATH","CUBLAS_DIAG_NON_UNIT","CUBLAS_DIAG_UNIT","CUBLAS_FILL_MODE_FULL","CUBLAS_FILL_MODE_LOWER","CUBLAS_FILL_MODE_UPPER","CUBLAS_GEMM_ALGO0","CUBLAS_GEMM_ALGO0_TENSOR_OP","CUBLAS_GEMM_ALGO1","CUBLAS_GEMM_ALGO10","CUBLAS_GEMM_ALGO10_TENSOR_OP","CUBLAS_GEMM_ALGO11","CUBLAS_GEMM_ALGO11_TENSOR_OP","CUBLAS_GEMM_ALGO12","CUBLAS_GEMM_ALGO12_TENSOR_OP","CUBLAS_GEMM_ALGO13","CUBLAS_GEMM_ALGO13_TENSOR_OP","CUBLAS_GEMM_ALGO14","CUBLAS_GEMM_ALGO14_TENSOR_OP","CUBLAS_GEMM_ALGO15","CUBLAS_GEMM_ALGO15_TENSOR_OP","CUBLAS_GEMM_ALGO16","CUBLAS_GEMM_ALGO17","CUBLAS_GEMM_ALGO18","CUBLAS_GEMM_ALGO19","CUBLAS_GEMM_ALGO1_TENSOR_OP","CUBLAS_GEMM_ALGO2","CUBLAS_GEMM_ALGO20","CUBLAS_GEMM_ALGO21","CUBLAS_GEMM_ALGO22","CUBLAS_GEMM_ALGO23","CUBLAS_GEMM_ALGO2_TENSOR_OP","CUBLAS_GEMM_ALGO3","CUBLAS_GEMM_ALGO3_TENSOR_OP","CUBLAS_GEMM_ALGO4","CUBLAS_GEMM_ALGO4_TENSOR_OP","CUBLAS_GEMM_ALGO5","CUBLAS_GEMM_ALGO5_TENSOR_OP","CUBLAS_GEMM_ALGO6","CUBLAS_GEMM_ALGO6_TENSOR_OP","CUBLAS_GEMM_ALGO7","CUBLAS_GEMM_ALGO7_TENSOR_OP","CUBLAS_GEMM_ALGO8","CUBLAS_GEMM_ALGO8_TENSOR_OP","CUBLAS_GEMM_ALGO9","CUBLAS_GEMM_ALGO9_TENSOR_OP","CUBLAS_GEMM_DEFAULT","CUBLAS_GEMM_DEFAULT_TENSOR_OP","CUBLAS_GEMM_DFALT","CUBLAS_GEMM_DFALT_TENSOR_OP","CUBLAS_MATH_DISALLOW_REDUCED_PRECISION_REDUCTION","CUBLAS_OP_C","CUBLAS_OP_CONJG","CUBLAS_OP_HERMITAN","CUBLAS_OP_N","CUBLAS_OP_T","CUBLAS_PEDANTIC_MATH","CUBLAS_POINTER_MODE_DEVICE","CUBLAS_POINTER_MODE_HOST","CUBLAS_SIDE_LEFT","CUBLAS_SIDE_RIGHT","CUBLAS_STATUS_ALLOC_FAILED","CUBLAS_STATUS_ARCH_MISMATCH","CUBLAS_STATUS_EXECUTION_FAILED","CUBLAS_STATUS_INTERNAL_ERROR","CUBLAS_STATUS_INVALID_VALUE","CUBLAS_STATUS_LICENSE_ERROR","CUBLAS_STATUS_MAPPING_ERROR","CUBLAS_STATUS_NOT_INITIALIZED","CUBLAS_STATUS_NOT_SUPPORTED","CUBLAS_STATUS_SUCCESS","CUBLAS_TENSOR_OP_MATH","CUBLAS_TF32_TENSOR_OP_MATH","CUBLAS_VERSION","CUBLAS_VER_BUILD","CUBLAS_VER_MAJOR","CUBLAS_VER_MINOR","CUBLAS_VER_PATCH","CUDA_C_16BF","CUDA_C_16BF","CUDA_C_16BF","CUDA_C_16F","CUDA_C_16F","CUDA_C_16F","CUDA_C_16I","CUDA_C_16I","CUDA_C_16I","CUDA_C_16U","CUDA_C_16U","CUDA_C_16U","CUDA_C_32F","CUDA_C_32F","CUDA_C_32F","CUDA_C_32I","CUDA_C_32I","CUDA_C_32I","CUDA_C_32U","CUDA_C_32U","CUDA_C_32U","CUDA_C_4I","CUDA_C_4I","CUDA_C_4I","CUDA_C_4U","CUDA_C_4U","CUDA_C_4U","CUDA_C_64F","CUDA_C_64F","CUDA_C_64F","CUDA_C_64I","CUDA_C_64I","CUDA_C_64I","CUDA_C_64U","CUDA_C_64U","CUDA_C_64U","CUDA_C_8I","CUDA_C_8I","CUDA_C_8I","CUDA_C_8U","CUDA_C_8U","CUDA_C_8U","CUDA_R_16BF","CUDA_R_16BF","CUDA_R_16BF","CUDA_R_16F","CUDA_R_16F","CUDA_R_16F","CUDA_R_16I","CUDA_R_16I","CUDA_R_16I","CUDA_R_16U","CUDA_R_16U","CUDA_R_16U","CUDA_R_32F","CUDA_R_32F","CUDA_R_32F","CUDA_R_32I","CUDA_R_32I","CUDA_R_32I","CUDA_R_32U","CUDA_R_32U","CUDA_R_32U","CUDA_R_4I","CUDA_R_4I","CUDA_R_4I","CUDA_R_4U","CUDA_R_4U","CUDA_R_4U","CUDA_R_64F","CUDA_R_64F","CUDA_R_64F","CUDA_R_64I","CUDA_R_64I","CUDA_R_64I","CUDA_R_64U","CUDA_R_64U","CUDA_R_64U","CUDA_R_8I","CUDA_R_8I","CUDA_R_8I","CUDA_R_8U","CUDA_R_8U","CUDA_R_8U","CUevent_st","CUexternalMemory_st","CUexternalSemaphore_st","CUfunc_st","CUgraphExec_st","CUgraphNode_st","CUgraph_st","CUmemPoolHandle_st","CUstream_st","CUuserObject_st","CUuuid","CUuuid_st","ECCEnabled","None","None","Some","Some","accessDescCount","accessDescs","accessPolicyMaxWindowSize","accessPolicyWindow","accessPolicyWindow","alignment","allocType","args","array","array","asyncEngineCount","base_ptr","binaryVersion","blockDim","blockDim","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","bytes","bytesize","cacheModeCA","canMapHostMemory","canUseHostPointerForRegisteredMem","clockRate","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","computeMode","computePreemptionSupported","concurrentKernels","concurrentManagedAccess","constSizeBytes","cooperative","cooperativeLaunch","cooperativeMultiDeviceLaunch","cuComplex","cuDoubleComplex","cuFloatComplex","cublasAsumEx","cublasAtomicsMode_t","cublasAxpyEx","cublasCaxpy_v2","cublasCcopy_v2","cublasCdgmm","cublasCdotc_v2","cublasCdotu_v2","cublasCgbmv_v2","cublasCgeam","cublasCgelsBatched","cublasCgemm3m","cublasCgemm3mBatched","cublasCgemm3mEx","cublasCgemm3mStridedBatched","cublasCgemmBatched","cublasCgemmEx","cublasCgemmStridedBatched","cublasCgemm_v2","cublasCgemvBatched","cublasCgemvStridedBatched","cublasCgemv_v2","cublasCgeqrfBatched","cublasCgerc_v2","cublasCgeru_v2","cublasCgetrfBatched","cublasCgetriBatched","cublasCgetrsBatched","cublasChbmv_v2","cublasChemm_v2","cublasChemv_v2","cublasCher2_v2","cublasCher2k_v2","cublasCher_v2","cublasCherk3mEx","cublasCherkEx","cublasCherk_v2","cublasCherkx","cublasChpmv_v2","cublasChpr2_v2","cublasChpr_v2","cublasCmatinvBatched","cublasComputeType_t","cublasContext","cublasCopyEx","cublasCreate_v2","cublasCrot_v2","cublasCrotg_v2","cublasCscal_v2","cublasCsrot_v2","cublasCsscal_v2","cublasCswap_v2","cublasCsymm_v2","cublasCsymv_v2","cublasCsyr2_v2","cublasCsyr2k_v2","cublasCsyr_v2","cublasCsyrk3mEx","cublasCsyrkEx","cublasCsyrk_v2","cublasCsyrkx","cublasCtbmv_v2","cublasCtbsv_v2","cublasCtpmv_v2","cublasCtpsv_v2","cublasCtpttr","cublasCtrmm_v2","cublasCtrmv_v2","cublasCtrsmBatched","cublasCtrsm_v2","cublasCtrsv_v2","cublasCtrttp","cublasDasum_v2","cublasDataType_t","cublasDaxpy_v2","cublasDcopy_v2","cublasDdgmm","cublasDdot_v2","cublasDestroy_v2","cublasDgbmv_v2","cublasDgeam","cublasDgelsBatched","cublasDgemmBatched","cublasDgemmStridedBatched","cublasDgemm_v2","cublasDgemvBatched","cublasDgemvStridedBatched","cublasDgemv_v2","cublasDgeqrfBatched","cublasDger_v2","cublasDgetrfBatched","cublasDgetriBatched","cublasDgetrsBatched","cublasDiagType_t","cublasDmatinvBatched","cublasDnrm2_v2","cublasDotEx","cublasDotcEx","cublasDrot_v2","cublasDrotg_v2","cublasDrotm_v2","cublasDrotmg_v2","cublasDsbmv_v2","cublasDscal_v2","cublasDspmv_v2","cublasDspr2_v2","cublasDspr_v2","cublasDswap_v2","cublasDsymm_v2","cublasDsymv_v2","cublasDsyr2_v2","cublasDsyr2k_v2","cublasDsyr_v2","cublasDsyrk_v2","cublasDsyrkx","cublasDtbmv_v2","cublasDtbsv_v2","cublasDtpmv_v2","cublasDtpsv_v2","cublasDtpttr","cublasDtrmm_v2","cublasDtrmv_v2","cublasDtrsmBatched","cublasDtrsm_v2","cublasDtrsv_v2","cublasDtrttp","cublasDzasum_v2","cublasDznrm2_v2","cublasFillMode_t","cublasGemmAlgo_t","cublasGemmBatchedEx","cublasGemmEx","cublasGemmStridedBatchedEx","cublasGetAtomicsMode","cublasGetCudartVersion","cublasGetLoggerCallback","cublasGetMathMode","cublasGetMatrix","cublasGetMatrixAsync","cublasGetPointerMode_v2","cublasGetProperty","cublasGetSmCountTarget","cublasGetStatusName","cublasGetStatusString","cublasGetStream_v2","cublasGetVector","cublasGetVectorAsync","cublasGetVersion_v2","cublasHandle_t","cublasIamaxEx","cublasIaminEx","cublasIcamax_v2","cublasIcamin_v2","cublasIdamax_v2","cublasIdamin_v2","cublasIsamax_v2","cublasIsamin_v2","cublasIzamax_v2","cublasIzamin_v2","cublasLogCallback","cublasLoggerConfigure","cublasMath_t","cublasNrm2Ex","cublasOperation_t","cublasPointerMode_t","cublasRotEx","cublasRotgEx","cublasRotmEx","cublasRotmgEx","cublasSasum_v2","cublasSaxpy_v2","cublasScalEx","cublasScasum_v2","cublasScnrm2_v2","cublasScopy_v2","cublasSdgmm","cublasSdot_v2","cublasSetAtomicsMode","cublasSetLoggerCallback","cublasSetMathMode","cublasSetMatrix","cublasSetMatrixAsync","cublasSetPointerMode_v2","cublasSetSmCountTarget","cublasSetStream_v2","cublasSetVector","cublasSetVectorAsync","cublasSetWorkspace_v2","cublasSgbmv_v2","cublasSgeam","cublasSgelsBatched","cublasSgemmBatched","cublasSgemmEx","cublasSgemmStridedBatched","cublasSgemm_v2","cublasSgemvBatched","cublasSgemvStridedBatched","cublasSgemv_v2","cublasSgeqrfBatched","cublasSger_v2","cublasSgetrfBatched","cublasSgetriBatched","cublasSgetrsBatched","cublasSideMode_t","cublasSmatinvBatched","cublasSnrm2_v2","cublasSrot_v2","cublasSrotg_v2","cublasSrotm_v2","cublasSrotmg_v2","cublasSsbmv_v2","cublasSscal_v2","cublasSspmv_v2","cublasSspr2_v2","cublasSspr_v2","cublasSswap_v2","cublasSsymm_v2","cublasSsymv_v2","cublasSsyr2_v2","cublasSsyr2k_v2","cublasSsyr_v2","cublasSsyrk_v2","cublasSsyrkx","cublasStatus_t","cublasStbmv_v2","cublasStbsv_v2","cublasStpmv_v2","cublasStpsv_v2","cublasStpttr","cublasStrmm_v2","cublasStrmv_v2","cublasStrsmBatched","cublasStrsm_v2","cublasStrsv_v2","cublasStrttp","cublasSwapEx","cublasUint8gemmBias","cublasXerbla","cublasZaxpy_v2","cublasZcopy_v2","cublasZdgmm","cublasZdotc_v2","cublasZdotu_v2","cublasZdrot_v2","cublasZdscal_v2","cublasZgbmv_v2","cublasZgeam","cublasZgelsBatched","cublasZgemm3m","cublasZgemmBatched","cublasZgemmStridedBatched","cublasZgemm_v2","cublasZgemvBatched","cublasZgemvStridedBatched","cublasZgemv_v2","cublasZgeqrfBatched","cublasZgerc_v2","cublasZgeru_v2","cublasZgetrfBatched","cublasZgetriBatched","cublasZgetrsBatched","cublasZhbmv_v2","cublasZhemm_v2","cublasZhemv_v2","cublasZher2_v2","cublasZher2k_v2","cublasZher_v2","cublasZherk_v2","cublasZherkx","cublasZhpmv_v2","cublasZhpr2_v2","cublasZhpr_v2","cublasZmatinvBatched","cublasZrot_v2","cublasZrotg_v2","cublasZscal_v2","cublasZswap_v2","cublasZsymm_v2","cublasZsymv_v2","cublasZsyr2_v2","cublasZsyr2k_v2","cublasZsyr_v2","cublasZsyrk_v2","cublasZsyrkx","cublasZtbmv_v2","cublasZtbsv_v2","cublasZtpmv_v2","cublasZtpsv_v2","cublasZtpttr","cublasZtrmm_v2","cublasZtrmv_v2","cublasZtrsmBatched","cublasZtrsm_v2","cublasZtrsv_v2","cublasZtrttp","cudaAccessPolicyWindow","cudaAccessProperty","cudaAccessPropertyNormal","cudaAccessPropertyPersisting","cudaAccessPropertyStreaming","cudaArray","cudaArrayMemoryRequirements","cudaArraySparseProperties","cudaArraySparseProperties__bindgen_ty_1","cudaArray_const_t","cudaArray_t","cudaCGScope","cudaCGScopeGrid","cudaCGScopeInvalid","cudaCGScopeMultiGrid","cudaCSV","cudaCSV","cudaChannelFormatDesc","cudaChannelFormatKind","cudaChannelFormatKindFloat","cudaChannelFormatKindNV12","cudaChannelFormatKindNone","cudaChannelFormatKindSigned","cudaChannelFormatKindSignedBlockCompressed4","cudaChannelFormatKindSignedBlockCompressed5","cudaChannelFormatKindSignedBlockCompressed6H","cudaChannelFormatKindSignedNormalized16X1","cudaChannelFormatKindSignedNormalized16X2","cudaChannelFormatKindSignedNormalized16X4","cudaChannelFormatKindSignedNormalized8X1","cudaChannelFormatKindSignedNormalized8X2","cudaChannelFormatKindSignedNormalized8X4","cudaChannelFormatKindUnsigned","cudaChannelFormatKindUnsignedBlockCompressed1","cudaChannelFormatKindUnsignedBlockCompressed1SRGB","cudaChannelFormatKindUnsignedBlockCompressed2","cudaChannelFormatKindUnsignedBlockCompressed2SRGB","cudaChannelFormatKindUnsignedBlockCompressed3","cudaChannelFormatKindUnsignedBlockCompressed3SRGB","cudaChannelFormatKindUnsignedBlockCompressed4","cudaChannelFormatKindUnsignedBlockCompressed5","cudaChannelFormatKindUnsignedBlockCompressed6H","cudaChannelFormatKindUnsignedBlockCompressed7","cudaChannelFormatKindUnsignedBlockCompressed7SRGB","cudaChannelFormatKindUnsignedNormalized16X1","cudaChannelFormatKindUnsignedNormalized16X2","cudaChannelFormatKindUnsignedNormalized16X4","cudaChannelFormatKindUnsignedNormalized8X1","cudaChannelFormatKindUnsignedNormalized8X2","cudaChannelFormatKindUnsignedNormalized8X4","cudaComputeMode","cudaComputeModeDefault","cudaComputeModeExclusive","cudaComputeModeExclusiveProcess","cudaComputeModeProhibited","cudaDataType","cudaDataType_t","cudaDevAttrAsyncEngineCount","cudaDevAttrCanFlushRemoteWrites","cudaDevAttrCanMapHostMemory","cudaDevAttrCanUseHostPointerForRegisteredMem","cudaDevAttrClockRate","cudaDevAttrComputeCapabilityMajor","cudaDevAttrComputeCapabilityMinor","cudaDevAttrComputeMode","cudaDevAttrComputePreemptionSupported","cudaDevAttrConcurrentKernels","cudaDevAttrConcurrentManagedAccess","cudaDevAttrCooperativeLaunch","cudaDevAttrCooperativeMultiDeviceLaunch","cudaDevAttrDeferredMappingCudaArraySupported","cudaDevAttrDirectManagedMemAccessFromHost","cudaDevAttrEccEnabled","cudaDevAttrGPUDirectRDMAFlushWritesOptions","cudaDevAttrGPUDirectRDMASupported","cudaDevAttrGPUDirectRDMAWritesOrdering","cudaDevAttrGlobalL1CacheSupported","cudaDevAttrGlobalMemoryBusWidth","cudaDevAttrGpuOverlap","cudaDevAttrHostNativeAtomicSupported","cudaDevAttrHostRegisterReadOnlySupported","cudaDevAttrHostRegisterSupported","cudaDevAttrIntegrated","cudaDevAttrIsMultiGpuBoard","cudaDevAttrKernelExecTimeout","cudaDevAttrL2CacheSize","cudaDevAttrLocalL1CacheSupported","cudaDevAttrManagedMemory","cudaDevAttrMax","cudaDevAttrMaxAccessPolicyWindowSize","cudaDevAttrMaxBlockDimX","cudaDevAttrMaxBlockDimY","cudaDevAttrMaxBlockDimZ","cudaDevAttrMaxBlocksPerMultiprocessor","cudaDevAttrMaxGridDimX","cudaDevAttrMaxGridDimY","cudaDevAttrMaxGridDimZ","cudaDevAttrMaxPersistingL2CacheSize","cudaDevAttrMaxPitch","cudaDevAttrMaxRegistersPerBlock","cudaDevAttrMaxRegistersPerMultiprocessor","cudaDevAttrMaxSharedMemoryPerBlock","cudaDevAttrMaxSharedMemoryPerBlockOptin","cudaDevAttrMaxSharedMemoryPerMultiprocessor","cudaDevAttrMaxSurface1DLayeredLayers","cudaDevAttrMaxSurface1DLayeredWidth","cudaDevAttrMaxSurface1DWidth","cudaDevAttrMaxSurface2DHeight","cudaDevAttrMaxSurface2DLayeredHeight","cudaDevAttrMaxSurface2DLayeredLayers","cudaDevAttrMaxSurface2DLayeredWidth","cudaDevAttrMaxSurface2DWidth","cudaDevAttrMaxSurface3DDepth","cudaDevAttrMaxSurface3DHeight","cudaDevAttrMaxSurface3DWidth","cudaDevAttrMaxSurfaceCubemapLayeredLayers","cudaDevAttrMaxSurfaceCubemapLayeredWidth","cudaDevAttrMaxSurfaceCubemapWidth","cudaDevAttrMaxTexture1DLayeredLayers","cudaDevAttrMaxTexture1DLayeredWidth","cudaDevAttrMaxTexture1DLinearWidth","cudaDevAttrMaxTexture1DMipmappedWidth","cudaDevAttrMaxTexture1DWidth","cudaDevAttrMaxTexture2DGatherHeight","cudaDevAttrMaxTexture2DGatherWidth","cudaDevAttrMaxTexture2DHeight","cudaDevAttrMaxTexture2DLayeredHeight","cudaDevAttrMaxTexture2DLayeredLayers","cudaDevAttrMaxTexture2DLayeredWidth","cudaDevAttrMaxTexture2DLinearHeight","cudaDevAttrMaxTexture2DLinearPitch","cudaDevAttrMaxTexture2DLinearWidth","cudaDevAttrMaxTexture2DMipmappedHeight","cudaDevAttrMaxTexture2DMipmappedWidth","cudaDevAttrMaxTexture2DWidth","cudaDevAttrMaxTexture3DDepth","cudaDevAttrMaxTexture3DDepthAlt","cudaDevAttrMaxTexture3DHeight","cudaDevAttrMaxTexture3DHeightAlt","cudaDevAttrMaxTexture3DWidth","cudaDevAttrMaxTexture3DWidthAlt","cudaDevAttrMaxTextureCubemapLayeredLayers","cudaDevAttrMaxTextureCubemapLayeredWidth","cudaDevAttrMaxTextureCubemapWidth","cudaDevAttrMaxThreadsPerBlock","cudaDevAttrMaxThreadsPerMultiProcessor","cudaDevAttrMaxTimelineSemaphoreInteropSupported","cudaDevAttrMemoryClockRate","cudaDevAttrMemoryPoolSupportedHandleTypes","cudaDevAttrMemoryPoolsSupported","cudaDevAttrMultiGpuBoardGroupID","cudaDevAttrMultiProcessorCount","cudaDevAttrPageableMemoryAccess","cudaDevAttrPageableMemoryAccessUsesHostPageTables","cudaDevAttrPciBusId","cudaDevAttrPciDeviceId","cudaDevAttrPciDomainId","cudaDevAttrReserved92","cudaDevAttrReserved93","cudaDevAttrReserved94","cudaDevAttrReservedSharedMemoryPerBlock","cudaDevAttrSingleToDoublePrecisionPerfRatio","cudaDevAttrSparseCudaArraySupported","cudaDevAttrStreamPrioritiesSupported","cudaDevAttrSurfaceAlignment","cudaDevAttrTccDriver","cudaDevAttrTextureAlignment","cudaDevAttrTexturePitchAlignment","cudaDevAttrTimelineSemaphoreInteropSupported","cudaDevAttrTotalConstantMemory","cudaDevAttrUnifiedAddressing","cudaDevAttrWarpSize","cudaDevP2PAttrAccessSupported","cudaDevP2PAttrCudaArrayAccessSupported","cudaDevP2PAttrNativeAtomicSupported","cudaDevP2PAttrPerformanceRank","cudaDeviceAttr","cudaDeviceP2PAttr","cudaDeviceProp","cudaEnableDefault","cudaEnableLegacyStream","cudaEnablePerThreadDefaultStream","cudaError","cudaErrorAddressOfConstant","cudaErrorAddressOfConstant","cudaErrorAlreadyAcquired","cudaErrorAlreadyAcquired","cudaErrorAlreadyMapped","cudaErrorAlreadyMapped","cudaErrorApiFailureBase","cudaErrorApiFailureBase","cudaErrorArrayIsMapped","cudaErrorArrayIsMapped","cudaErrorAssert","cudaErrorAssert","cudaErrorCallRequiresNewerDriver","cudaErrorCallRequiresNewerDriver","cudaErrorCapturedEvent","cudaErrorCapturedEvent","cudaErrorCompatNotSupportedOnDevice","cudaErrorCompatNotSupportedOnDevice","cudaErrorContextIsDestroyed","cudaErrorContextIsDestroyed","cudaErrorCooperativeLaunchTooLarge","cudaErrorCooperativeLaunchTooLarge","cudaErrorCudartUnloading","cudaErrorCudartUnloading","cudaErrorDeviceAlreadyInUse","cudaErrorDeviceAlreadyInUse","cudaErrorDeviceNotLicensed","cudaErrorDeviceNotLicensed","cudaErrorDeviceUninitialized","cudaErrorDeviceUninitialized","cudaErrorDevicesUnavailable","cudaErrorDevicesUnavailable","cudaErrorDuplicateSurfaceName","cudaErrorDuplicateSurfaceName","cudaErrorDuplicateTextureName","cudaErrorDuplicateTextureName","cudaErrorDuplicateVariableName","cudaErrorDuplicateVariableName","cudaErrorECCUncorrectable","cudaErrorECCUncorrectable","cudaErrorExternalDevice","cudaErrorExternalDevice","cudaErrorFileNotFound","cudaErrorFileNotFound","cudaErrorGraphExecUpdateFailure","cudaErrorGraphExecUpdateFailure","cudaErrorHardwareStackError","cudaErrorHardwareStackError","cudaErrorHostMemoryAlreadyRegistered","cudaErrorHostMemoryAlreadyRegistered","cudaErrorHostMemoryNotRegistered","cudaErrorHostMemoryNotRegistered","cudaErrorIllegalAddress","cudaErrorIllegalAddress","cudaErrorIllegalInstruction","cudaErrorIllegalInstruction","cudaErrorIllegalState","cudaErrorIllegalState","cudaErrorIncompatibleDriverContext","cudaErrorIncompatibleDriverContext","cudaErrorInitializationError","cudaErrorInitializationError","cudaErrorInsufficientDriver","cudaErrorInsufficientDriver","cudaErrorInvalidAddressSpace","cudaErrorInvalidAddressSpace","cudaErrorInvalidChannelDescriptor","cudaErrorInvalidChannelDescriptor","cudaErrorInvalidConfiguration","cudaErrorInvalidConfiguration","cudaErrorInvalidDevice","cudaErrorInvalidDevice","cudaErrorInvalidDeviceFunction","cudaErrorInvalidDeviceFunction","cudaErrorInvalidDevicePointer","cudaErrorInvalidDevicePointer","cudaErrorInvalidFilterSetting","cudaErrorInvalidFilterSetting","cudaErrorInvalidGraphicsContext","cudaErrorInvalidGraphicsContext","cudaErrorInvalidHostPointer","cudaErrorInvalidHostPointer","cudaErrorInvalidKernelImage","cudaErrorInvalidKernelImage","cudaErrorInvalidMemcpyDirection","cudaErrorInvalidMemcpyDirection","cudaErrorInvalidNormSetting","cudaErrorInvalidNormSetting","cudaErrorInvalidPc","cudaErrorInvalidPc","cudaErrorInvalidPitchValue","cudaErrorInvalidPitchValue","cudaErrorInvalidPtx","cudaErrorInvalidPtx","cudaErrorInvalidResourceHandle","cudaErrorInvalidResourceHandle","cudaErrorInvalidSource","cudaErrorInvalidSource","cudaErrorInvalidSurface","cudaErrorInvalidSurface","cudaErrorInvalidSymbol","cudaErrorInvalidSymbol","cudaErrorInvalidTexture","cudaErrorInvalidTexture","cudaErrorInvalidTextureBinding","cudaErrorInvalidTextureBinding","cudaErrorInvalidValue","cudaErrorInvalidValue","cudaErrorJitCompilationDisabled","cudaErrorJitCompilationDisabled","cudaErrorJitCompilerNotFound","cudaErrorJitCompilerNotFound","cudaErrorLaunchFailure","cudaErrorLaunchFailure","cudaErrorLaunchFileScopedSurf","cudaErrorLaunchFileScopedSurf","cudaErrorLaunchFileScopedTex","cudaErrorLaunchFileScopedTex","cudaErrorLaunchIncompatibleTexturing","cudaErrorLaunchIncompatibleTexturing","cudaErrorLaunchMaxDepthExceeded","cudaErrorLaunchMaxDepthExceeded","cudaErrorLaunchOutOfResources","cudaErrorLaunchOutOfResources","cudaErrorLaunchPendingCountExceeded","cudaErrorLaunchPendingCountExceeded","cudaErrorLaunchTimeout","cudaErrorLaunchTimeout","cudaErrorMapBufferObjectFailed","cudaErrorMapBufferObjectFailed","cudaErrorMemoryAllocation","cudaErrorMemoryAllocation","cudaErrorMemoryValueTooLarge","cudaErrorMemoryValueTooLarge","cudaErrorMisalignedAddress","cudaErrorMisalignedAddress","cudaErrorMissingConfiguration","cudaErrorMissingConfiguration","cudaErrorMixedDeviceExecution","cudaErrorMixedDeviceExecution","cudaErrorMpsConnectionFailed","cudaErrorMpsConnectionFailed","cudaErrorMpsMaxClientsReached","cudaErrorMpsMaxClientsReached","cudaErrorMpsMaxConnectionsReached","cudaErrorMpsMaxConnectionsReached","cudaErrorMpsRpcFailure","cudaErrorMpsRpcFailure","cudaErrorMpsServerNotReady","cudaErrorMpsServerNotReady","cudaErrorNoDevice","cudaErrorNoDevice","cudaErrorNoKernelImageForDevice","cudaErrorNoKernelImageForDevice","cudaErrorNotMapped","cudaErrorNotMapped","cudaErrorNotMappedAsArray","cudaErrorNotMappedAsArray","cudaErrorNotMappedAsPointer","cudaErrorNotMappedAsPointer","cudaErrorNotPermitted","cudaErrorNotPermitted","cudaErrorNotReady","cudaErrorNotReady","cudaErrorNotSupported","cudaErrorNotSupported","cudaErrorNotYetImplemented","cudaErrorNotYetImplemented","cudaErrorNvlinkUncorrectable","cudaErrorNvlinkUncorrectable","cudaErrorOperatingSystem","cudaErrorOperatingSystem","cudaErrorPeerAccessAlreadyEnabled","cudaErrorPeerAccessAlreadyEnabled","cudaErrorPeerAccessNotEnabled","cudaErrorPeerAccessNotEnabled","cudaErrorPeerAccessUnsupported","cudaErrorPeerAccessUnsupported","cudaErrorPriorLaunchFailure","cudaErrorPriorLaunchFailure","cudaErrorProfilerAlreadyStarted","cudaErrorProfilerAlreadyStarted","cudaErrorProfilerAlreadyStopped","cudaErrorProfilerAlreadyStopped","cudaErrorProfilerDisabled","cudaErrorProfilerDisabled","cudaErrorProfilerNotInitialized","cudaErrorProfilerNotInitialized","cudaErrorSetOnActiveProcess","cudaErrorSetOnActiveProcess","cudaErrorSharedObjectInitFailed","cudaErrorSharedObjectInitFailed","cudaErrorSharedObjectSymbolNotFound","cudaErrorSharedObjectSymbolNotFound","cudaErrorSoftwareValidityNotEstablished","cudaErrorSoftwareValidityNotEstablished","cudaErrorStartupFailure","cudaErrorStartupFailure","cudaErrorStreamCaptureImplicit","cudaErrorStreamCaptureImplicit","cudaErrorStreamCaptureInvalidated","cudaErrorStreamCaptureInvalidated","cudaErrorStreamCaptureIsolation","cudaErrorStreamCaptureIsolation","cudaErrorStreamCaptureMerge","cudaErrorStreamCaptureMerge","cudaErrorStreamCaptureUnjoined","cudaErrorStreamCaptureUnjoined","cudaErrorStreamCaptureUnmatched","cudaErrorStreamCaptureUnmatched","cudaErrorStreamCaptureUnsupported","cudaErrorStreamCaptureUnsupported","cudaErrorStreamCaptureWrongThread","cudaErrorStreamCaptureWrongThread","cudaErrorStubLibrary","cudaErrorStubLibrary","cudaErrorSymbolNotFound","cudaErrorSymbolNotFound","cudaErrorSyncDepthExceeded","cudaErrorSyncDepthExceeded","cudaErrorSynchronizationError","cudaErrorSynchronizationError","cudaErrorSystemDriverMismatch","cudaErrorSystemDriverMismatch","cudaErrorSystemNotReady","cudaErrorSystemNotReady","cudaErrorTextureFetchFailed","cudaErrorTextureFetchFailed","cudaErrorTextureNotBound","cudaErrorTextureNotBound","cudaErrorTimeout","cudaErrorTimeout","cudaErrorTooManyPeers","cudaErrorTooManyPeers","cudaErrorUnknown","cudaErrorUnknown","cudaErrorUnmapBufferObjectFailed","cudaErrorUnmapBufferObjectFailed","cudaErrorUnsupportedExecAffinity","cudaErrorUnsupportedExecAffinity","cudaErrorUnsupportedLimit","cudaErrorUnsupportedLimit","cudaErrorUnsupportedPtxVersion","cudaErrorUnsupportedPtxVersion","cudaError_t","cudaEvent_t","cudaExtent","cudaExternalMemoryBufferDesc","cudaExternalMemoryHandleDesc","cudaExternalMemoryHandleDesc__bindgen_ty_1","cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1","cudaExternalMemoryHandleType","cudaExternalMemoryHandleTypeD3D11Resource","cudaExternalMemoryHandleTypeD3D11ResourceKmt","cudaExternalMemoryHandleTypeD3D12Heap","cudaExternalMemoryHandleTypeD3D12Resource","cudaExternalMemoryHandleTypeNvSciBuf","cudaExternalMemoryHandleTypeOpaqueFd","cudaExternalMemoryHandleTypeOpaqueWin32","cudaExternalMemoryHandleTypeOpaqueWin32Kmt","cudaExternalMemoryMipmappedArrayDesc","cudaExternalMemory_t","cudaExternalSemaphoreHandleDesc","cudaExternalSemaphoreHandleDesc__bindgen_ty_1","cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreHandleType","cudaExternalSemaphoreHandleTypeD3D11Fence","cudaExternalSemaphoreHandleTypeD3D12Fence","cudaExternalSemaphoreHandleTypeKeyedMutex","cudaExternalSemaphoreHandleTypeKeyedMutexKmt","cudaExternalSemaphoreHandleTypeNvSciSync","cudaExternalSemaphoreHandleTypeOpaqueFd","cudaExternalSemaphoreHandleTypeOpaqueWin32","cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt","cudaExternalSemaphoreHandleTypeTimelineSemaphoreFd","cudaExternalSemaphoreHandleTypeTimelineSemaphoreWin32","cudaExternalSemaphoreSignalNodeParams","cudaExternalSemaphoreSignalParams","cudaExternalSemaphoreSignalParams__bindgen_ty_1","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphoreSignalParams_v1","cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1","cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphoreWaitNodeParams","cudaExternalSemaphoreWaitParams","cudaExternalSemaphoreWaitParams__bindgen_ty_1","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphoreWaitParams_v1","cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1","cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphore_t","cudaFlushGPUDirectRDMAWritesOptionHost","cudaFlushGPUDirectRDMAWritesOptionMemOps","cudaFlushGPUDirectRDMAWritesOptions","cudaFlushGPUDirectRDMAWritesScope","cudaFlushGPUDirectRDMAWritesTarget","cudaFlushGPUDirectRDMAWritesTargetCurrentDevice","cudaFlushGPUDirectRDMAWritesToAllDevices","cudaFlushGPUDirectRDMAWritesToOwner","cudaFuncAttribute","cudaFuncAttributeMax","cudaFuncAttributeMaxDynamicSharedMemorySize","cudaFuncAttributePreferredSharedMemoryCarveout","cudaFuncAttributes","cudaFuncCache","cudaFuncCachePreferEqual","cudaFuncCachePreferL1","cudaFuncCachePreferNone","cudaFuncCachePreferShared","cudaFunction_t","cudaGPUDirectRDMAWritesOrdering","cudaGPUDirectRDMAWritesOrderingAllDevices","cudaGPUDirectRDMAWritesOrderingNone","cudaGPUDirectRDMAWritesOrderingOwner","cudaGetDriverEntryPointFlags","cudaGraphDebugDotFlags","cudaGraphDebugDotFlagsEventNodeParams","cudaGraphDebugDotFlagsExtSemasSignalNodeParams","cudaGraphDebugDotFlagsExtSemasWaitNodeParams","cudaGraphDebugDotFlagsHandles","cudaGraphDebugDotFlagsHostNodeParams","cudaGraphDebugDotFlagsKernelNodeAttributes","cudaGraphDebugDotFlagsKernelNodeParams","cudaGraphDebugDotFlagsMemcpyNodeParams","cudaGraphDebugDotFlagsMemsetNodeParams","cudaGraphDebugDotFlagsVerbose","cudaGraphExecUpdateError","cudaGraphExecUpdateErrorAttributesChanged","cudaGraphExecUpdateErrorFunctionChanged","cudaGraphExecUpdateErrorNodeTypeChanged","cudaGraphExecUpdateErrorNotSupported","cudaGraphExecUpdateErrorParametersChanged","cudaGraphExecUpdateErrorTopologyChanged","cudaGraphExecUpdateErrorUnsupportedFunctionChange","cudaGraphExecUpdateResult","cudaGraphExecUpdateSuccess","cudaGraphExec_t","cudaGraphInstantiateFlagAutoFreeOnLaunch","cudaGraphInstantiateFlagUseNodePriority","cudaGraphInstantiateFlags","cudaGraphMemAttrReservedMemCurrent","cudaGraphMemAttrReservedMemHigh","cudaGraphMemAttrUsedMemCurrent","cudaGraphMemAttrUsedMemHigh","cudaGraphMemAttributeType","cudaGraphNodeType","cudaGraphNodeTypeCount","cudaGraphNodeTypeEmpty","cudaGraphNodeTypeEventRecord","cudaGraphNodeTypeExtSemaphoreSignal","cudaGraphNodeTypeExtSemaphoreWait","cudaGraphNodeTypeGraph","cudaGraphNodeTypeHost","cudaGraphNodeTypeKernel","cudaGraphNodeTypeMemAlloc","cudaGraphNodeTypeMemFree","cudaGraphNodeTypeMemcpy","cudaGraphNodeTypeMemset","cudaGraphNodeTypeWaitEvent","cudaGraphNode_t","cudaGraphUserObjectMove","cudaGraph_t","cudaGraphicsCubeFace","cudaGraphicsCubeFaceNegativeX","cudaGraphicsCubeFaceNegativeY","cudaGraphicsCubeFaceNegativeZ","cudaGraphicsCubeFacePositiveX","cudaGraphicsCubeFacePositiveY","cudaGraphicsCubeFacePositiveZ","cudaGraphicsMapFlags","cudaGraphicsMapFlagsNone","cudaGraphicsMapFlagsReadOnly","cudaGraphicsMapFlagsWriteDiscard","cudaGraphicsRegisterFlags","cudaGraphicsRegisterFlagsNone","cudaGraphicsRegisterFlagsReadOnly","cudaGraphicsRegisterFlagsSurfaceLoadStore","cudaGraphicsRegisterFlagsTextureGather","cudaGraphicsRegisterFlagsWriteDiscard","cudaGraphicsResource","cudaGraphicsResource_t","cudaHostFn_t","cudaHostNodeParams","cudaIpcEventHandle_st","cudaIpcEventHandle_t","cudaIpcMemHandle_st","cudaIpcMemHandle_t","cudaKernelNodeAttrID","cudaKernelNodeAttrValue","cudaKernelNodeAttributeAccessPolicyWindow","cudaKernelNodeAttributeCooperative","cudaKernelNodeAttributePriority","cudaKernelNodeParams","cudaKeyValuePair","cudaKeyValuePair","cudaLaunchParams","cudaLimit","cudaLimitDevRuntimePendingLaunchCount","cudaLimitDevRuntimeSyncDepth","cudaLimitMallocHeapSize","cudaLimitMaxL2FetchGranularity","cudaLimitPersistingL2CacheSize","cudaLimitPrintfFifoSize","cudaLimitStackSize","cudaMemAccessDesc","cudaMemAccessFlags","cudaMemAccessFlagsProtNone","cudaMemAccessFlagsProtRead","cudaMemAccessFlagsProtReadWrite","cudaMemAdviseSetAccessedBy","cudaMemAdviseSetPreferredLocation","cudaMemAdviseSetReadMostly","cudaMemAdviseUnsetAccessedBy","cudaMemAdviseUnsetPreferredLocation","cudaMemAdviseUnsetReadMostly","cudaMemAllocNodeParams","cudaMemAllocationHandleType","cudaMemAllocationType","cudaMemAllocationTypeInvalid","cudaMemAllocationTypeMax","cudaMemAllocationTypePinned","cudaMemHandleTypeNone","cudaMemHandleTypePosixFileDescriptor","cudaMemHandleTypeWin32","cudaMemHandleTypeWin32Kmt","cudaMemLocation","cudaMemLocationType","cudaMemLocationTypeDevice","cudaMemLocationTypeInvalid","cudaMemPoolAttr","cudaMemPoolAttrReleaseThreshold","cudaMemPoolAttrReservedMemCurrent","cudaMemPoolAttrReservedMemHigh","cudaMemPoolAttrUsedMemCurrent","cudaMemPoolAttrUsedMemHigh","cudaMemPoolProps","cudaMemPoolPtrExportData","cudaMemPoolReuseAllowInternalDependencies","cudaMemPoolReuseAllowOpportunistic","cudaMemPoolReuseFollowEventDependencies","cudaMemPool_t","cudaMemRangeAttribute","cudaMemRangeAttributeAccessedBy","cudaMemRangeAttributeLastPrefetchLocation","cudaMemRangeAttributePreferredLocation","cudaMemRangeAttributeReadMostly","cudaMemcpy3DParms","cudaMemcpy3DPeerParms","cudaMemcpyDefault","cudaMemcpyDeviceToDevice","cudaMemcpyDeviceToHost","cudaMemcpyHostToDevice","cudaMemcpyHostToHost","cudaMemcpyKind","cudaMemoryAdvise","cudaMemoryType","cudaMemoryTypeDevice","cudaMemoryTypeHost","cudaMemoryTypeManaged","cudaMemoryTypeUnregistered","cudaMemsetParams","cudaMipmappedArray","cudaMipmappedArray_const_t","cudaMipmappedArray_t","cudaOutputMode","cudaOutputMode_t","cudaPitchedPtr","cudaPointerAttributes","cudaPos","cudaResViewFormatFloat1","cudaResViewFormatFloat2","cudaResViewFormatFloat4","cudaResViewFormatHalf1","cudaResViewFormatHalf2","cudaResViewFormatHalf4","cudaResViewFormatNone","cudaResViewFormatSignedBlockCompressed4","cudaResViewFormatSignedBlockCompressed5","cudaResViewFormatSignedBlockCompressed6H","cudaResViewFormatSignedChar1","cudaResViewFormatSignedChar2","cudaResViewFormatSignedChar4","cudaResViewFormatSignedInt1","cudaResViewFormatSignedInt2","cudaResViewFormatSignedInt4","cudaResViewFormatSignedShort1","cudaResViewFormatSignedShort2","cudaResViewFormatSignedShort4","cudaResViewFormatUnsignedBlockCompressed1","cudaResViewFormatUnsignedBlockCompressed2","cudaResViewFormatUnsignedBlockCompressed3","cudaResViewFormatUnsignedBlockCompressed4","cudaResViewFormatUnsignedBlockCompressed5","cudaResViewFormatUnsignedBlockCompressed6H","cudaResViewFormatUnsignedBlockCompressed7","cudaResViewFormatUnsignedChar1","cudaResViewFormatUnsignedChar2","cudaResViewFormatUnsignedChar4","cudaResViewFormatUnsignedInt1","cudaResViewFormatUnsignedInt2","cudaResViewFormatUnsignedInt4","cudaResViewFormatUnsignedShort1","cudaResViewFormatUnsignedShort2","cudaResViewFormatUnsignedShort4","cudaResourceDesc","cudaResourceDesc__bindgen_ty_1","cudaResourceDesc__bindgen_ty_1__bindgen_ty_1","cudaResourceDesc__bindgen_ty_1__bindgen_ty_2","cudaResourceDesc__bindgen_ty_1__bindgen_ty_3","cudaResourceDesc__bindgen_ty_1__bindgen_ty_4","cudaResourceType","cudaResourceTypeArray","cudaResourceTypeLinear","cudaResourceTypeMipmappedArray","cudaResourceTypePitch2D","cudaResourceViewDesc","cudaResourceViewFormat","cudaSharedCarveout","cudaSharedMemBankSizeDefault","cudaSharedMemBankSizeEightByte","cudaSharedMemBankSizeFourByte","cudaSharedMemConfig","cudaSharedmemCarveoutDefault","cudaSharedmemCarveoutMaxL1","cudaSharedmemCarveoutMaxShared","cudaStreamAddCaptureDependencies","cudaStreamAttrID","cudaStreamAttrValue","cudaStreamAttributeAccessPolicyWindow","cudaStreamAttributeSynchronizationPolicy","cudaStreamCaptureMode","cudaStreamCaptureModeGlobal","cudaStreamCaptureModeRelaxed","cudaStreamCaptureModeThreadLocal","cudaStreamCaptureStatus","cudaStreamCaptureStatusActive","cudaStreamCaptureStatusInvalidated","cudaStreamCaptureStatusNone","cudaStreamSetCaptureDependencies","cudaStreamUpdateCaptureDependenciesFlags","cudaStream_t","cudaSuccess","cudaSuccess","cudaSyncPolicyAuto","cudaSyncPolicyBlockingSync","cudaSyncPolicySpin","cudaSyncPolicyYield","cudaSynchronizationPolicy","cudaUUID_t","cudaUserObjectFlags","cudaUserObjectNoDestructorSync","cudaUserObjectRetainFlags","cudaUserObject_t","depth","depth","depth","desc","desc","devPtr","devPtr","device","deviceOverlap","devicePointer","dim3","directManagedMemAccessFromHost","double2","dptr","dst","dstArray","dstArray","dstDevice","dstPos","dstPos","dstPtr","dstPtr","elementSize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extSemArray","extSemArray","extent","extent","extent","extra","f","fd","fd","fence","fence","fence","fence","fence","fence","fence","fence","firstLayer","firstMipmapLevel","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","float2","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_","format","formatDesc","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","func","globalL1CacheSupported","gridDim","gridDim","handle","handle","handle","handle","handleTypes","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","height","hitProp","hitRatio","hostNativeAtomicSupported","hostPointer","id","integrated","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","isMultiGpuBoard","kernelExecTimeoutEnabled","kernelParams","key","key","key","key","keyedMutex","keyedMutex","keyedMutex","keyedMutex","kind","l2CacheSize","lastLayer","lastMipmapLevel","libraryPropertyType","libraryPropertyType_t","libraryPropertyType_t_MAJOR_VERSION","libraryPropertyType_t_MINOR_VERSION","libraryPropertyType_t_PATCH_LEVEL","linear","localL1CacheSupported","localSizeBytes","location","location","luid","luidDeviceNodeMask","major","managedMemory","maxBlocksPerMultiProcessor","maxDynamicSharedSizeBytes","maxGridSize","maxSurface1D","maxSurface1DLayered","maxSurface2D","maxSurface2DLayered","maxSurface3D","maxSurfaceCubemap","maxSurfaceCubemapLayered","maxTexture1D","maxTexture1DLayered","maxTexture1DLinear","maxTexture1DMipmap","maxTexture2D","maxTexture2DGather","maxTexture2DLayered","maxTexture2DLinear","maxTexture2DMipmap","maxTexture3D","maxTexture3DAlt","maxTextureCubemap","maxTextureCubemapLayered","maxThreadsDim","maxThreadsPerBlock","maxThreadsPerBlock","maxThreadsPerMultiProcessor","memPitch","memoryBusWidth","memoryClockRate","minor","mipmap","mipmap","miptailFirstLevel","miptailSize","missProp","multiGpuBoardGroupID","multiProcessorCount","name","name","name","numExtSems","numExtSems","numLevels","numRegs","num_bytes","nvSciBufObject","nvSciSync","nvSciSync","nvSciSync","nvSciSync","nvSciSyncObj","offset","offset","pageableMemoryAccess","pageableMemoryAccessUsesHostPageTables","params","params","params","params","paramsArray","paramsArray","pciBusID","pciDeviceID","pciDomainID","persistingL2CacheMaxSize","pitch","pitch","pitch2D","pitchInBytes","poolProps","preferredShmemCarveout","priority","ptr","ptxVersion","regsPerBlock","regsPerMultiprocessor","res","resType","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reservedSharedMemPerBlock","sharedMem","sharedMemBytes","sharedMemPerBlock","sharedMemPerBlockOptin","sharedMemPerMultiprocessor","sharedSizeBytes","singleToDoublePrecisionPerfRatio","size","size","size","sizeInBytes","srcArray","srcArray","srcDevice","srcPos","srcPos","srcPtr","srcPtr","stream","streamPrioritiesSupported","surfaceAlignment","syncPolicy","tccDriver","textureAlignment","texturePitchAlignment","tileExtent","timeoutMs","timeoutMs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","totalConstMem","totalGlobalMem","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unifiedAddressing","userData","uuid","value","value","value","value","value","w","warpSize","width","width","width","width","width","win32","win32","win32SecurityAttributes","x","x","x","x","x","x","x","x","xsize","y","y","y","y","y","y","y","y","ysize","z","z","z"],"q":[[0,"rcublas_sys"],[3159,"core::fmt"],[3160,"core::fmt"],[3161,"core::result"],[3162,"core::any"]],"do value.","No value.","Some value of type <code>T</code>.","Some value of type <code>T</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[135,135,138,138,138,138,138,138,138,138,138,138,138,137,131,131,130,130,130,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,137,133,133,133,133,133,137,134,134,132,132,129,129,129,129,129,129,129,129,129,129,137,137,0,0,0,0,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,0,0,0,0,0,0,0,0,0,0,0,0,71,147,148,147,148,67,67,71,125,127,11,65,114,36,37,71,21,43,114,115,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,149,150,70,67,43,71,71,71,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,71,71,71,71,43,127,71,71,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,0,0,0,0,0,0,0,113,113,113,52,52,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,48,48,48,48,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,69,69,69,69,0,0,0,121,121,121,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,74,74,74,74,74,74,74,74,0,0,0,0,0,0,80,80,80,80,80,80,80,80,80,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,53,0,0,0,56,55,55,0,44,44,44,0,0,45,45,45,45,0,0,54,54,54,0,0,122,122,122,122,122,122,122,122,122,122,120,120,120,120,120,120,120,120,0,120,0,123,123,0,68,68,68,68,0,0,118,118,118,118,118,118,118,118,118,118,118,118,118,0,28,0,0,32,32,32,32,32,32,0,31,31,31,0,30,30,30,30,30,0,0,0,0,0,0,0,0,0,0,126,126,126,0,52,52,0,0,49,49,49,49,49,49,49,0,0,61,61,61,50,50,50,50,50,50,0,0,0,63,63,63,64,64,64,64,0,0,59,59,0,58,58,58,58,58,0,0,58,58,58,0,0,51,51,51,51,0,0,13,13,13,13,13,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,0,0,0,0,0,33,33,33,33,0,0,0,46,46,46,0,47,47,47,26,0,0,124,124,0,24,24,24,0,23,23,23,26,0,0,4,4,25,25,25,25,0,0,0,27,0,0,10,15,41,39,40,39,40,42,71,42,0,71,0,67,19,17,18,18,17,18,17,18,19,4,5,12,13,20,23,24,25,26,27,28,30,31,32,33,34,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,68,69,74,80,113,118,120,121,122,123,124,126,128,129,130,131,132,133,134,135,136,137,138,116,117,17,18,79,115,6,76,82,85,87,90,92,95,97,100,102,41,41,9,62,75,78,79,81,84,89,94,99,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,68,69,70,74,77,78,79,80,83,86,88,91,93,96,98,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,129,130,131,132,133,134,135,136,137,138,139,22,41,79,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,114,115,71,114,115,75,77,81,83,65,4,5,12,13,20,23,24,25,26,27,28,30,31,32,33,34,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,68,69,74,80,113,118,120,121,122,123,124,126,128,129,130,131,132,133,134,135,136,137,138,10,15,19,40,41,21,21,71,42,60,71,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,71,71,115,88,93,98,103,85,90,95,100,17,71,41,41,0,0,0,0,0,36,71,43,62,65,71,71,71,71,71,43,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,43,71,71,71,71,71,71,36,38,9,9,21,71,71,71,77,83,116,117,79,43,21,76,85,90,95,100,82,78,79,71,71,84,89,94,99,116,117,71,71,71,71,14,19,36,40,67,43,127,14,43,71,71,35,35,151,152,9,11,65,66,72,73,87,92,94,95,97,99,100,102,71,114,115,71,71,71,43,71,11,75,78,39,17,18,18,17,18,17,18,114,71,71,125,71,71,71,9,93,103,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,71,71,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,42,60,75,81,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,71,22,71,19,86,91,96,101,6,71,10,15,19,40,41,76,82,65,153,154,155,1,2,3,6,16,14,153,154,155,1,2,3,6,16,14,3,6,16],"f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````````{bb}{dd}{ff}{hh}{jj}{ll}{nn}{A`A`}{AbAb}{AdAd}{AfAf}{AhAh}{AjAj}{AlAl}{AnAn}{B`B`}{BbBb}{BdBd}{BfBf}{BhBh}{BjBj}{BlBl}{BnBn}{C`C`}{CbCb}{CdCd}{CfCf}{ChCh}{CjCj}{ClCl}{CnCn}{D`D`}{DbDb}{DdDd}{DfDf}{DhDh}{DjDj}{DlDl}{DnDn}{E`E`}{EbEb}{EdEd}{EfEf}{EhEh}{EjEj}{ElEl}{EnEn}{F`F`}{FbFb}{FdFd}{FfFf}{FhFh}{FjFj}{FlFl}{FnFn}{G`G`}{GbGb}{GdGd}{GfGf}{GhGh}{GjGj}{GlGl}{GnGn}{H`H`}{HbHb}{HdHd}{HfHf}{HhHh}{HjHj}{HlHl}{HnHn}{I`I`}{IbIb}{IdId}{IfIf}{IhIh}{IjIj}{IlIl}{InIn}{J`J`}{JbJb}{JdJd}{JfJf}{JhJh}{JjJj}{JlJl}{JnJn}{K`K`}{KbKb}{KdKd}{KfKf}{KhKh}{KjKj}{KlKl}{KnKn}{L`L`}{LbLb}{LdLd}{LfLf}{LhLh}{LjLj}{LlLl}{LnLn}{M`M`}{MbMb}{MdMd}{MfMf}{MhMh}{MjMj}{MlMl}{MnMn}{N`N`}{NbNb}{NdNd}{NfNf}{NhNh}{NjNj}{NlNl}{NnNn}{O`O`}{ObOb}{OdOd}{OfOf}{OhOh}{OjOj}{OlOl}{OnOn}{A`A`}{AbAb}{AdAd}{AfAf}{AhAh}{AjAj}{AlAl}{AnAn}{AA`AA`}{AAbAAb}{AAdAAd}{AAfAAf}{{ce}AAh{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{hh}AAj}{{jj}AAj}{{AhAh}AAj}{{AjAj}AAj}{{BhBh}AAj}{{BnBn}AAj}{{C`C`}AAj}{{CbCb}AAj}{{CdCd}AAj}{{CfCf}AAj}{{ChCh}AAj}{{ClCl}AAj}{{CnCn}AAj}{{D`D`}AAj}{{DbDb}AAj}{{DdDd}AAj}{{EhEh}AAj}{{EjEj}AAj}{{ElEl}AAj}{{EnEn}AAj}{{F`F`}AAj}{{FbFb}AAj}{{FdFd}AAj}{{FfFf}AAj}{{FhFh}AAj}{{FjFj}AAj}{{FlFl}AAj}{{FnFn}AAj}{{G`G`}AAj}{{GbGb}AAj}{{GdGd}AAj}{{GfGf}AAj}{{GjGj}AAj}{{GnGn}AAj}{{H`H`}AAj}{{HhHh}AAj}{{HjHj}AAj}{{IdId}AAj}{{J`J`}AAj}{{NbNb}AAj}{{NlNl}AAj}{{O`O`}AAj}{{ObOb}AAj}{{OdOd}AAj}{{OfOf}AAj}{{OhOh}AAj}{{OlOl}AAj}{{A`A`}AAj}{{AbAb}AAj}{{AdAd}AAj}{{AfAf}AAj}{{AhAh}AAj}{{AjAj}AAj}{{AlAl}AAj}{{AnAn}AAj}{{AA`AA`}AAj}{{AAbAAb}AAj}{{AAdAAd}AAj}``````````````````````````````{{bAAl}AAn}{{dAAl}AAn}{{fAAl}AAn}{{hAAl}AAn}{{jAAl}AAn}{{lAAl}AAn}{{nAAl}AAn}{{A`AAl}AAn}{{AbAAl}AAn}{{AdAAl}AAn}{{AfAAl}AAn}{{AhAAl}AAn}{{AjAAl}AAn}{{AlAAl}AAn}{{AnAAl}AAn}{{B`AAl}AAn}{{BbAAl}AAn}{{BdAAl}AAn}{{BfAAl}AAn}{{BhAAl}AAn}{{BjAAl}AAn}{{BlAAl}AAn}{{BnAAl}AAn}{{C`AAl}AAn}{{CbAAl}AAn}{{CdAAl}AAn}{{CfAAl}AAn}{{ChAAl}AAn}{{CjAAl}AAn}{{ClAAl}AAn}{{CnAAl}AAn}{{D`AAl}AAn}{{DbAAl}AAn}{{DdAAl}AAn}{{DjAAl}AAn}{{DlAAl}AAn}{{DnAAl}AAn}{{E`AAl}AAn}{{EbAAl}AAn}{{EdAAl}AAn}{{EfAAl}AAn}{{EhAAl}AAn}{{EjAAl}AAn}{{ElAAl}AAn}{{EnAAl}AAn}{{F`AAl}AAn}{{FbAAl}AAn}{{FdAAl}AAn}{{FfAAl}AAn}{{FhAAl}AAn}{{FjAAl}AAn}{{FlAAl}AAn}{{FnAAl}AAn}{{G`AAl}AAn}{{GbAAl}AAn}{{GdAAl}AAn}{{GfAAl}AAn}{{GhAAl}AAn}{{GjAAl}AAn}{{GlAAl}AAn}{{GnAAl}AAn}{{H`AAl}AAn}{{HhAAl}AAn}{{HjAAl}AAn}{{HlAAl}AAn}{{IdAAl}AAn}{{IjAAl}AAn}{{IlAAl}AAn}{{InAAl}AAn}{{J`AAl}AAn}{{JfAAl}AAn}{{JlAAl}AAn}{{K`AAl}AAn}{{KfAAl}AAn}{{KjAAl}AAn}{{L`AAl}AAn}{{LdAAl}AAn}{{LjAAl}AAn}{{LnAAl}AAn}{{M`AAl}AAn}{{MbAAl}AAn}{{MdAAl}AAn}{{MfAAl}AAn}{{MhAAl}AAn}{{MjAAl}AAn}{{MlAAl}AAn}{{MnAAl}AAn}{{N`AAl}AAn}{{NbAAl}AAn}{{NdAAl}AAn}{{NfAAl}AAn}{{NhAAl}AAn}{{NjAAl}AAn}{{NlAAl}AAn}{{NnAAl}AAn}{{O`AAl}AAn}{{ObAAl}AAn}{{OdAAl}AAn}{{OfAAl}AAn}{{OhAAl}AAn}{{OlAAl}AAn}{{A`AAl}AAn}{{AbAAl}AAn}{{AdAAl}AAn}{{AfAAl}AAn}{{AhAAl}AAn}{{AjAAl}AAn}{{AlAAl}AAn}{{AnAAl}AAn}{{AA`AAl}AAn}{{AAbAAl}AAn}{{AAdAAl}AAn}{{AAfAAl}AAn}```{cc{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000``````````{{hc}AAhAB`}{{jc}AAhAB`}{{Ahc}AAhAB`}{{Ajc}AAhAB`}{{Bhc}AAhAB`}{{Bnc}AAhAB`}{{C`c}AAhAB`}{{Cbc}AAhAB`}{{Cdc}AAhAB`}{{Cfc}AAhAB`}{{Chc}AAhAB`}{{Clc}AAhAB`}{{Cnc}AAhAB`}{{D`c}AAhAB`}{{Dbc}AAhAB`}{{Ddc}AAhAB`}{{Ehc}AAhAB`}{{Ejc}AAhAB`}{{Elc}AAhAB`}{{Enc}AAhAB`}{{F`c}AAhAB`}{{Fbc}AAhAB`}{{Fdc}AAhAB`}{{Ffc}AAhAB`}{{Fhc}AAhAB`}{{Fjc}AAhAB`}{{Flc}AAhAB`}{{Fnc}AAhAB`}{{G`c}AAhAB`}{{Gbc}AAhAB`}{{Gdc}AAhAB`}{{Gfc}AAhAB`}{{Gjc}AAhAB`}{{Gnc}AAhAB`}{{H`c}AAhAB`}{{Hhc}AAhAB`}{{Hjc}AAhAB`}{{Idc}AAhAB`}{{J`c}AAhAB`}{{Nbc}AAhAB`}{{Nlc}AAhAB`}{{O`c}AAhAB`}{{Obc}AAhAB`}{{Odc}AAhAB`}{{Ofc}AAhAB`}{{Ohc}AAhAB`}{{Olc}AAhAB`}{{A`c}AAhAB`}{{Abc}AAhAB`}{{Adc}AAhAB`}{{Afc}AAhAB`}{{Ahc}AAhAB`}{{Ajc}AAhAB`}{{Alc}AAhAB`}{{Anc}AAhAB`}{{AA`c}AAhAB`}{{AAbc}AAhAB`}{{AAdc}AAhAB`}```````````{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000``{c{{ABb{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{cABd{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000```````````````````````````````````````","c":[],"p":[[5,"float2",0],[5,"double2",0],[5,"dim3",0],[6,"cudaError",0],[6,"cudaChannelFormatKind",0],[5,"cudaChannelFormatDesc",0],[5,"cudaArray",0],[5,"cudaMipmappedArray",0],[5,"cudaArraySparseProperties",0],[5,"cudaArraySparseProperties__bindgen_ty_1",0],[5,"cudaArrayMemoryRequirements",0],[6,"cudaMemoryType",0],[6,"cudaMemcpyKind",0],[5,"cudaPitchedPtr",0],[5,"cudaExtent",0],[5,"cudaPos",0],[5,"cudaMemcpy3DParms",0],[5,"cudaMemcpy3DPeerParms",0],[5,"cudaMemsetParams",0],[6,"cudaAccessProperty",0],[5,"cudaAccessPolicyWindow",0],[5,"cudaHostNodeParams",0],[6,"cudaStreamCaptureStatus",0],[6,"cudaStreamCaptureMode",0],[6,"cudaSynchronizationPolicy",0],[6,"cudaStreamUpdateCaptureDependenciesFlags",0],[6,"cudaUserObjectFlags",0],[6,"cudaUserObjectRetainFlags",0],[5,"cudaGraphicsResource",0],[6,"cudaGraphicsRegisterFlags",0],[6,"cudaGraphicsMapFlags",0],[6,"cudaGraphicsCubeFace",0],[6,"cudaResourceType",0],[6,"cudaResourceViewFormat",0],[5,"cudaResourceDesc",0],[20,"cudaResourceDesc__bindgen_ty_1",0],[5,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1",0],[5,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2",0],[5,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3",0],[5,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4",0],[5,"cudaResourceViewDesc",0],[5,"cudaPointerAttributes",0],[5,"cudaFuncAttributes",0],[6,"cudaFuncAttribute",0],[6,"cudaFuncCache",0],[6,"cudaSharedMemConfig",0],[6,"cudaSharedCarveout",0],[6,"cudaComputeMode",0],[6,"cudaLimit",0],[6,"cudaMemoryAdvise",0],[6,"cudaMemRangeAttribute",0],[6,"cudaOutputMode",0],[6,"cudaFlushGPUDirectRDMAWritesOptions",0],[6,"cudaGPUDirectRDMAWritesOrdering",0],[6,"cudaFlushGPUDirectRDMAWritesScope",0],[6,"cudaFlushGPUDirectRDMAWritesTarget",0],[6,"cudaDeviceAttr",0],[6,"cudaMemPoolAttr",0],[6,"cudaMemLocationType",0],[5,"cudaMemLocation",0],[6,"cudaMemAccessFlags",0],[5,"cudaMemAccessDesc",0],[6,"cudaMemAllocationType",0],[6,"cudaMemAllocationHandleType",0],[5,"cudaMemPoolProps",0],[5,"cudaMemPoolPtrExportData",0],[5,"cudaMemAllocNodeParams",0],[6,"cudaGraphMemAttributeType",0],[6,"cudaDeviceP2PAttr",0],[5,"CUuuid_st",0],[5,"cudaDeviceProp",0],[5,"cudaIpcEventHandle_st",0],[5,"cudaIpcMemHandle_st",0],[6,"cudaExternalMemoryHandleType",0],[5,"cudaExternalMemoryHandleDesc",0],[20,"cudaExternalMemoryHandleDesc__bindgen_ty_1",0],[5,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1",0],[5,"cudaExternalMemoryBufferDesc",0],[5,"cudaExternalMemoryMipmappedArrayDesc",0],[6,"cudaExternalSemaphoreHandleType",0],[5,"cudaExternalSemaphoreHandleDesc",0],[20,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1",0],[5,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1",0],[5,"cudaExternalSemaphoreSignalParams_v1",0],[5,"cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1",0],[5,"cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_1",0],[20,"cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_2",0],[5,"cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_3",0],[5,"cudaExternalSemaphoreWaitParams_v1",0],[5,"cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1",0],[5,"cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_1",0],[20,"cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_2",0],[5,"cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_3",0],[5,"cudaExternalSemaphoreSignalParams",0],[5,"cudaExternalSemaphoreSignalParams__bindgen_ty_1",0],[5,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1",0],[20,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2",0],[5,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3",0],[5,"cudaExternalSemaphoreWaitParams",0],[5,"cudaExternalSemaphoreWaitParams__bindgen_ty_1",0],[5,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1",0],[20,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2",0],[5,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3",0],[5,"CUstream_st",0],[5,"CUevent_st",0],[5,"CUexternalMemory_st",0],[5,"CUexternalSemaphore_st",0],[5,"CUgraph_st",0],[5,"CUgraphNode_st",0],[5,"CUuserObject_st",0],[5,"CUfunc_st",0],[5,"CUmemPoolHandle_st",0],[6,"cudaCGScope",0],[5,"cudaLaunchParams",0],[5,"cudaKernelNodeParams",0],[5,"cudaExternalSemaphoreSignalNodeParams",0],[5,"cudaExternalSemaphoreWaitNodeParams",0],[6,"cudaGraphNodeType",0],[5,"CUgraphExec_st",0],[6,"cudaGraphExecUpdateResult",0],[6,"cudaGetDriverEntryPointFlags",0],[6,"cudaGraphDebugDotFlags",0],[6,"cudaGraphInstantiateFlags",0],[6,"cudaStreamAttrID",0],[20,"cudaStreamAttrValue",0],[6,"cudaKernelNodeAttrID",0],[20,"cudaKernelNodeAttrValue",0],[6,"cudaDataType_t",0],[6,"cublasStatus_t",0],[6,"cublasFillMode_t",0],[6,"cublasDiagType_t",0],[6,"cublasSideMode_t",0],[6,"cublasOperation_t",0],[6,"cublasPointerMode_t",0],[6,"cublasAtomicsMode_t",0],[6,"cublasGemmAlgo_t",0],[6,"cublasMath_t",0],[6,"cublasComputeType_t",0],[5,"cublasContext",0],[1,"unit"],[1,"bool"],[5,"Formatter",3159],[8,"Result",3159],[10,"Hasher",3160],[6,"Result",3161],[5,"TypeId",3162],[8,"cudaHostFn_t",0],[8,"cublasLogCallback",0],[8,"CUuuid",0],[8,"cudaUUID_t",0],[8,"cudaIpcEventHandle_t",0],[8,"cudaIpcMemHandle_t",0],[8,"cuFloatComplex",0],[8,"cuDoubleComplex",0],[8,"cuComplex",0]],"b":[]}],\
["rcudnn",{"doc":"Provides a safe and convenient wrapper for the CUDA cuDNN …","t":"FFPPPOPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSSSSSSSSSSSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSSSSSSSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSSSSPSPPPPPPPPSPPPPPPPPPPPPPPPPPPPPPSSSSSSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSSPPPPPPPPPPPSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSPPPFFFFFFFFFFIFFFFOGPFPPPPPPPFPPFOFPPPFPOIIIOOOOONNNOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNNNNNNNOOONNNNNNNNNCFGPPPPPPPFHHHHFFFIIHHHHHPPPGPPPPPFGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPHGPPPPHHHHGGHHHHPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPTPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGHHHHHHHHHHHHHHHHHHOOGFHHHHHHHHPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGHHHHHHHHIFFHHFUFGPPPPPPPPFIFUFGPPPPPPPPPPFFFFUFFFFUFFFFFUFFFFUFIPPPPGGGPPPPPHHHHHGPPPFGPPPPHHHHIGPPPHHHHHHGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHGPPPPPPPPPPHHHHHHHHHHHHHHHHHHHHHPPPPPPPPGPIHHHHHHHHHHPPGHHHHHHHHPPPPGHHHHHHHHHHHHHHGPPPPPPPPPPPPPIHHHHPIGPPPPPPGPPPHGPPPPPFHHHIHHHHIHHFHHHHHFIHHFIHHGUPPPFPPHHHHFGPPPPPPPHHHHHHHHHHFGPPPHPPPPPPFGGPPPHPPPPFGPPGPPPPPHHHHHHHHFFPPPHHHIHGPPPPHHHHHHHHHHHHFHHFHHPPPHHHHPPGHHHHHHGGPPPPHHHHHHFFHHIIHHHGGHFFHFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFUFFFFGPPPPFGPGPPPHHHHHHGPPPGPPPHHPHGUPPHIGPPPGPPPHHHHHHHHHHHHHHPHHGHIPPGGIPPPPGGFGIGHHHHHHHIHHGPHHGIHNNHIHGFHHHIFIFFUIIIFGGGHGIHHHHGHGGGHGGGHHHHHGHHGIFHIHHFHHHHFIGFIGIHFIGGFHHHHHHHHHHHHHHHHHHHHHHHHGFIHHHHHHHHHHHHHHHHHHHHHHHHHGGGHHHIHHHFGIFHHHHHHHHHHGGGIFHFIGGIFGGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIHGHHHIGFGHGHHHGGGGGHHHHIGFHHGFIGHIHGFHGHHHHHHGGIGFIHHHHHHHGGIHHFHIGGFHGGHHFGHHGIFHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHGGHHGHHHHIFOOGIGFIFHHHGNOONNNOOOOONNNNNNNNNOOOOOOOOOOOFOOONNONNNNNNNNNNNNNNNOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOONNNOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOIISSSOOOOONNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNOOOOOOONNOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNOONONNNNNNNNNNNNNOOOOOONNOOOOONNNNOOOOOOOOOOOOOOOOOOFONNOHOOFOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCOOOOOONOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNFFGKPFPPFFFFONNNNONNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNONNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["API","ActivationDescriptor","AllocFailed","ArchMismatch","BadParam","CTCLossAlgo","CUDA_C_16BF","CUDA_C_16BF","CUDA_C_16F","CUDA_C_16F","CUDA_C_16I","CUDA_C_16I","CUDA_C_16U","CUDA_C_16U","CUDA_C_32F","CUDA_C_32F","CUDA_C_32I","CUDA_C_32I","CUDA_C_32U","CUDA_C_32U","CUDA_C_4I","CUDA_C_4I","CUDA_C_4U","CUDA_C_4U","CUDA_C_64F","CUDA_C_64F","CUDA_C_64I","CUDA_C_64I","CUDA_C_64U","CUDA_C_64U","CUDA_C_8I","CUDA_C_8I","CUDA_C_8U","CUDA_C_8U","CUDA_R_16BF","CUDA_R_16BF","CUDA_R_16F","CUDA_R_16F","CUDA_R_16I","CUDA_R_16I","CUDA_R_16U","CUDA_R_16U","CUDA_R_32F","CUDA_R_32F","CUDA_R_32I","CUDA_R_32I","CUDA_R_32U","CUDA_R_32U","CUDA_R_4I","CUDA_R_4I","CUDA_R_4U","CUDA_R_4U","CUDA_R_64F","CUDA_R_64F","CUDA_R_64I","CUDA_R_64I","CUDA_R_64U","CUDA_R_64U","CUDA_R_8I","CUDA_R_8I","CUDA_R_8U","CUDA_R_8U","CUDNN_16BIT_INDICES","CUDNN_32BIT_INDICES","CUDNN_64BIT_INDICES","CUDNN_8BIT_INDICES","CUDNN_ACTIVATION_CLIPPED_RELU","CUDNN_ACTIVATION_ELU","CUDNN_ACTIVATION_IDENTITY","CUDNN_ACTIVATION_RELU","CUDNN_ACTIVATION_SIGMOID","CUDNN_ACTIVATION_SWISH","CUDNN_ACTIVATION_TANH","CUDNN_ADV_INFER_MAJOR","CUDNN_ADV_INFER_MINOR","CUDNN_ADV_INFER_PATCH","CUDNN_ADV_TRAIN_MAJOR","CUDNN_ADV_TRAIN_MINOR","CUDNN_ADV_TRAIN_PATCH","CUDNN_ATTN_DISABLE_PROJ_BIASES","CUDNN_ATTN_ENABLE_PROJ_BIASES","CUDNN_ATTN_QUERYMAP_ALL_TO_ONE","CUDNN_ATTN_QUERYMAP_ONE_TO_ONE","CUDNN_ATTN_WKIND_COUNT","CUDNN_ATTR_CONVOLUTION_COMP_TYPE","CUDNN_ATTR_CONVOLUTION_CONV_MODE","CUDNN_ATTR_CONVOLUTION_DILATIONS","CUDNN_ATTR_CONVOLUTION_FILTER_STRIDES","CUDNN_ATTR_CONVOLUTION_POST_PADDINGS","CUDNN_ATTR_CONVOLUTION_PRE_PADDINGS","CUDNN_ATTR_CONVOLUTION_SPATIAL_DIMS","CUDNN_ATTR_ENGINECFG_ENGINE","CUDNN_ATTR_ENGINECFG_INTERMEDIATE_INFO","CUDNN_ATTR_ENGINECFG_KNOB_CHOICES","CUDNN_ATTR_ENGINEHEUR_MODE","CUDNN_ATTR_ENGINEHEUR_OPERATION_GRAPH","CUDNN_ATTR_ENGINEHEUR_RESULTS","CUDNN_ATTR_ENGINE_BEHAVIOR_NOTE","CUDNN_ATTR_ENGINE_GLOBAL_INDEX","CUDNN_ATTR_ENGINE_KNOB_INFO","CUDNN_ATTR_ENGINE_LAYOUT_INFO","CUDNN_ATTR_ENGINE_NUMERICAL_NOTE","CUDNN_ATTR_ENGINE_OPERATION_GRAPH","CUDNN_ATTR_EXECUTION_PLAN_COMPUTED_INTERMEDIATE_UIDS","CUDNN_ATTR_EXECUTION_PLAN_ENGINE_CONFIG","CUDNN_ATTR_EXECUTION_PLAN_HANDLE","CUDNN_ATTR_EXECUTION_PLAN_RUN_ONLY_INTERMEDIATE_UIDS","CUDNN_ATTR_EXECUTION_PLAN_WORKSPACE_SIZE","CUDNN_ATTR_INTERMEDIATE_INFO_DEPENDENT_ATTRIBUTES","CUDNN_ATTR_INTERMEDIATE_INFO_DEPENDENT_DATA_UIDS","CUDNN_ATTR_INTERMEDIATE_INFO_SIZE","CUDNN_ATTR_INTERMEDIATE_INFO_UNIQUE_ID","CUDNN_ATTR_KNOB_CHOICE_KNOB_TYPE","CUDNN_ATTR_KNOB_CHOICE_KNOB_VALUE","CUDNN_ATTR_KNOB_INFO_MAXIMUM_VALUE","CUDNN_ATTR_KNOB_INFO_MINIMUM_VALUE","CUDNN_ATTR_KNOB_INFO_STRIDE","CUDNN_ATTR_KNOB_INFO_TYPE","CUDNN_ATTR_LAYOUT_INFO_TENSOR_UID","CUDNN_ATTR_LAYOUT_INFO_TYPES","CUDNN_ATTR_MATMUL_COMP_TYPE","CUDNN_ATTR_OPERATIONGRAPH_ENGINE_GLOBAL_COUNT","CUDNN_ATTR_OPERATIONGRAPH_HANDLE","CUDNN_ATTR_OPERATIONGRAPH_OPS","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_BN_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_DBN_BIAS_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_DBN_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_DY_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_EQ_BIAS","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_EQ_DY_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_EQ_X_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_INVSTD_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_MATH_PREC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_X_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_ACCUM_COUNT_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_BIAS_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EPSILON_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EQ_BIAS_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EQ_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EXP_AVERATE_FACTOR_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_MATH_PREC","CUDNN_ATTR_OPERATION_BN_FINALIZE_PREV_RUNNING_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_PREV_RUNNING_VAR_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_SAVED_INV_STD_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_SAVED_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_STATS_MODE","CUDNN_ATTR_OPERATION_BN_FINALIZE_UPDATED_RUNNING_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_UPDATED_RUNNING_VAR_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_Y_SQ_SUM_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_Y_SUM_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_ALPHA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_BETA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_CONV_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_DX","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_DY","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_W","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_ALPHA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_BETA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_CONV_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_DW","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_DY","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_X","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_ALPHA","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_BETA","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_CONV_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_W","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_X","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_Y","CUDNN_ATTR_OPERATION_GENSTATS_MATH_PREC","CUDNN_ATTR_OPERATION_GENSTATS_MODE","CUDNN_ATTR_OPERATION_GENSTATS_SQSUMDESC","CUDNN_ATTR_OPERATION_GENSTATS_SUMDESC","CUDNN_ATTR_OPERATION_GENSTATS_XDESC","CUDNN_ATTR_OPERATION_MATMUL_ADESC","CUDNN_ATTR_OPERATION_MATMUL_BDESC","CUDNN_ATTR_OPERATION_MATMUL_CDESC","CUDNN_ATTR_OPERATION_MATMUL_DESC","CUDNN_ATTR_OPERATION_MATMUL_IRREGULARLY_STRIDED_BATCH_COUNT","CUDNN_ATTR_OPERATION_POINTWISE_ALPHA1","CUDNN_ATTR_OPERATION_POINTWISE_ALPHA2","CUDNN_ATTR_OPERATION_POINTWISE_BDESC","CUDNN_ATTR_OPERATION_POINTWISE_DXDESC","CUDNN_ATTR_OPERATION_POINTWISE_DYDESC","CUDNN_ATTR_OPERATION_POINTWISE_PW_DESCRIPTOR","CUDNN_ATTR_OPERATION_POINTWISE_TDESC","CUDNN_ATTR_OPERATION_POINTWISE_XDESC","CUDNN_ATTR_OPERATION_POINTWISE_YDESC","CUDNN_ATTR_OPERATION_REDUCTION_DESC","CUDNN_ATTR_OPERATION_REDUCTION_XDESC","CUDNN_ATTR_OPERATION_REDUCTION_YDESC","CUDNN_ATTR_OPERATION_RESAMPLE_BWD_ALPHA","CUDNN_ATTR_OPERATION_RESAMPLE_BWD_BETA","CUDNN_ATTR_OPERATION_RESAMPLE_BWD_DESC","CUDNN_ATTR_OPERATION_RESAMPLE_BWD_DXDESC","CUDNN_ATTR_OPERATION_RESAMPLE_BWD_DYDESC","CUDNN_ATTR_OPERATION_RESAMPLE_BWD_IDXDESC","CUDNN_ATTR_OPERATION_RESAMPLE_FWD_ALPHA","CUDNN_ATTR_OPERATION_RESAMPLE_FWD_BETA","CUDNN_ATTR_OPERATION_RESAMPLE_FWD_DESC","CUDNN_ATTR_OPERATION_RESAMPLE_FWD_IDXDESC","CUDNN_ATTR_OPERATION_RESAMPLE_FWD_XDESC","CUDNN_ATTR_OPERATION_RESAMPLE_FWD_YDESC","CUDNN_ATTR_POINTWISE_ELU_ALPHA","CUDNN_ATTR_POINTWISE_MATH_PREC","CUDNN_ATTR_POINTWISE_MODE","CUDNN_ATTR_POINTWISE_NAN_PROPAGATION","CUDNN_ATTR_POINTWISE_RELU_LOWER_CLIP","CUDNN_ATTR_POINTWISE_RELU_LOWER_CLIP_SLOPE","CUDNN_ATTR_POINTWISE_RELU_UPPER_CLIP","CUDNN_ATTR_POINTWISE_SOFTPLUS_BETA","CUDNN_ATTR_POINTWISE_SWISH_BETA","CUDNN_ATTR_REDUCTION_COMP_TYPE","CUDNN_ATTR_REDUCTION_OPERATOR","CUDNN_ATTR_RESAMPLE_COMP_TYPE","CUDNN_ATTR_RESAMPLE_MODE","CUDNN_ATTR_RESAMPLE_NAN_PROPAGATION","CUDNN_ATTR_RESAMPLE_PADDING_MODE","CUDNN_ATTR_RESAMPLE_POST_PADDINGS","CUDNN_ATTR_RESAMPLE_PRE_PADDINGS","CUDNN_ATTR_RESAMPLE_SPATIAL_DIMS","CUDNN_ATTR_RESAMPLE_STRIDES","CUDNN_ATTR_RESAMPLE_WINDOW_DIMS","CUDNN_ATTR_TENSOR_BYTE_ALIGNMENT","CUDNN_ATTR_TENSOR_DATA_TYPE","CUDNN_ATTR_TENSOR_DIMENSIONS","CUDNN_ATTR_TENSOR_IS_BY_VALUE","CUDNN_ATTR_TENSOR_IS_VIRTUAL","CUDNN_ATTR_TENSOR_REORDERING_MODE","CUDNN_ATTR_TENSOR_STRIDES","CUDNN_ATTR_TENSOR_UNIQUE_ID","CUDNN_ATTR_TENSOR_VECTORIZED_DIMENSION","CUDNN_ATTR_TENSOR_VECTOR_COUNT","CUDNN_ATTR_VARIANT_PACK_DATA_POINTERS","CUDNN_ATTR_VARIANT_PACK_INTERMEDIATES","CUDNN_ATTR_VARIANT_PACK_UNIQUE_IDS","CUDNN_ATTR_VARIANT_PACK_WORKSPACE","CUDNN_BACKEND_CONVOLUTION_DESCRIPTOR","CUDNN_BACKEND_ENGINECFG_DESCRIPTOR","CUDNN_BACKEND_ENGINEHEUR_DESCRIPTOR","CUDNN_BACKEND_ENGINE_DESCRIPTOR","CUDNN_BACKEND_EXECUTION_PLAN_DESCRIPTOR","CUDNN_BACKEND_INTERMEDIATE_INFO_DESCRIPTOR","CUDNN_BACKEND_KNOB_CHOICE_DESCRIPTOR","CUDNN_BACKEND_KNOB_INFO_DESCRIPTOR","CUDNN_BACKEND_LAYOUT_INFO_DESCRIPTOR","CUDNN_BACKEND_MATMUL_DESCRIPTOR","CUDNN_BACKEND_OPERATIONGRAPH_DESCRIPTOR","CUDNN_BACKEND_OPERATION_BN_BWD_WEIGHTS_DESCRIPTOR","CUDNN_BACKEND_OPERATION_BN_FINALIZE_STATISTICS_DESCRIPTOR","CUDNN_BACKEND_OPERATION_CONVOLUTION_BACKWARD_DATA_DESCRIPTOR","CUDNN_BACKEND_OPERATION_CONVOLUTION_BACKWARD_FILTER_DESCRIPTOR","CUDNN_BACKEND_OPERATION_CONVOLUTION_FORWARD_DESCRIPTOR","CUDNN_BACKEND_OPERATION_GEN_STATS_DESCRIPTOR","CUDNN_BACKEND_OPERATION_MATMUL_DESCRIPTOR","CUDNN_BACKEND_OPERATION_POINTWISE_DESCRIPTOR","CUDNN_BACKEND_OPERATION_REDUCTION_DESCRIPTOR","CUDNN_BACKEND_OPERATION_RESAMPLE_BWD_DESCRIPTOR","CUDNN_BACKEND_OPERATION_RESAMPLE_FWD_DESCRIPTOR","CUDNN_BACKEND_POINTWISE_DESCRIPTOR","CUDNN_BACKEND_REDUCTION_DESCRIPTOR","CUDNN_BACKEND_RESAMPLE_DESCRIPTOR","CUDNN_BACKEND_TENSOR_DESCRIPTOR","CUDNN_BACKEND_VARIANT_PACK_DESCRIPTOR","CUDNN_BATCHNORM_OPS_BN","CUDNN_BATCHNORM_OPS_BN_ACTIVATION","CUDNN_BATCHNORM_OPS_BN_ADD_ACTIVATION","CUDNN_BATCHNORM_PER_ACTIVATION","CUDNN_BATCHNORM_SPATIAL","CUDNN_BATCHNORM_SPATIAL_PERSISTENT","CUDNN_BEHAVIOR_NOTE_REQUIRES_BIAS_INT8x32_REORDER","CUDNN_BEHAVIOR_NOTE_REQUIRES_FILTER_INT8x32_REORDER","CUDNN_BEHAVIOR_NOTE_RUNTIME_COMPILATION","CUDNN_BEHAVIOR_NOTE_TYPE_COUNT","CUDNN_BIDIRECTIONAL","CUDNN_BN_FINALIZE_STATISTICS_INFERENCE","CUDNN_BN_FINALIZE_STATISTICS_TRAINING","CUDNN_BN_MIN_EPSILON","CUDNN_CNN_INFER_MAJOR","CUDNN_CNN_INFER_MINOR","CUDNN_CNN_INFER_PATCH","CUDNN_CNN_TRAIN_MAJOR","CUDNN_CNN_TRAIN_MINOR","CUDNN_CNN_TRAIN_PATCH","CUDNN_CONVOLUTION","CUDNN_CONVOLUTION_BWD_DATA_ALGO_0","CUDNN_CONVOLUTION_BWD_DATA_ALGO_1","CUDNN_CONVOLUTION_BWD_DATA_ALGO_COUNT","CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT","CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT_TILING","CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD","CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD_NONFUSED","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_0","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_1","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_3","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_COUNT","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT_TILING","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD_NONFUSED","CUDNN_CONVOLUTION_FWD_ALGO_COUNT","CUDNN_CONVOLUTION_FWD_ALGO_DIRECT","CUDNN_CONVOLUTION_FWD_ALGO_FFT","CUDNN_CONVOLUTION_FWD_ALGO_FFT_TILING","CUDNN_CONVOLUTION_FWD_ALGO_GEMM","CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_GEMM","CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM","CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD","CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD_NONFUSED","CUDNN_CROSS_CORRELATION","CUDNN_CTC_LOSS_ALGO_DETERMINISTIC","CUDNN_CTC_LOSS_ALGO_NON_DETERMINISTIC","CUDNN_DATA_BFLOAT16","CUDNN_DATA_BOOLEAN","CUDNN_DATA_DOUBLE","CUDNN_DATA_FLOAT","CUDNN_DATA_HALF","CUDNN_DATA_INT32","CUDNN_DATA_INT64","CUDNN_DATA_INT8","CUDNN_DATA_INT8x32","CUDNN_DATA_INT8x4","CUDNN_DATA_UINT8","CUDNN_DATA_UINT8x4","CUDNN_DEFAULT_MATH","CUDNN_DEFAULT_REORDER","CUDNN_DETERMINISTIC","CUDNN_DIM_MAX","CUDNN_DIVNORM_PRECOMPUTED_MEANS","CUDNN_EDGE_VAL_PAD","CUDNN_ERRQUERY_BLOCKING","CUDNN_ERRQUERY_NONBLOCKING","CUDNN_ERRQUERY_RAWCODE","CUDNN_FMA_MATH","CUDNN_FUSED_BN_FINALIZE_STATISTICS_INFERENCE","CUDNN_FUSED_BN_FINALIZE_STATISTICS_TRAINING","CUDNN_FUSED_CONV_SCALE_BIAS_ADD_ACTIVATION","CUDNN_FUSED_DACTIVATION_FORK_DBATCHNORM","CUDNN_FUSED_SCALE_BIAS_ACTIVATION_CONV_BNSTATS","CUDNN_FUSED_SCALE_BIAS_ACTIVATION_WGRAD","CUDNN_FUSED_SCALE_BIAS_ADD_ACTIVATION_GEN_BITMASK","CUDNN_FWD_MODE_INFERENCE","CUDNN_FWD_MODE_TRAINING","CUDNN_GENSTATS_SUM_SQSUM","CUDNN_GRU","CUDNN_HEUR_MODES_COUNT","CUDNN_HEUR_MODE_A","CUDNN_HEUR_MODE_B","CUDNN_HEUR_MODE_FALLBACK","CUDNN_HEUR_MODE_INSTANT","CUDNN_KNOB_TYPE_CHUNK_K","CUDNN_KNOB_TYPE_COUNTS","CUDNN_KNOB_TYPE_CTA_SPLIT_K_MODE","CUDNN_KNOB_TYPE_EDGE","CUDNN_KNOB_TYPE_IDX_MODE","CUDNN_KNOB_TYPE_KBLOCK","CUDNN_KNOB_TYPE_KERNEL_CFG","CUDNN_KNOB_TYPE_LDGA","CUDNN_KNOB_TYPE_LDGB","CUDNN_KNOB_TYPE_LDGC","CUDNN_KNOB_TYPE_MULTIPLY","CUDNN_KNOB_TYPE_REDUCTION_MODE","CUDNN_KNOB_TYPE_SINGLEBUFFER","CUDNN_KNOB_TYPE_SLICED","CUDNN_KNOB_TYPE_SPECFILT","CUDNN_KNOB_TYPE_SPLIT_H","CUDNN_KNOB_TYPE_SPLIT_K","CUDNN_KNOB_TYPE_SPLIT_K_BUF","CUDNN_KNOB_TYPE_SPLIT_K_SLC","CUDNN_KNOB_TYPE_SPLIT_RS","CUDNN_KNOB_TYPE_STAGES","CUDNN_KNOB_TYPE_SWIZZLE","CUDNN_KNOB_TYPE_TILEK","CUDNN_KNOB_TYPE_TILE_SIZE","CUDNN_KNOB_TYPE_USE_TEX","CUDNN_KNOB_TYPE_WINO_TILE","CUDNN_LAYOUT_TYPE_COUNT","CUDNN_LAYOUT_TYPE_PREFERRED_NCHW","CUDNN_LAYOUT_TYPE_PREFERRED_NHWC","CUDNN_LAYOUT_TYPE_PREFERRED_PAD4CK","CUDNN_LAYOUT_TYPE_PREFERRED_PAD8CK","CUDNN_LINEAR_INPUT","CUDNN_LOSS_NORMALIZATION_NONE","CUDNN_LOSS_NORMALIZATION_SOFTMAX","CUDNN_LRN_CROSS_CHANNEL_DIM1","CUDNN_LRN_MAX_N","CUDNN_LRN_MIN_BETA","CUDNN_LRN_MIN_K","CUDNN_LRN_MIN_N","CUDNN_LSTM","CUDNN_MAJOR","CUDNN_MH_ATTN_K_BIASES","CUDNN_MH_ATTN_K_WEIGHTS","CUDNN_MH_ATTN_O_BIASES","CUDNN_MH_ATTN_O_WEIGHTS","CUDNN_MH_ATTN_Q_BIASES","CUDNN_MH_ATTN_Q_WEIGHTS","CUDNN_MH_ATTN_V_BIASES","CUDNN_MH_ATTN_V_WEIGHTS","CUDNN_MINOR","CUDNN_NEG_INF_PAD","CUDNN_NON_DETERMINISTIC","CUDNN_NORM_ALGO_PERSIST","CUDNN_NORM_ALGO_STANDARD","CUDNN_NORM_OPS_NORM","CUDNN_NORM_OPS_NORM_ACTIVATION","CUDNN_NORM_OPS_NORM_ADD_ACTIVATION","CUDNN_NORM_PER_ACTIVATION","CUDNN_NORM_PER_CHANNEL","CUDNN_NOT_PROPAGATE_NAN","CUDNN_NO_REORDER","CUDNN_NUMERICAL_NOTE_DOWN_CONVERT_INPUTS","CUDNN_NUMERICAL_NOTE_FFT","CUDNN_NUMERICAL_NOTE_NONDETERMINISTIC","CUDNN_NUMERICAL_NOTE_REDUCED_PRECISION_REDUCTION","CUDNN_NUMERICAL_NOTE_TENSOR_CORE","CUDNN_NUMERICAL_NOTE_TYPE_COUNT","CUDNN_NUMERICAL_NOTE_WINOGRAD","CUDNN_NUMERICAL_NOTE_WINOGRAD_TILE_13x13","CUDNN_NUMERICAL_NOTE_WINOGRAD_TILE_4x4","CUDNN_NUMERICAL_NOTE_WINOGRAD_TILE_6x6","CUDNN_OPS_INFER_MAJOR","CUDNN_OPS_INFER_MINOR","CUDNN_OPS_INFER_PATCH","CUDNN_OPS_TRAIN_MAJOR","CUDNN_OPS_TRAIN_MINOR","CUDNN_OPS_TRAIN_PATCH","CUDNN_OP_TENSOR_ADD","CUDNN_OP_TENSOR_MAX","CUDNN_OP_TENSOR_MIN","CUDNN_OP_TENSOR_MUL","CUDNN_OP_TENSOR_NOT","CUDNN_OP_TENSOR_SQRT","CUDNN_PARAM_ACTIVATION_BITMASK_DESC","CUDNN_PARAM_ACTIVATION_BITMASK_PLACEHOLDER","CUDNN_PARAM_ACTIVATION_DESC","CUDNN_PARAM_BN_BIAS_PLACEHOLDER","CUDNN_PARAM_BN_DBIAS_PLACEHOLDER","CUDNN_PARAM_BN_DSCALE_PLACEHOLDER","CUDNN_PARAM_BN_EQBIAS_PLACEHOLDER","CUDNN_PARAM_BN_EQSCALEBIAS_DESC","CUDNN_PARAM_BN_EQSCALE_PLACEHOLDER","CUDNN_PARAM_BN_MODE","CUDNN_PARAM_BN_RUNNING_MEAN_PLACEHOLDER","CUDNN_PARAM_BN_RUNNING_VAR_PLACEHOLDER","CUDNN_PARAM_BN_SAVED_INVSTD_PLACEHOLDER","CUDNN_PARAM_BN_SAVED_MEAN_PLACEHOLDER","CUDNN_PARAM_BN_SCALEBIAS_MEANVAR_DESC","CUDNN_PARAM_BN_SCALE_PLACEHOLDER","CUDNN_PARAM_BN_Z_EQBIAS_PLACEHOLDER","CUDNN_PARAM_BN_Z_EQSCALEBIAS_DESC","CUDNN_PARAM_BN_Z_EQSCALE_PLACEHOLDER","CUDNN_PARAM_CONV_DESC","CUDNN_PARAM_DWDATA_PLACEHOLDER","CUDNN_PARAM_DWDESC","CUDNN_PARAM_DXDATA_PLACEHOLDER","CUDNN_PARAM_DXDESC","CUDNN_PARAM_DYDATA_PLACEHOLDER","CUDNN_PARAM_DYDESC","CUDNN_PARAM_DZDATA_PLACEHOLDER","CUDNN_PARAM_DZDESC","CUDNN_PARAM_WDATA_PLACEHOLDER","CUDNN_PARAM_WDESC","CUDNN_PARAM_XDATA_PLACEHOLDER","CUDNN_PARAM_XDESC","CUDNN_PARAM_YDATA_PLACEHOLDER","CUDNN_PARAM_YDESC","CUDNN_PARAM_YSQSUM_PLACEHOLDER","CUDNN_PARAM_YSTATS_DESC","CUDNN_PARAM_YSUM_PLACEHOLDER","CUDNN_PARAM_ZDATA_PLACEHOLDER","CUDNN_PARAM_ZDESC","CUDNN_PATCHLEVEL","CUDNN_POINTWISE_ABS","CUDNN_POINTWISE_ADD","CUDNN_POINTWISE_ADD_SQUARE","CUDNN_POINTWISE_CEIL","CUDNN_POINTWISE_CMP_EQ","CUDNN_POINTWISE_CMP_GE","CUDNN_POINTWISE_CMP_GT","CUDNN_POINTWISE_CMP_LE","CUDNN_POINTWISE_CMP_LT","CUDNN_POINTWISE_CMP_NEQ","CUDNN_POINTWISE_COS","CUDNN_POINTWISE_DIV","CUDNN_POINTWISE_ELU_BWD","CUDNN_POINTWISE_ELU_FWD","CUDNN_POINTWISE_EXP","CUDNN_POINTWISE_FLOOR","CUDNN_POINTWISE_GELU_BWD","CUDNN_POINTWISE_GELU_FWD","CUDNN_POINTWISE_LOG","CUDNN_POINTWISE_LOGICAL_AND","CUDNN_POINTWISE_LOGICAL_NOT","CUDNN_POINTWISE_LOGICAL_OR","CUDNN_POINTWISE_MAX","CUDNN_POINTWISE_MIN","CUDNN_POINTWISE_MOD","CUDNN_POINTWISE_MUL","CUDNN_POINTWISE_NEG","CUDNN_POINTWISE_POW","CUDNN_POINTWISE_RELU_BWD","CUDNN_POINTWISE_RELU_FWD","CUDNN_POINTWISE_RSQRT","CUDNN_POINTWISE_SIGMOID_BWD","CUDNN_POINTWISE_SIGMOID_FWD","CUDNN_POINTWISE_SIN","CUDNN_POINTWISE_SOFTPLUS_BWD","CUDNN_POINTWISE_SOFTPLUS_FWD","CUDNN_POINTWISE_SQRT","CUDNN_POINTWISE_SUB","CUDNN_POINTWISE_SWISH_BWD","CUDNN_POINTWISE_SWISH_FWD","CUDNN_POINTWISE_TAN","CUDNN_POINTWISE_TANH_BWD","CUDNN_POINTWISE_TANH_FWD","CUDNN_POOLING_AVERAGE_COUNT_EXCLUDE_PADDING","CUDNN_POOLING_AVERAGE_COUNT_INCLUDE_PADDING","CUDNN_POOLING_MAX","CUDNN_POOLING_MAX_DETERMINISTIC","CUDNN_PROPAGATE_NAN","CUDNN_PTR_16B_ALIGNED","CUDNN_PTR_ACTIVATION_BITMASK","CUDNN_PTR_BN_BIAS","CUDNN_PTR_BN_DBIAS","CUDNN_PTR_BN_DSCALE","CUDNN_PTR_BN_EQBIAS","CUDNN_PTR_BN_EQSCALE","CUDNN_PTR_BN_RUNNING_MEAN","CUDNN_PTR_BN_RUNNING_VAR","CUDNN_PTR_BN_SAVED_INVSTD","CUDNN_PTR_BN_SAVED_MEAN","CUDNN_PTR_BN_SCALE","CUDNN_PTR_BN_Z_EQBIAS","CUDNN_PTR_BN_Z_EQSCALE","CUDNN_PTR_DWDATA","CUDNN_PTR_DXDATA","CUDNN_PTR_DYDATA","CUDNN_PTR_DZDATA","CUDNN_PTR_ELEM_ALIGNED","CUDNN_PTR_NULL","CUDNN_PTR_WDATA","CUDNN_PTR_WORKSPACE","CUDNN_PTR_XDATA","CUDNN_PTR_YDATA","CUDNN_PTR_YSQSUM","CUDNN_PTR_YSUM","CUDNN_PTR_ZDATA","CUDNN_REDUCE_TENSOR_ADD","CUDNN_REDUCE_TENSOR_AMAX","CUDNN_REDUCE_TENSOR_AVG","CUDNN_REDUCE_TENSOR_FLATTENED_INDICES","CUDNN_REDUCE_TENSOR_MAX","CUDNN_REDUCE_TENSOR_MIN","CUDNN_REDUCE_TENSOR_MUL","CUDNN_REDUCE_TENSOR_MUL_NO_ZEROS","CUDNN_REDUCE_TENSOR_NORM1","CUDNN_REDUCE_TENSOR_NORM2","CUDNN_REDUCE_TENSOR_NO_INDICES","CUDNN_RESAMPLE_AVGPOOL","CUDNN_RESAMPLE_BILINEAR","CUDNN_RESAMPLE_MAXPOOL","CUDNN_RESAMPLE_NEAREST","CUDNN_RNN_ALGO_COUNT","CUDNN_RNN_ALGO_PERSIST_DYNAMIC","CUDNN_RNN_ALGO_PERSIST_STATIC","CUDNN_RNN_ALGO_PERSIST_STATIC_SMALL_H","CUDNN_RNN_ALGO_STANDARD","CUDNN_RNN_CLIP_MINMAX","CUDNN_RNN_CLIP_NONE","CUDNN_RNN_DATA_LAYOUT_BATCH_MAJOR_UNPACKED","CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_PACKED","CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_UNPACKED","CUDNN_RNN_DOUBLE_BIAS","CUDNN_RNN_NO_BIAS","CUDNN_RNN_PADDED_IO_DISABLED","CUDNN_RNN_PADDED_IO_ENABLED","CUDNN_RNN_RELU","CUDNN_RNN_SINGLE_INP_BIAS","CUDNN_RNN_SINGLE_REC_BIAS","CUDNN_RNN_TANH","CUDNN_SAMPLER_BILINEAR","CUDNN_SCALAR_DOUBLE_BN_EPSILON","CUDNN_SCALAR_DOUBLE_BN_EXP_AVG_FACTOR","CUDNN_SCALAR_INT64_T_BN_ACCUMULATION_COUNT","CUDNN_SCALAR_SIZE_T_WORKSPACE_SIZE_IN_BYTES","CUDNN_SEQDATA_BATCH_DIM","CUDNN_SEQDATA_BEAM_DIM","CUDNN_SEQDATA_DIM_COUNT","CUDNN_SEQDATA_TIME_DIM","CUDNN_SEQDATA_VECT_DIM","CUDNN_SEV_ERROR","CUDNN_SEV_FATAL","CUDNN_SEV_INFO","CUDNN_SEV_WARNING","CUDNN_SKIP_INPUT","CUDNN_SOFTMAX_ACCURATE","CUDNN_SOFTMAX_FAST","CUDNN_SOFTMAX_LOG","CUDNN_SOFTMAX_MODE_CHANNEL","CUDNN_SOFTMAX_MODE_INSTANCE","CUDNN_STATUS_ALLOC_FAILED","CUDNN_STATUS_ARCH_MISMATCH","CUDNN_STATUS_BAD_PARAM","CUDNN_STATUS_EXECUTION_FAILED","CUDNN_STATUS_INTERNAL_ERROR","CUDNN_STATUS_INVALID_VALUE","CUDNN_STATUS_LICENSE_ERROR","CUDNN_STATUS_MAPPING_ERROR","CUDNN_STATUS_NOT_INITIALIZED","CUDNN_STATUS_NOT_SUPPORTED","CUDNN_STATUS_RUNTIME_FP_OVERFLOW","CUDNN_STATUS_RUNTIME_IN_PROGRESS","CUDNN_STATUS_RUNTIME_PREREQUISITE_MISSING","CUDNN_STATUS_SUCCESS","CUDNN_STATUS_VERSION_MISMATCH","CUDNN_TENSOR_NCHW","CUDNN_TENSOR_NCHW_VECT_C","CUDNN_TENSOR_NHWC","CUDNN_TENSOR_OP_MATH","CUDNN_TENSOR_OP_MATH_ALLOW_CONVERSION","CUDNN_TENSOR_REORDERING_INT8x32","CUDNN_TENSOR_REORDERING_NONE","CUDNN_TRANSFORM_FOLD","CUDNN_TRANSFORM_UNFOLD","CUDNN_TYPE_ATTRIB_NAME","CUDNN_TYPE_BACKEND_DESCRIPTOR","CUDNN_TYPE_BEHAVIOR_NOTE","CUDNN_TYPE_BN_FINALIZE_STATS_MODE","CUDNN_TYPE_BOOLEAN","CUDNN_TYPE_CONVOLUTION_MODE","CUDNN_TYPE_DATA_TYPE","CUDNN_TYPE_DOUBLE","CUDNN_TYPE_FLOAT","CUDNN_TYPE_GENSTATS_MODE","CUDNN_TYPE_HANDLE","CUDNN_TYPE_HEUR_MODE","CUDNN_TYPE_INT32","CUDNN_TYPE_INT64","CUDNN_TYPE_KNOB_TYPE","CUDNN_TYPE_LAYOUT_TYPE","CUDNN_TYPE_NAN_PROPOGATION","CUDNN_TYPE_NUMERICAL_NOTE","CUDNN_TYPE_PADDING_MODE","CUDNN_TYPE_POINTWISE_MODE","CUDNN_TYPE_REDUCTION_OPERATOR_TYPE","CUDNN_TYPE_RESAMPLE_MODE","CUDNN_TYPE_TENSOR_REORDERING_MODE","CUDNN_TYPE_VOID_PTR","CUDNN_UNIDIRECTIONAL","CUDNN_VERSION","CUDNN_WGRAD_MODE_ADD","CUDNN_WGRAD_MODE_SET","CUDNN_ZERO_PAD","CUevent_st","CUexternalMemory_st","CUexternalSemaphore_st","CUfunc_st","CUgraphExec_st","CUgraphNode_st","CUgraph_st","CUmemPoolHandle_st","CUstream_st","CUuserObject_st","CUuuid","CUuuid_st","ConvolutionDescriptor","Cudnn","DropoutDescriptor","ECCEnabled","Error","ExecutionFailed","FilterDescriptor","InternalError","InvalidValue","LicenseError","MappingError","None","None","None","NormalizationDescriptor","NotInitialized","NotSupported","PoolingDescriptor","RNNAlgo","RnnDescriptor","Some","Some","Some","TensorDescriptor","Unknown","__cudaReserved","__int32_t","__int64_t","__uint32_t","accessDescCount","accessDescs","accessPolicyMaxWindowSize","accessPolicyWindow","accessPolicyWindow","activation_backward","activation_forward","add_tensor","addressMode","addressMode","algo","algo","algo","algo","algo","algo","algo","algo","alignment","allocType","args","array","array","asyncEngineCount","base_ptr","binaryVersion","blockDim","blockDim","borderColor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","bytes","bytesize","cacheModeCA","canMapHostMemory","canUseHostPointerForRegisteredMem","channelDesc","channelDesc","clockRate","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","computeMode","computePreemptionSupported","concurrentKernels","concurrentManagedAccess","constSizeBytes","convBwdDataAlgo","convBwdFilterAlgo","convFwdAlgo","convolution_backward_bias","convolution_backward_bias","convolution_backward_data","convolution_backward_data","convolution_backward_filter","convolution_backward_filter","convolution_forward","convolution_forward","cooperative","cooperativeLaunch","cooperativeMultiDeviceLaunch","create_activation_descriptor","create_convolution_descriptor","create_dropout_descriptor","create_filter_descriptor","create_lrn_descriptor","create_pooling_descriptor","create_rnn_data_descriptor","create_rnn_descriptor","create_tensor_descriptor","cuda","cudaAccessPolicyWindow","cudaAccessProperty","cudaAccessPropertyNormal","cudaAccessPropertyPersisting","cudaAccessPropertyStreaming","cudaAddressModeBorder","cudaAddressModeClamp","cudaAddressModeMirror","cudaAddressModeWrap","cudaArray","cudaArrayGetInfo","cudaArrayGetMemoryRequirements","cudaArrayGetPlane","cudaArrayGetSparseProperties","cudaArrayMemoryRequirements","cudaArraySparseProperties","cudaArraySparseProperties__bindgen_ty_1","cudaArray_const_t","cudaArray_t","cudaBindSurfaceToArray","cudaBindTexture","cudaBindTexture2D","cudaBindTextureToArray","cudaBindTextureToMipmappedArray","cudaBoundaryModeClamp","cudaBoundaryModeTrap","cudaBoundaryModeZero","cudaCGScope","cudaCGScopeGrid","cudaCGScopeInvalid","cudaCGScopeMultiGrid","cudaCSV","cudaCSV","cudaChannelFormatDesc","cudaChannelFormatKind","cudaChannelFormatKindFloat","cudaChannelFormatKindNV12","cudaChannelFormatKindNone","cudaChannelFormatKindSigned","cudaChannelFormatKindSignedBlockCompressed4","cudaChannelFormatKindSignedBlockCompressed5","cudaChannelFormatKindSignedBlockCompressed6H","cudaChannelFormatKindSignedNormalized16X1","cudaChannelFormatKindSignedNormalized16X2","cudaChannelFormatKindSignedNormalized16X4","cudaChannelFormatKindSignedNormalized8X1","cudaChannelFormatKindSignedNormalized8X2","cudaChannelFormatKindSignedNormalized8X4","cudaChannelFormatKindUnsigned","cudaChannelFormatKindUnsignedBlockCompressed1","cudaChannelFormatKindUnsignedBlockCompressed1SRGB","cudaChannelFormatKindUnsignedBlockCompressed2","cudaChannelFormatKindUnsignedBlockCompressed2SRGB","cudaChannelFormatKindUnsignedBlockCompressed3","cudaChannelFormatKindUnsignedBlockCompressed3SRGB","cudaChannelFormatKindUnsignedBlockCompressed4","cudaChannelFormatKindUnsignedBlockCompressed5","cudaChannelFormatKindUnsignedBlockCompressed6H","cudaChannelFormatKindUnsignedBlockCompressed7","cudaChannelFormatKindUnsignedBlockCompressed7SRGB","cudaChannelFormatKindUnsignedNormalized16X1","cudaChannelFormatKindUnsignedNormalized16X2","cudaChannelFormatKindUnsignedNormalized16X4","cudaChannelFormatKindUnsignedNormalized8X1","cudaChannelFormatKindUnsignedNormalized8X2","cudaChannelFormatKindUnsignedNormalized8X4","cudaChooseDevice","cudaComputeMode","cudaComputeModeDefault","cudaComputeModeExclusive","cudaComputeModeExclusiveProcess","cudaComputeModeProhibited","cudaCreateChannelDesc","cudaCreateSurfaceObject","cudaCreateTextureObject","cudaCtxResetPersistingL2Cache","cudaDataType","cudaDataType_t","cudaDestroyExternalMemory","cudaDestroyExternalSemaphore","cudaDestroySurfaceObject","cudaDestroyTextureObject","cudaDevAttrAsyncEngineCount","cudaDevAttrCanFlushRemoteWrites","cudaDevAttrCanMapHostMemory","cudaDevAttrCanUseHostPointerForRegisteredMem","cudaDevAttrClockRate","cudaDevAttrComputeCapabilityMajor","cudaDevAttrComputeCapabilityMinor","cudaDevAttrComputeMode","cudaDevAttrComputePreemptionSupported","cudaDevAttrConcurrentKernels","cudaDevAttrConcurrentManagedAccess","cudaDevAttrCooperativeLaunch","cudaDevAttrCooperativeMultiDeviceLaunch","cudaDevAttrDeferredMappingCudaArraySupported","cudaDevAttrDirectManagedMemAccessFromHost","cudaDevAttrEccEnabled","cudaDevAttrGPUDirectRDMAFlushWritesOptions","cudaDevAttrGPUDirectRDMASupported","cudaDevAttrGPUDirectRDMAWritesOrdering","cudaDevAttrGlobalL1CacheSupported","cudaDevAttrGlobalMemoryBusWidth","cudaDevAttrGpuOverlap","cudaDevAttrHostNativeAtomicSupported","cudaDevAttrHostRegisterReadOnlySupported","cudaDevAttrHostRegisterSupported","cudaDevAttrIntegrated","cudaDevAttrIsMultiGpuBoard","cudaDevAttrKernelExecTimeout","cudaDevAttrL2CacheSize","cudaDevAttrLocalL1CacheSupported","cudaDevAttrManagedMemory","cudaDevAttrMax","cudaDevAttrMaxAccessPolicyWindowSize","cudaDevAttrMaxBlockDimX","cudaDevAttrMaxBlockDimY","cudaDevAttrMaxBlockDimZ","cudaDevAttrMaxBlocksPerMultiprocessor","cudaDevAttrMaxGridDimX","cudaDevAttrMaxGridDimY","cudaDevAttrMaxGridDimZ","cudaDevAttrMaxPersistingL2CacheSize","cudaDevAttrMaxPitch","cudaDevAttrMaxRegistersPerBlock","cudaDevAttrMaxRegistersPerMultiprocessor","cudaDevAttrMaxSharedMemoryPerBlock","cudaDevAttrMaxSharedMemoryPerBlockOptin","cudaDevAttrMaxSharedMemoryPerMultiprocessor","cudaDevAttrMaxSurface1DLayeredLayers","cudaDevAttrMaxSurface1DLayeredWidth","cudaDevAttrMaxSurface1DWidth","cudaDevAttrMaxSurface2DHeight","cudaDevAttrMaxSurface2DLayeredHeight","cudaDevAttrMaxSurface2DLayeredLayers","cudaDevAttrMaxSurface2DLayeredWidth","cudaDevAttrMaxSurface2DWidth","cudaDevAttrMaxSurface3DDepth","cudaDevAttrMaxSurface3DHeight","cudaDevAttrMaxSurface3DWidth","cudaDevAttrMaxSurfaceCubemapLayeredLayers","cudaDevAttrMaxSurfaceCubemapLayeredWidth","cudaDevAttrMaxSurfaceCubemapWidth","cudaDevAttrMaxTexture1DLayeredLayers","cudaDevAttrMaxTexture1DLayeredWidth","cudaDevAttrMaxTexture1DLinearWidth","cudaDevAttrMaxTexture1DMipmappedWidth","cudaDevAttrMaxTexture1DWidth","cudaDevAttrMaxTexture2DGatherHeight","cudaDevAttrMaxTexture2DGatherWidth","cudaDevAttrMaxTexture2DHeight","cudaDevAttrMaxTexture2DLayeredHeight","cudaDevAttrMaxTexture2DLayeredLayers","cudaDevAttrMaxTexture2DLayeredWidth","cudaDevAttrMaxTexture2DLinearHeight","cudaDevAttrMaxTexture2DLinearPitch","cudaDevAttrMaxTexture2DLinearWidth","cudaDevAttrMaxTexture2DMipmappedHeight","cudaDevAttrMaxTexture2DMipmappedWidth","cudaDevAttrMaxTexture2DWidth","cudaDevAttrMaxTexture3DDepth","cudaDevAttrMaxTexture3DDepthAlt","cudaDevAttrMaxTexture3DHeight","cudaDevAttrMaxTexture3DHeightAlt","cudaDevAttrMaxTexture3DWidth","cudaDevAttrMaxTexture3DWidthAlt","cudaDevAttrMaxTextureCubemapLayeredLayers","cudaDevAttrMaxTextureCubemapLayeredWidth","cudaDevAttrMaxTextureCubemapWidth","cudaDevAttrMaxThreadsPerBlock","cudaDevAttrMaxThreadsPerMultiProcessor","cudaDevAttrMaxTimelineSemaphoreInteropSupported","cudaDevAttrMemoryClockRate","cudaDevAttrMemoryPoolSupportedHandleTypes","cudaDevAttrMemoryPoolsSupported","cudaDevAttrMultiGpuBoardGroupID","cudaDevAttrMultiProcessorCount","cudaDevAttrPageableMemoryAccess","cudaDevAttrPageableMemoryAccessUsesHostPageTables","cudaDevAttrPciBusId","cudaDevAttrPciDeviceId","cudaDevAttrPciDomainId","cudaDevAttrReserved92","cudaDevAttrReserved93","cudaDevAttrReserved94","cudaDevAttrReservedSharedMemoryPerBlock","cudaDevAttrSingleToDoublePrecisionPerfRatio","cudaDevAttrSparseCudaArraySupported","cudaDevAttrStreamPrioritiesSupported","cudaDevAttrSurfaceAlignment","cudaDevAttrTccDriver","cudaDevAttrTextureAlignment","cudaDevAttrTexturePitchAlignment","cudaDevAttrTimelineSemaphoreInteropSupported","cudaDevAttrTotalConstantMemory","cudaDevAttrUnifiedAddressing","cudaDevAttrWarpSize","cudaDevP2PAttrAccessSupported","cudaDevP2PAttrCudaArrayAccessSupported","cudaDevP2PAttrNativeAtomicSupported","cudaDevP2PAttrPerformanceRank","cudaDeviceAttr","cudaDeviceCanAccessPeer","cudaDeviceDisablePeerAccess","cudaDeviceEnablePeerAccess","cudaDeviceFlushGPUDirectRDMAWrites","cudaDeviceGetAttribute","cudaDeviceGetByPCIBusId","cudaDeviceGetCacheConfig","cudaDeviceGetDefaultMemPool","cudaDeviceGetGraphMemAttribute","cudaDeviceGetLimit","cudaDeviceGetMemPool","cudaDeviceGetNvSciSyncAttributes","cudaDeviceGetP2PAttribute","cudaDeviceGetPCIBusId","cudaDeviceGetSharedMemConfig","cudaDeviceGetStreamPriorityRange","cudaDeviceGetTexture1DLinearMaxWidth","cudaDeviceGraphMemTrim","cudaDeviceId","cudaDeviceId","cudaDeviceP2PAttr","cudaDeviceProp","cudaDeviceReset","cudaDeviceSetCacheConfig","cudaDeviceSetGraphMemAttribute","cudaDeviceSetLimit","cudaDeviceSetMemPool","cudaDeviceSetSharedMemConfig","cudaDeviceSynchronize","cudaDriverGetVersion","cudaEnableDefault","cudaEnableLegacyStream","cudaEnablePerThreadDefaultStream","cudaError","cudaErrorAddressOfConstant","cudaErrorAddressOfConstant","cudaErrorAlreadyAcquired","cudaErrorAlreadyAcquired","cudaErrorAlreadyMapped","cudaErrorAlreadyMapped","cudaErrorApiFailureBase","cudaErrorApiFailureBase","cudaErrorArrayIsMapped","cudaErrorArrayIsMapped","cudaErrorAssert","cudaErrorAssert","cudaErrorCallRequiresNewerDriver","cudaErrorCallRequiresNewerDriver","cudaErrorCapturedEvent","cudaErrorCapturedEvent","cudaErrorCompatNotSupportedOnDevice","cudaErrorCompatNotSupportedOnDevice","cudaErrorContextIsDestroyed","cudaErrorContextIsDestroyed","cudaErrorCooperativeLaunchTooLarge","cudaErrorCooperativeLaunchTooLarge","cudaErrorCudartUnloading","cudaErrorCudartUnloading","cudaErrorDeviceAlreadyInUse","cudaErrorDeviceAlreadyInUse","cudaErrorDeviceNotLicensed","cudaErrorDeviceNotLicensed","cudaErrorDeviceUninitialized","cudaErrorDeviceUninitialized","cudaErrorDevicesUnavailable","cudaErrorDevicesUnavailable","cudaErrorDuplicateSurfaceName","cudaErrorDuplicateSurfaceName","cudaErrorDuplicateTextureName","cudaErrorDuplicateTextureName","cudaErrorDuplicateVariableName","cudaErrorDuplicateVariableName","cudaErrorECCUncorrectable","cudaErrorECCUncorrectable","cudaErrorExternalDevice","cudaErrorExternalDevice","cudaErrorFileNotFound","cudaErrorFileNotFound","cudaErrorGraphExecUpdateFailure","cudaErrorGraphExecUpdateFailure","cudaErrorHardwareStackError","cudaErrorHardwareStackError","cudaErrorHostMemoryAlreadyRegistered","cudaErrorHostMemoryAlreadyRegistered","cudaErrorHostMemoryNotRegistered","cudaErrorHostMemoryNotRegistered","cudaErrorIllegalAddress","cudaErrorIllegalAddress","cudaErrorIllegalInstruction","cudaErrorIllegalInstruction","cudaErrorIllegalState","cudaErrorIllegalState","cudaErrorIncompatibleDriverContext","cudaErrorIncompatibleDriverContext","cudaErrorInitializationError","cudaErrorInitializationError","cudaErrorInsufficientDriver","cudaErrorInsufficientDriver","cudaErrorInvalidAddressSpace","cudaErrorInvalidAddressSpace","cudaErrorInvalidChannelDescriptor","cudaErrorInvalidChannelDescriptor","cudaErrorInvalidConfiguration","cudaErrorInvalidConfiguration","cudaErrorInvalidDevice","cudaErrorInvalidDevice","cudaErrorInvalidDeviceFunction","cudaErrorInvalidDeviceFunction","cudaErrorInvalidDevicePointer","cudaErrorInvalidDevicePointer","cudaErrorInvalidFilterSetting","cudaErrorInvalidFilterSetting","cudaErrorInvalidGraphicsContext","cudaErrorInvalidGraphicsContext","cudaErrorInvalidHostPointer","cudaErrorInvalidHostPointer","cudaErrorInvalidKernelImage","cudaErrorInvalidKernelImage","cudaErrorInvalidMemcpyDirection","cudaErrorInvalidMemcpyDirection","cudaErrorInvalidNormSetting","cudaErrorInvalidNormSetting","cudaErrorInvalidPc","cudaErrorInvalidPc","cudaErrorInvalidPitchValue","cudaErrorInvalidPitchValue","cudaErrorInvalidPtx","cudaErrorInvalidPtx","cudaErrorInvalidResourceHandle","cudaErrorInvalidResourceHandle","cudaErrorInvalidSource","cudaErrorInvalidSource","cudaErrorInvalidSurface","cudaErrorInvalidSurface","cudaErrorInvalidSymbol","cudaErrorInvalidSymbol","cudaErrorInvalidTexture","cudaErrorInvalidTexture","cudaErrorInvalidTextureBinding","cudaErrorInvalidTextureBinding","cudaErrorInvalidValue","cudaErrorInvalidValue","cudaErrorJitCompilationDisabled","cudaErrorJitCompilationDisabled","cudaErrorJitCompilerNotFound","cudaErrorJitCompilerNotFound","cudaErrorLaunchFailure","cudaErrorLaunchFailure","cudaErrorLaunchFileScopedSurf","cudaErrorLaunchFileScopedSurf","cudaErrorLaunchFileScopedTex","cudaErrorLaunchFileScopedTex","cudaErrorLaunchIncompatibleTexturing","cudaErrorLaunchIncompatibleTexturing","cudaErrorLaunchMaxDepthExceeded","cudaErrorLaunchMaxDepthExceeded","cudaErrorLaunchOutOfResources","cudaErrorLaunchOutOfResources","cudaErrorLaunchPendingCountExceeded","cudaErrorLaunchPendingCountExceeded","cudaErrorLaunchTimeout","cudaErrorLaunchTimeout","cudaErrorMapBufferObjectFailed","cudaErrorMapBufferObjectFailed","cudaErrorMemoryAllocation","cudaErrorMemoryAllocation","cudaErrorMemoryValueTooLarge","cudaErrorMemoryValueTooLarge","cudaErrorMisalignedAddress","cudaErrorMisalignedAddress","cudaErrorMissingConfiguration","cudaErrorMissingConfiguration","cudaErrorMixedDeviceExecution","cudaErrorMixedDeviceExecution","cudaErrorMpsConnectionFailed","cudaErrorMpsConnectionFailed","cudaErrorMpsMaxClientsReached","cudaErrorMpsMaxClientsReached","cudaErrorMpsMaxConnectionsReached","cudaErrorMpsMaxConnectionsReached","cudaErrorMpsRpcFailure","cudaErrorMpsRpcFailure","cudaErrorMpsServerNotReady","cudaErrorMpsServerNotReady","cudaErrorNoDevice","cudaErrorNoDevice","cudaErrorNoKernelImageForDevice","cudaErrorNoKernelImageForDevice","cudaErrorNotMapped","cudaErrorNotMapped","cudaErrorNotMappedAsArray","cudaErrorNotMappedAsArray","cudaErrorNotMappedAsPointer","cudaErrorNotMappedAsPointer","cudaErrorNotPermitted","cudaErrorNotPermitted","cudaErrorNotReady","cudaErrorNotReady","cudaErrorNotSupported","cudaErrorNotSupported","cudaErrorNotYetImplemented","cudaErrorNotYetImplemented","cudaErrorNvlinkUncorrectable","cudaErrorNvlinkUncorrectable","cudaErrorOperatingSystem","cudaErrorOperatingSystem","cudaErrorPeerAccessAlreadyEnabled","cudaErrorPeerAccessAlreadyEnabled","cudaErrorPeerAccessNotEnabled","cudaErrorPeerAccessNotEnabled","cudaErrorPeerAccessUnsupported","cudaErrorPeerAccessUnsupported","cudaErrorPriorLaunchFailure","cudaErrorPriorLaunchFailure","cudaErrorProfilerAlreadyStarted","cudaErrorProfilerAlreadyStarted","cudaErrorProfilerAlreadyStopped","cudaErrorProfilerAlreadyStopped","cudaErrorProfilerDisabled","cudaErrorProfilerDisabled","cudaErrorProfilerNotInitialized","cudaErrorProfilerNotInitialized","cudaErrorSetOnActiveProcess","cudaErrorSetOnActiveProcess","cudaErrorSharedObjectInitFailed","cudaErrorSharedObjectInitFailed","cudaErrorSharedObjectSymbolNotFound","cudaErrorSharedObjectSymbolNotFound","cudaErrorSoftwareValidityNotEstablished","cudaErrorSoftwareValidityNotEstablished","cudaErrorStartupFailure","cudaErrorStartupFailure","cudaErrorStreamCaptureImplicit","cudaErrorStreamCaptureImplicit","cudaErrorStreamCaptureInvalidated","cudaErrorStreamCaptureInvalidated","cudaErrorStreamCaptureIsolation","cudaErrorStreamCaptureIsolation","cudaErrorStreamCaptureMerge","cudaErrorStreamCaptureMerge","cudaErrorStreamCaptureUnjoined","cudaErrorStreamCaptureUnjoined","cudaErrorStreamCaptureUnmatched","cudaErrorStreamCaptureUnmatched","cudaErrorStreamCaptureUnsupported","cudaErrorStreamCaptureUnsupported","cudaErrorStreamCaptureWrongThread","cudaErrorStreamCaptureWrongThread","cudaErrorStubLibrary","cudaErrorStubLibrary","cudaErrorSymbolNotFound","cudaErrorSymbolNotFound","cudaErrorSyncDepthExceeded","cudaErrorSyncDepthExceeded","cudaErrorSynchronizationError","cudaErrorSynchronizationError","cudaErrorSystemDriverMismatch","cudaErrorSystemDriverMismatch","cudaErrorSystemNotReady","cudaErrorSystemNotReady","cudaErrorTextureFetchFailed","cudaErrorTextureFetchFailed","cudaErrorTextureNotBound","cudaErrorTextureNotBound","cudaErrorTimeout","cudaErrorTimeout","cudaErrorTooManyPeers","cudaErrorTooManyPeers","cudaErrorUnknown","cudaErrorUnknown","cudaErrorUnmapBufferObjectFailed","cudaErrorUnmapBufferObjectFailed","cudaErrorUnsupportedExecAffinity","cudaErrorUnsupportedExecAffinity","cudaErrorUnsupportedLimit","cudaErrorUnsupportedLimit","cudaErrorUnsupportedPtxVersion","cudaErrorUnsupportedPtxVersion","cudaError_t","cudaEventCreate","cudaEventCreateWithFlags","cudaEventDestroy","cudaEventElapsedTime","cudaEventQuery","cudaEventRecord","cudaEventRecordWithFlags","cudaEventSynchronize","cudaEvent_t","cudaExtent","cudaExternalMemoryBufferDesc","cudaExternalMemoryGetMappedBuffer","cudaExternalMemoryGetMappedMipmappedArray","cudaExternalMemoryHandleDesc","cudaExternalMemoryHandleDesc__bindgen_ty_1","cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1","cudaExternalMemoryHandleType","cudaExternalMemoryHandleTypeD3D11Resource","cudaExternalMemoryHandleTypeD3D11ResourceKmt","cudaExternalMemoryHandleTypeD3D12Heap","cudaExternalMemoryHandleTypeD3D12Resource","cudaExternalMemoryHandleTypeNvSciBuf","cudaExternalMemoryHandleTypeOpaqueFd","cudaExternalMemoryHandleTypeOpaqueWin32","cudaExternalMemoryHandleTypeOpaqueWin32Kmt","cudaExternalMemoryMipmappedArrayDesc","cudaExternalMemory_t","cudaExternalSemaphoreHandleDesc","cudaExternalSemaphoreHandleDesc__bindgen_ty_1","cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreHandleType","cudaExternalSemaphoreHandleTypeD3D11Fence","cudaExternalSemaphoreHandleTypeD3D12Fence","cudaExternalSemaphoreHandleTypeKeyedMutex","cudaExternalSemaphoreHandleTypeKeyedMutexKmt","cudaExternalSemaphoreHandleTypeNvSciSync","cudaExternalSemaphoreHandleTypeOpaqueFd","cudaExternalSemaphoreHandleTypeOpaqueWin32","cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt","cudaExternalSemaphoreHandleTypeTimelineSemaphoreFd","cudaExternalSemaphoreHandleTypeTimelineSemaphoreWin32","cudaExternalSemaphoreSignalNodeParams","cudaExternalSemaphoreSignalParams","cudaExternalSemaphoreSignalParams__bindgen_ty_1","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphoreSignalParams_v1","cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1","cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphoreWaitNodeParams","cudaExternalSemaphoreWaitParams","cudaExternalSemaphoreWaitParams__bindgen_ty_1","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphoreWaitParams_v1","cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1","cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphore_t","cudaFilterModeLinear","cudaFilterModePoint","cudaFlushGPUDirectRDMAWritesOptionHost","cudaFlushGPUDirectRDMAWritesOptionMemOps","cudaFlushGPUDirectRDMAWritesOptions","cudaFlushGPUDirectRDMAWritesScope","cudaFlushGPUDirectRDMAWritesTarget","cudaFlushGPUDirectRDMAWritesTargetCurrentDevice","cudaFlushGPUDirectRDMAWritesToAllDevices","cudaFlushGPUDirectRDMAWritesToOwner","cudaFormatModeAuto","cudaFormatModeForced","cudaFree","cudaFreeArray","cudaFreeAsync","cudaFreeHost","cudaFreeMipmappedArray","cudaFuncAttribute","cudaFuncAttributeMax","cudaFuncAttributeMaxDynamicSharedMemorySize","cudaFuncAttributePreferredSharedMemoryCarveout","cudaFuncAttributes","cudaFuncCache","cudaFuncCachePreferEqual","cudaFuncCachePreferL1","cudaFuncCachePreferNone","cudaFuncCachePreferShared","cudaFuncGetAttributes","cudaFuncSetAttribute","cudaFuncSetCacheConfig","cudaFuncSetSharedMemConfig","cudaFunction_t","cudaGPUDirectRDMAWritesOrdering","cudaGPUDirectRDMAWritesOrderingAllDevices","cudaGPUDirectRDMAWritesOrderingNone","cudaGPUDirectRDMAWritesOrderingOwner","cudaGetChannelDesc","cudaGetDevice","cudaGetDeviceCount","cudaGetDeviceFlags","cudaGetDeviceProperties","cudaGetDriverEntryPoint","cudaGetDriverEntryPointFlags","cudaGetErrorName","cudaGetErrorString","cudaGetExportTable","cudaGetFuncBySymbol","cudaGetLastError","cudaGetMipmappedArrayLevel","cudaGetSurfaceObjectResourceDesc","cudaGetSurfaceReference","cudaGetSymbolAddress","cudaGetSymbolSize","cudaGetTextureAlignmentOffset","cudaGetTextureObjectResourceDesc","cudaGetTextureObjectResourceViewDesc","cudaGetTextureObjectTextureDesc","cudaGetTextureReference","cudaGraphAddChildGraphNode","cudaGraphAddDependencies","cudaGraphAddEmptyNode","cudaGraphAddEventRecordNode","cudaGraphAddEventWaitNode","cudaGraphAddExternalSemaphoresSignalNode","cudaGraphAddExternalSemaphoresWaitNode","cudaGraphAddHostNode","cudaGraphAddKernelNode","cudaGraphAddMemAllocNode","cudaGraphAddMemFreeNode","cudaGraphAddMemcpyNode","cudaGraphAddMemcpyNode1D","cudaGraphAddMemcpyNodeFromSymbol","cudaGraphAddMemcpyNodeToSymbol","cudaGraphAddMemsetNode","cudaGraphChildGraphNodeGetGraph","cudaGraphClone","cudaGraphCreate","cudaGraphDebugDotFlags","cudaGraphDebugDotFlagsEventNodeParams","cudaGraphDebugDotFlagsExtSemasSignalNodeParams","cudaGraphDebugDotFlagsExtSemasWaitNodeParams","cudaGraphDebugDotFlagsHandles","cudaGraphDebugDotFlagsHostNodeParams","cudaGraphDebugDotFlagsKernelNodeAttributes","cudaGraphDebugDotFlagsKernelNodeParams","cudaGraphDebugDotFlagsMemcpyNodeParams","cudaGraphDebugDotFlagsMemsetNodeParams","cudaGraphDebugDotFlagsVerbose","cudaGraphDebugDotPrint","cudaGraphDestroy","cudaGraphDestroyNode","cudaGraphEventRecordNodeGetEvent","cudaGraphEventRecordNodeSetEvent","cudaGraphEventWaitNodeGetEvent","cudaGraphEventWaitNodeSetEvent","cudaGraphExecChildGraphNodeSetParams","cudaGraphExecDestroy","cudaGraphExecEventRecordNodeSetEvent","cudaGraphExecEventWaitNodeSetEvent","cudaGraphExecExternalSemaphoresSignalNodeSetParams","cudaGraphExecExternalSemaphoresWaitNodeSetParams","cudaGraphExecHostNodeSetParams","cudaGraphExecKernelNodeSetParams","cudaGraphExecMemcpyNodeSetParams","cudaGraphExecMemcpyNodeSetParams1D","cudaGraphExecMemcpyNodeSetParamsFromSymbol","cudaGraphExecMemcpyNodeSetParamsToSymbol","cudaGraphExecMemsetNodeSetParams","cudaGraphExecUpdate","cudaGraphExecUpdateError","cudaGraphExecUpdateErrorAttributesChanged","cudaGraphExecUpdateErrorFunctionChanged","cudaGraphExecUpdateErrorNodeTypeChanged","cudaGraphExecUpdateErrorNotSupported","cudaGraphExecUpdateErrorParametersChanged","cudaGraphExecUpdateErrorTopologyChanged","cudaGraphExecUpdateErrorUnsupportedFunctionChange","cudaGraphExecUpdateResult","cudaGraphExecUpdateSuccess","cudaGraphExec_t","cudaGraphExternalSemaphoresSignalNodeGetParams","cudaGraphExternalSemaphoresSignalNodeSetParams","cudaGraphExternalSemaphoresWaitNodeGetParams","cudaGraphExternalSemaphoresWaitNodeSetParams","cudaGraphGetEdges","cudaGraphGetNodes","cudaGraphGetRootNodes","cudaGraphHostNodeGetParams","cudaGraphHostNodeSetParams","cudaGraphInstantiate","cudaGraphInstantiateFlagAutoFreeOnLaunch","cudaGraphInstantiateFlagUseNodePriority","cudaGraphInstantiateFlags","cudaGraphInstantiateWithFlags","cudaGraphKernelNodeCopyAttributes","cudaGraphKernelNodeGetAttribute","cudaGraphKernelNodeGetParams","cudaGraphKernelNodeSetAttribute","cudaGraphKernelNodeSetParams","cudaGraphLaunch","cudaGraphMemAllocNodeGetParams","cudaGraphMemAttrReservedMemCurrent","cudaGraphMemAttrReservedMemHigh","cudaGraphMemAttrUsedMemCurrent","cudaGraphMemAttrUsedMemHigh","cudaGraphMemAttributeType","cudaGraphMemFreeNodeGetParams","cudaGraphMemcpyNodeGetParams","cudaGraphMemcpyNodeSetParams","cudaGraphMemcpyNodeSetParams1D","cudaGraphMemcpyNodeSetParamsFromSymbol","cudaGraphMemcpyNodeSetParamsToSymbol","cudaGraphMemsetNodeGetParams","cudaGraphMemsetNodeSetParams","cudaGraphNodeFindInClone","cudaGraphNodeGetDependencies","cudaGraphNodeGetDependentNodes","cudaGraphNodeGetEnabled","cudaGraphNodeGetType","cudaGraphNodeSetEnabled","cudaGraphNodeType","cudaGraphNodeTypeCount","cudaGraphNodeTypeEmpty","cudaGraphNodeTypeEventRecord","cudaGraphNodeTypeExtSemaphoreSignal","cudaGraphNodeTypeExtSemaphoreWait","cudaGraphNodeTypeGraph","cudaGraphNodeTypeHost","cudaGraphNodeTypeKernel","cudaGraphNodeTypeMemAlloc","cudaGraphNodeTypeMemFree","cudaGraphNodeTypeMemcpy","cudaGraphNodeTypeMemset","cudaGraphNodeTypeWaitEvent","cudaGraphNode_t","cudaGraphReleaseUserObject","cudaGraphRemoveDependencies","cudaGraphRetainUserObject","cudaGraphUpload","cudaGraphUserObjectMove","cudaGraph_t","cudaGraphicsCubeFace","cudaGraphicsCubeFaceNegativeX","cudaGraphicsCubeFaceNegativeY","cudaGraphicsCubeFaceNegativeZ","cudaGraphicsCubeFacePositiveX","cudaGraphicsCubeFacePositiveY","cudaGraphicsCubeFacePositiveZ","cudaGraphicsMapFlags","cudaGraphicsMapFlagsNone","cudaGraphicsMapFlagsReadOnly","cudaGraphicsMapFlagsWriteDiscard","cudaGraphicsMapResources","cudaGraphicsRegisterFlags","cudaGraphicsRegisterFlagsNone","cudaGraphicsRegisterFlagsReadOnly","cudaGraphicsRegisterFlagsSurfaceLoadStore","cudaGraphicsRegisterFlagsTextureGather","cudaGraphicsRegisterFlagsWriteDiscard","cudaGraphicsResource","cudaGraphicsResourceGetMappedMipmappedArray","cudaGraphicsResourceGetMappedPointer","cudaGraphicsResourceSetMapFlags","cudaGraphicsResource_t","cudaGraphicsSubResourceGetMappedArray","cudaGraphicsUnmapResources","cudaGraphicsUnregisterResource","cudaHostAlloc","cudaHostFn_t","cudaHostGetDevicePointer","cudaHostGetFlags","cudaHostNodeParams","cudaHostRegister","cudaHostUnregister","cudaImportExternalMemory","cudaImportExternalSemaphore","cudaIpcCloseMemHandle","cudaIpcEventHandle_st","cudaIpcEventHandle_t","cudaIpcGetEventHandle","cudaIpcGetMemHandle","cudaIpcMemHandle_st","cudaIpcMemHandle_t","cudaIpcOpenEventHandle","cudaIpcOpenMemHandle","cudaKernelNodeAttrID","cudaKernelNodeAttrValue","cudaKernelNodeAttributeAccessPolicyWindow","cudaKernelNodeAttributeCooperative","cudaKernelNodeAttributePriority","cudaKernelNodeParams","cudaKeyValuePair","cudaKeyValuePair","cudaLaunchCooperativeKernel","cudaLaunchCooperativeKernelMultiDevice","cudaLaunchHostFunc","cudaLaunchKernel","cudaLaunchParams","cudaLimit","cudaLimitDevRuntimePendingLaunchCount","cudaLimitDevRuntimeSyncDepth","cudaLimitMallocHeapSize","cudaLimitMaxL2FetchGranularity","cudaLimitPersistingL2CacheSize","cudaLimitPrintfFifoSize","cudaLimitStackSize","cudaMalloc","cudaMalloc3D","cudaMalloc3DArray","cudaMallocArray","cudaMallocAsync","cudaMallocFromPoolAsync","cudaMallocHost","cudaMallocManaged","cudaMallocMipmappedArray","cudaMallocPitch","cudaMemAccessDesc","cudaMemAccessFlags","cudaMemAccessFlagsProtNone","cudaMemAccessFlagsProtRead","cudaMemAccessFlagsProtReadWrite","cudaMemAdvise","cudaMemAdviseSetAccessedBy","cudaMemAdviseSetPreferredLocation","cudaMemAdviseSetReadMostly","cudaMemAdviseUnsetAccessedBy","cudaMemAdviseUnsetPreferredLocation","cudaMemAdviseUnsetReadMostly","cudaMemAllocNodeParams","cudaMemAllocationHandleType","cudaMemAllocationType","cudaMemAllocationTypeInvalid","cudaMemAllocationTypeMax","cudaMemAllocationTypePinned","cudaMemGetInfo","cudaMemHandleTypeNone","cudaMemHandleTypePosixFileDescriptor","cudaMemHandleTypeWin32","cudaMemHandleTypeWin32Kmt","cudaMemLocation","cudaMemLocationType","cudaMemLocationTypeDevice","cudaMemLocationTypeInvalid","cudaMemPoolAttr","cudaMemPoolAttrReleaseThreshold","cudaMemPoolAttrReservedMemCurrent","cudaMemPoolAttrReservedMemHigh","cudaMemPoolAttrUsedMemCurrent","cudaMemPoolAttrUsedMemHigh","cudaMemPoolCreate","cudaMemPoolDestroy","cudaMemPoolExportPointer","cudaMemPoolExportToShareableHandle","cudaMemPoolGetAccess","cudaMemPoolGetAttribute","cudaMemPoolImportFromShareableHandle","cudaMemPoolImportPointer","cudaMemPoolProps","cudaMemPoolPtrExportData","cudaMemPoolReuseAllowInternalDependencies","cudaMemPoolReuseAllowOpportunistic","cudaMemPoolReuseFollowEventDependencies","cudaMemPoolSetAccess","cudaMemPoolSetAttribute","cudaMemPoolTrimTo","cudaMemPool_t","cudaMemPrefetchAsync","cudaMemRangeAttribute","cudaMemRangeAttributeAccessedBy","cudaMemRangeAttributeLastPrefetchLocation","cudaMemRangeAttributePreferredLocation","cudaMemRangeAttributeReadMostly","cudaMemRangeGetAttribute","cudaMemRangeGetAttributes","cudaMemcpy","cudaMemcpy2D","cudaMemcpy2DArrayToArray","cudaMemcpy2DAsync","cudaMemcpy2DFromArray","cudaMemcpy2DFromArrayAsync","cudaMemcpy2DToArray","cudaMemcpy2DToArrayAsync","cudaMemcpy3D","cudaMemcpy3DAsync","cudaMemcpy3DParms","cudaMemcpy3DPeer","cudaMemcpy3DPeerAsync","cudaMemcpy3DPeerParms","cudaMemcpyArrayToArray","cudaMemcpyAsync","cudaMemcpyDefault","cudaMemcpyDeviceToDevice","cudaMemcpyDeviceToHost","cudaMemcpyFromArray","cudaMemcpyFromArrayAsync","cudaMemcpyFromSymbol","cudaMemcpyFromSymbolAsync","cudaMemcpyHostToDevice","cudaMemcpyHostToHost","cudaMemcpyKind","cudaMemcpyPeer","cudaMemcpyPeerAsync","cudaMemcpyToArray","cudaMemcpyToArrayAsync","cudaMemcpyToSymbol","cudaMemcpyToSymbolAsync","cudaMemoryAdvise","cudaMemoryType","cudaMemoryTypeDevice","cudaMemoryTypeHost","cudaMemoryTypeManaged","cudaMemoryTypeUnregistered","cudaMemset","cudaMemset2D","cudaMemset2DAsync","cudaMemset3D","cudaMemset3DAsync","cudaMemsetAsync","cudaMemsetParams","cudaMipmappedArray","cudaMipmappedArrayGetMemoryRequirements","cudaMipmappedArrayGetSparseProperties","cudaMipmappedArray_const_t","cudaMipmappedArray_t","cudaOccupancyAvailableDynamicSMemPerBlock","cudaOccupancyMaxActiveBlocksPerMultiprocessor","cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","cudaOutputMode","cudaOutputMode_t","cudaPeekAtLastError","cudaPitchedPtr","cudaPointerAttributes","cudaPointerGetAttributes","cudaPos","cudaReadModeElementType","cudaReadModeNormalizedFloat","cudaResViewFormatFloat1","cudaResViewFormatFloat2","cudaResViewFormatFloat4","cudaResViewFormatHalf1","cudaResViewFormatHalf2","cudaResViewFormatHalf4","cudaResViewFormatNone","cudaResViewFormatSignedBlockCompressed4","cudaResViewFormatSignedBlockCompressed5","cudaResViewFormatSignedBlockCompressed6H","cudaResViewFormatSignedChar1","cudaResViewFormatSignedChar2","cudaResViewFormatSignedChar4","cudaResViewFormatSignedInt1","cudaResViewFormatSignedInt2","cudaResViewFormatSignedInt4","cudaResViewFormatSignedShort1","cudaResViewFormatSignedShort2","cudaResViewFormatSignedShort4","cudaResViewFormatUnsignedBlockCompressed1","cudaResViewFormatUnsignedBlockCompressed2","cudaResViewFormatUnsignedBlockCompressed3","cudaResViewFormatUnsignedBlockCompressed4","cudaResViewFormatUnsignedBlockCompressed5","cudaResViewFormatUnsignedBlockCompressed6H","cudaResViewFormatUnsignedBlockCompressed7","cudaResViewFormatUnsignedChar1","cudaResViewFormatUnsignedChar2","cudaResViewFormatUnsignedChar4","cudaResViewFormatUnsignedInt1","cudaResViewFormatUnsignedInt2","cudaResViewFormatUnsignedInt4","cudaResViewFormatUnsignedShort1","cudaResViewFormatUnsignedShort2","cudaResViewFormatUnsignedShort4","cudaResourceDesc","cudaResourceDesc__bindgen_ty_1","cudaResourceDesc__bindgen_ty_1__bindgen_ty_1","cudaResourceDesc__bindgen_ty_1__bindgen_ty_2","cudaResourceDesc__bindgen_ty_1__bindgen_ty_3","cudaResourceDesc__bindgen_ty_1__bindgen_ty_4","cudaResourceType","cudaResourceTypeArray","cudaResourceTypeLinear","cudaResourceTypeMipmappedArray","cudaResourceTypePitch2D","cudaResourceViewDesc","cudaResourceViewFormat","cudaRoundMinInf","cudaRoundMode","cudaRoundNearest","cudaRoundPosInf","cudaRoundZero","cudaRuntimeGetVersion","cudaSetDevice","cudaSetDeviceFlags","cudaSetDoubleForDevice","cudaSetDoubleForHost","cudaSetValidDevices","cudaSharedCarveout","cudaSharedMemBankSizeDefault","cudaSharedMemBankSizeEightByte","cudaSharedMemBankSizeFourByte","cudaSharedMemConfig","cudaSharedmemCarveoutDefault","cudaSharedmemCarveoutMaxL1","cudaSharedmemCarveoutMaxShared","cudaSignalExternalSemaphoresAsync_v2","cudaStreamAddCallback","cudaStreamAddCaptureDependencies","cudaStreamAttachMemAsync","cudaStreamAttrID","cudaStreamAttrValue","cudaStreamAttributeAccessPolicyWindow","cudaStreamAttributeSynchronizationPolicy","cudaStreamBeginCapture","cudaStreamCallback_t","cudaStreamCaptureMode","cudaStreamCaptureModeGlobal","cudaStreamCaptureModeRelaxed","cudaStreamCaptureModeThreadLocal","cudaStreamCaptureStatus","cudaStreamCaptureStatusActive","cudaStreamCaptureStatusInvalidated","cudaStreamCaptureStatusNone","cudaStreamCopyAttributes","cudaStreamCreate","cudaStreamCreateWithFlags","cudaStreamCreateWithPriority","cudaStreamDestroy","cudaStreamEndCapture","cudaStreamGetAttribute","cudaStreamGetCaptureInfo","cudaStreamGetCaptureInfo_v2","cudaStreamGetFlags","cudaStreamGetPriority","cudaStreamIsCapturing","cudaStreamQuery","cudaStreamSetAttribute","cudaStreamSetCaptureDependencies","cudaStreamSynchronize","cudaStreamUpdateCaptureDependencies","cudaStreamUpdateCaptureDependenciesFlags","cudaStreamWaitEvent","cudaStream_t","cudaSuccess","cudaSuccess","cudaSurfaceBoundaryMode","cudaSurfaceFormatMode","cudaSurfaceObject_t","cudaSyncPolicyAuto","cudaSyncPolicyBlockingSync","cudaSyncPolicySpin","cudaSyncPolicyYield","cudaSynchronizationPolicy","cudaTextureAddressMode","cudaTextureDesc","cudaTextureFilterMode","cudaTextureObject_t","cudaTextureReadMode","cudaThreadExchangeStreamCaptureMode","cudaThreadExit","cudaThreadGetCacheConfig","cudaThreadGetLimit","cudaThreadSetCacheConfig","cudaThreadSetLimit","cudaThreadSynchronize","cudaUUID_t","cudaUnbindTexture","cudaUserObjectCreate","cudaUserObjectFlags","cudaUserObjectNoDestructorSync","cudaUserObjectRelease","cudaUserObjectRetain","cudaUserObjectRetainFlags","cudaUserObject_t","cudaWaitExternalSemaphoresAsync_v2","cuda_allocate_device_memory","cuda_free_device_memory","cudnnActivationBackward","cudnnActivationDescriptor_t","cudnnActivationForward","cudnnActivationMode_t","cudnnActivationStruct","cudnnAddTensor","cudnnAdvInferVersionCheck","cudnnAdvTrainVersionCheck","cudnnAlgorithmDescriptor_t","cudnnAlgorithmPerformanceStruct","cudnnAlgorithmPerformance_t","cudnnAlgorithmStruct","cudnnAlgorithmUnionStruct","cudnnAlgorithmUnionStruct_Algorithm","cudnnAlgorithm_t","cudnnAttnDescriptor_t","cudnnAttnQueryMap_t","cudnnAttnStruct","cudnnBackendAttributeName_t","cudnnBackendAttributeType_t","cudnnBackendBehaviorNote_t","cudnnBackendCreateDescriptor","cudnnBackendDescriptorType_t","cudnnBackendDescriptor_t","cudnnBackendDestroyDescriptor","cudnnBackendExecute","cudnnBackendFinalize","cudnnBackendGetAttribute","cudnnBackendHeurMode_t","cudnnBackendInitialize","cudnnBackendKnobType_t","cudnnBackendLayoutType_t","cudnnBackendNumericalNote_t","cudnnBackendSetAttribute","cudnnBackendTensorReordering_t","cudnnBatchNormMode_t","cudnnBatchNormOps_t","cudnnBatchNormalizationBackward","cudnnBatchNormalizationBackwardEx","cudnnBatchNormalizationForwardInference","cudnnBatchNormalizationForwardTraining","cudnnBatchNormalizationForwardTrainingEx","cudnnBnFinalizeStatsMode_t","cudnnBuildRNNDynamic","cudnnCTCLoss","cudnnCTCLossAlgo_t","cudnnCTCLossDescriptor_t","cudnnCTCLossStruct","cudnnCTCLoss_v8","cudnnCallback_t","cudnnCnnInferVersionCheck","cudnnCnnTrainVersionCheck","cudnnContext","cudnnConvolutionBackwardBias","cudnnConvolutionBackwardData","cudnnConvolutionBackwardFilter","cudnnConvolutionBiasActivationForward","cudnnConvolutionBwdDataAlgoPerfStruct","cudnnConvolutionBwdDataAlgoPerf_t","cudnnConvolutionBwdDataAlgo_t","cudnnConvolutionBwdFilterAlgoPerfStruct","cudnnConvolutionBwdFilterAlgoPerf_t","cudnnConvolutionBwdFilterAlgo_t","cudnnConvolutionDescriptor_t","cudnnConvolutionForward","cudnnConvolutionFwdAlgoPerfStruct","cudnnConvolutionFwdAlgoPerf_t","cudnnConvolutionFwdAlgo_t","cudnnConvolutionMode_t","cudnnConvolutionStruct","cudnnCopyAlgorithmDescriptor","cudnnCreate","cudnnCreateActivationDescriptor","cudnnCreateAlgorithmDescriptor","cudnnCreateAlgorithmPerformance","cudnnCreateAttnDescriptor","cudnnCreateCTCLossDescriptor","cudnnCreateConvolutionDescriptor","cudnnCreateDropoutDescriptor","cudnnCreateFilterDescriptor","cudnnCreateFusedOpsConstParamPack","cudnnCreateFusedOpsPlan","cudnnCreateFusedOpsVariantParamPack","cudnnCreateLRNDescriptor","cudnnCreateOpTensorDescriptor","cudnnCreatePersistentRNNPlan","cudnnCreatePoolingDescriptor","cudnnCreateRNNDataDescriptor","cudnnCreateRNNDescriptor","cudnnCreateReduceTensorDescriptor","cudnnCreateSeqDataDescriptor","cudnnCreateSpatialTransformerDescriptor","cudnnCreateTensorDescriptor","cudnnCreateTensorTransformDescriptor","cudnnDataType_t","cudnnDebugStruct","cudnnDebug_t","cudnnDeriveBNTensorDescriptor","cudnnDeriveNormTensorDescriptor","cudnnDestroy","cudnnDestroyActivationDescriptor","cudnnDestroyAlgorithmDescriptor","cudnnDestroyAlgorithmPerformance","cudnnDestroyAttnDescriptor","cudnnDestroyCTCLossDescriptor","cudnnDestroyConvolutionDescriptor","cudnnDestroyDropoutDescriptor","cudnnDestroyFilterDescriptor","cudnnDestroyFusedOpsConstParamPack","cudnnDestroyFusedOpsPlan","cudnnDestroyFusedOpsVariantParamPack","cudnnDestroyLRNDescriptor","cudnnDestroyOpTensorDescriptor","cudnnDestroyPersistentRNNPlan","cudnnDestroyPoolingDescriptor","cudnnDestroyRNNDataDescriptor","cudnnDestroyRNNDescriptor","cudnnDestroyReduceTensorDescriptor","cudnnDestroySeqDataDescriptor","cudnnDestroySpatialTransformerDescriptor","cudnnDestroyTensorDescriptor","cudnnDestroyTensorTransformDescriptor","cudnnDeterminism_t","cudnnDirectionMode_t","cudnnDivNormMode_t","cudnnDivisiveNormalizationBackward","cudnnDivisiveNormalizationForward","cudnnDropoutBackward","cudnnDropoutDescriptor_t","cudnnDropoutForward","cudnnDropoutGetReserveSpaceSize","cudnnDropoutGetStatesSize","cudnnDropoutStruct","cudnnErrQueryMode_t","cudnnFilterDescriptor_t","cudnnFilterStruct","cudnnFindConvolutionBackwardDataAlgorithm","cudnnFindConvolutionBackwardDataAlgorithmEx","cudnnFindConvolutionBackwardFilterAlgorithm","cudnnFindConvolutionBackwardFilterAlgorithmEx","cudnnFindConvolutionForwardAlgorithm","cudnnFindConvolutionForwardAlgorithmEx","cudnnFindRNNBackwardDataAlgorithmEx","cudnnFindRNNBackwardWeightsAlgorithmEx","cudnnFindRNNForwardInferenceAlgorithmEx","cudnnFindRNNForwardTrainingAlgorithmEx","cudnnFoldingDirection_t","cudnnForwardMode_t","cudnnFusedOpsConstParamLabel_t","cudnnFusedOpsConstParamPack_t","cudnnFusedOpsConstParamStruct","cudnnFusedOpsExecute","cudnnFusedOpsPlanStruct","cudnnFusedOpsPlan_t","cudnnFusedOpsPointerPlaceHolder_t","cudnnFusedOpsVariantParamLabel_t","cudnnFusedOpsVariantParamPack_t","cudnnFusedOpsVariantParamStruct","cudnnFusedOps_t","cudnnGenStatsMode_t","cudnnGetActivationDescriptor","cudnnGetActivationDescriptorSwishBeta","cudnnGetAlgorithmDescriptor","cudnnGetAlgorithmPerformance","cudnnGetAlgorithmSpaceSize","cudnnGetAttnDescriptor","cudnnGetBatchNormalizationBackwardExWorkspaceSize","cudnnGetBatchNormalizationForwardTrainingExWorkspaceSize","cudnnGetBatchNormalizationTrainingExReserveSpaceSize","cudnnGetCTCLossDescriptor","cudnnGetCTCLossDescriptorEx","cudnnGetCTCLossDescriptor_v8","cudnnGetCTCLossWorkspaceSize","cudnnGetCTCLossWorkspaceSize_v8","cudnnGetCallback","cudnnGetConvolution2dDescriptor","cudnnGetConvolution2dForwardOutputDim","cudnnGetConvolutionBackwardDataAlgorithmMaxCount","cudnnGetConvolutionBackwardDataAlgorithm_v7","cudnnGetConvolutionBackwardDataWorkspaceSize","cudnnGetConvolutionBackwardFilterAlgorithmMaxCount","cudnnGetConvolutionBackwardFilterAlgorithm_v7","cudnnGetConvolutionBackwardFilterWorkspaceSize","cudnnGetConvolutionForwardAlgorithmMaxCount","cudnnGetConvolutionForwardAlgorithm_v7","cudnnGetConvolutionForwardWorkspaceSize","cudnnGetConvolutionGroupCount","cudnnGetConvolutionMathType","cudnnGetConvolutionNdDescriptor","cudnnGetConvolutionNdForwardOutputDim","cudnnGetConvolutionReorderType","cudnnGetCudartVersion","cudnnGetDropoutDescriptor","cudnnGetErrorString","cudnnGetFilter4dDescriptor","cudnnGetFilterNdDescriptor","cudnnGetFilterSizeInBytes","cudnnGetFoldedConvBackwardDataDescriptors","cudnnGetFusedOpsConstParamPackAttribute","cudnnGetFusedOpsVariantParamPackAttribute","cudnnGetLRNDescriptor","cudnnGetMultiHeadAttnBuffers","cudnnGetMultiHeadAttnWeights","cudnnGetNormalizationBackwardWorkspaceSize","cudnnGetNormalizationForwardTrainingWorkspaceSize","cudnnGetNormalizationTrainingReserveSpaceSize","cudnnGetOpTensorDescriptor","cudnnGetPooling2dDescriptor","cudnnGetPooling2dForwardOutputDim","cudnnGetPoolingNdDescriptor","cudnnGetPoolingNdForwardOutputDim","cudnnGetProperty","cudnnGetRNNBackwardDataAlgorithmMaxCount","cudnnGetRNNBackwardWeightsAlgorithmMaxCount","cudnnGetRNNBiasMode","cudnnGetRNNDataDescriptor","cudnnGetRNNDescriptor_v6","cudnnGetRNNDescriptor_v8","cudnnGetRNNForwardInferenceAlgorithmMaxCount","cudnnGetRNNForwardTrainingAlgorithmMaxCount","cudnnGetRNNLinLayerBiasParams","cudnnGetRNNLinLayerMatrixParams","cudnnGetRNNMatrixMathType","cudnnGetRNNPaddingMode","cudnnGetRNNParamsSize","cudnnGetRNNProjectionLayers","cudnnGetRNNTempSpaceSizes","cudnnGetRNNTrainingReserveSize","cudnnGetRNNWeightParams","cudnnGetRNNWeightSpaceSize","cudnnGetRNNWorkspaceSize","cudnnGetReduceTensorDescriptor","cudnnGetReductionIndicesSize","cudnnGetReductionWorkspaceSize","cudnnGetSeqDataDescriptor","cudnnGetStream","cudnnGetTensor4dDescriptor","cudnnGetTensorNdDescriptor","cudnnGetTensorSizeInBytes","cudnnGetTensorTransformDescriptor","cudnnGetVersion","cudnnHandle_t","cudnnIm2Col","cudnnIndicesType_t","cudnnInitTransformDest","cudnnLRNCrossChannelBackward","cudnnLRNCrossChannelForward","cudnnLRNDescriptor_t","cudnnLRNMode_t","cudnnLRNStruct","cudnnLossNormalizationMode_t","cudnnMakeFusedOpsPlan","cudnnMathType_t","cudnnMultiHeadAttnBackwardData","cudnnMultiHeadAttnBackwardWeights","cudnnMultiHeadAttnForward","cudnnMultiHeadAttnWeightKind_t","cudnnNanPropagation_t","cudnnNormAlgo_t","cudnnNormMode_t","cudnnNormOps_t","cudnnNormalizationBackward","cudnnNormalizationForwardInference","cudnnNormalizationForwardTraining","cudnnOpTensor","cudnnOpTensorDescriptor_t","cudnnOpTensorOp_t","cudnnOpTensorStruct","cudnnOpsInferVersionCheck","cudnnOpsTrainVersionCheck","cudnnPaddingMode_t","cudnnPersistentRNNPlan","cudnnPersistentRNNPlan_t","cudnnPointwiseMode_t","cudnnPoolingBackward","cudnnPoolingDescriptor_t","cudnnPoolingForward","cudnnPoolingMode_t","cudnnPoolingStruct","cudnnQueryRuntimeError","cudnnRNNAlgo_t","cudnnRNNBackwardData","cudnnRNNBackwardDataEx","cudnnRNNBackwardData_v8","cudnnRNNBackwardWeights","cudnnRNNBackwardWeightsEx","cudnnRNNBackwardWeights_v8","cudnnRNNBiasMode_t","cudnnRNNClipMode_t","cudnnRNNDataDescriptor_t","cudnnRNNDataLayout_t","cudnnRNNDataStruct","cudnnRNNDescriptor_t","cudnnRNNForward","cudnnRNNForwardInference","cudnnRNNForwardInferenceEx","cudnnRNNForwardTraining","cudnnRNNForwardTrainingEx","cudnnRNNGetClip","cudnnRNNGetClip_v8","cudnnRNNInputMode_t","cudnnRNNMode_t","cudnnRNNPaddingMode_t","cudnnRNNSetClip","cudnnRNNSetClip_v8","cudnnRNNStruct","cudnnReduceTensor","cudnnReduceTensorDescriptor_t","cudnnReduceTensorIndices_t","cudnnReduceTensorOp_t","cudnnReduceTensorStruct","cudnnReorderFilterAndBias","cudnnReorderType_t","cudnnResampleMode_t","cudnnRestoreAlgorithm","cudnnRestoreDropoutDescriptor","cudnnRuntimeTag_t","cudnnSamplerType_t","cudnnSaveAlgorithm","cudnnScaleTensor","cudnnSeqDataAxis_t","cudnnSeqDataDescriptor_t","cudnnSeqDataStruct","cudnnSetActivationDescriptor","cudnnSetActivationDescriptorSwishBeta","cudnnSetAlgorithmDescriptor","cudnnSetAlgorithmPerformance","cudnnSetAttnDescriptor","cudnnSetCTCLossDescriptor","cudnnSetCTCLossDescriptorEx","cudnnSetCTCLossDescriptor_v8","cudnnSetCallback","cudnnSetConvolution2dDescriptor","cudnnSetConvolutionGroupCount","cudnnSetConvolutionMathType","cudnnSetConvolutionNdDescriptor","cudnnSetConvolutionReorderType","cudnnSetDropoutDescriptor","cudnnSetFilter4dDescriptor","cudnnSetFilterNdDescriptor","cudnnSetFusedOpsConstParamPackAttribute","cudnnSetFusedOpsVariantParamPackAttribute","cudnnSetLRNDescriptor","cudnnSetOpTensorDescriptor","cudnnSetPersistentRNNPlan","cudnnSetPooling2dDescriptor","cudnnSetPoolingNdDescriptor","cudnnSetRNNAlgorithmDescriptor","cudnnSetRNNBiasMode","cudnnSetRNNDataDescriptor","cudnnSetRNNDescriptor_v6","cudnnSetRNNDescriptor_v8","cudnnSetRNNMatrixMathType","cudnnSetRNNPaddingMode","cudnnSetRNNProjectionLayers","cudnnSetReduceTensorDescriptor","cudnnSetSeqDataDescriptor","cudnnSetSpatialTransformerNdDescriptor","cudnnSetStream","cudnnSetTensor","cudnnSetTensor4dDescriptor","cudnnSetTensor4dDescriptorEx","cudnnSetTensorNdDescriptor","cudnnSetTensorNdDescriptorEx","cudnnSetTensorTransformDescriptor","cudnnSeverity_t","cudnnSoftmaxAlgorithm_t","cudnnSoftmaxBackward","cudnnSoftmaxForward","cudnnSoftmaxMode_t","cudnnSpatialTfGridGeneratorBackward","cudnnSpatialTfGridGeneratorForward","cudnnSpatialTfSamplerBackward","cudnnSpatialTfSamplerForward","cudnnSpatialTransformerDescriptor_t","cudnnSpatialTransformerStruct","cudnnStatus","cudnnStatus","cudnnStatus_t","cudnnTensorDescriptor_t","cudnnTensorFormat_t","cudnnTensorStruct","cudnnTensorTransformDescriptor_t","cudnnTensorTransformStruct","cudnnTransformFilter","cudnnTransformTensor","cudnnTransformTensorEx","cudnnWgradMode_t","cudnn_data_type","cudnn_version","cudnn_version","default","default","default","depth","depth","depth","desc","desc","destroy","destroy_activation_descriptor","destroy_convolution_descriptor","destroy_dropout_descriptor","destroy_filter_descriptor","destroy_lrn_descriptor","destroy_pooling_descriptor","destroy_rnn_descriptor","destroy_tensor_descriptor","determinism","determinism","determinism","determinism","determinism","determinism","devPtr","devPtr","device","deviceOverlap","devicePointer","dim3","directManagedMemAccessFromHost","disableTrilinearOptimization","disableTrilinearOptimization","divisive_normalization_backward","divisive_normalization_forward","dptr","drop","drop","drop","drop","drop","drop","drop","drop","drop","dropout_backward","dropout_backward","dropout_forward","dropout_forward","dropout_get_reserve_space_size","dropout_get_states_size","dst","dstArray","dstArray","dstDevice","dstPos","dstPos","dstPtr","dstPtr","elementSize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extSemArray","extSemArray","extent","extent","extent","extra","f","fd","fd","fence","fence","fence","fence","fence","fence","fence","fence","filterMode","filterMode","find_convolution_backward_data_algorithm","find_convolution_backward_filter_algorithm","find_convolution_forward_algorithm","firstLayer","firstMipmapLevel","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_","format","formatDesc","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_c","from_c","from_c","from_c","from_c","from_c","from_c","from_c","from_c","func","func","get_convolution_backward_data_workspace_size","get_convolution_backward_filter_workspace_size","get_convolution_forward_workspace_size","get_pooling_2d_descriptor","get_pooling_descriptor","get_pooling_forward_output_dim","get_required_size","get_rnn_params_size","get_rnn_temp_space_sizes","get_rnn_training_reserve_size","get_rnn_workspace_size","get_tensor_descriptor","get_version","globalL1CacheSupported","gridDim","gridDim","handle","handle","handle","handle","handle","handle","handleTypes","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","height","hitProp","hitRatio","hostNativeAtomicSupported","hostPointer","id","id_c","id_c","id_c","id_c","id_c","id_c","id_c","id_c","id_c","init","init_activation","init_convolution","init_dropout","init_normalization","init_pooling","init_rnn","integrated","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","isMultiGpuBoard","kernelExecTimeoutEnabled","kernelParams","key","key","key","key","keyedMutex","keyedMutex","keyedMutex","keyedMutex","kind","l2CacheSize","lastLayer","lastMipmapLevel","libraryPropertyType","libraryPropertyType_t","libraryPropertyType_t_MAJOR_VERSION","libraryPropertyType_t_MINOR_VERSION","libraryPropertyType_t_PATCH_LEVEL","linear","localL1CacheSupported","localSizeBytes","location","location","log_softmax_backward","log_softmax_forward","lrn_backward","lrn_cross_channel_backward","lrn_cross_channel_forward","lrn_forward","luid","luidDeviceNodeMask","major","managedMemory","mathType","mathType","mathType","mathType","mathType","mathType","maxAnisotropy","maxAnisotropy","maxBlocksPerMultiProcessor","maxDynamicSharedSizeBytes","maxGridSize","maxMipmapLevelClamp","maxMipmapLevelClamp","maxSurface1D","maxSurface1DLayered","maxSurface2D","maxSurface2DLayered","maxSurface3D","maxSurfaceCubemap","maxSurfaceCubemapLayered","maxTexture1D","maxTexture1DLayered","maxTexture1DLinear","maxTexture1DMipmap","maxTexture2D","maxTexture2DGather","maxTexture2DLayered","maxTexture2DLinear","maxTexture2DMipmap","maxTexture3D","maxTexture3DAlt","maxTextureCubemap","maxTextureCubemapLayered","maxThreadsDim","maxThreadsPerBlock","maxThreadsPerBlock","maxThreadsPerMultiProcessor","memPitch","memory","memory","memory","memory","memory","memory","memoryBusWidth","memoryClockRate","minMipmapLevelClamp","minMipmapLevelClamp","minor","mipmap","mipmap","mipmapFilterMode","mipmapFilterMode","mipmapLevelBias","mipmapLevelBias","miptailFirstLevel","miptailSize","missProp","multiGpuBoardGroupID","multiProcessorCount","name","name","name","new","new","new","new","new","new","new","new","new","normalized","normalizedCoords","numExtSems","numExtSems","numLevels","numRegs","num_bytes","nvSciBufObject","nvSciSync","nvSciSync","nvSciSync","nvSciSync","nvSciSyncObj","offset","offset","pageableMemoryAccess","pageableMemoryAccessUsesHostPageTables","params","params","params","params","paramsArray","paramsArray","pciBusID","pciDeviceID","pciDomainID","persistingL2CacheMaxSize","pid","pid","pitch","pitch","pitch2D","pitchInBytes","poolProps","pooling_avg_backward","pooling_avg_forward","pooling_backward","pooling_forward","pooling_max_backward","pooling_max_forward","preferredShmemCarveout","priority","ptr","ptxVersion","readMode","regsPerBlock","regsPerMultiprocessor","relu_backward","relu_forward","res","resType","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reservedSharedMemPerBlock","rnn_backward_data","rnn_backward_data","rnn_backward_weights","rnn_backward_weights","rnn_forward","rnn_forward_inference","rnn_forward_training","sRGB","sRGB","scale_tensor","seamlessCubemap","set_activation_descriptor","set_convolution_descriptor","set_dropout_descriptor","set_filter_descriptor","set_lrn_descriptor","set_pooling_2d_descriptor","set_pooling_descriptor","set_rnn_data_descriptor","set_rnn_descriptor","set_rnn_matrix_math_type","set_rnn_padding_mode","set_tensor","set_tensor_descriptor","sharedMem","sharedMemBytes","sharedMemPerBlock","sharedMemPerBlockOptin","sharedMemPerMultiprocessor","sharedSizeBytes","sigmoid_backward","sigmoid_forward","singleToDoublePrecisionPerfRatio","size","size","size","sizeInBytes","softmax_backward","softmax_backward","softmax_forward","softmax_forward","srcArray","srcArray","srcDevice","srcPos","srcPos","srcPtr","srcPtr","status","status","status","status","status","status","stream","stream","stream","streamPrioritiesSupported","surfaceAlignment","surfaceReference","syncPolicy","tanh_backward","tanh_forward","tccDriver","tensor_vec_id_c","textureAlignment","texturePitchAlignment","textureReference","tid","tid","tileExtent","time","time","time","time","time","time","time_delta","time_delta","time_sec","time_sec","time_usec","time_usec","timeoutMs","timeoutMs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","totalConstMem","totalGlobalMem","transform_tensor","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unifiedAddressing","userData","utils","uuid","value","value","value","value","value","version","w","warpSize","width","width","width","width","width","win32","win32","win32SecurityAttributes","x","x","x","xsize","y","y","y","ysize","z","z","z","CudaDeviceMemory","borrow","borrow_mut","drop","fmt","from","from_c","id_c","into","new","size","try_from","try_into","type_id","ActivationConfig","ConvolutionConfig","DataType","DataTypeInfo","Double","DropoutConfig","Float","Half","NormalizationConfig","PoolingConfig","RnnConfig","ScalParams","a","activation_clipped_relu_desc","activation_relu_desc","activation_sigmoid_desc","activation_tanh_desc","b","backward_data_algo","backward_data_workspace_size","backward_filter_algo","backward_filter_workspace_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","conv_desc","cudnn_data_type","default","dropout_desc","filter_desc","fmt","fmt","forward_algo","forward_workspace_size","from","from","from","from","from","from","from","from","hidden_size","into","into","into","into","into","into","into","into","largest_workspace_size","largest_workspace_size","lrn_desc","new","new","new","new","new","new","num_layers","pooling_avg_desc","pooling_max_desc","reserved_space","rnn_desc","rnn_workspace_size","sequence_length","sequence_length","size","take_mem","to_owned","training_reserve","training_reserve_size","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"rcudnn"],[5492,"rcudnn::cuda"],[5506,"rcudnn::utils"],[5618,"core::ffi"],[5619,"core::result"],[5620,"num_traits::float"],[5621,"libc::unix"],[5622,"core::option"],[5623,"alloc::vec"],[5624,"core::fmt"],[5625,"core::fmt"],[5626,"libc::unix"],[5627,"core::any"],[5628,"num_traits::identities"],[5629,"num_traits::identities"]],"d":["Defines the Cuda cuDNN API.","Describes a ActivationDescriptor.","Failure with allocation.","Failure with the hardware architecture.","Failure with a provided parameterescribes a Convolution Descriptor.","Provides a the high-level interface to CUDA’s cuDNN.","Describes a DropoutDescriptor.","","Defines CUDA’s cuDNN errors.","Failure with Kernel execution.","Describes a Filter Descriptor.","Failure with cuDNN.","Failure with provided value.","Failure CUDA License.","Failure with memory access or internal error/bug.","No value.","No value.","No value.","Describes a LRN Descriptor.","Failure with CUDA cuDNN initialization.","Failure with an unsupported request.","Describes a Pooling Descriptor.","","Describes a Recurrent Descriptor.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Describes a TensorDescriptor.","Failure","","","","","","","","","","Computes an activation backward function.","Computes an activation forward function.","Adds the scaled values from one a CUDA cuDNN Tensor to …omputes a convolution backward function w.r.t the bias.","Computes the backward Convolution function w.r.t the bias.","Computes a convolution backward function w.r.t the output …","Computes the backward Convolution function w.r.t the data.","Computes a convolution backward function w.r.t filter …","Computes the backward Convolution function w.r.t the …","Computes a convolution forward function.","Computes the forward Convolution function.","","","","Create a generic CUDA cuDNN ActivationDescriptor.","Creates a generic CUDA cuDNN Convolution Descriptor.","Create a generic CUDA cuDNN DropoutDescriptor","Creates a generic CUDA cuDNN Filter Descriptor.","Creates a generic CUDA cuDNN LRN Descriptor.","Creates a generic CUDA cuDNN Pooling Descriptor.","cudnnCreateRNNDataDescriptor() …","Creates a generic CUDA cuDNN RNN Descriptor.","Creates a generic CUDA cuDNN Tensor Descriptor.","Defines Cuda Device Memorynitialize the CUDA cuDNN API with needed context and …","Destroys the CUDA cuDNN context and resources associated …onvert to CUDNN Data Type","","","","","","","","","","","Destroys the CUDA cuDNN context and resources associated …","Destroys a CUDA cuDNN Activation Descriptor.","Destroys a CUDA cuDNN Convolution Descriptor.","Destroys a CUDA cuDNN Dropout Descriptor.","Destroys a CUDA cuDNN Filter Descriptor.","Destroys a CUDA cuDNN LRN Descriptor.","Destroys a CUDA cuDNN Pooling Descriptor.","Destroys a CUDA cuDNN RNN Descriptor.","Destroys a CUDA cuDNN Tensor Descriptor.","","","","","","","","","","","","","","","","Computes an devisive normalization backward function.","Computes an devisive normalization forward function.","","","","","","","","","","","Computes the dropout backward function.","Computes probability and applies it to Dropout","Computes the dropout forward function.","Computes probability and applies it to Dropout","Get the reserve space size.","Get the states size (GPU memory).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the most performant convolutional backward data …","Returns the most performant convolutional backward data …","cuDNN Convolution Configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Initializes a new CUDA cuDNN Activation Descriptor from …","Initializes a new CUDA cuDNN ConvolutionDescriptor from …","Initializes a new CUDA cuDNN Context from its C type.","Initializes a new CUDA cuDNN Tensor Descriptor from its C …","Initializes a new CUDA cuDNN FilterDescriptor from its C …","Initializes a new CUDA cuDNN NormalizationDescriptor from …","Initializes a new CUDA cuDNN PoolingDescriptor from its C …","Initializes a new CUDA cuDNN RnnDescriptor from its C type.","Initializes a new CUDA cuDNN Tensor Descriptor from its C …","","","Returns the workspace size in byte, which are needed for …","Returns the workspace size in byte, which are needed for …","Returns the workspace size in byte, which are needed for …","Return information about a generic CUDA cuDNN Pooling …","Return information about a generic CUDA cuDNN Pooling …","Initializes a generic CUDA cuDNN Pooling Descriptor with …","Get the size for a tensor","cudnnGetRNNParamsSize[1] Query the amount of parameter …","This function computes the work and reserve space buffer …","Size of Reserve Space for RNN Training […","Returns the workspace size in byte, which are needed for …","Returns informations about a generic CUDA cuDNN Tensor …","Returns the version of the CUDA cuDNN API.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the CUDA cuDNN Activation Descriptor as its C type.","Returns the CUDA cuDNN ConvolutionDescriptor as its C type.","Returns the CUDA cuDNN Context as its C type.","Returns the CUDA cuDNN Tensor Descriptor as its C type.","Returns the CUDA cuDNN FilterDescriptor as its C type.","Returns the CUDA cuDNN NormalizationDescriptor as its C …","Returns the CUDA cuDNN Pooling Descriptor as its C type.","Returns the CUDA cuDNN RnnDescriptor as its C type.","Returns the CUDA cuDNN Tensor Descriptor as its C type.","Initialize the CUDA cuDNN API with needed context and …","Initializes the parameters and configurations for running …","Initializes the parameters and configurations for running …","Initializes the parameters and configurations for running …","Initializes the parameters and configurations for running …","Initializes the parameters and configurations for running …","Initialize RNN","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the backward logarithmic softmax function.","Computes the forward logarithmic softmax function.","Computes the backward local response normalization …","Computes an LRN cross channel backward function.","Computes an LRN cross channel forward function.","Computes the forward local response normalization function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initializes a new CUDA cuDNN Activation Descriptor.","Initializes a new CUDA cuDNN ConvolutionDescriptor.","Initializes a new CUDA cuDNN context.","Initializes a new CUDA cuDNN Dropout Descriptor.","Initializes a new CUDA cuDNN FilterDescriptor.","Initializes a new CUDA cuDNN LRNDescriptor.","Initializes a new CUDA cuDNN Pooling Descriptor.","Initializes a new CUDA cuDNN RnnDescriptor.","Initializes a new CUDA cuDNN Tensor Descriptor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the backward average pooling function.","Computes the forward average pooling function.","Computes a pooling backward function.","Computes a pooling forward function.","Computes the backward max pooling function.","Computes the forward max pooling function.","","","","","","","","Computes the backward Rectified Linear Activation function.","Computes the forward Rectified Linear Activation function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","CUDNN Rnn Backward Data This routine executes the …","Train &amp; Return Results for RNN","CUDNN Rnn Backward Weights This routine accumulates weight …","Train &amp; Return Results for RNN","Train &amp; Return Results for RNN","Execute a RNN without Training This routine executes the …","Trains a RNN through the Forward Process","","","Scales all elements of a tensor by a given factor.","","Initializes a generic CUDA cuDNN Activation Descriptor …","Initializes a generic CUDA cuDNN Convolution Descriptor …","Initializes a generic CUDA cuDNN Activation Descriptor …","Initializes a generic CUDA cuDNN Filter Descriptor with …","Initializes a generic CUDA cuDNN LRN Descriptor with …","Initializes a generic CUDA cuDNN Pooling Descriptor with …","Initializes a generic CUDA cuDNN Pooling Descriptor with …","","Initializes a generic CUDA cuDNN RNN Descriptor with …","Set RNN Matrix Math Type cudnnSetRNNMatrixMathType …","Set RNN Padding Model cudnnSetRNNPaddingMode This function …","Sets all elements of a tensor to a given value.","Initializes a generic CUDA cuDNN Tensor Descriptor with …","","","","","","","Computes the backward Sigmoid Activation function.","Computes the forward Sigmoid Activation function.","","","","","","Computes an softmax backward function.","Computes the backward softmax function.","Computes an softmax forward function.","Computes the forward softmax function.","","","","","","","","","","","","","","","","","","","","","Computes the backward Hyperbolic Tangent Activation …","Computes the forward Hyperbolic Tangent Activation …","","Return C Handle for a Vector of Tensor Descriptorsransforms a CUDA cuDNN Tensor from to another Tensor with …escribes utility functionality for CUDA cuDNN.","","","","","","","Returns the version of the CUDA cuDNN library.","","","","","","","","","","","","","","","","","","","","","","A pointer to memory existing on a nvidia GPU","","","","","Returns the argument unchanged.","Initializes a new CUDA Device Memory from its C type.","Returns the CUDA Device Memory ptr as its C type.","Calls <code>U::from(self)</code>.","Saw fun X Y Z","Returns the size of the CUDA Device Memory chunk.","","","","Provides a convenient interface to access cuDNN’s …","Provides a convenient interface to access cuDNN’s …","Defines the available data types for the CUDA cuDNN data …","CuDnn type info for generic use.","F64","Provides a convenient interface to access cuDNN’s …","F32","F16 (no native Rust support yet)","Provides a convenient interface to access cuDNN’s …","Provides a convenient interface to access cuDNN’s …","Provides an interfaces for CUDNN’s Rnn Descriptor","Provides a convenient interface for cuDNN’s scaling …","Alpha","Returns <code>activation_clipped_relu_desc</code>.","Returns <code>activation_relu_desc</code>.","Returns <code>activation_sigmoid_desc</code>.","Returns <code>activation_tanh_desc</code>.","Beta","Returns <code>backward_data_algo</code>.","Returns <code>backward_data_workspace_size</code>.","Returns <code>backward_filter_algo</code>.","Returns <code>backward_filter_workspace_size</code>.","","","","","","","","","","","","","","","","","","","Returns <code>conv_desc</code>.","Mostly internal.","Provides default values for ScalParams.","Returns <code>dropout_desc</code>.","Returns <code>filter_desc</code>.","","","Returns <code>forward_algo</code>.","Returns <code>forward_workspace_size</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Size of Hidden Layer","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the largest workspace size out of the three.","Largest Workspace Size for RNN","Returns <code>lrn_desc</code>.","Returns a new ConvolutionConfig","Returns a new LRN Config.","Returns a new PoolingConfig.","Returns a new ActivationConfig.","Initialise a RNN Config","Returns a new DropoutConfig.","Number of Hidden Layers","Returns <code>pooling_avg_desc</code>.","Returns <code>pooling_max_desc</code>.","Returns the reserved space.","Accessor function for Rnn Descriptor","Workspace Size required for RNN Operations","Accessor function for Sequence Length","Length of Sequence","","Take the Reserve Memory of the DropoutDescriptor","","Training Reserve Space on GPU for RNN","Training Reserve Size for RNN","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,6,6,6,197,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,175,175,175,175,179,179,179,179,179,179,179,0,0,0,0,0,0,0,0,0,0,0,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,183,183,183,182,182,182,237,237,237,237,203,232,232,0,0,0,0,0,0,0,217,193,193,193,193,193,193,193,192,192,192,192,192,192,192,192,191,191,191,191,191,191,191,191,191,217,195,195,166,166,166,166,166,166,166,166,166,166,166,166,167,218,169,0,181,242,155,155,155,167,224,224,224,224,224,224,224,200,200,231,201,240,240,240,240,240,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,239,239,239,239,239,204,215,215,180,0,0,0,0,201,0,213,213,213,213,213,213,213,213,0,242,169,185,185,186,186,186,184,184,168,218,236,236,236,236,236,236,236,236,236,236,0,0,0,0,0,0,172,172,172,172,172,172,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,0,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,178,178,178,178,168,226,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,226,226,227,227,227,227,227,227,227,173,173,173,174,173,173,173,173,173,173,174,230,230,230,230,194,194,194,194,194,205,205,206,206,206,202,202,0,0,201,202,202,201,187,227,227,227,227,210,210,0,210,210,198,198,198,198,204,176,176,176,177,177,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,170,170,170,167,167,241,241,171,171,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,203,0,214,214,242,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,0,6,0,6,6,6,6,292,293,294,0,6,6,0,197,0,292,293,294,0,6,149,0,0,0,82,82,86,140,142,8,8,8,149,150,295,271,268,270,196,219,220,228,26,80,129,51,52,86,36,58,129,130,150,8,9,10,11,12,6,13,14,15,265,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,8,9,10,11,12,6,13,14,15,265,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,296,297,85,82,58,86,86,145,149,86,8,9,10,11,12,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,8,9,10,11,12,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,86,86,86,86,58,197,197,197,8,11,8,11,8,11,8,11,142,86,86,8,8,8,8,8,8,8,8,8,0,0,0,35,35,35,146,146,146,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,143,143,0,128,128,128,67,67,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,63,63,63,63,0,0,0,0,0,0,0,0,0,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,84,84,84,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,298,199,0,0,0,0,0,0,0,0,0,0,136,136,136,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,89,89,89,89,89,89,89,0,0,0,0,0,0,95,95,95,95,95,95,95,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,147,147,68,68,0,0,0,71,70,70,144,144,0,0,0,0,0,0,59,59,59,0,0,60,60,60,60,0,0,0,0,0,0,69,69,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,137,137,137,137,137,137,137,137,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,135,135,135,135,0,135,0,0,0,0,0,0,0,0,0,0,0,138,138,0,0,0,0,0,0,0,0,0,83,83,83,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,133,133,133,133,133,133,133,133,133,133,133,133,133,0,0,0,0,0,43,0,0,47,47,47,47,47,47,0,46,46,46,0,0,45,45,45,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,141,141,141,0,67,67,0,0,0,0,0,0,64,64,64,64,64,64,64,0,0,0,0,0,0,0,0,0,0,0,0,76,76,76,0,65,65,65,65,65,65,0,0,0,78,78,78,0,79,79,79,79,0,0,74,74,0,73,73,73,73,73,0,0,0,0,0,0,0,0,0,0,73,73,73,0,0,0,0,0,0,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,28,0,0,0,0,28,28,0,0,0,0,0,0,0,0,0,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148,148,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,0,0,48,48,48,48,0,0,17,0,17,17,17,0,0,0,0,0,0,0,61,61,61,0,62,62,62,0,0,41,0,0,0,139,139,0,0,0,39,39,39,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,0,0,0,0,19,19,0,0,0,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,298,199,0,0,0,0,0,0,0,0,0,0,8,298,199,219,220,228,25,30,56,54,55,8,8,8,8,8,8,8,8,8,271,268,270,219,220,228,54,55,57,86,57,0,86,149,150,8,8,82,9,10,11,12,13,14,15,265,16,8,11,8,11,8,8,34,32,33,33,32,33,32,33,34,17,19,20,27,28,35,38,39,40,41,42,43,45,46,47,48,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,83,84,89,95,128,133,135,136,137,138,139,141,143,144,146,147,148,151,153,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,191,192,193,194,195,198,200,201,202,203,204,205,206,210,213,214,215,217,218,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,131,132,32,33,94,130,21,91,97,100,102,105,107,110,112,115,117,149,150,8,8,8,56,56,24,77,90,93,94,96,99,104,109,114,8,9,10,11,12,6,6,13,14,15,265,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,95,98,101,103,106,108,111,113,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,37,56,94,8,9,10,11,12,6,13,14,15,265,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,9,10,11,12,13,14,15,265,16,129,130,8,8,8,8,8,8,12,8,8,8,8,8,8,86,129,130,298,90,92,96,98,199,80,17,19,20,27,28,35,38,39,40,41,42,43,45,46,47,48,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,83,84,89,95,128,133,135,136,137,138,139,141,143,144,146,147,148,151,153,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,191,192,193,194,195,198,200,201,202,203,204,205,206,210,213,214,215,217,218,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,25,30,34,55,56,36,36,86,57,75,9,10,11,12,13,14,15,265,16,8,11,11,11,11,11,11,86,8,9,10,11,12,6,13,14,15,265,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,86,86,130,103,108,113,118,100,105,110,115,32,86,56,56,0,0,0,0,0,51,86,58,77,80,11,11,11,8,8,11,86,86,86,86,271,268,270,219,220,228,149,150,86,58,86,149,150,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,58,86,86,86,271,268,270,219,220,228,86,86,149,150,86,51,53,149,150,149,150,24,24,36,86,86,86,92,98,9,10,11,12,13,14,15,265,16,149,150,131,132,94,58,36,91,100,105,110,115,97,93,94,86,86,99,104,109,114,131,132,86,86,86,86,298,199,29,34,51,55,82,11,11,8,8,11,11,58,142,29,58,150,86,86,11,11,50,50,299,300,298,271,268,270,24,26,80,81,87,88,102,107,109,110,112,114,115,117,199,219,220,228,86,8,11,8,11,11,8,8,149,150,8,150,8,8,8,8,8,8,8,8,8,8,8,8,8,129,130,86,86,86,58,11,11,86,26,90,93,54,8,11,8,11,32,33,33,32,33,32,33,271,268,270,219,220,228,298,129,199,86,86,0,140,11,11,86,0,86,86,0,298,199,24,271,268,270,219,220,228,298,199,298,199,298,199,108,118,8,9,10,11,12,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,6,86,86,8,8,9,10,11,12,6,13,14,15,265,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,8,9,10,11,12,6,13,14,15,265,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,57,75,90,96,8,9,10,11,12,6,13,14,15,265,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,86,37,0,86,34,101,106,111,116,11,21,86,25,30,34,55,56,91,97,80,18,21,31,29,18,21,31,29,18,21,31,0,289,289,289,289,289,289,289,289,289,289,289,289,289,0,0,0,0,264,0,264,264,0,0,0,0,243,278,278,278,278,243,249,249,249,249,249,279,281,278,282,243,264,266,249,279,281,278,282,243,264,266,264,264,249,245,243,266,249,264,266,249,249,249,279,281,278,282,243,264,266,282,249,279,281,278,282,243,264,266,249,282,279,249,279,281,278,282,266,282,281,281,266,282,282,282,282,245,266,264,282,282,249,279,281,278,282,243,264,266,249,279,281,278,282,243,264,266,249,279,281,278,282,243,264,266],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bdfhfhffhfhf}{{n{jl}}}}{{bdfhffhf}{{n{jl}}}}{{bfhffhf}{{n{jl}}}}`````````````````````{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000``````````{A`A`}{AbAb}{AdAd}{AfAf}{AhAh}{ll}{AjAj}{AlAl}{AnAn}{B`B`}{BbBb}{BdBd}{BfBf}{BhBh}{BjBj}{BlBl}{BnBn}{C`C`}{CbCb}{CdCd}{CfCf}{ChCh}{CjCj}{ClCl}{CnCn}{D`D`}{DbDb}{DdDd}{DfDf}{DhDh}{DjDj}{DlDl}{DnDn}{E`E`}{EbEb}{EdEd}{EfEf}{EhEh}{EjEj}{ElEl}{EnEn}{F`F`}{FbFb}{FdFd}{FfFf}{FhFh}{FjFj}{FlFl}{FnFn}{G`G`}{GbGb}{GdGd}{GfGf}{GhGh}{GjGj}{GlGl}{GnGn}{H`H`}{HbHb}{HdHd}{HfHf}{HhHh}{HjHj}{HlHl}{HnHn}{I`I`}{IbIb}{IdId}{IfIf}{IhIh}{IjIj}{IlIl}{InIn}{J`J`}{JbJb}{JdJd}{JfJf}{JhJh}{JjJj}{JlJl}{JnJn}{K`K`}{KbKb}{KdKd}{KfKf}{KhKh}{KjKj}{KlKl}{KnKn}{L`L`}{LbLb}{LdLd}{LfLf}{LhLh}{LjLj}{LlLl}{LnLn}{M`M`}{MbMb}{MdMd}{MfMf}{MhMh}{MjMj}{MlMl}{MnMn}{N`N`}{NbNb}{NdNd}{NfNf}{NhNh}{NjNj}{NlNl}{NnNn}{O`O`}{ObOb}{OdOd}{OfOf}{OhOh}{OjOj}{OlOl}{OnOn}{A`A`}{AbAb}{AdAd}{AfAf}{AhAh}{AjAj}{AlAl}{AnAn}{AA`AA`}{AAbAAb}{AAdAAd}{AAfAAf}{AAhAAh}{AAjAAj}{AAlAAl}{AAnAAn}{AB`AB`}{ABbABb}{ABdABd}{ABfABf}{ABhABh}{ABjABj}{ABlABl}{ABnABn}{AC`AC`}{ACbACb}{ACdACd}{ACfACf}{AChACh}{ACjACj}{AClACl}{ACnACn}{AD`AD`}{ADbADb}{ADdADd}{ADfADf}{ADhADh}{ADjADj}{ADlADl}{ADnADn}{AE`AE`}{AEbAEb}{AEdAEd}{AEfAEf}{AEhAEh}{AEjAEj}{AElAEl}{AEnAEn}{AF`AF`}{AFbAFb}{AFdAFd}{AFfAFf}{AFhAFh}{AFjAFj}{AFlAFl}{AFnAFn}{AG`AG`}{AGbAGb}{AGdAGd}{AGfAGf}{AGhAGh}{AGjAGj}{AGlAGl}{AGnAGn}{AH`AH`}{AHbAHb}{AHdAHd}{AHfAHf}{AHhAHh}{AHjAHj}{AHlAHl}{AHnAHn}{AI`AI`}{AIbAIb}{AIdAId}{AIfAIf}{AIhAIh}{AIjAIj}{AIlAIl}{AInAIn}{AJ`AJ`}{AJbAJb}{AJdAJd}{AJfAJf}{AJhAJh}{AJjAJj}{AJlAJl}{AJnAJn}{AK`AK`}{AKbAKb}{AKdAKd}{AKfAKf}{AKhAKh}{AKjAKj}{AKlAKl}{AKnAKn}{AL`AL`}{ALbALb}{ALdALd}{ALfALf}{ALhALh}{ALjALj}{ALlALl}{ALnALn}{AM`AM`}{AMbAMb}{AMdAMd}{AMfAMf}{AMhAMh}{AMjAMj}{AMlAMl}{AMnAMn}{AN`AN`}{ANbANb}{ANdANd}{{ce}j{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````````{{bfhffhf}{{n{jl}}}}{{AfB`fB`f{ANf{c}}}{{n{jl}}}{ANhANj}}{{bAHbANlfANnfAO`fhffhf}{{n{jl}}}}{{AfAObffB`fB`f{ANf{c}}}{{n{jl}}}{ANhANj}}{{bAH`ANlfANnfhfhffAO`f}{{n{jl}}}}{{AfAObfB`fB`ff{ANf{c}}}{{n{jl}}}{ANhANj}}{{bAGnANlfANnfhfAO`ffhf}{{n{jl}}}}3```{{}{{n{dl}}}}{{}{{n{ANll}}}}{{}{{n{AOdl}}}}{{}{{n{AO`l}}}}{{}{{n{AOfl}}}}{{}{{n{AOhl}}}}{{}{{n{AOjl}}}}{{}{{n{AOll}}}}{{}{{n{hl}}}}```````````{{BjClAOnBl}Bf}{{CdBlB`}Bf}{{BlBlAOn}Bf}{{C`Bl}Bf}`````{{ABbBlBj}Bf}{{BbABjfBjBb}Bf}{{BbABjfBjBbBbBb}Bf}{{ABjBlBj}Bf}{{ABjBnBj}Bf}``````````````````````````````````````````{{B`Jl}Bf}`````{{B`B`B`B`Bh}Bj}{{BdFd}Bf}{{BdFdABlG`}Bf}{{}Bf}``{ObBf}{OdBf}{BdBf}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{B`B`B`}Bf}{B`Bf}{{B`AOn}Bf}{{HnHl}Bf}{{B`I`B`}Bf}{{B`Bf}Bf}{GhBf}{{OnB`}Bf}{{B`Jff}Bf}{{BbH`}Bf}2{{fB`B`}Bf}{{B`JhB`B`}Bf}{{BfB`B`}Bf}{GjBf}{{B`B`}Bf}{{BbBjB`}Bf}>````{{}Bf}:8{{H`Bb}Bf}{{B`On}Bf}52{B`Bf}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{O`Bf}{{O`AOn}Bf}1{{BhO`O`}Bf}2{{O`Nn}Bf}{{O`NnAOn}Bf}4```{{fObKj}Bf}{{BnObKl}Bf}```````````````````````````````````````````````````````````````{fBf}{BlBf}{{fNn}Bf}2{BnBf}``````````{{Gdf}Bf}{{fGfB`}Bf}{{fGh}Bf}{{fGj}Bf}`````{{BjBl}Bf}{B`Bf}0{AOnBf}{{JlB`}Bf}{{BffBd}Bf}`{BfBf}0{{fJj}Bf}{{Olf}Bf}{{}Bf}{{BlBnAOn}Bf}{{FdBd}Bf}{{ABbf}Bf}{{ff}Bf}{{Bbf}Bf}{{BbABj}Bf}4{{G`Bd}Bf}{{ABlBd}Bf}{{ABjf}Bf}{{OhOfOhBbOf}Bf}{{OfOhOhBb}Bf}{{OhOfOhBb}Bf}{{OhOfOhBbO`}Bf}0{{OhOfOhBbAf}Bf}{{OhOfOhBbAh}Bf}{{OhOfOhBbDj}Bf}{{OhOfOhBbAd}Bf}{{OhOfOhBbJd}Bf}{{OhOfOhBbf}Bf}{{OhOfOhBbD`}Bf}{{OhOfOhBbffBbCh}Bf}{{OhOfOhBbffBbBbCh}Bf}0{{OhOfOhBbDd}Bf}{{OhOf}Bf}{{OfOf}Bf}{{OfAOn}Bf}```````````{{OfBfAOn}Bf}{OfBf}{OhBf}{{OhO`}Bf}000{{AlOhOf}Bf}{AlBf}{{AlOhO`}Bf}0{{AlOhAf}Bf}{{AlOhAh}Bf}{{AlOhDj}Bf}{{AlOhAd}Bf}{{AlOhD`}Bf}{{AlOhffBbCh}Bf}{{AlOhffBbBbCh}Bf}0{{AlOhDd}Bf}{{AlOfOhAn}Bf}```````````{{OhAf}Bf}0{{OhAh}Bf}0{{OfOhOhBb}Bf}{{OfOhBb}Bf}0{{OhDj}Bf}0{{AlOfOhBfBb}Bf}```{{AlOfBd}Bf}{{OhOh}Bf}{{OhAAjAAl}Bf}{{OhAd}Bf}10{{AlNn}Bf}{{OhJd}Bf}`````{{Ohf}Bf}{{OhD`}Bf}0{{OhffBbCh}Bf}{{OhffBbBbCh}Bf}0{{OhDd}Bf}0{{OhOhOf}Bf}{{OhOhBb}Bf}0{{AlOhAOn}Bf}{{OhAj}Bf}1```````````````{{OfOjAOn}Bf}{{OfOhOhBb}Bf}{{OfOjAOnAOn}Bf}=`````````````{{B`EhNn}Bf}```````{{BnEh}Bf}{{fBbEh}Bf}{{EhAOn}Bf}`{{BlEhAOnAOn}Bf}4{EhBf}{{fBbAOn}Bf}`{{ffAOn}Bf}{{AOnf}Bf}`2{fBf}{{ObKd}Bf}{{OdL`}Bf}2``{{JnO`}Bf}{{K`f}Bf}``{{O`Jn}Bf}{{fK`AOn}Bf}````````{{fBdBdfBbNn}Bf}{{AbAOnAOn}Bf}{{NnBjf}Bf}2`````````{{fBb}Bf}{{CjCl}Bf}{{BlBjClAOn}Bf}{{BlBjBbBbAOn}Bf}{{fBbNn}Bf}{{fBbOnNn}Bf}5{{fBbAOn}Bf}{{BnBjClAOnAOn}Bf}{{fBbBbBb}Bf}`````{{fBbHbB`}Bf}````````````{{BbBb}Bf}``````````````{{OnJ`}Bf}{OnBf}{{Jbf}Bf}{{fOnInAOn}Bf}{{IhOnIf}Bf}{{OnIbf}Bf}{{OnfInAOn}Bf}{{fOnJb}Bf}`````{{OnIjBb}Bf}3{{OnBb}Bf}`{{fBbB`Nn}Bf}`````{{fBbHdfBb}Bf}{{fBbHdBbfBb}Bf}{{ffBbCh}Bf}{{fBbfBbBbBbCh}Bf}{{BlBbBbBlBbBbBbBbCh}Bf}{{fBbfBbBbBbChNn}Bf}{{fBbBlBbBbBbBbCh}Bf}{{fBbBlBbBbBbBbChNn}Bf}{{BlBbBbfBbBbBbCh}Bf}{{BlBbBbfBbBbBbChNn}Bf}{D`Bf}{{D`Nn}Bf}`{DbBf}{{DbNn}Bf}`{{BlBbBbBlBbBbBbCh}Bf}{{ffBbChNn}Bf}```{{fBlBbBbBbCh}Bf}{{fBlBbBbBbChNn}Bf}{{ffBbBbCh}Bf}{{ffBbBbChNn}Bf}```{{fB`fB`Bb}Bf}{{fB`fB`BbNn}Bf}{{BlBbBbfBbCh}Bf}{{BlBbBbfBbChNn}Bf}54``````{{fB`Bb}Bf}{{fBbB`BbBb}Bf}{{fBbB`BbBbNn}Bf}{{CjB`Cl}Bf}{{CjB`ClNn}Bf}{{fB`BbNn}Bf}``{{CdBnB`}Bf}{{C`Bn}Bf}``{{BbfB`B`}Bf}{{B`fB`Bb}Bf}{{B`fB`BbAOn}Bf}``{{}Bf}``{{Gbf}Bf}````````````````````````````````````````````````````````{B`Bf}0{AOnBf}{BlBf}0{{B`B`}Bf}````````{{OdMjAOnNn}Bf}{{NnBjfAOn}Bf}`{{NnfBbAOn}Bf}````{{NnDn}Bf}`````````{{NnNn}Bf}{NnBf}{{NnAOn}Bf}{{NnAOnB`}Bf}2{{NnOf}Bf}{{NnAAfAAh}Bf}{{NnDlBd}Bf}{{NnDlBdOfOhBb}Bf}5{{NnB`}Bf}{{NnDl}Bf}84`8{{NnOhBbAOn}Bf}`{{NnO`AOn}Bf}````````````````{DnBf}{{}Bf}{GhBf}{{BbH`}Bf}1{{H`Bb}Bf}3`{ABjBf}{{OjfBjAOnAOn}Bf}``{{OjAOn}Bf}0``{{OdNdAOnNn}Bf}{Bb{{n{fl}}}}{f{{n{jl}}}}{{AC`AD`fAChfAChfAChffAChf}ACb}`{{AC`AD`fAChffAChf}ACb}``{{AC`fAChffAChf}ACb}{{}ACb}0`````````````{{AMff}ACb}``{fACb}{{AC`ff}ACb}1{{fAMbAMdBnBnf}ACb}`2```{{fAMbAMdBnf}ACb}```{{AC`AFlffffAChfAChfAChfAChfffBlff}ACb}{{AC`AFlAFnffffAChfAChfAChfAChfAChfAChffffBlffAD`fBbfBb}ACb}{{AC`AFlffAChfAChfAChffffBl}ACb}{{AC`AFlffAChfAChfAChffBlffBlff}ACb}{{AC`AFlAFnffAChfAChfAChfAChffBlffBlffAD`fBbfBb}ACb}`{{AC`AInB`}ACb}{{AC`AChfB`B`B`fAChfAHfADhfBb}ACb}```{{AC`AHfADhAChfB`B`B`fAChfBbf}ACb}`==`>{{AC`fAClfAChfAK`AHbfBbfAChf}ACb}{{AC`fAChfAChfAK`AH`fBbfAClf}ACb}{{AC`fAChfAClfAK`AGnfBbfAChfAChfAD`AChf}ACb}```````{{AC`fAChfAClfAK`AGnfBbfAChf}ACb}`````{{AGjAGj}ACb}{AC`ACb}{AD`ACb}{AGjACb}{{AGlB`}ACb}{AJhACb}{ADhACb}{AK`ACb}{AGhACb}{AClACb}{{AKjAL`}ACb}{{AKnAL`}ACb}{{AKlAL`}ACb}{ACnACb}{ADdACb}{{AInB`ADlAJ`}ACb}{ACjACb}{AJbACb}{AInACb}{ADfACb}{AJfACb}{ADbACb}{AChACb}{ADjACb}```{{AChAChAFl}ACb}{{AChAChAChAG`B`}ACb}{AC`ACb}{AD`ACb}{AGjACb}{{AGlB`}ACb}{AJhACb}{ADhACb}{AK`ACb}{AGhACb}{AClACb}{AKjACb}{AKnACb}{AKlACb}{ACnACb}{ADdACb}{AJ`ACb}{ACjACb}{AJbACb}{AInACb}{ADfACb}{AJfACb}{ADbACb}{AChACb}{ADjACb}```{{AC`ACnAFjfAChffffffAChff}ACb}{{AC`ACnAFjfAChfffffAChf}ACb}{{AC`AGhAChfAChffBb}ACb}`0{{AChBb}ACb}{{AC`Bb}ACb}````{{AC`AClAChAK`AChB`B`AKh}ACb}{{AC`AClfAChfAK`AChfB`B`AKhfBb}ACb}{{AC`AChAChAK`AClB`B`ALh}ACb}{{AC`AChfAChfAK`AClfB`B`ALhfBb}ACb}{{AC`AChAClAK`AChB`B`AKf}ACb}{{AC`AChfAClfAK`AChfB`B`AKffBb}ACb}{{AC`AInB`AChfAChfAChfAChfAClfAChfAChfAChfAChfAChfBhB`B`AGlfBbfBb}ACb}{{AC`AInB`AChfAChfAChfBhB`B`AGlfBbAClffBb}ACb}{{AC`AInB`AChfAChfAChfAClfAChfAChfAChfBhB`B`AGlfBb}ACb}{{AC`AInB`AChfAChfAChfAClfAChfAChfAChfBhB`B`AGlfBbfBb}ACb}`````{{AC`AKnAKl}ACb}````````{{AD`AFfAE`Bl}ACb}{{AD`Bl}ACb}{{AGjAHh}ACb}{{AGlAGjACbBhBb}ACb}{{AC`AGjBb}ACb}{{AJhAOnB`BlADlADlADnAGhAGhB`B`B`B`B`B`B`B`B`B`B`}ACb}{{AC`AFlAFnAChAChAChAChAChAChAD`Bb}ACb}{{AC`AFlAFnAChAChAChAChAD`Bb}ACb}{{AC`AFlAFnAD`AChBb}ACb}{{ADhADl}ACb}{{ADhADlAJnAE`}ACb}{{ADhADlAJnAE`B`}ACb}{{AC`AChAChB`B`B`AHfADhBb}ACb}{{AC`AHfADhAChAChBb}ACb}{{AOnfBj}ACb}{{AK`B`B`B`B`B`B`AKbADl}ACb}{{AK`AChAClB`B`B`B`}ACb}{{AC`B`}ACb}{{AC`AClAChAK`AChB`B`AKh}ACb}{{AC`AClAChAK`AChAHbBb}ACb}2{{AC`AChAChAK`AClB`B`ALh}ACb}{{AC`AChAChAK`AClAH`Bb}ACb}4{{AC`AChAClAK`AChB`B`AKf}ACb}{{AC`AChAClAK`AChAGnBb}ACb}{{AK`B`}ACb}{{AK`ADn}ACb}{{AK`B`B`B`B`B`AKbADl}ACb}{{AK`AChAClB`B`}ACb}{{AK`AKd}ACb}{{}Bb}{{AGhAC`BhfBd}ACb}{ACbBf}{{AClADlAEdB`B`B`B`}ACb}{{AClB`ADlAEdB`B`}ACb}{{AClBb}ACb}{{AC`AClAChAK`AChAEdAClAChAK`AChADjADjADjADj}ACb}{{AKjALbfB`}ACb}{{AKlALff}ACb}{{ACnAOnBlBlBl}ACb}{{AC`AJhBbBbBb}ACb}{{AC`AJhAJjBbfAChf}ACb}{{AC`AG`AGdAGbAChAChAChAChAChAChAD`AChBbB`}ACb}{{AC`AG`AGdAGbAChAChAChAChAD`AChBbB`}ACb}{{AC`AG`AGdAGbAD`AChBbB`}ACb}{{ADdAEhADlAE`}ACb}{{ACjAFdAE`B`B`B`B`B`B`}ACb}{{ACjAChB`B`B`B`}ACb}{{ACjB`AFdAE`B`B`B`B`}ACb}{{ACjAChB`B`}ACb}{{AOnB`}ACb}{{AC`AInB`}ACb}0{{AInAId}ACb}{{AJbADlAIlB`B`B`B`B`f}ACb}{{AC`AInB`B`AGhAIhAIfAIbAHdADl}ACb}{{AInAHdAIbAIdAIfAIhADlADlADnB`B`B`B`AGhAOn}ACb}44{{AC`AInB`AChAClfB`AClf}ACb}0{{AInADn}ACb}{{AInAOn}ACb}{{AC`AInAChBbADl}ACb}{{AC`AInB`B`}ACb}{{AC`AInAI`AJbBbBb}ACb}{{AC`AInB`AChBb}ACb}{{AC`AInB`BbfB`AChfAChf}ACb}{{AC`AInBb}ACb}2{{ADfAEjADlAE`AElAEn}ACb}{{AC`ADfAChAChBb}ACb}0{{AJfADlB`B`B`AJdBbBbB`f}ACb}{{AC`Nn}ACb}{{AChADlB`B`B`B`B`B`B`B`}ACb}{{AChB`ADlB`B`B`}ACb}{{AChBb}ACb}{{ADjAOnAEdB`B`AOnAEf}ACb}{{}Bb}`{{AC`AChfAClAK`f}ACb}`{{ADjAChAChBb}ACb}{{AC`ACnAFhfAChfAChfAChffAChf}ACb}{{AC`ACnAFhfAChffAChf}ACb}````{{AC`AKnAKjBb}ACb}`{{AC`AJhB`B`B`B`AJffAJfffAJfffAJfffBbfBbfBbf}ACb}{{AC`AJhAJlAJffAJffAJffAJffBbffBbfBbf}ACb}{{AC`AJhB`B`B`B`B`AJfffAJffAJffAJffBbfBbfBbf}ACb}`````{{AC`AG`AGdAGbffffAChfAChfAChfAChfAChfAChffffBlAChffAD`fBbfBbB`}ACb}{{AC`AG`AGdAGbffAChfAChffAChffAChfAD`AChfBlB`}ACb}{{AC`AG`AGdAGbffAChfAChffBlAChffBlffAD`AChfAChffBbfBbB`}ACb}{{AC`ADdfAChffAChffAChf}ACb}```{{}ACb}0````{{AC`ACjfAChfAChfAChffAChf}ACb}`{{AC`ACjfAChffAChf}ACb}``{{AC`ACbACfACd}ACb}`{{AC`AInB`AChfAChfAChfAChfAClfAChfAChfAChfAChfAChffBbfBb}ACb}{{AC`AInAJbfAJbfAJbfAChfAChfAClfAChfAChfAJbfAChfAChfAJbffBbfBb}ACb}{{AC`AInB`AJbffAJbfAChfffAChfffBbfBbfBbf}ACb}{{AC`AInB`AChfAChfAChffBbAClffBb}ACb}{{AC`AInAJbfAChfAJbffBbAClffBb}ACb}{{AC`AInAJlB`AJbfAChfAJbfBbfBbfBbf}ACb}``````{{AC`AInAI`B`AJbfAJbfAChffAChffBbfBbfBbf}ACb}{{AC`AInB`AChfAChfAChfAClfAChfAChfAChffBb}ACb}{{AC`AInAJbfAChfAChfAClfAJbfAChfAChfAJbfAJbfAJbfAJbffBb}ACb}{{AC`AInB`AChfAChfAChfAClfAChfAChfAChffBbfBb}ACb}{{AC`AInAJbfAChfAChfAClfAJbfAChfAChfAJbfAJbfAJbfAJbffBbfBb}ACb}{{AC`AInAIjAE`BlBl}ACb}{{AInAIjAE`BlBl}ACb}```10`{{AC`ADffBbfBbfAChffAChf}ACb}````{{AC`AClAKdffB`ff}ACb}``{{AC`fBbAGj}ACb}{{AGhAC`BhfBbBd}ACb}``{{AC`AGjfBb}ACb}{{AC`AChff}ACb}```{{AD`AFfAE`Bl}ACb}{{AD`Bl}ACb}{{AGjAHh}ACb}{{AGlAGjACbBhBb}ACb}{{AJhAOnB`BlADlADlADnAGhAGhB`B`B`B`B`B`B`B`B`B`B`}ACb}{{ADhADl}ACb}{{ADhADlAJnAE`}ACb}{{ADhADlAJnAE`B`}ACb}{{AOnfBj}ACb}{{AK`B`B`B`B`B`B`AKbADl}ACb}{{AK`B`}ACb}{{AK`ADn}ACb}{{AK`B`B`B`B`AKbADl}ACb}{{AK`AKd}ACb}{{AGhAC`BhfBbBd}ACb}{{AClADlAEdB`B`B`B`}ACb}{{AClADlAEdB`B`}ACb}{{AKjALbf}ACb}{{AKlALff}ACb}{{ACnAOnBlBlBl}ACb}{{ADdAEhADlAE`}ACb}{{AInAJ`}ACb}{{ACjAFdAE`B`B`B`B`B`B`}ACb}{{ACjAFdAE`B`B`B`B`}ACb}{{AC`AInAGj}ACb}{{AInAId}ACb}{{AJbADlAIlB`B`B`B`f}ACb}{{AC`AInB`B`AGhAIhAIfAIbAHdADl}ACb}{{AInAHdAIbAIdAIfAIhADlADlADnB`B`B`B`AGhAOn}ACb}{{AInADn}ACb}{{AInAOn}ACb}{{AC`AInB`B`}ACb}{{ADfAEjADlAE`AElAEn}ACb}{{AJfADlB`B`AJdBbB`f}ACb}{{ADbAGfADlB`B`}ACb}{{AC`Nn}ACb}{{AC`AChff}ACb}{{AChAEdADlB`B`B`B`}ACb}{{AChADlB`B`B`B`B`B`B`B`}ACb}{{AChADlB`B`B`}ACb}{{AChAEdADlB`B`}ACb}{{ADjAOnAEdB`B`AOnAEf}ACb}``{{AC`AF`AFbfAChfAChffAChf}ACb}{{AC`AF`AFbfAChffAChf}ACb}`{{AC`ADbff}ACb}0{{AC`ADbfAChffAChffAChffff}ACb}{{AC`ADbfAChfffAChf}ACb}``````````{{AC`ADjfAClffAClf}ACb}{{AC`fAChffAChf}ACb}{{AC`ADjfAChffAChf}ACb}`{BA`ADl}``{{}AKf}{{}AKh}{{}ALh}`````{b{{n{jl}}}}{d{{n{jl}}}}{ANl{{n{jl}}}}{AOd{{n{jl}}}}{AO`{{n{jl}}}}{AOf{{n{jl}}}}{AOh{{n{jl}}}}{AOl{{n{jl}}}}{h{{n{jl}}}}```````````````{{bAOfAFjfhffffffhff}{{n{jl}}}}{{bAOfAFjfhfffffhf}{{n{jl}}}}`{Abj}{Adj}{Afj}{Ahj}{Ajj}{Alj}{Anj}{BAbj}{B`j}{{bAOdhfhffBb}{{n{jl}}}}{{AfBAdB`fB`f}{{n{jl}}}}10{h{{n{Bbl}}}}{b{{n{Bbl}}}}`````````{{BbBb}BAf}{{BfBf}BAf}{{BhBh}BAf}{{CfCf}BAf}{{ChCh}BAf}{{DfDf}BAf}{{DlDl}BAf}{{DnDn}BAf}{{E`E`}BAf}{{EbEb}BAf}{{EdEd}BAf}{{EfEf}BAf}{{EjEj}BAf}{{ElEl}BAf}{{EnEn}BAf}{{F`F`}BAf}{{FbFb}BAf}{{GfGf}BAf}{{GhGh}BAf}{{GjGj}BAf}{{GlGl}BAf}{{GnGn}BAf}{{H`H`}BAf}{{HbHb}BAf}{{HdHd}BAf}{{HfHf}BAf}{{HhHh}BAf}{{HjHj}BAf}{{HlHl}BAf}{{HnHn}BAf}{{I`I`}BAf}{{IbIb}BAf}{{IdId}BAf}{{IhIh}BAf}{{IlIl}BAf}{{InIn}BAf}{{JfJf}BAf}{{JhJh}BAf}{{KbKb}BAf}{{KnKn}BAf}{{A`A`}BAf}{{AjAj}BAf}{{AnAn}BAf}{{AA`AA`}BAf}{{AAbAAb}BAf}{{AAdAAd}BAf}{{AAfAAf}BAf}{{AAjAAj}BAf}{{AAnAAn}BAf}{{AB`AB`}BAf}{{ABdABd}BAf}{{ABfABf}BAf}{{ABhABh}BAf}{{ABnABn}BAf}{{ACbACb}BAf}{{ACfACf}BAf}{{ADlADl}BAf}{{ADnADn}BAf}{{AE`AE`}BAf}{{AEbAEb}BAf}{{AEdAEd}BAf}{{AEfAEf}BAf}{{AEhAEh}BAf}{{AEjAEj}BAf}{{AElAEl}BAf}{{AEnAEn}BAf}{{AF`AF`}BAf}{{AFbAFb}BAf}{{AFdAFd}BAf}{{AFfAFf}BAf}{{AFhAFh}BAf}{{AFjAFj}BAf}{{AFlAFl}BAf}{{AFnAFn}BAf}{{AG`AG`}BAf}{{AGbAGb}BAf}{{AGdAGd}BAf}{{AGfAGf}BAf}{{AGnAGn}BAf}{{AH`AH`}BAf}{{AHbAHb}BAf}{{AHdAHd}BAf}{{AHfAHf}BAf}{{AHlAHl}BAf}{{AI`AI`}BAf}{{AIbAIb}BAf}{{AIdAId}BAf}{{AIfAIf}BAf}{{AIhAIh}BAf}{{AIjAIj}BAf}{{AIlAIl}BAf}{{AJdAJd}BAf}{{AJjAJj}BAf}{{AJlAJl}BAf}{{AJnAJn}BAf}{{AKbAKb}BAf}{{AKdAKd}BAf}{{AL`AL`}BAf}{{ALbALb}BAf}{{ALdALd}BAf}{{ALfALf}BAf}{{ALjALj}BAf}{{ALlALl}BAf}{{ALnALn}BAf}{{AM`AM`}BAf}{{AMbAMb}BAf}{{AMdAMd}BAf}{{AMfAMf}BAf}{{AMhAMh}BAf}{{AMjAMj}BAf}{{AMlAMl}BAf}{{AMnAMn}BAf}{{AN`AN`}BAf}{{ANbANb}BAf}{{ANdANd}BAf}```````````````````{{bAO`ANlhh}{{n{{BAj{BAh}}l}}}}{{bAO`ANlhh}{{n{{BAj{BAl}}l}}}}{{bAO`ANlhh}{{n{{BAj{BAn}}l}}}}````````````{{A`BB`}BBb}{{AbBB`}BBb}{{AdBB`}BBb}{{AfBB`}BBb}{{AhBB`}BBb}{{lBB`}BBb}0{{AjBB`}BBb}{{AlBB`}BBb}{{AnBB`}BBb}{{BAbBB`}BBb}{{B`BB`}BBb}{{BbBB`}{{n{jBBd}}}}{{BdBB`}{{n{jBBd}}}}{{BfBB`}{{n{jBBd}}}}{{BhBB`}{{n{jBBd}}}}{{BjBB`}{{n{jBBd}}}}{{BlBB`}{{n{jBBd}}}}{{BnBB`}{{n{jBBd}}}}{{C`BB`}{{n{jBBd}}}}{{CbBB`}{{n{jBBd}}}}{{CdBB`}{{n{jBBd}}}}{{CfBB`}{{n{jBBd}}}}{{ChBB`}{{n{jBBd}}}}{{CjBB`}{{n{jBBd}}}}{{ClBB`}{{n{jBBd}}}}{{CnBB`}{{n{jBBd}}}}{{D`BB`}{{n{jBBd}}}}{{DbBB`}{{n{jBBd}}}}{{DdBB`}{{n{jBBd}}}}{{DfBB`}{{n{jBBd}}}}{{DhBB`}{{n{jBBd}}}}{{DjBB`}{{n{jBBd}}}}{{DlBB`}{{n{jBBd}}}}{{DnBB`}{{n{jBBd}}}}{{E`BB`}{{n{jBBd}}}}{{EbBB`}{{n{jBBd}}}}{{EdBB`}{{n{jBBd}}}}{{EfBB`}{{n{jBBd}}}}{{EhBB`}{{n{jBBd}}}}{{EjBB`}{{n{jBBd}}}}{{ElBB`}{{n{jBBd}}}}{{EnBB`}{{n{jBBd}}}}{{F`BB`}{{n{jBBd}}}}{{FbBB`}{{n{jBBd}}}}{{FhBB`}{{n{jBBd}}}}{{FjBB`}{{n{jBBd}}}}{{FlBB`}{{n{jBBd}}}}{{FnBB`}{{n{jBBd}}}}{{G`BB`}{{n{jBBd}}}}{{GbBB`}{{n{jBBd}}}}{{GdBB`}{{n{jBBd}}}}{{GfBB`}{{n{jBBd}}}}{{GhBB`}{{n{jBBd}}}}{{GjBB`}{{n{jBBd}}}}{{GlBB`}{{n{jBBd}}}}{{GnBB`}{{n{jBBd}}}}{{H`BB`}{{n{jBBd}}}}{{HbBB`}{{n{jBBd}}}}{{HdBB`}{{n{jBBd}}}}{{HfBB`}{{n{jBBd}}}}{{HhBB`}{{n{jBBd}}}}{{HjBB`}{{n{jBBd}}}}{{HlBB`}{{n{jBBd}}}}{{HnBB`}{{n{jBBd}}}}{{I`BB`}{{n{jBBd}}}}{{IbBB`}{{n{jBBd}}}}{{IdBB`}{{n{jBBd}}}}{{IfBB`}{{n{jBBd}}}}{{IhBB`}{{n{jBBd}}}}{{IjBB`}{{n{jBBd}}}}{{IlBB`}{{n{jBBd}}}}{{InBB`}{{n{jBBd}}}}{{J`BB`}{{n{jBBd}}}}{{JbBB`}{{n{jBBd}}}}{{JdBB`}{{n{jBBd}}}}{{JfBB`}{{n{jBBd}}}}{{JhBB`}{{n{jBBd}}}}{{JjBB`}{{n{jBBd}}}}{{JlBB`}{{n{jBBd}}}}{{JnBB`}{{n{jBBd}}}}{{K`BB`}{{n{jBBd}}}}{{KbBB`}{{n{jBBd}}}}{{KhBB`}{{n{jBBd}}}}{{KjBB`}{{n{jBBd}}}}{{KlBB`}{{n{jBBd}}}}{{KnBB`}{{n{jBBd}}}}{{LdBB`}{{n{jBBd}}}}{{LjBB`}{{n{jBBd}}}}{{LnBB`}{{n{jBBd}}}}{{MdBB`}{{n{jBBd}}}}{{MhBB`}{{n{jBBd}}}}{{MnBB`}{{n{jBBd}}}}{{NbBB`}{{n{jBBd}}}}{{NhBB`}{{n{jBBd}}}}{{NlBB`}{{n{jBBd}}}}{{NnBB`}{{n{jBBd}}}}{{O`BB`}{{n{jBBd}}}}{{ObBB`}{{n{jBBd}}}}{{OdBB`}{{n{jBBd}}}}{{OfBB`}{{n{jBBd}}}}{{OhBB`}{{n{jBBd}}}}{{OjBB`}{{n{jBBd}}}}{{OlBB`}{{n{jBBd}}}}{{OnBB`}{{n{jBBd}}}}{{A`BB`}{{n{jBBd}}}}{{AbBB`}{{n{jBBd}}}}{{AdBB`}{{n{jBBd}}}}{{AfBB`}{{n{jBBd}}}}{{AhBB`}{{n{jBBd}}}}{{AjBB`}{{n{jBBd}}}}{{AlBB`}{{n{jBBd}}}}{{AnBB`}{{n{jBBd}}}}{{AA`BB`}{{n{jBBd}}}}{{AAbBB`}{{n{jBBd}}}}{{AAdBB`}{{n{jBBd}}}}{{AAfBB`}{{n{jBBd}}}}{{AAjBB`}{{n{jBBd}}}}{{AAnBB`}{{n{jBBd}}}}{{AB`BB`}{{n{jBBd}}}}{{ABbBB`}{{n{jBBd}}}}{{ABdBB`}{{n{jBBd}}}}{{ABfBB`}{{n{jBBd}}}}{{ABhBB`}{{n{jBBd}}}}{{ABjBB`}{{n{jBBd}}}}{{ABlBB`}{{n{jBBd}}}}{{ABnBB`}{{n{jBBd}}}}{{AC`BB`}{{n{jBBd}}}}{{ACbBB`}{{n{jBBd}}}}{{ACdBB`}{{n{jBBd}}}}{{ACfBB`}{{n{jBBd}}}}{{AChBB`}{{n{jBBd}}}}{{ACjBB`}{{n{jBBd}}}}{{AClBB`}{{n{jBBd}}}}{{ACnBB`}{{n{jBBd}}}}{{AD`BB`}{{n{jBBd}}}}{{ADbBB`}{{n{jBBd}}}}{{ADdBB`}{{n{jBBd}}}}{{ADfBB`}{{n{jBBd}}}}{{ADhBB`}{{n{jBBd}}}}{{ADjBB`}{{n{jBBd}}}}{{ADlBB`}{{n{jBBd}}}}{{ADnBB`}{{n{jBBd}}}}{{AE`BB`}{{n{jBBd}}}}{{AEbBB`}{{n{jBBd}}}}{{AEdBB`}{{n{jBBd}}}}{{AEfBB`}{{n{jBBd}}}}{{AEhBB`}{{n{jBBd}}}}{{AEjBB`}{{n{jBBd}}}}{{AElBB`}{{n{jBBd}}}}{{AEnBB`}{{n{jBBd}}}}{{AF`BB`}{{n{jBBd}}}}{{AFbBB`}{{n{jBBd}}}}{{AFdBB`}{{n{jBBd}}}}{{AFfBB`}{{n{jBBd}}}}{{AFhBB`}{{n{jBBd}}}}{{AFjBB`}{{n{jBBd}}}}{{AFlBB`}{{n{jBBd}}}}{{AFnBB`}{{n{jBBd}}}}{{AG`BB`}{{n{jBBd}}}}{{AGbBB`}{{n{jBBd}}}}{{AGdBB`}{{n{jBBd}}}}{{AGfBB`}{{n{jBBd}}}}{{AGhBB`}{{n{jBBd}}}}{{AGjBB`}{{n{jBBd}}}}{{AGlBB`}{{n{jBBd}}}}{{AGnBB`}{{n{jBBd}}}}{{AH`BB`}{{n{jBBd}}}}{{AHbBB`}{{n{jBBd}}}}{{AHdBB`}{{n{jBBd}}}}{{AHfBB`}{{n{jBBd}}}}{{AHlBB`}{{n{jBBd}}}}{{AHnBB`}{{n{jBBd}}}}{{AI`BB`}{{n{jBBd}}}}{{AIbBB`}{{n{jBBd}}}}{{AIdBB`}{{n{jBBd}}}}{{AIfBB`}{{n{jBBd}}}}{{AIhBB`}{{n{jBBd}}}}{{AIjBB`}{{n{jBBd}}}}{{AIlBB`}{{n{jBBd}}}}{{AInBB`}{{n{jBBd}}}}{{AJ`BB`}{{n{jBBd}}}}{{AJbBB`}{{n{jBBd}}}}{{AJdBB`}{{n{jBBd}}}}{{AJfBB`}{{n{jBBd}}}}{{AJhBB`}{{n{jBBd}}}}{{AJjBB`}{{n{jBBd}}}}{{AJlBB`}{{n{jBBd}}}}{{AJnBB`}{{n{jBBd}}}}{{AK`BB`}{{n{jBBd}}}}{{AKbBB`}{{n{jBBd}}}}{{AKdBB`}{{n{jBBd}}}}{{AKfBB`}{{n{jBBd}}}}{{AKhBB`}{{n{jBBd}}}}{{AKjBB`}{{n{jBBd}}}}{{AKlBB`}{{n{jBBd}}}}{{AKnBB`}{{n{jBBd}}}}{{AL`BB`}{{n{jBBd}}}}{{ALbBB`}{{n{jBBd}}}}{{ALdBB`}{{n{jBBd}}}}{{ALfBB`}{{n{jBBd}}}}{{ALhBB`}{{n{jBBd}}}}{{ALjBB`}{{n{jBBd}}}}{{ALlBB`}{{n{jBBd}}}}{{ALnBB`}{{n{jBBd}}}}{{AM`BB`}{{n{jBBd}}}}{{AMbBB`}{{n{jBBd}}}}{{AMdBB`}{{n{jBBd}}}}{{AMfBB`}{{n{jBBd}}}}{{AMhBB`}{{n{jBBd}}}}{{AMjBB`}{{n{jBBd}}}}{{AMlBB`}{{n{jBBd}}}}{{AMnBB`}{{n{jBBd}}}}{{AN`BB`}{{n{jBBd}}}}{{ANbBB`}{{n{jBBd}}}}{{ANdBB`}{{n{jBBd}}}}```{cc{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{dAb}{ANlAd}{bAf}{AOdAh}{AO`Aj}{AOfAl}{AOhAn}{{AOlBAd}BAb}{hB`}``{{bAHbAO`ANlhh}{{n{Bbl}}}}{{bAH`AO`ANlhh}{{n{Bbl}}}}{{bAGnAO`ANlhh}{{n{Bbl}}}}{{AOhAFdAE`BBfBBfBBfBBfBBfBBf}{{n{jl}}}}{{AOhBBfAFdAE`BBfBBfBBfBBf}{{n{jl}}}}{{AOhhBBfBBf}{{n{jl}}}}{{}Bb}{{bAOlhBA`}{{n{Bbl}}}}{{bAOlAI`AOj}{{n{{BBh{BbBb}}l}}}}{{bAOlBBf{BAj{h}}}{{n{Bbl}}}}{{bAOlB`{BAj{h}}}{{n{Bbl}}}}{{hBBfADlBBfBBfBBf}{{n{jl}}}}5``````````{{Bbc}jBBj}{{Bfc}jBBj}{{Bhc}jBBj}{{Cfc}jBBj}{{Chc}jBBj}{{Dfc}jBBj}{{Dlc}jBBj}{{Dnc}jBBj}{{E`c}jBBj}{{Ebc}jBBj}{{Edc}jBBj}{{Efc}jBBj}{{Ejc}jBBj}{{Elc}jBBj}{{Enc}jBBj}{{F`c}jBBj}{{Fbc}jBBj}{{Gfc}jBBj}{{Ghc}jBBj}{{Gjc}jBBj}{{Glc}jBBj}{{Gnc}jBBj}{{H`c}jBBj}{{Hbc}jBBj}{{Hdc}jBBj}{{Hfc}jBBj}{{Hhc}jBBj}{{Hjc}jBBj}{{Hlc}jBBj}{{Hnc}jBBj}{{I`c}jBBj}{{Ibc}jBBj}{{Idc}jBBj}{{Ihc}jBBj}{{Ilc}jBBj}{{Inc}jBBj}{{Jfc}jBBj}{{Jhc}jBBj}{{Kbc}jBBj}{{Knc}jBBj}{{A`c}jBBj}{{Ajc}jBBj}{{Anc}jBBj}{{AA`c}jBBj}{{AAbc}jBBj}{{AAdc}jBBj}{{AAfc}jBBj}{{AAjc}jBBj}{{AAnc}jBBj}{{AB`c}jBBj}{{ABdc}jBBj}{{ABfc}jBBj}{{ABhc}jBBj}{{ABnc}jBBj}{{ACbc}jBBj}{{ACfc}jBBj}{{ADlc}jBBj}{{ADnc}jBBj}{{AE`c}jBBj}{{AEbc}jBBj}{{AEdc}jBBj}{{AEfc}jBBj}{{AEhc}jBBj}{{AEjc}jBBj}{{AElc}jBBj}{{AEnc}jBBj}{{AF`c}jBBj}{{AFbc}jBBj}{{AFdc}jBBj}{{AFfc}jBBj}{{AFhc}jBBj}{{AFjc}jBBj}{{AFlc}jBBj}{{AFnc}jBBj}{{AG`c}jBBj}{{AGbc}jBBj}{{AGdc}jBBj}{{AGfc}jBBj}{{AGnc}jBBj}{{AH`c}jBBj}{{AHbc}jBBj}{{AHdc}jBBj}{{AHfc}jBBj}{{AHlc}jBBj}{{AI`c}jBBj}{{AIbc}jBBj}{{AIdc}jBBj}{{AIfc}jBBj}{{AIhc}jBBj}{{AIjc}jBBj}{{AIlc}jBBj}{{AJdc}jBBj}{{AJjc}jBBj}{{AJlc}jBBj}{{AJnc}jBBj}{{AKbc}jBBj}{{AKdc}jBBj}{{AL`c}jBBj}{{ALbc}jBBj}{{ALdc}jBBj}{{ALfc}jBBj}{{ALjc}jBBj}{{ALlc}jBBj}{{ALnc}jBBj}{{AM`c}jBBj}{{AMbc}jBBj}{{AMdc}jBBj}{{AMfc}jBBj}{{AMhc}jBBj}{{AMjc}jBBj}{{AMlc}jBBj}{{AMnc}jBBj}{{AN`c}jBBj}{{ANbc}jBBj}{{ANdc}jBBj}``````````{Abd}{AdANl}{Afb}{AhAOd}{AjAO`}{AlAOf}{AnAOh}{BAbAOl}{B`h}{{}{{n{bl}}}}{Af{{n{BBll}}}}{{AfB`AdAjB`}{{n{AObl}}}}{{AfBhBd}{{n{BAdl}}}}{{AfAOnBlBlBl}{{n{BBnl}}}}{{Af{BC`{B`}}{BC`{B`}}{BC`{B`}}}{{n{BCbl}}}}{{Af{BC`{B`}}BAbB`B`B`AOdAIhAIfAIbAHdBA`ADn}{{n{BCdl}}}}`{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`````````````````````````{{AfB`fB`fB`f{ANf{c}}}{{n{jl}}}{ANhANj}}{{AfB`fB`f{ANf{c}}}{{n{jl}}}{ANhANj}}{{AfBBnB`fB`fB`fB`f{ANf{c}}}{{n{jl}}}{ANhANj}}{{bAOfAFhfhfhffhfhf}{{n{jl}}}}{{bAOfAFhfhffhf}{{n{jl}}}}{{AfBBnB`fB`f{ANf{c}}}{{n{jl}}}{ANhANj}}```````````````````````````````````````````````````````````````````{AFf{{n{Abl}}}}{{{BC`{B`}}{BC`{B`}}BA`}{{n{Adl}}}}{{}{{n{Afl}}}}{{AfBhBdfBb}{{n{Ahl}}}}{{{BC`{B`}}BA`}{{n{Ajl}}}}{{AOnBlBlBl}{{n{All}}}}{{AFd{BC`{B`}}{BC`{B`}}{BC`{B`}}}{{n{Anl}}}}{{AfB`B`BAdAIhAIfAIbAHdBA`BCf}{{n{BAbl}}}}{{{BC`{B`}}{BC`{B`}}BA`}{{n{B`l}}}}``````````````````````````````````{{AfBCbB`fB`fB`fB`f{ANf{c}}}{{n{jl}}}{ANhANj}}{{AfBCbB`fB`f{ANf{c}}}{{n{jl}}}{ANhANj}}{{bAOhfhfhffhfhf}{{n{jl}}}}{{bAOhfhffhf}{{n{jl}}}}32```````{{AfBBlB`fB`fB`fB`f{ANf{c}}}{{n{jl}}}{ANhANj}}{{AfBBlB`fB`f{ANf{c}}}{{n{jl}}}{ANhANj}}```````````````````````````{{bAOlBBfhfhfhfhfAO`fhfhfhfhfhffBbfBb}{{n{jl}}}}{{AfBCd{BAj{B`}}f{BAj{B`}}fB`fB`fAjfB`fB`f{BAj{B`}}fB`fB`fff}{{n{jl}}}}{{bAOlBBfhfhfhffBbAO`ffBb}{{n{jl}}}}{{AfBCd{BAj{B`}}fB`f{BAj{B`}}fAjfff}{{n{jl}}}}{{AfBCd{BAj{B`}}f{BAj{B`}}fB`fB`fAjfB`fB`fff}{{n{jl}}}}{{bAOlBBfhfhfhfAO`fhfhfhffANn}{{n{jl}}}}{{bAOlBBf{BAj{h}}fhfhfAO`f{BAj{h}}fhfhffBbfBb}{{n{jl}}}}``{{bhff}{{n{jl}}}}`{{dAFfAE`Bl}{{n{jl}}}}{{ANlADlAKbBBfBBfBBfBBf}{{n{jl}}}}{{AOdbBhfBbBCh}{{n{jl}}}}{{AO`ADlAEdBBfBBf}{{n{jl}}}}{{AOfBCjBClBClBCl}{{n{jl}}}}{{AOhAFdAE`BBfBBfBBfBBfBBfBBf}{{n{jl}}}}{{AOhAFdAE`BBfBBfBBfBBf}{{n{jl}}}}{{AOjADlAIlB`B`B`{BC`{B`}}f}{{n{AOjl}}}}{{bAOlB`B`AOdAIhAIfAIbAHdBA`}{{n{jl}}}}{{AOlADn}{{n{jl}}}}{{AOlBCf}{{n{jl}}}};{{hADlBBfBBfBBf}{{n{jl}}}}``````{{AfBBlB`fB`fB`fB`f{ANf{c}}}{{n{jl}}}{ANhANj}}{{AfBBlB`fB`f{ANf{c}}}{{n{jl}}}{ANhANj}}`````{{bAF`AFbfhfhffhf}{{n{jl}}}}{{AfB`fB`fB`f{ANf{c}}}{{n{jl}}}{ANhANj}}{{bAF`AFbfhffhf}{{n{jl}}}}{{AfB`fB`f{ANf{c}}}{{n{jl}}}{ANhANj}}````````````````````54`{{{BC`{B`}}}{{BAj{h}}}}````````````````````{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{cBCn{}}``{{bfhffhf}{{n{jl}}}}{c{{n{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{cBD`{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`````````{{}Bb}``````````````````````55{BDbj}{{BDbBB`}BBb}{cc{}}{{fBb}BDb}{BDbf}:{Bb{{n{BDbl}}}}{BDbBb}998`````````````{BBlAb}000`{AObAHb}{AObBb}{AObAH`}1{ce{}{}}000000000000000{BA`BA`}{{ce}j{}{}}{AObAd}{{}BA`}{{}{{ANf{c}}}{ANhBDdBDfANj}}{BAdAh}{AObAj}{{BA`BB`}BBb}{{BAdBB`}BBb}{AObAGn}<{cc{}}0000000`;;;;;;;;={BCdBb}{BBnAl}{{AGnBbAH`BbAHbBbAdAj}AOb}{AlBBn}{{AnAn}BCb}{{AbAbAbAb}BBl}{{BAbB`B`B`AOdAIhAIfAIbAHdADlBbBbBDb}BCd}{{AhBDb}BAd}`{BCbAn}0{BAdBDb}{BCdBAb}:{BCdB`}`{{}Bb}3{ce{}{}}{BCdBDb}>{c{{n{e}}}{}{}}000000000000000{cBD`{}}0000000","c":[],"p":[[8,"cudnnHandle_t",0],[8,"cudnnActivationDescriptor_t",0],[6,"c_void",5618],[8,"cudnnTensorDescriptor_t",0],[1,"unit"],[6,"Error",0],[6,"Result",5619],[5,"API",0],[5,"ActivationDescriptor",0],[5,"ConvolutionDescriptor",0],[5,"Cudnn",0],[5,"DropoutDescriptor",0],[5,"FilterDescriptor",0],[5,"NormalizationDescriptor",0],[5,"PoolingDescriptor",0],[5,"TensorDescriptor",0],[6,"cudaRoundMode",0],[5,"dim3",0],[6,"cudaError_t",0],[6,"cudaChannelFormatKind",0],[5,"cudaChannelFormatDesc",0],[5,"cudaArray",0],[5,"cudaMipmappedArray",0],[5,"cudaArraySparseProperties",0],[5,"cudaArraySparseProperties__bindgen_ty_1",0],[5,"cudaArrayMemoryRequirements",0],[6,"cudaMemoryType",0],[6,"cudaMemcpyKind",0],[5,"cudaPitchedPtr",0],[5,"cudaExtent",0],[5,"cudaPos",0],[5,"cudaMemcpy3DParms",0],[5,"cudaMemcpy3DPeerParms",0],[5,"cudaMemsetParams",0],[6,"cudaAccessProperty",0],[5,"cudaAccessPolicyWindow",0],[5,"cudaHostNodeParams",0],[6,"cudaStreamCaptureStatus",0],[6,"cudaStreamCaptureMode",0],[6,"cudaSynchronizationPolicy",0],[6,"cudaStreamUpdateCaptureDependenciesFlags",0],[6,"cudaUserObjectFlags",0],[6,"cudaUserObjectRetainFlags",0],[5,"cudaGraphicsResource",0],[6,"cudaGraphicsRegisterFlags",0],[6,"cudaGraphicsMapFlags",0],[6,"cudaGraphicsCubeFace",0],[6,"cudaResourceType",0],[6,"cudaResourceViewFormat",0],[5,"cudaResourceDesc",0],[20,"cudaResourceDesc__bindgen_ty_1",0],[5,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1",0],[5,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2",0],[5,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3",0],[5,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4",0],[5,"cudaResourceViewDesc",0],[5,"cudaPointerAttributes",0],[5,"cudaFuncAttributes",0],[6,"cudaFuncAttribute",0],[6,"cudaFuncCache",0],[6,"cudaSharedMemConfig",0],[6,"cudaSharedCarveout",0],[6,"cudaComputeMode",0],[6,"cudaLimit",0],[6,"cudaMemoryAdvise",0],[6,"cudaMemRangeAttribute",0],[6,"cudaOutputMode_t",0],[6,"cudaFlushGPUDirectRDMAWritesOptions",0],[6,"cudaGPUDirectRDMAWritesOrdering",0],[6,"cudaFlushGPUDirectRDMAWritesScope",0],[6,"cudaFlushGPUDirectRDMAWritesTarget",0],[6,"cudaDeviceAttr",0],[6,"cudaMemPoolAttr",0],[6,"cudaMemLocationType",0],[5,"cudaMemLocation",0],[6,"cudaMemAccessFlags",0],[5,"cudaMemAccessDesc",0],[6,"cudaMemAllocationType",0],[6,"cudaMemAllocationHandleType",0],[5,"cudaMemPoolProps",0],[5,"cudaMemPoolPtrExportData",0],[5,"cudaMemAllocNodeParams",0],[6,"cudaGraphMemAttributeType",0],[6,"cudaDeviceP2PAttr",0],[5,"CUuuid_st",0],[5,"cudaDeviceProp",0],[5,"cudaIpcEventHandle_st",0],[5,"cudaIpcMemHandle_st",0],[6,"cudaExternalMemoryHandleType",0],[5,"cudaExternalMemoryHandleDesc",0],[20,"cudaExternalMemoryHandleDesc__bindgen_ty_1",0],[5,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1",0],[5,"cudaExternalMemoryBufferDesc",0],[5,"cudaExternalMemoryMipmappedArrayDesc",0],[6,"cudaExternalSemaphoreHandleType",0],[5,"cudaExternalSemaphoreHandleDesc",0],[20,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1",0],[5,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1",0],[5,"cudaExternalSemaphoreSignalParams_v1",0],[5,"cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1",0],[5,"cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_1",0],[20,"cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_2",0],[5,"cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_3",0],[5,"cudaExternalSemaphoreWaitParams_v1",0],[5,"cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1",0],[5,"cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_1",0],[20,"cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_2",0],[5,"cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_3",0],[5,"cudaExternalSemaphoreSignalParams",0],[5,"cudaExternalSemaphoreSignalParams__bindgen_ty_1",0],[5,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1",0],[20,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2",0],[5,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3",0],[5,"cudaExternalSemaphoreWaitParams",0],[5,"cudaExternalSemaphoreWaitParams__bindgen_ty_1",0],[5,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1",0],[20,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2",0],[5,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3",0],[5,"CUstream_st",0],[5,"CUevent_st",0],[5,"CUexternalMemory_st",0],[5,"CUexternalSemaphore_st",0],[5,"CUgraph_st",0],[5,"CUgraphNode_st",0],[5,"CUuserObject_st",0],[5,"CUfunc_st",0],[5,"CUmemPoolHandle_st",0],[6,"cudaCGScope",0],[5,"cudaLaunchParams",0],[5,"cudaKernelNodeParams",0],[5,"cudaExternalSemaphoreSignalNodeParams",0],[5,"cudaExternalSemaphoreWaitNodeParams",0],[6,"cudaGraphNodeType",0],[5,"CUgraphExec_st",0],[6,"cudaGraphExecUpdateResult",0],[6,"cudaGetDriverEntryPointFlags",0],[6,"cudaGraphDebugDotFlags",0],[6,"cudaGraphInstantiateFlags",0],[6,"cudaStreamAttrID",0],[20,"cudaStreamAttrValue",0],[6,"cudaKernelNodeAttrID",0],[20,"cudaKernelNodeAttrValue",0],[6,"cudaSurfaceBoundaryMode",0],[6,"cudaSurfaceFormatMode",0],[5,"surfaceReference",0],[6,"cudaTextureAddressMode",0],[6,"cudaTextureFilterMode",0],[6,"cudaTextureReadMode",0],[5,"textureReference",0],[5,"cudaTextureDesc",0],[6,"cudaDataType",0],[5,"cudnnContext",0],[6,"cudnnStatus_t",0],[5,"cudnnRuntimeTag_t",0],[6,"cudnnErrQueryMode_t",0],[5,"cudnnTensorStruct",0],[5,"cudnnPoolingStruct",0],[5,"cudnnFilterStruct",0],[5,"cudnnLRNStruct",0],[5,"cudnnActivationStruct",0],[5,"cudnnSpatialTransformerStruct",0],[5,"cudnnOpTensorStruct",0],[5,"cudnnReduceTensorStruct",0],[5,"cudnnCTCLossStruct",0],[5,"cudnnTensorTransformStruct",0],[6,"cudnnDataType_t",0],[6,"cudnnMathType_t",0],[6,"cudnnNanPropagation_t",0],[6,"cudnnDeterminism_t",0],[6,"cudnnTensorFormat_t",0],[6,"cudnnFoldingDirection_t",0],[6,"cudnnOpTensorOp_t",0],[6,"cudnnReduceTensorOp_t",0],[6,"cudnnReduceTensorIndices_t",0],[6,"cudnnIndicesType_t",0],[6,"cudnnSoftmaxAlgorithm_t",0],[6,"cudnnSoftmaxMode_t",0],[6,"cudnnPoolingMode_t",0],[6,"cudnnActivationMode_t",0],[6,"cudnnLRNMode_t",0],[6,"cudnnDivNormMode_t",0],[6,"cudnnBatchNormMode_t",0],[6,"cudnnBatchNormOps_t",0],[6,"cudnnNormMode_t",0],[6,"cudnnNormAlgo_t",0],[6,"cudnnNormOps_t",0],[6,"cudnnSamplerType_t",0],[5,"cudnnDropoutStruct",0],[5,"cudnnAlgorithmStruct",0],[5,"cudnnAlgorithmPerformanceStruct",0],[6,"cudnnConvolutionFwdAlgo_t",0],[6,"cudnnConvolutionBwdFilterAlgo_t",0],[6,"cudnnConvolutionBwdDataAlgo_t",0],[6,"cudnnRNNAlgo_t",0],[6,"cudnnCTCLossAlgo_t",0],[5,"cudnnAlgorithmUnionStruct",0],[20,"cudnnAlgorithmUnionStruct_Algorithm",0],[6,"cudnnSeverity_t",0],[5,"cudnnDebugStruct",0],[6,"cudnnForwardMode_t",0],[6,"cudnnRNNMode_t",0],[6,"cudnnRNNBiasMode_t",0],[6,"cudnnDirectionMode_t",0],[6,"cudnnRNNInputMode_t",0],[6,"cudnnRNNClipMode_t",0],[6,"cudnnRNNDataLayout_t",0],[5,"cudnnRNNStruct",0],[5,"cudnnPersistentRNNPlan",0],[5,"cudnnRNNDataStruct",0],[6,"cudnnSeqDataAxis_t",0],[5,"cudnnSeqDataStruct",0],[5,"cudnnAttnStruct",0],[6,"cudnnMultiHeadAttnWeightKind_t",0],[6,"cudnnWgradMode_t",0],[6,"cudnnLossNormalizationMode_t",0],[5,"cudnnConvolutionStruct",0],[6,"cudnnConvolutionMode_t",0],[6,"cudnnReorderType_t",0],[5,"cudnnConvolutionFwdAlgoPerfStruct",0],[5,"cudnnConvolutionBwdDataAlgoPerfStruct",0],[5,"cudnnFusedOpsConstParamStruct",0],[5,"cudnnFusedOpsVariantParamStruct",0],[5,"cudnnFusedOpsPlanStruct",0],[6,"cudnnFusedOps_t",0],[6,"cudnnFusedOpsConstParamLabel_t",0],[6,"cudnnFusedOpsPointerPlaceHolder_t",0],[6,"cudnnFusedOpsVariantParamLabel_t",0],[5,"cudnnConvolutionBwdFilterAlgoPerfStruct",0],[6,"cudnnPointwiseMode_t",0],[6,"cudnnResampleMode_t",0],[6,"cudnnGenStatsMode_t",0],[6,"cudnnBnFinalizeStatsMode_t",0],[6,"cudnnBackendAttributeName_t",0],[6,"cudnnBackendAttributeType_t",0],[6,"cudnnBackendDescriptorType_t",0],[6,"cudnnBackendNumericalNote_t",0],[6,"cudnnBackendBehaviorNote_t",0],[6,"cudnnBackendKnobType_t",0],[6,"cudnnBackendLayoutType_t",0],[6,"cudnnBackendHeurMode_t",0],[6,"cudnnBackendTensorReordering_t",0],[6,"cudnnPaddingMode_t",0],[5,"ScalParams",5506],[10,"Float",5620],[10,"DataTypeInfo",5506],[8,"cudnnConvolutionDescriptor_t",0],[8,"size_t",5621],[8,"cudnnFilterDescriptor_t",0],[5,"ConvolutionConfig",5506],[8,"cudnnDropoutDescriptor_t",0],[8,"cudnnLRNDescriptor_t",0],[8,"cudnnPoolingDescriptor_t",0],[8,"cudnnRNNDataDescriptor_t",0],[8,"cudnnRNNDescriptor_t",0],[1,"u32"],[1,"i32"],[1,"usize"],[1,"u64"],[1,"i8"],[1,"f32"],[6,"Option",5622],[1,"f64"],[1,"i64"],[6,"DataType",5506],[5,"RnnDescriptor",0],[5,"DropoutConfig",5506],[1,"bool"],[8,"cudnnConvolutionBwdDataAlgoPerf_t",0],[5,"Vec",5623],[8,"cudnnConvolutionBwdFilterAlgoPerf_t",0],[8,"cudnnConvolutionFwdAlgoPerf_t",0],[5,"Formatter",5624],[8,"Result",5624],[5,"Error",5624],[8,"c_int",5621],[1,"tuple"],[10,"Hasher",5625],[5,"ActivationConfig",5506],[5,"NormalizationConfig",5506],[1,"slice"],[5,"PoolingConfig",5506],[5,"RnnConfig",5506],[8,"cudnnRNNPaddingMode_t",0],[8,"c_ulonglong",5621],[8,"c_uint",5621],[8,"c_double",5621],[5,"String",5626],[5,"TypeId",5627],[5,"CudaDeviceMemory",5492],[10,"Zero",5628],[10,"One",5628],[8,"cudaHostFn_t",0],[8,"cudaStreamCallback_t",0],[8,"cudnnCallback_t",0],[8,"cudnnAlgorithm_t",0],[8,"CUuuid",0],[8,"cudaUUID_t",0],[8,"cudnnDebug_t",0],[8,"cudaIpcEventHandle_t",0],[8,"cudaIpcMemHandle_t",0]],"b":[[3374,"impl-Display-for-Error"],[3375,"impl-Debug-for-Error"]]}],\
["rcudnn_sys",{"doc":"","t":"OPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSSSSSSSSSSSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSSSSSSSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSSSSPSPPPPPPPPSPPPPPPPPPPPPPPPPPPPPPSSSSSSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSSPPPPPPPPPPPSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSPPPFFFFFFFFFFIFOPPPOPPPOIIIOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOFGPPPPPPPFHHHHFFFIIHHHHHPPPGPPPPPFGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPHGPPPPHHHHGGHHHHPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPTPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGHHHHHHHHHHHHHHHHHHOOGFHHHHHHHHPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGHHHHHHHHIFFHHFUFGPPPPPPPPFIFUFGPPPPPPPPPPFFFFUFFFFUFFFFFUFFFFUFIPPPPGGGPPPPPHHHHHGPPPFGPPPPHHHHIGPPPHHHHHHGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHGPPPPPPPPPPHHHHHHHHHHHHHHHHHHHHHPPPPPPPPGPIHHHHHHHHHHPPGHHHHHHHHPPPPGHHHHHHHHHHHHHHGPPPPPPPPPPPPPIHHHHPIGPPPPPPGPPPHGPPPPPFHHHIHHHHIHHFHHHHHFIHHFIHHGUPPPFPPHHHHFGPPPPPPPHHHHHHHHHHFGPPPHPPPPPPFGGPPPHPPPPFGPPGPPPPPHHHHHHHHFFPPPHHHIHGPPPPHHHHHHHHHHHHFHHFHHPPPHHHHPPGHHHHHHGGPPPPHHHHHHFFHHIIHHHGGHFFHFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFUFFFFGPPPPFGPGPPPHHHHHHGPPPGPPPHHPHGUPPHIGPPPGPPPHHHHHHHHHHHHHHPHHGHIPPGGIPPPPGGFGIGHHHHHHHIHHGPHHGIHHIHGFHHHIFIFFUIIIFGGGHGIHHHHGHGGGHGGGHHHHHGHHGIFHIHHFHHHHFIGFIGIHFIGGFHHHHHHHHHHHHHHHHHHHHHHHHGFIHHHHHHHHHHHHHHHHHHHHHHHHHGGGHHHIHHHFGIFHHHHHHHHHHGGGIFHFIGGIFGGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIHGHHHIGFGHGHHHGGGGGHHHHIGFHHGFIGHIHGFHGHHHHHHGGIGFIHHHHHHHGGIHHFHIGGFHGGHHFGHHGIFHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHGGHHGHHHHIFOOGIGFIFHHHGOONNNOOOOOOOOOOOOOOOOFOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOIISSSOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFOOOOFOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["CTCLossAlgo","CUDA_C_16BF","CUDA_C_16BF","CUDA_C_16F","CUDA_C_16F","CUDA_C_16I","CUDA_C_16I","CUDA_C_16U","CUDA_C_16U","CUDA_C_32F","CUDA_C_32F","CUDA_C_32I","CUDA_C_32I","CUDA_C_32U","CUDA_C_32U","CUDA_C_4I","CUDA_C_4I","CUDA_C_4U","CUDA_C_4U","CUDA_C_64F","CUDA_C_64F","CUDA_C_64I","CUDA_C_64I","CUDA_C_64U","CUDA_C_64U","CUDA_C_8I","CUDA_C_8I","CUDA_C_8U","CUDA_C_8U","CUDA_R_16BF","CUDA_R_16BF","CUDA_R_16F","CUDA_R_16F","CUDA_R_16I","CUDA_R_16I","CUDA_R_16U","CUDA_R_16U","CUDA_R_32F","CUDA_R_32F","CUDA_R_32I","CUDA_R_32I","CUDA_R_32U","CUDA_R_32U","CUDA_R_4I","CUDA_R_4I","CUDA_R_4U","CUDA_R_4U","CUDA_R_64F","CUDA_R_64F","CUDA_R_64I","CUDA_R_64I","CUDA_R_64U","CUDA_R_64U","CUDA_R_8I","CUDA_R_8I","CUDA_R_8U","CUDA_R_8U","CUDNN_16BIT_INDICES","CUDNN_32BIT_INDICES","CUDNN_64BIT_INDICES","CUDNN_8BIT_INDICES","CUDNN_ACTIVATION_CLIPPED_RELU","CUDNN_ACTIVATION_ELU","CUDNN_ACTIVATION_IDENTITY","CUDNN_ACTIVATION_RELU","CUDNN_ACTIVATION_SIGMOID","CUDNN_ACTIVATION_SWISH","CUDNN_ACTIVATION_TANH","CUDNN_ADV_INFER_MAJOR","CUDNN_ADV_INFER_MINOR","CUDNN_ADV_INFER_PATCH","CUDNN_ADV_TRAIN_MAJOR","CUDNN_ADV_TRAIN_MINOR","CUDNN_ADV_TRAIN_PATCH","CUDNN_ATTN_DISABLE_PROJ_BIASES","CUDNN_ATTN_ENABLE_PROJ_BIASES","CUDNN_ATTN_QUERYMAP_ALL_TO_ONE","CUDNN_ATTN_QUERYMAP_ONE_TO_ONE","CUDNN_ATTN_WKIND_COUNT","CUDNN_ATTR_CONVOLUTION_COMP_TYPE","CUDNN_ATTR_CONVOLUTION_CONV_MODE","CUDNN_ATTR_CONVOLUTION_DILATIONS","CUDNN_ATTR_CONVOLUTION_FILTER_STRIDES","CUDNN_ATTR_CONVOLUTION_POST_PADDINGS","CUDNN_ATTR_CONVOLUTION_PRE_PADDINGS","CUDNN_ATTR_CONVOLUTION_SPATIAL_DIMS","CUDNN_ATTR_ENGINECFG_ENGINE","CUDNN_ATTR_ENGINECFG_INTERMEDIATE_INFO","CUDNN_ATTR_ENGINECFG_KNOB_CHOICES","CUDNN_ATTR_ENGINEHEUR_MODE","CUDNN_ATTR_ENGINEHEUR_OPERATION_GRAPH","CUDNN_ATTR_ENGINEHEUR_RESULTS","CUDNN_ATTR_ENGINE_BEHAVIOR_NOTE","CUDNN_ATTR_ENGINE_GLOBAL_INDEX","CUDNN_ATTR_ENGINE_KNOB_INFO","CUDNN_ATTR_ENGINE_LAYOUT_INFO","CUDNN_ATTR_ENGINE_NUMERICAL_NOTE","CUDNN_ATTR_ENGINE_OPERATION_GRAPH","CUDNN_ATTR_EXECUTION_PLAN_COMPUTED_INTERMEDIATE_UIDS","CUDNN_ATTR_EXECUTION_PLAN_ENGINE_CONFIG","CUDNN_ATTR_EXECUTION_PLAN_HANDLE","CUDNN_ATTR_EXECUTION_PLAN_RUN_ONLY_INTERMEDIATE_UIDS","CUDNN_ATTR_EXECUTION_PLAN_WORKSPACE_SIZE","CUDNN_ATTR_INTERMEDIATE_INFO_DEPENDENT_ATTRIBUTES","CUDNN_ATTR_INTERMEDIATE_INFO_DEPENDENT_DATA_UIDS","CUDNN_ATTR_INTERMEDIATE_INFO_SIZE","CUDNN_ATTR_INTERMEDIATE_INFO_UNIQUE_ID","CUDNN_ATTR_KNOB_CHOICE_KNOB_TYPE","CUDNN_ATTR_KNOB_CHOICE_KNOB_VALUE","CUDNN_ATTR_KNOB_INFO_MAXIMUM_VALUE","CUDNN_ATTR_KNOB_INFO_MINIMUM_VALUE","CUDNN_ATTR_KNOB_INFO_STRIDE","CUDNN_ATTR_KNOB_INFO_TYPE","CUDNN_ATTR_LAYOUT_INFO_TENSOR_UID","CUDNN_ATTR_LAYOUT_INFO_TYPES","CUDNN_ATTR_MATMUL_COMP_TYPE","CUDNN_ATTR_OPERATIONGRAPH_ENGINE_GLOBAL_COUNT","CUDNN_ATTR_OPERATIONGRAPH_HANDLE","CUDNN_ATTR_OPERATIONGRAPH_OPS","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_BN_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_DBN_BIAS_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_DBN_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_DY_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_EQ_BIAS","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_EQ_DY_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_EQ_X_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_INVSTD_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_MATH_PREC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_X_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_ACCUM_COUNT_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_BIAS_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EPSILON_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EQ_BIAS_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EQ_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EXP_AVERATE_FACTOR_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_MATH_PREC","CUDNN_ATTR_OPERATION_BN_FINALIZE_PREV_RUNNING_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_PREV_RUNNING_VAR_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_SAVED_INV_STD_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_SAVED_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_STATS_MODE","CUDNN_ATTR_OPERATION_BN_FINALIZE_UPDATED_RUNNING_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_UPDATED_RUNNING_VAR_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_Y_SQ_SUM_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_Y_SUM_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_ALPHA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_BETA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_CONV_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_DX","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_DY","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_W","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_ALPHA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_BETA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_CONV_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_DW","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_DY","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_X","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_ALPHA","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_BETA","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_CONV_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_W","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_X","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_Y","CUDNN_ATTR_OPERATION_GENSTATS_MATH_PREC","CUDNN_ATTR_OPERATION_GENSTATS_MODE","CUDNN_ATTR_OPERATION_GENSTATS_SQSUMDESC","CUDNN_ATTR_OPERATION_GENSTATS_SUMDESC","CUDNN_ATTR_OPERATION_GENSTATS_XDESC","CUDNN_ATTR_OPERATION_MATMUL_ADESC","CUDNN_ATTR_OPERATION_MATMUL_BDESC","CUDNN_ATTR_OPERATION_MATMUL_CDESC","CUDNN_ATTR_OPERATION_MATMUL_DESC","CUDNN_ATTR_OPERATION_MATMUL_IRREGULARLY_STRIDED_BATCH_COUNT","CUDNN_ATTR_OPERATION_POINTWISE_ALPHA1","CUDNN_ATTR_OPERATION_POINTWISE_ALPHA2","CUDNN_ATTR_OPERATION_POINTWISE_BDESC","CUDNN_ATTR_OPERATION_POINTWISE_DXDESC","CUDNN_ATTR_OPERATION_POINTWISE_DYDESC","CUDNN_ATTR_OPERATION_POINTWISE_PW_DESCRIPTOR","CUDNN_ATTR_OPERATION_POINTWISE_TDESC","CUDNN_ATTR_OPERATION_POINTWISE_XDESC","CUDNN_ATTR_OPERATION_POINTWISE_YDESC","CUDNN_ATTR_OPERATION_REDUCTION_DESC","CUDNN_ATTR_OPERATION_REDUCTION_XDESC","CUDNN_ATTR_OPERATION_REDUCTION_YDESC","CUDNN_ATTR_OPERATION_RESAMPLE_BWD_ALPHA","CUDNN_ATTR_OPERATION_RESAMPLE_BWD_BETA","CUDNN_ATTR_OPERATION_RESAMPLE_BWD_DESC","CUDNN_ATTR_OPERATION_RESAMPLE_BWD_DXDESC","CUDNN_ATTR_OPERATION_RESAMPLE_BWD_DYDESC","CUDNN_ATTR_OPERATION_RESAMPLE_BWD_IDXDESC","CUDNN_ATTR_OPERATION_RESAMPLE_FWD_ALPHA","CUDNN_ATTR_OPERATION_RESAMPLE_FWD_BETA","CUDNN_ATTR_OPERATION_RESAMPLE_FWD_DESC","CUDNN_ATTR_OPERATION_RESAMPLE_FWD_IDXDESC","CUDNN_ATTR_OPERATION_RESAMPLE_FWD_XDESC","CUDNN_ATTR_OPERATION_RESAMPLE_FWD_YDESC","CUDNN_ATTR_POINTWISE_ELU_ALPHA","CUDNN_ATTR_POINTWISE_MATH_PREC","CUDNN_ATTR_POINTWISE_MODE","CUDNN_ATTR_POINTWISE_NAN_PROPAGATION","CUDNN_ATTR_POINTWISE_RELU_LOWER_CLIP","CUDNN_ATTR_POINTWISE_RELU_LOWER_CLIP_SLOPE","CUDNN_ATTR_POINTWISE_RELU_UPPER_CLIP","CUDNN_ATTR_POINTWISE_SOFTPLUS_BETA","CUDNN_ATTR_POINTWISE_SWISH_BETA","CUDNN_ATTR_REDUCTION_COMP_TYPE","CUDNN_ATTR_REDUCTION_OPERATOR","CUDNN_ATTR_RESAMPLE_COMP_TYPE","CUDNN_ATTR_RESAMPLE_MODE","CUDNN_ATTR_RESAMPLE_NAN_PROPAGATION","CUDNN_ATTR_RESAMPLE_PADDING_MODE","CUDNN_ATTR_RESAMPLE_POST_PADDINGS","CUDNN_ATTR_RESAMPLE_PRE_PADDINGS","CUDNN_ATTR_RESAMPLE_SPATIAL_DIMS","CUDNN_ATTR_RESAMPLE_STRIDES","CUDNN_ATTR_RESAMPLE_WINDOW_DIMS","CUDNN_ATTR_TENSOR_BYTE_ALIGNMENT","CUDNN_ATTR_TENSOR_DATA_TYPE","CUDNN_ATTR_TENSOR_DIMENSIONS","CUDNN_ATTR_TENSOR_IS_BY_VALUE","CUDNN_ATTR_TENSOR_IS_VIRTUAL","CUDNN_ATTR_TENSOR_REORDERING_MODE","CUDNN_ATTR_TENSOR_STRIDES","CUDNN_ATTR_TENSOR_UNIQUE_ID","CUDNN_ATTR_TENSOR_VECTORIZED_DIMENSION","CUDNN_ATTR_TENSOR_VECTOR_COUNT","CUDNN_ATTR_VARIANT_PACK_DATA_POINTERS","CUDNN_ATTR_VARIANT_PACK_INTERMEDIATES","CUDNN_ATTR_VARIANT_PACK_UNIQUE_IDS","CUDNN_ATTR_VARIANT_PACK_WORKSPACE","CUDNN_BACKEND_CONVOLUTION_DESCRIPTOR","CUDNN_BACKEND_ENGINECFG_DESCRIPTOR","CUDNN_BACKEND_ENGINEHEUR_DESCRIPTOR","CUDNN_BACKEND_ENGINE_DESCRIPTOR","CUDNN_BACKEND_EXECUTION_PLAN_DESCRIPTOR","CUDNN_BACKEND_INTERMEDIATE_INFO_DESCRIPTOR","CUDNN_BACKEND_KNOB_CHOICE_DESCRIPTOR","CUDNN_BACKEND_KNOB_INFO_DESCRIPTOR","CUDNN_BACKEND_LAYOUT_INFO_DESCRIPTOR","CUDNN_BACKEND_MATMUL_DESCRIPTOR","CUDNN_BACKEND_OPERATIONGRAPH_DESCRIPTOR","CUDNN_BACKEND_OPERATION_BN_BWD_WEIGHTS_DESCRIPTOR","CUDNN_BACKEND_OPERATION_BN_FINALIZE_STATISTICS_DESCRIPTOR","CUDNN_BACKEND_OPERATION_CONVOLUTION_BACKWARD_DATA_DESCRIPTOR","CUDNN_BACKEND_OPERATION_CONVOLUTION_BACKWARD_FILTER_DESCRIPTOR","CUDNN_BACKEND_OPERATION_CONVOLUTION_FORWARD_DESCRIPTOR","CUDNN_BACKEND_OPERATION_GEN_STATS_DESCRIPTOR","CUDNN_BACKEND_OPERATION_MATMUL_DESCRIPTOR","CUDNN_BACKEND_OPERATION_POINTWISE_DESCRIPTOR","CUDNN_BACKEND_OPERATION_REDUCTION_DESCRIPTOR","CUDNN_BACKEND_OPERATION_RESAMPLE_BWD_DESCRIPTOR","CUDNN_BACKEND_OPERATION_RESAMPLE_FWD_DESCRIPTOR","CUDNN_BACKEND_POINTWISE_DESCRIPTOR","CUDNN_BACKEND_REDUCTION_DESCRIPTOR","CUDNN_BACKEND_RESAMPLE_DESCRIPTOR","CUDNN_BACKEND_TENSOR_DESCRIPTOR","CUDNN_BACKEND_VARIANT_PACK_DESCRIPTOR","CUDNN_BATCHNORM_OPS_BN","CUDNN_BATCHNORM_OPS_BN_ACTIVATION","CUDNN_BATCHNORM_OPS_BN_ADD_ACTIVATION","CUDNN_BATCHNORM_PER_ACTIVATION","CUDNN_BATCHNORM_SPATIAL","CUDNN_BATCHNORM_SPATIAL_PERSISTENT","CUDNN_BEHAVIOR_NOTE_REQUIRES_BIAS_INT8x32_REORDER","CUDNN_BEHAVIOR_NOTE_REQUIRES_FILTER_INT8x32_REORDER","CUDNN_BEHAVIOR_NOTE_RUNTIME_COMPILATION","CUDNN_BEHAVIOR_NOTE_TYPE_COUNT","CUDNN_BIDIRECTIONAL","CUDNN_BN_FINALIZE_STATISTICS_INFERENCE","CUDNN_BN_FINALIZE_STATISTICS_TRAINING","CUDNN_BN_MIN_EPSILON","CUDNN_CNN_INFER_MAJOR","CUDNN_CNN_INFER_MINOR","CUDNN_CNN_INFER_PATCH","CUDNN_CNN_TRAIN_MAJOR","CUDNN_CNN_TRAIN_MINOR","CUDNN_CNN_TRAIN_PATCH","CUDNN_CONVOLUTION","CUDNN_CONVOLUTION_BWD_DATA_ALGO_0","CUDNN_CONVOLUTION_BWD_DATA_ALGO_1","CUDNN_CONVOLUTION_BWD_DATA_ALGO_COUNT","CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT","CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT_TILING","CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD","CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD_NONFUSED","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_0","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_1","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_3","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_COUNT","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT_TILING","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD_NONFUSED","CUDNN_CONVOLUTION_FWD_ALGO_COUNT","CUDNN_CONVOLUTION_FWD_ALGO_DIRECT","CUDNN_CONVOLUTION_FWD_ALGO_FFT","CUDNN_CONVOLUTION_FWD_ALGO_FFT_TILING","CUDNN_CONVOLUTION_FWD_ALGO_GEMM","CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_GEMM","CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM","CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD","CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD_NONFUSED","CUDNN_CROSS_CORRELATION","CUDNN_CTC_LOSS_ALGO_DETERMINISTIC","CUDNN_CTC_LOSS_ALGO_NON_DETERMINISTIC","CUDNN_DATA_BFLOAT16","CUDNN_DATA_BOOLEAN","CUDNN_DATA_DOUBLE","CUDNN_DATA_FLOAT","CUDNN_DATA_HALF","CUDNN_DATA_INT32","CUDNN_DATA_INT64","CUDNN_DATA_INT8","CUDNN_DATA_INT8x32","CUDNN_DATA_INT8x4","CUDNN_DATA_UINT8","CUDNN_DATA_UINT8x4","CUDNN_DEFAULT_MATH","CUDNN_DEFAULT_REORDER","CUDNN_DETERMINISTIC","CUDNN_DIM_MAX","CUDNN_DIVNORM_PRECOMPUTED_MEANS","CUDNN_EDGE_VAL_PAD","CUDNN_ERRQUERY_BLOCKING","CUDNN_ERRQUERY_NONBLOCKING","CUDNN_ERRQUERY_RAWCODE","CUDNN_FMA_MATH","CUDNN_FUSED_BN_FINALIZE_STATISTICS_INFERENCE","CUDNN_FUSED_BN_FINALIZE_STATISTICS_TRAINING","CUDNN_FUSED_CONV_SCALE_BIAS_ADD_ACTIVATION","CUDNN_FUSED_DACTIVATION_FORK_DBATCHNORM","CUDNN_FUSED_SCALE_BIAS_ACTIVATION_CONV_BNSTATS","CUDNN_FUSED_SCALE_BIAS_ACTIVATION_WGRAD","CUDNN_FUSED_SCALE_BIAS_ADD_ACTIVATION_GEN_BITMASK","CUDNN_FWD_MODE_INFERENCE","CUDNN_FWD_MODE_TRAINING","CUDNN_GENSTATS_SUM_SQSUM","CUDNN_GRU","CUDNN_HEUR_MODES_COUNT","CUDNN_HEUR_MODE_A","CUDNN_HEUR_MODE_B","CUDNN_HEUR_MODE_FALLBACK","CUDNN_HEUR_MODE_INSTANT","CUDNN_KNOB_TYPE_CHUNK_K","CUDNN_KNOB_TYPE_COUNTS","CUDNN_KNOB_TYPE_CTA_SPLIT_K_MODE","CUDNN_KNOB_TYPE_EDGE","CUDNN_KNOB_TYPE_IDX_MODE","CUDNN_KNOB_TYPE_KBLOCK","CUDNN_KNOB_TYPE_KERNEL_CFG","CUDNN_KNOB_TYPE_LDGA","CUDNN_KNOB_TYPE_LDGB","CUDNN_KNOB_TYPE_LDGC","CUDNN_KNOB_TYPE_MULTIPLY","CUDNN_KNOB_TYPE_REDUCTION_MODE","CUDNN_KNOB_TYPE_SINGLEBUFFER","CUDNN_KNOB_TYPE_SLICED","CUDNN_KNOB_TYPE_SPECFILT","CUDNN_KNOB_TYPE_SPLIT_H","CUDNN_KNOB_TYPE_SPLIT_K","CUDNN_KNOB_TYPE_SPLIT_K_BUF","CUDNN_KNOB_TYPE_SPLIT_K_SLC","CUDNN_KNOB_TYPE_SPLIT_RS","CUDNN_KNOB_TYPE_STAGES","CUDNN_KNOB_TYPE_SWIZZLE","CUDNN_KNOB_TYPE_TILEK","CUDNN_KNOB_TYPE_TILE_SIZE","CUDNN_KNOB_TYPE_USE_TEX","CUDNN_KNOB_TYPE_WINO_TILE","CUDNN_LAYOUT_TYPE_COUNT","CUDNN_LAYOUT_TYPE_PREFERRED_NCHW","CUDNN_LAYOUT_TYPE_PREFERRED_NHWC","CUDNN_LAYOUT_TYPE_PREFERRED_PAD4CK","CUDNN_LAYOUT_TYPE_PREFERRED_PAD8CK","CUDNN_LINEAR_INPUT","CUDNN_LOSS_NORMALIZATION_NONE","CUDNN_LOSS_NORMALIZATION_SOFTMAX","CUDNN_LRN_CROSS_CHANNEL_DIM1","CUDNN_LRN_MAX_N","CUDNN_LRN_MIN_BETA","CUDNN_LRN_MIN_K","CUDNN_LRN_MIN_N","CUDNN_LSTM","CUDNN_MAJOR","CUDNN_MH_ATTN_K_BIASES","CUDNN_MH_ATTN_K_WEIGHTS","CUDNN_MH_ATTN_O_BIASES","CUDNN_MH_ATTN_O_WEIGHTS","CUDNN_MH_ATTN_Q_BIASES","CUDNN_MH_ATTN_Q_WEIGHTS","CUDNN_MH_ATTN_V_BIASES","CUDNN_MH_ATTN_V_WEIGHTS","CUDNN_MINOR","CUDNN_NEG_INF_PAD","CUDNN_NON_DETERMINISTIC","CUDNN_NORM_ALGO_PERSIST","CUDNN_NORM_ALGO_STANDARD","CUDNN_NORM_OPS_NORM","CUDNN_NORM_OPS_NORM_ACTIVATION","CUDNN_NORM_OPS_NORM_ADD_ACTIVATION","CUDNN_NORM_PER_ACTIVATION","CUDNN_NORM_PER_CHANNEL","CUDNN_NOT_PROPAGATE_NAN","CUDNN_NO_REORDER","CUDNN_NUMERICAL_NOTE_DOWN_CONVERT_INPUTS","CUDNN_NUMERICAL_NOTE_FFT","CUDNN_NUMERICAL_NOTE_NONDETERMINISTIC","CUDNN_NUMERICAL_NOTE_REDUCED_PRECISION_REDUCTION","CUDNN_NUMERICAL_NOTE_TENSOR_CORE","CUDNN_NUMERICAL_NOTE_TYPE_COUNT","CUDNN_NUMERICAL_NOTE_WINOGRAD","CUDNN_NUMERICAL_NOTE_WINOGRAD_TILE_13x13","CUDNN_NUMERICAL_NOTE_WINOGRAD_TILE_4x4","CUDNN_NUMERICAL_NOTE_WINOGRAD_TILE_6x6","CUDNN_OPS_INFER_MAJOR","CUDNN_OPS_INFER_MINOR","CUDNN_OPS_INFER_PATCH","CUDNN_OPS_TRAIN_MAJOR","CUDNN_OPS_TRAIN_MINOR","CUDNN_OPS_TRAIN_PATCH","CUDNN_OP_TENSOR_ADD","CUDNN_OP_TENSOR_MAX","CUDNN_OP_TENSOR_MIN","CUDNN_OP_TENSOR_MUL","CUDNN_OP_TENSOR_NOT","CUDNN_OP_TENSOR_SQRT","CUDNN_PARAM_ACTIVATION_BITMASK_DESC","CUDNN_PARAM_ACTIVATION_BITMASK_PLACEHOLDER","CUDNN_PARAM_ACTIVATION_DESC","CUDNN_PARAM_BN_BIAS_PLACEHOLDER","CUDNN_PARAM_BN_DBIAS_PLACEHOLDER","CUDNN_PARAM_BN_DSCALE_PLACEHOLDER","CUDNN_PARAM_BN_EQBIAS_PLACEHOLDER","CUDNN_PARAM_BN_EQSCALEBIAS_DESC","CUDNN_PARAM_BN_EQSCALE_PLACEHOLDER","CUDNN_PARAM_BN_MODE","CUDNN_PARAM_BN_RUNNING_MEAN_PLACEHOLDER","CUDNN_PARAM_BN_RUNNING_VAR_PLACEHOLDER","CUDNN_PARAM_BN_SAVED_INVSTD_PLACEHOLDER","CUDNN_PARAM_BN_SAVED_MEAN_PLACEHOLDER","CUDNN_PARAM_BN_SCALEBIAS_MEANVAR_DESC","CUDNN_PARAM_BN_SCALE_PLACEHOLDER","CUDNN_PARAM_BN_Z_EQBIAS_PLACEHOLDER","CUDNN_PARAM_BN_Z_EQSCALEBIAS_DESC","CUDNN_PARAM_BN_Z_EQSCALE_PLACEHOLDER","CUDNN_PARAM_CONV_DESC","CUDNN_PARAM_DWDATA_PLACEHOLDER","CUDNN_PARAM_DWDESC","CUDNN_PARAM_DXDATA_PLACEHOLDER","CUDNN_PARAM_DXDESC","CUDNN_PARAM_DYDATA_PLACEHOLDER","CUDNN_PARAM_DYDESC","CUDNN_PARAM_DZDATA_PLACEHOLDER","CUDNN_PARAM_DZDESC","CUDNN_PARAM_WDATA_PLACEHOLDER","CUDNN_PARAM_WDESC","CUDNN_PARAM_XDATA_PLACEHOLDER","CUDNN_PARAM_XDESC","CUDNN_PARAM_YDATA_PLACEHOLDER","CUDNN_PARAM_YDESC","CUDNN_PARAM_YSQSUM_PLACEHOLDER","CUDNN_PARAM_YSTATS_DESC","CUDNN_PARAM_YSUM_PLACEHOLDER","CUDNN_PARAM_ZDATA_PLACEHOLDER","CUDNN_PARAM_ZDESC","CUDNN_PATCHLEVEL","CUDNN_POINTWISE_ABS","CUDNN_POINTWISE_ADD","CUDNN_POINTWISE_ADD_SQUARE","CUDNN_POINTWISE_CEIL","CUDNN_POINTWISE_CMP_EQ","CUDNN_POINTWISE_CMP_GE","CUDNN_POINTWISE_CMP_GT","CUDNN_POINTWISE_CMP_LE","CUDNN_POINTWISE_CMP_LT","CUDNN_POINTWISE_CMP_NEQ","CUDNN_POINTWISE_COS","CUDNN_POINTWISE_DIV","CUDNN_POINTWISE_ELU_BWD","CUDNN_POINTWISE_ELU_FWD","CUDNN_POINTWISE_EXP","CUDNN_POINTWISE_FLOOR","CUDNN_POINTWISE_GELU_BWD","CUDNN_POINTWISE_GELU_FWD","CUDNN_POINTWISE_LOG","CUDNN_POINTWISE_LOGICAL_AND","CUDNN_POINTWISE_LOGICAL_NOT","CUDNN_POINTWISE_LOGICAL_OR","CUDNN_POINTWISE_MAX","CUDNN_POINTWISE_MIN","CUDNN_POINTWISE_MOD","CUDNN_POINTWISE_MUL","CUDNN_POINTWISE_NEG","CUDNN_POINTWISE_POW","CUDNN_POINTWISE_RELU_BWD","CUDNN_POINTWISE_RELU_FWD","CUDNN_POINTWISE_RSQRT","CUDNN_POINTWISE_SIGMOID_BWD","CUDNN_POINTWISE_SIGMOID_FWD","CUDNN_POINTWISE_SIN","CUDNN_POINTWISE_SOFTPLUS_BWD","CUDNN_POINTWISE_SOFTPLUS_FWD","CUDNN_POINTWISE_SQRT","CUDNN_POINTWISE_SUB","CUDNN_POINTWISE_SWISH_BWD","CUDNN_POINTWISE_SWISH_FWD","CUDNN_POINTWISE_TAN","CUDNN_POINTWISE_TANH_BWD","CUDNN_POINTWISE_TANH_FWD","CUDNN_POOLING_AVERAGE_COUNT_EXCLUDE_PADDING","CUDNN_POOLING_AVERAGE_COUNT_INCLUDE_PADDING","CUDNN_POOLING_MAX","CUDNN_POOLING_MAX_DETERMINISTIC","CUDNN_PROPAGATE_NAN","CUDNN_PTR_16B_ALIGNED","CUDNN_PTR_ACTIVATION_BITMASK","CUDNN_PTR_BN_BIAS","CUDNN_PTR_BN_DBIAS","CUDNN_PTR_BN_DSCALE","CUDNN_PTR_BN_EQBIAS","CUDNN_PTR_BN_EQSCALE","CUDNN_PTR_BN_RUNNING_MEAN","CUDNN_PTR_BN_RUNNING_VAR","CUDNN_PTR_BN_SAVED_INVSTD","CUDNN_PTR_BN_SAVED_MEAN","CUDNN_PTR_BN_SCALE","CUDNN_PTR_BN_Z_EQBIAS","CUDNN_PTR_BN_Z_EQSCALE","CUDNN_PTR_DWDATA","CUDNN_PTR_DXDATA","CUDNN_PTR_DYDATA","CUDNN_PTR_DZDATA","CUDNN_PTR_ELEM_ALIGNED","CUDNN_PTR_NULL","CUDNN_PTR_WDATA","CUDNN_PTR_WORKSPACE","CUDNN_PTR_XDATA","CUDNN_PTR_YDATA","CUDNN_PTR_YSQSUM","CUDNN_PTR_YSUM","CUDNN_PTR_ZDATA","CUDNN_REDUCE_TENSOR_ADD","CUDNN_REDUCE_TENSOR_AMAX","CUDNN_REDUCE_TENSOR_AVG","CUDNN_REDUCE_TENSOR_FLATTENED_INDICES","CUDNN_REDUCE_TENSOR_MAX","CUDNN_REDUCE_TENSOR_MIN","CUDNN_REDUCE_TENSOR_MUL","CUDNN_REDUCE_TENSOR_MUL_NO_ZEROS","CUDNN_REDUCE_TENSOR_NORM1","CUDNN_REDUCE_TENSOR_NORM2","CUDNN_REDUCE_TENSOR_NO_INDICES","CUDNN_RESAMPLE_AVGPOOL","CUDNN_RESAMPLE_BILINEAR","CUDNN_RESAMPLE_MAXPOOL","CUDNN_RESAMPLE_NEAREST","CUDNN_RNN_ALGO_COUNT","CUDNN_RNN_ALGO_PERSIST_DYNAMIC","CUDNN_RNN_ALGO_PERSIST_STATIC","CUDNN_RNN_ALGO_PERSIST_STATIC_SMALL_H","CUDNN_RNN_ALGO_STANDARD","CUDNN_RNN_CLIP_MINMAX","CUDNN_RNN_CLIP_NONE","CUDNN_RNN_DATA_LAYOUT_BATCH_MAJOR_UNPACKED","CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_PACKED","CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_UNPACKED","CUDNN_RNN_DOUBLE_BIAS","CUDNN_RNN_NO_BIAS","CUDNN_RNN_PADDED_IO_DISABLED","CUDNN_RNN_PADDED_IO_ENABLED","CUDNN_RNN_RELU","CUDNN_RNN_SINGLE_INP_BIAS","CUDNN_RNN_SINGLE_REC_BIAS","CUDNN_RNN_TANH","CUDNN_SAMPLER_BILINEAR","CUDNN_SCALAR_DOUBLE_BN_EPSILON","CUDNN_SCALAR_DOUBLE_BN_EXP_AVG_FACTOR","CUDNN_SCALAR_INT64_T_BN_ACCUMULATION_COUNT","CUDNN_SCALAR_SIZE_T_WORKSPACE_SIZE_IN_BYTES","CUDNN_SEQDATA_BATCH_DIM","CUDNN_SEQDATA_BEAM_DIM","CUDNN_SEQDATA_DIM_COUNT","CUDNN_SEQDATA_TIME_DIM","CUDNN_SEQDATA_VECT_DIM","CUDNN_SEV_ERROR","CUDNN_SEV_FATAL","CUDNN_SEV_INFO","CUDNN_SEV_WARNING","CUDNN_SKIP_INPUT","CUDNN_SOFTMAX_ACCURATE","CUDNN_SOFTMAX_FAST","CUDNN_SOFTMAX_LOG","CUDNN_SOFTMAX_MODE_CHANNEL","CUDNN_SOFTMAX_MODE_INSTANCE","CUDNN_STATUS_ALLOC_FAILED","CUDNN_STATUS_ARCH_MISMATCH","CUDNN_STATUS_BAD_PARAM","CUDNN_STATUS_EXECUTION_FAILED","CUDNN_STATUS_INTERNAL_ERROR","CUDNN_STATUS_INVALID_VALUE","CUDNN_STATUS_LICENSE_ERROR","CUDNN_STATUS_MAPPING_ERROR","CUDNN_STATUS_NOT_INITIALIZED","CUDNN_STATUS_NOT_SUPPORTED","CUDNN_STATUS_RUNTIME_FP_OVERFLOW","CUDNN_STATUS_RUNTIME_IN_PROGRESS","CUDNN_STATUS_RUNTIME_PREREQUISITE_MISSING","CUDNN_STATUS_SUCCESS","CUDNN_STATUS_VERSION_MISMATCH","CUDNN_TENSOR_NCHW","CUDNN_TENSOR_NCHW_VECT_C","CUDNN_TENSOR_NHWC","CUDNN_TENSOR_OP_MATH","CUDNN_TENSOR_OP_MATH_ALLOW_CONVERSION","CUDNN_TENSOR_REORDERING_INT8x32","CUDNN_TENSOR_REORDERING_NONE","CUDNN_TRANSFORM_FOLD","CUDNN_TRANSFORM_UNFOLD","CUDNN_TYPE_ATTRIB_NAME","CUDNN_TYPE_BACKEND_DESCRIPTOR","CUDNN_TYPE_BEHAVIOR_NOTE","CUDNN_TYPE_BN_FINALIZE_STATS_MODE","CUDNN_TYPE_BOOLEAN","CUDNN_TYPE_CONVOLUTION_MODE","CUDNN_TYPE_DATA_TYPE","CUDNN_TYPE_DOUBLE","CUDNN_TYPE_FLOAT","CUDNN_TYPE_GENSTATS_MODE","CUDNN_TYPE_HANDLE","CUDNN_TYPE_HEUR_MODE","CUDNN_TYPE_INT32","CUDNN_TYPE_INT64","CUDNN_TYPE_KNOB_TYPE","CUDNN_TYPE_LAYOUT_TYPE","CUDNN_TYPE_NAN_PROPOGATION","CUDNN_TYPE_NUMERICAL_NOTE","CUDNN_TYPE_PADDING_MODE","CUDNN_TYPE_POINTWISE_MODE","CUDNN_TYPE_REDUCTION_OPERATOR_TYPE","CUDNN_TYPE_RESAMPLE_MODE","CUDNN_TYPE_TENSOR_REORDERING_MODE","CUDNN_TYPE_VOID_PTR","CUDNN_UNIDIRECTIONAL","CUDNN_VERSION","CUDNN_WGRAD_MODE_ADD","CUDNN_WGRAD_MODE_SET","CUDNN_ZERO_PAD","CUevent_st","CUexternalMemory_st","CUexternalSemaphore_st","CUfunc_st","CUgraphExec_st","CUgraphNode_st","CUgraph_st","CUmemPoolHandle_st","CUstream_st","CUuserObject_st","CUuuid","CUuuid_st","ECCEnabled","None","None","None","RNNAlgo","Some","Some","Some","__cudaReserved","__int32_t","__int64_t","__uint32_t","accessDescCount","accessDescs","accessPolicyMaxWindowSize","accessPolicyWindow","accessPolicyWindow","addressMode","addressMode","algo","algo","algo","algo","algo","algo","algo","algo","alignment","allocType","args","array","array","asyncEngineCount","base_ptr","binaryVersion","blockDim","blockDim","borderColor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","bytes","bytesize","cacheModeCA","canMapHostMemory","canUseHostPointerForRegisteredMem","channelDesc","channelDesc","clockRate","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","computeMode","computePreemptionSupported","concurrentKernels","concurrentManagedAccess","constSizeBytes","convBwdDataAlgo","convBwdFilterAlgo","convFwdAlgo","cooperative","cooperativeLaunch","cooperativeMultiDeviceLaunch","cudaAccessPolicyWindow","cudaAccessProperty","cudaAccessPropertyNormal","cudaAccessPropertyPersisting","cudaAccessPropertyStreaming","cudaAddressModeBorder","cudaAddressModeClamp","cudaAddressModeMirror","cudaAddressModeWrap","cudaArray","cudaArrayGetInfo","cudaArrayGetMemoryRequirements","cudaArrayGetPlane","cudaArrayGetSparseProperties","cudaArrayMemoryRequirements","cudaArraySparseProperties","cudaArraySparseProperties__bindgen_ty_1","cudaArray_const_t","cudaArray_t","cudaBindSurfaceToArray","cudaBindTexture","cudaBindTexture2D","cudaBindTextureToArray","cudaBindTextureToMipmappedArray","cudaBoundaryModeClamp","cudaBoundaryModeTrap","cudaBoundaryModeZero","cudaCGScope","cudaCGScopeGrid","cudaCGScopeInvalid","cudaCGScopeMultiGrid","cudaCSV","cudaCSV","cudaChannelFormatDesc","cudaChannelFormatKind","cudaChannelFormatKindFloat","cudaChannelFormatKindNV12","cudaChannelFormatKindNone","cudaChannelFormatKindSigned","cudaChannelFormatKindSignedBlockCompressed4","cudaChannelFormatKindSignedBlockCompressed5","cudaChannelFormatKindSignedBlockCompressed6H","cudaChannelFormatKindSignedNormalized16X1","cudaChannelFormatKindSignedNormalized16X2","cudaChannelFormatKindSignedNormalized16X4","cudaChannelFormatKindSignedNormalized8X1","cudaChannelFormatKindSignedNormalized8X2","cudaChannelFormatKindSignedNormalized8X4","cudaChannelFormatKindUnsigned","cudaChannelFormatKindUnsignedBlockCompressed1","cudaChannelFormatKindUnsignedBlockCompressed1SRGB","cudaChannelFormatKindUnsignedBlockCompressed2","cudaChannelFormatKindUnsignedBlockCompressed2SRGB","cudaChannelFormatKindUnsignedBlockCompressed3","cudaChannelFormatKindUnsignedBlockCompressed3SRGB","cudaChannelFormatKindUnsignedBlockCompressed4","cudaChannelFormatKindUnsignedBlockCompressed5","cudaChannelFormatKindUnsignedBlockCompressed6H","cudaChannelFormatKindUnsignedBlockCompressed7","cudaChannelFormatKindUnsignedBlockCompressed7SRGB","cudaChannelFormatKindUnsignedNormalized16X1","cudaChannelFormatKindUnsignedNormalized16X2","cudaChannelFormatKindUnsignedNormalized16X4","cudaChannelFormatKindUnsignedNormalized8X1","cudaChannelFormatKindUnsignedNormalized8X2","cudaChannelFormatKindUnsignedNormalized8X4","cudaChooseDevice","cudaComputeMode","cudaComputeModeDefault","cudaComputeModeExclusive","cudaComputeModeExclusiveProcess","cudaComputeModeProhibited","cudaCreateChannelDesc","cudaCreateSurfaceObject","cudaCreateTextureObject","cudaCtxResetPersistingL2Cache","cudaDataType","cudaDataType_t","cudaDestroyExternalMemory","cudaDestroyExternalSemaphore","cudaDestroySurfaceObject","cudaDestroyTextureObject","cudaDevAttrAsyncEngineCount","cudaDevAttrCanFlushRemoteWrites","cudaDevAttrCanMapHostMemory","cudaDevAttrCanUseHostPointerForRegisteredMem","cudaDevAttrClockRate","cudaDevAttrComputeCapabilityMajor","cudaDevAttrComputeCapabilityMinor","cudaDevAttrComputeMode","cudaDevAttrComputePreemptionSupported","cudaDevAttrConcurrentKernels","cudaDevAttrConcurrentManagedAccess","cudaDevAttrCooperativeLaunch","cudaDevAttrCooperativeMultiDeviceLaunch","cudaDevAttrDeferredMappingCudaArraySupported","cudaDevAttrDirectManagedMemAccessFromHost","cudaDevAttrEccEnabled","cudaDevAttrGPUDirectRDMAFlushWritesOptions","cudaDevAttrGPUDirectRDMASupported","cudaDevAttrGPUDirectRDMAWritesOrdering","cudaDevAttrGlobalL1CacheSupported","cudaDevAttrGlobalMemoryBusWidth","cudaDevAttrGpuOverlap","cudaDevAttrHostNativeAtomicSupported","cudaDevAttrHostRegisterReadOnlySupported","cudaDevAttrHostRegisterSupported","cudaDevAttrIntegrated","cudaDevAttrIsMultiGpuBoard","cudaDevAttrKernelExecTimeout","cudaDevAttrL2CacheSize","cudaDevAttrLocalL1CacheSupported","cudaDevAttrManagedMemory","cudaDevAttrMax","cudaDevAttrMaxAccessPolicyWindowSize","cudaDevAttrMaxBlockDimX","cudaDevAttrMaxBlockDimY","cudaDevAttrMaxBlockDimZ","cudaDevAttrMaxBlocksPerMultiprocessor","cudaDevAttrMaxGridDimX","cudaDevAttrMaxGridDimY","cudaDevAttrMaxGridDimZ","cudaDevAttrMaxPersistingL2CacheSize","cudaDevAttrMaxPitch","cudaDevAttrMaxRegistersPerBlock","cudaDevAttrMaxRegistersPerMultiprocessor","cudaDevAttrMaxSharedMemoryPerBlock","cudaDevAttrMaxSharedMemoryPerBlockOptin","cudaDevAttrMaxSharedMemoryPerMultiprocessor","cudaDevAttrMaxSurface1DLayeredLayers","cudaDevAttrMaxSurface1DLayeredWidth","cudaDevAttrMaxSurface1DWidth","cudaDevAttrMaxSurface2DHeight","cudaDevAttrMaxSurface2DLayeredHeight","cudaDevAttrMaxSurface2DLayeredLayers","cudaDevAttrMaxSurface2DLayeredWidth","cudaDevAttrMaxSurface2DWidth","cudaDevAttrMaxSurface3DDepth","cudaDevAttrMaxSurface3DHeight","cudaDevAttrMaxSurface3DWidth","cudaDevAttrMaxSurfaceCubemapLayeredLayers","cudaDevAttrMaxSurfaceCubemapLayeredWidth","cudaDevAttrMaxSurfaceCubemapWidth","cudaDevAttrMaxTexture1DLayeredLayers","cudaDevAttrMaxTexture1DLayeredWidth","cudaDevAttrMaxTexture1DLinearWidth","cudaDevAttrMaxTexture1DMipmappedWidth","cudaDevAttrMaxTexture1DWidth","cudaDevAttrMaxTexture2DGatherHeight","cudaDevAttrMaxTexture2DGatherWidth","cudaDevAttrMaxTexture2DHeight","cudaDevAttrMaxTexture2DLayeredHeight","cudaDevAttrMaxTexture2DLayeredLayers","cudaDevAttrMaxTexture2DLayeredWidth","cudaDevAttrMaxTexture2DLinearHeight","cudaDevAttrMaxTexture2DLinearPitch","cudaDevAttrMaxTexture2DLinearWidth","cudaDevAttrMaxTexture2DMipmappedHeight","cudaDevAttrMaxTexture2DMipmappedWidth","cudaDevAttrMaxTexture2DWidth","cudaDevAttrMaxTexture3DDepth","cudaDevAttrMaxTexture3DDepthAlt","cudaDevAttrMaxTexture3DHeight","cudaDevAttrMaxTexture3DHeightAlt","cudaDevAttrMaxTexture3DWidth","cudaDevAttrMaxTexture3DWidthAlt","cudaDevAttrMaxTextureCubemapLayeredLayers","cudaDevAttrMaxTextureCubemapLayeredWidth","cudaDevAttrMaxTextureCubemapWidth","cudaDevAttrMaxThreadsPerBlock","cudaDevAttrMaxThreadsPerMultiProcessor","cudaDevAttrMaxTimelineSemaphoreInteropSupported","cudaDevAttrMemoryClockRate","cudaDevAttrMemoryPoolSupportedHandleTypes","cudaDevAttrMemoryPoolsSupported","cudaDevAttrMultiGpuBoardGroupID","cudaDevAttrMultiProcessorCount","cudaDevAttrPageableMemoryAccess","cudaDevAttrPageableMemoryAccessUsesHostPageTables","cudaDevAttrPciBusId","cudaDevAttrPciDeviceId","cudaDevAttrPciDomainId","cudaDevAttrReserved92","cudaDevAttrReserved93","cudaDevAttrReserved94","cudaDevAttrReservedSharedMemoryPerBlock","cudaDevAttrSingleToDoublePrecisionPerfRatio","cudaDevAttrSparseCudaArraySupported","cudaDevAttrStreamPrioritiesSupported","cudaDevAttrSurfaceAlignment","cudaDevAttrTccDriver","cudaDevAttrTextureAlignment","cudaDevAttrTexturePitchAlignment","cudaDevAttrTimelineSemaphoreInteropSupported","cudaDevAttrTotalConstantMemory","cudaDevAttrUnifiedAddressing","cudaDevAttrWarpSize","cudaDevP2PAttrAccessSupported","cudaDevP2PAttrCudaArrayAccessSupported","cudaDevP2PAttrNativeAtomicSupported","cudaDevP2PAttrPerformanceRank","cudaDeviceAttr","cudaDeviceCanAccessPeer","cudaDeviceDisablePeerAccess","cudaDeviceEnablePeerAccess","cudaDeviceFlushGPUDirectRDMAWrites","cudaDeviceGetAttribute","cudaDeviceGetByPCIBusId","cudaDeviceGetCacheConfig","cudaDeviceGetDefaultMemPool","cudaDeviceGetGraphMemAttribute","cudaDeviceGetLimit","cudaDeviceGetMemPool","cudaDeviceGetNvSciSyncAttributes","cudaDeviceGetP2PAttribute","cudaDeviceGetPCIBusId","cudaDeviceGetSharedMemConfig","cudaDeviceGetStreamPriorityRange","cudaDeviceGetTexture1DLinearMaxWidth","cudaDeviceGraphMemTrim","cudaDeviceId","cudaDeviceId","cudaDeviceP2PAttr","cudaDeviceProp","cudaDeviceReset","cudaDeviceSetCacheConfig","cudaDeviceSetGraphMemAttribute","cudaDeviceSetLimit","cudaDeviceSetMemPool","cudaDeviceSetSharedMemConfig","cudaDeviceSynchronize","cudaDriverGetVersion","cudaEnableDefault","cudaEnableLegacyStream","cudaEnablePerThreadDefaultStream","cudaError","cudaErrorAddressOfConstant","cudaErrorAddressOfConstant","cudaErrorAlreadyAcquired","cudaErrorAlreadyAcquired","cudaErrorAlreadyMapped","cudaErrorAlreadyMapped","cudaErrorApiFailureBase","cudaErrorApiFailureBase","cudaErrorArrayIsMapped","cudaErrorArrayIsMapped","cudaErrorAssert","cudaErrorAssert","cudaErrorCallRequiresNewerDriver","cudaErrorCallRequiresNewerDriver","cudaErrorCapturedEvent","cudaErrorCapturedEvent","cudaErrorCompatNotSupportedOnDevice","cudaErrorCompatNotSupportedOnDevice","cudaErrorContextIsDestroyed","cudaErrorContextIsDestroyed","cudaErrorCooperativeLaunchTooLarge","cudaErrorCooperativeLaunchTooLarge","cudaErrorCudartUnloading","cudaErrorCudartUnloading","cudaErrorDeviceAlreadyInUse","cudaErrorDeviceAlreadyInUse","cudaErrorDeviceNotLicensed","cudaErrorDeviceNotLicensed","cudaErrorDeviceUninitialized","cudaErrorDeviceUninitialized","cudaErrorDevicesUnavailable","cudaErrorDevicesUnavailable","cudaErrorDuplicateSurfaceName","cudaErrorDuplicateSurfaceName","cudaErrorDuplicateTextureName","cudaErrorDuplicateTextureName","cudaErrorDuplicateVariableName","cudaErrorDuplicateVariableName","cudaErrorECCUncorrectable","cudaErrorECCUncorrectable","cudaErrorExternalDevice","cudaErrorExternalDevice","cudaErrorFileNotFound","cudaErrorFileNotFound","cudaErrorGraphExecUpdateFailure","cudaErrorGraphExecUpdateFailure","cudaErrorHardwareStackError","cudaErrorHardwareStackError","cudaErrorHostMemoryAlreadyRegistered","cudaErrorHostMemoryAlreadyRegistered","cudaErrorHostMemoryNotRegistered","cudaErrorHostMemoryNotRegistered","cudaErrorIllegalAddress","cudaErrorIllegalAddress","cudaErrorIllegalInstruction","cudaErrorIllegalInstruction","cudaErrorIllegalState","cudaErrorIllegalState","cudaErrorIncompatibleDriverContext","cudaErrorIncompatibleDriverContext","cudaErrorInitializationError","cudaErrorInitializationError","cudaErrorInsufficientDriver","cudaErrorInsufficientDriver","cudaErrorInvalidAddressSpace","cudaErrorInvalidAddressSpace","cudaErrorInvalidChannelDescriptor","cudaErrorInvalidChannelDescriptor","cudaErrorInvalidConfiguration","cudaErrorInvalidConfiguration","cudaErrorInvalidDevice","cudaErrorInvalidDevice","cudaErrorInvalidDeviceFunction","cudaErrorInvalidDeviceFunction","cudaErrorInvalidDevicePointer","cudaErrorInvalidDevicePointer","cudaErrorInvalidFilterSetting","cudaErrorInvalidFilterSetting","cudaErrorInvalidGraphicsContext","cudaErrorInvalidGraphicsContext","cudaErrorInvalidHostPointer","cudaErrorInvalidHostPointer","cudaErrorInvalidKernelImage","cudaErrorInvalidKernelImage","cudaErrorInvalidMemcpyDirection","cudaErrorInvalidMemcpyDirection","cudaErrorInvalidNormSetting","cudaErrorInvalidNormSetting","cudaErrorInvalidPc","cudaErrorInvalidPc","cudaErrorInvalidPitchValue","cudaErrorInvalidPitchValue","cudaErrorInvalidPtx","cudaErrorInvalidPtx","cudaErrorInvalidResourceHandle","cudaErrorInvalidResourceHandle","cudaErrorInvalidSource","cudaErrorInvalidSource","cudaErrorInvalidSurface","cudaErrorInvalidSurface","cudaErrorInvalidSymbol","cudaErrorInvalidSymbol","cudaErrorInvalidTexture","cudaErrorInvalidTexture","cudaErrorInvalidTextureBinding","cudaErrorInvalidTextureBinding","cudaErrorInvalidValue","cudaErrorInvalidValue","cudaErrorJitCompilationDisabled","cudaErrorJitCompilationDisabled","cudaErrorJitCompilerNotFound","cudaErrorJitCompilerNotFound","cudaErrorLaunchFailure","cudaErrorLaunchFailure","cudaErrorLaunchFileScopedSurf","cudaErrorLaunchFileScopedSurf","cudaErrorLaunchFileScopedTex","cudaErrorLaunchFileScopedTex","cudaErrorLaunchIncompatibleTexturing","cudaErrorLaunchIncompatibleTexturing","cudaErrorLaunchMaxDepthExceeded","cudaErrorLaunchMaxDepthExceeded","cudaErrorLaunchOutOfResources","cudaErrorLaunchOutOfResources","cudaErrorLaunchPendingCountExceeded","cudaErrorLaunchPendingCountExceeded","cudaErrorLaunchTimeout","cudaErrorLaunchTimeout","cudaErrorMapBufferObjectFailed","cudaErrorMapBufferObjectFailed","cudaErrorMemoryAllocation","cudaErrorMemoryAllocation","cudaErrorMemoryValueTooLarge","cudaErrorMemoryValueTooLarge","cudaErrorMisalignedAddress","cudaErrorMisalignedAddress","cudaErrorMissingConfiguration","cudaErrorMissingConfiguration","cudaErrorMixedDeviceExecution","cudaErrorMixedDeviceExecution","cudaErrorMpsConnectionFailed","cudaErrorMpsConnectionFailed","cudaErrorMpsMaxClientsReached","cudaErrorMpsMaxClientsReached","cudaErrorMpsMaxConnectionsReached","cudaErrorMpsMaxConnectionsReached","cudaErrorMpsRpcFailure","cudaErrorMpsRpcFailure","cudaErrorMpsServerNotReady","cudaErrorMpsServerNotReady","cudaErrorNoDevice","cudaErrorNoDevice","cudaErrorNoKernelImageForDevice","cudaErrorNoKernelImageForDevice","cudaErrorNotMapped","cudaErrorNotMapped","cudaErrorNotMappedAsArray","cudaErrorNotMappedAsArray","cudaErrorNotMappedAsPointer","cudaErrorNotMappedAsPointer","cudaErrorNotPermitted","cudaErrorNotPermitted","cudaErrorNotReady","cudaErrorNotReady","cudaErrorNotSupported","cudaErrorNotSupported","cudaErrorNotYetImplemented","cudaErrorNotYetImplemented","cudaErrorNvlinkUncorrectable","cudaErrorNvlinkUncorrectable","cudaErrorOperatingSystem","cudaErrorOperatingSystem","cudaErrorPeerAccessAlreadyEnabled","cudaErrorPeerAccessAlreadyEnabled","cudaErrorPeerAccessNotEnabled","cudaErrorPeerAccessNotEnabled","cudaErrorPeerAccessUnsupported","cudaErrorPeerAccessUnsupported","cudaErrorPriorLaunchFailure","cudaErrorPriorLaunchFailure","cudaErrorProfilerAlreadyStarted","cudaErrorProfilerAlreadyStarted","cudaErrorProfilerAlreadyStopped","cudaErrorProfilerAlreadyStopped","cudaErrorProfilerDisabled","cudaErrorProfilerDisabled","cudaErrorProfilerNotInitialized","cudaErrorProfilerNotInitialized","cudaErrorSetOnActiveProcess","cudaErrorSetOnActiveProcess","cudaErrorSharedObjectInitFailed","cudaErrorSharedObjectInitFailed","cudaErrorSharedObjectSymbolNotFound","cudaErrorSharedObjectSymbolNotFound","cudaErrorSoftwareValidityNotEstablished","cudaErrorSoftwareValidityNotEstablished","cudaErrorStartupFailure","cudaErrorStartupFailure","cudaErrorStreamCaptureImplicit","cudaErrorStreamCaptureImplicit","cudaErrorStreamCaptureInvalidated","cudaErrorStreamCaptureInvalidated","cudaErrorStreamCaptureIsolation","cudaErrorStreamCaptureIsolation","cudaErrorStreamCaptureMerge","cudaErrorStreamCaptureMerge","cudaErrorStreamCaptureUnjoined","cudaErrorStreamCaptureUnjoined","cudaErrorStreamCaptureUnmatched","cudaErrorStreamCaptureUnmatched","cudaErrorStreamCaptureUnsupported","cudaErrorStreamCaptureUnsupported","cudaErrorStreamCaptureWrongThread","cudaErrorStreamCaptureWrongThread","cudaErrorStubLibrary","cudaErrorStubLibrary","cudaErrorSymbolNotFound","cudaErrorSymbolNotFound","cudaErrorSyncDepthExceeded","cudaErrorSyncDepthExceeded","cudaErrorSynchronizationError","cudaErrorSynchronizationError","cudaErrorSystemDriverMismatch","cudaErrorSystemDriverMismatch","cudaErrorSystemNotReady","cudaErrorSystemNotReady","cudaErrorTextureFetchFailed","cudaErrorTextureFetchFailed","cudaErrorTextureNotBound","cudaErrorTextureNotBound","cudaErrorTimeout","cudaErrorTimeout","cudaErrorTooManyPeers","cudaErrorTooManyPeers","cudaErrorUnknown","cudaErrorUnknown","cudaErrorUnmapBufferObjectFailed","cudaErrorUnmapBufferObjectFailed","cudaErrorUnsupportedExecAffinity","cudaErrorUnsupportedExecAffinity","cudaErrorUnsupportedLimit","cudaErrorUnsupportedLimit","cudaErrorUnsupportedPtxVersion","cudaErrorUnsupportedPtxVersion","cudaError_t","cudaEventCreate","cudaEventCreateWithFlags","cudaEventDestroy","cudaEventElapsedTime","cudaEventQuery","cudaEventRecord","cudaEventRecordWithFlags","cudaEventSynchronize","cudaEvent_t","cudaExtent","cudaExternalMemoryBufferDesc","cudaExternalMemoryGetMappedBuffer","cudaExternalMemoryGetMappedMipmappedArray","cudaExternalMemoryHandleDesc","cudaExternalMemoryHandleDesc__bindgen_ty_1","cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1","cudaExternalMemoryHandleType","cudaExternalMemoryHandleTypeD3D11Resource","cudaExternalMemoryHandleTypeD3D11ResourceKmt","cudaExternalMemoryHandleTypeD3D12Heap","cudaExternalMemoryHandleTypeD3D12Resource","cudaExternalMemoryHandleTypeNvSciBuf","cudaExternalMemoryHandleTypeOpaqueFd","cudaExternalMemoryHandleTypeOpaqueWin32","cudaExternalMemoryHandleTypeOpaqueWin32Kmt","cudaExternalMemoryMipmappedArrayDesc","cudaExternalMemory_t","cudaExternalSemaphoreHandleDesc","cudaExternalSemaphoreHandleDesc__bindgen_ty_1","cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreHandleType","cudaExternalSemaphoreHandleTypeD3D11Fence","cudaExternalSemaphoreHandleTypeD3D12Fence","cudaExternalSemaphoreHandleTypeKeyedMutex","cudaExternalSemaphoreHandleTypeKeyedMutexKmt","cudaExternalSemaphoreHandleTypeNvSciSync","cudaExternalSemaphoreHandleTypeOpaqueFd","cudaExternalSemaphoreHandleTypeOpaqueWin32","cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt","cudaExternalSemaphoreHandleTypeTimelineSemaphoreFd","cudaExternalSemaphoreHandleTypeTimelineSemaphoreWin32","cudaExternalSemaphoreSignalNodeParams","cudaExternalSemaphoreSignalParams","cudaExternalSemaphoreSignalParams__bindgen_ty_1","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphoreSignalParams_v1","cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1","cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphoreWaitNodeParams","cudaExternalSemaphoreWaitParams","cudaExternalSemaphoreWaitParams__bindgen_ty_1","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphoreWaitParams_v1","cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1","cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphore_t","cudaFilterModeLinear","cudaFilterModePoint","cudaFlushGPUDirectRDMAWritesOptionHost","cudaFlushGPUDirectRDMAWritesOptionMemOps","cudaFlushGPUDirectRDMAWritesOptions","cudaFlushGPUDirectRDMAWritesScope","cudaFlushGPUDirectRDMAWritesTarget","cudaFlushGPUDirectRDMAWritesTargetCurrentDevice","cudaFlushGPUDirectRDMAWritesToAllDevices","cudaFlushGPUDirectRDMAWritesToOwner","cudaFormatModeAuto","cudaFormatModeForced","cudaFree","cudaFreeArray","cudaFreeAsync","cudaFreeHost","cudaFreeMipmappedArray","cudaFuncAttribute","cudaFuncAttributeMax","cudaFuncAttributeMaxDynamicSharedMemorySize","cudaFuncAttributePreferredSharedMemoryCarveout","cudaFuncAttributes","cudaFuncCache","cudaFuncCachePreferEqual","cudaFuncCachePreferL1","cudaFuncCachePreferNone","cudaFuncCachePreferShared","cudaFuncGetAttributes","cudaFuncSetAttribute","cudaFuncSetCacheConfig","cudaFuncSetSharedMemConfig","cudaFunction_t","cudaGPUDirectRDMAWritesOrdering","cudaGPUDirectRDMAWritesOrderingAllDevices","cudaGPUDirectRDMAWritesOrderingNone","cudaGPUDirectRDMAWritesOrderingOwner","cudaGetChannelDesc","cudaGetDevice","cudaGetDeviceCount","cudaGetDeviceFlags","cudaGetDeviceProperties","cudaGetDriverEntryPoint","cudaGetDriverEntryPointFlags","cudaGetErrorName","cudaGetErrorString","cudaGetExportTable","cudaGetFuncBySymbol","cudaGetLastError","cudaGetMipmappedArrayLevel","cudaGetSurfaceObjectResourceDesc","cudaGetSurfaceReference","cudaGetSymbolAddress","cudaGetSymbolSize","cudaGetTextureAlignmentOffset","cudaGetTextureObjectResourceDesc","cudaGetTextureObjectResourceViewDesc","cudaGetTextureObjectTextureDesc","cudaGetTextureReference","cudaGraphAddChildGraphNode","cudaGraphAddDependencies","cudaGraphAddEmptyNode","cudaGraphAddEventRecordNode","cudaGraphAddEventWaitNode","cudaGraphAddExternalSemaphoresSignalNode","cudaGraphAddExternalSemaphoresWaitNode","cudaGraphAddHostNode","cudaGraphAddKernelNode","cudaGraphAddMemAllocNode","cudaGraphAddMemFreeNode","cudaGraphAddMemcpyNode","cudaGraphAddMemcpyNode1D","cudaGraphAddMemcpyNodeFromSymbol","cudaGraphAddMemcpyNodeToSymbol","cudaGraphAddMemsetNode","cudaGraphChildGraphNodeGetGraph","cudaGraphClone","cudaGraphCreate","cudaGraphDebugDotFlags","cudaGraphDebugDotFlagsEventNodeParams","cudaGraphDebugDotFlagsExtSemasSignalNodeParams","cudaGraphDebugDotFlagsExtSemasWaitNodeParams","cudaGraphDebugDotFlagsHandles","cudaGraphDebugDotFlagsHostNodeParams","cudaGraphDebugDotFlagsKernelNodeAttributes","cudaGraphDebugDotFlagsKernelNodeParams","cudaGraphDebugDotFlagsMemcpyNodeParams","cudaGraphDebugDotFlagsMemsetNodeParams","cudaGraphDebugDotFlagsVerbose","cudaGraphDebugDotPrint","cudaGraphDestroy","cudaGraphDestroyNode","cudaGraphEventRecordNodeGetEvent","cudaGraphEventRecordNodeSetEvent","cudaGraphEventWaitNodeGetEvent","cudaGraphEventWaitNodeSetEvent","cudaGraphExecChildGraphNodeSetParams","cudaGraphExecDestroy","cudaGraphExecEventRecordNodeSetEvent","cudaGraphExecEventWaitNodeSetEvent","cudaGraphExecExternalSemaphoresSignalNodeSetParams","cudaGraphExecExternalSemaphoresWaitNodeSetParams","cudaGraphExecHostNodeSetParams","cudaGraphExecKernelNodeSetParams","cudaGraphExecMemcpyNodeSetParams","cudaGraphExecMemcpyNodeSetParams1D","cudaGraphExecMemcpyNodeSetParamsFromSymbol","cudaGraphExecMemcpyNodeSetParamsToSymbol","cudaGraphExecMemsetNodeSetParams","cudaGraphExecUpdate","cudaGraphExecUpdateError","cudaGraphExecUpdateErrorAttributesChanged","cudaGraphExecUpdateErrorFunctionChanged","cudaGraphExecUpdateErrorNodeTypeChanged","cudaGraphExecUpdateErrorNotSupported","cudaGraphExecUpdateErrorParametersChanged","cudaGraphExecUpdateErrorTopologyChanged","cudaGraphExecUpdateErrorUnsupportedFunctionChange","cudaGraphExecUpdateResult","cudaGraphExecUpdateSuccess","cudaGraphExec_t","cudaGraphExternalSemaphoresSignalNodeGetParams","cudaGraphExternalSemaphoresSignalNodeSetParams","cudaGraphExternalSemaphoresWaitNodeGetParams","cudaGraphExternalSemaphoresWaitNodeSetParams","cudaGraphGetEdges","cudaGraphGetNodes","cudaGraphGetRootNodes","cudaGraphHostNodeGetParams","cudaGraphHostNodeSetParams","cudaGraphInstantiate","cudaGraphInstantiateFlagAutoFreeOnLaunch","cudaGraphInstantiateFlagUseNodePriority","cudaGraphInstantiateFlags","cudaGraphInstantiateWithFlags","cudaGraphKernelNodeCopyAttributes","cudaGraphKernelNodeGetAttribute","cudaGraphKernelNodeGetParams","cudaGraphKernelNodeSetAttribute","cudaGraphKernelNodeSetParams","cudaGraphLaunch","cudaGraphMemAllocNodeGetParams","cudaGraphMemAttrReservedMemCurrent","cudaGraphMemAttrReservedMemHigh","cudaGraphMemAttrUsedMemCurrent","cudaGraphMemAttrUsedMemHigh","cudaGraphMemAttributeType","cudaGraphMemFreeNodeGetParams","cudaGraphMemcpyNodeGetParams","cudaGraphMemcpyNodeSetParams","cudaGraphMemcpyNodeSetParams1D","cudaGraphMemcpyNodeSetParamsFromSymbol","cudaGraphMemcpyNodeSetParamsToSymbol","cudaGraphMemsetNodeGetParams","cudaGraphMemsetNodeSetParams","cudaGraphNodeFindInClone","cudaGraphNodeGetDependencies","cudaGraphNodeGetDependentNodes","cudaGraphNodeGetEnabled","cudaGraphNodeGetType","cudaGraphNodeSetEnabled","cudaGraphNodeType","cudaGraphNodeTypeCount","cudaGraphNodeTypeEmpty","cudaGraphNodeTypeEventRecord","cudaGraphNodeTypeExtSemaphoreSignal","cudaGraphNodeTypeExtSemaphoreWait","cudaGraphNodeTypeGraph","cudaGraphNodeTypeHost","cudaGraphNodeTypeKernel","cudaGraphNodeTypeMemAlloc","cudaGraphNodeTypeMemFree","cudaGraphNodeTypeMemcpy","cudaGraphNodeTypeMemset","cudaGraphNodeTypeWaitEvent","cudaGraphNode_t","cudaGraphReleaseUserObject","cudaGraphRemoveDependencies","cudaGraphRetainUserObject","cudaGraphUpload","cudaGraphUserObjectMove","cudaGraph_t","cudaGraphicsCubeFace","cudaGraphicsCubeFaceNegativeX","cudaGraphicsCubeFaceNegativeY","cudaGraphicsCubeFaceNegativeZ","cudaGraphicsCubeFacePositiveX","cudaGraphicsCubeFacePositiveY","cudaGraphicsCubeFacePositiveZ","cudaGraphicsMapFlags","cudaGraphicsMapFlagsNone","cudaGraphicsMapFlagsReadOnly","cudaGraphicsMapFlagsWriteDiscard","cudaGraphicsMapResources","cudaGraphicsRegisterFlags","cudaGraphicsRegisterFlagsNone","cudaGraphicsRegisterFlagsReadOnly","cudaGraphicsRegisterFlagsSurfaceLoadStore","cudaGraphicsRegisterFlagsTextureGather","cudaGraphicsRegisterFlagsWriteDiscard","cudaGraphicsResource","cudaGraphicsResourceGetMappedMipmappedArray","cudaGraphicsResourceGetMappedPointer","cudaGraphicsResourceSetMapFlags","cudaGraphicsResource_t","cudaGraphicsSubResourceGetMappedArray","cudaGraphicsUnmapResources","cudaGraphicsUnregisterResource","cudaHostAlloc","cudaHostFn_t","cudaHostGetDevicePointer","cudaHostGetFlags","cudaHostNodeParams","cudaHostRegister","cudaHostUnregister","cudaImportExternalMemory","cudaImportExternalSemaphore","cudaIpcCloseMemHandle","cudaIpcEventHandle_st","cudaIpcEventHandle_t","cudaIpcGetEventHandle","cudaIpcGetMemHandle","cudaIpcMemHandle_st","cudaIpcMemHandle_t","cudaIpcOpenEventHandle","cudaIpcOpenMemHandle","cudaKernelNodeAttrID","cudaKernelNodeAttrValue","cudaKernelNodeAttributeAccessPolicyWindow","cudaKernelNodeAttributeCooperative","cudaKernelNodeAttributePriority","cudaKernelNodeParams","cudaKeyValuePair","cudaKeyValuePair","cudaLaunchCooperativeKernel","cudaLaunchCooperativeKernelMultiDevice","cudaLaunchHostFunc","cudaLaunchKernel","cudaLaunchParams","cudaLimit","cudaLimitDevRuntimePendingLaunchCount","cudaLimitDevRuntimeSyncDepth","cudaLimitMallocHeapSize","cudaLimitMaxL2FetchGranularity","cudaLimitPersistingL2CacheSize","cudaLimitPrintfFifoSize","cudaLimitStackSize","cudaMalloc","cudaMalloc3D","cudaMalloc3DArray","cudaMallocArray","cudaMallocAsync","cudaMallocFromPoolAsync","cudaMallocHost","cudaMallocManaged","cudaMallocMipmappedArray","cudaMallocPitch","cudaMemAccessDesc","cudaMemAccessFlags","cudaMemAccessFlagsProtNone","cudaMemAccessFlagsProtRead","cudaMemAccessFlagsProtReadWrite","cudaMemAdvise","cudaMemAdviseSetAccessedBy","cudaMemAdviseSetPreferredLocation","cudaMemAdviseSetReadMostly","cudaMemAdviseUnsetAccessedBy","cudaMemAdviseUnsetPreferredLocation","cudaMemAdviseUnsetReadMostly","cudaMemAllocNodeParams","cudaMemAllocationHandleType","cudaMemAllocationType","cudaMemAllocationTypeInvalid","cudaMemAllocationTypeMax","cudaMemAllocationTypePinned","cudaMemGetInfo","cudaMemHandleTypeNone","cudaMemHandleTypePosixFileDescriptor","cudaMemHandleTypeWin32","cudaMemHandleTypeWin32Kmt","cudaMemLocation","cudaMemLocationType","cudaMemLocationTypeDevice","cudaMemLocationTypeInvalid","cudaMemPoolAttr","cudaMemPoolAttrReleaseThreshold","cudaMemPoolAttrReservedMemCurrent","cudaMemPoolAttrReservedMemHigh","cudaMemPoolAttrUsedMemCurrent","cudaMemPoolAttrUsedMemHigh","cudaMemPoolCreate","cudaMemPoolDestroy","cudaMemPoolExportPointer","cudaMemPoolExportToShareableHandle","cudaMemPoolGetAccess","cudaMemPoolGetAttribute","cudaMemPoolImportFromShareableHandle","cudaMemPoolImportPointer","cudaMemPoolProps","cudaMemPoolPtrExportData","cudaMemPoolReuseAllowInternalDependencies","cudaMemPoolReuseAllowOpportunistic","cudaMemPoolReuseFollowEventDependencies","cudaMemPoolSetAccess","cudaMemPoolSetAttribute","cudaMemPoolTrimTo","cudaMemPool_t","cudaMemPrefetchAsync","cudaMemRangeAttribute","cudaMemRangeAttributeAccessedBy","cudaMemRangeAttributeLastPrefetchLocation","cudaMemRangeAttributePreferredLocation","cudaMemRangeAttributeReadMostly","cudaMemRangeGetAttribute","cudaMemRangeGetAttributes","cudaMemcpy","cudaMemcpy2D","cudaMemcpy2DArrayToArray","cudaMemcpy2DAsync","cudaMemcpy2DFromArray","cudaMemcpy2DFromArrayAsync","cudaMemcpy2DToArray","cudaMemcpy2DToArrayAsync","cudaMemcpy3D","cudaMemcpy3DAsync","cudaMemcpy3DParms","cudaMemcpy3DPeer","cudaMemcpy3DPeerAsync","cudaMemcpy3DPeerParms","cudaMemcpyArrayToArray","cudaMemcpyAsync","cudaMemcpyDefault","cudaMemcpyDeviceToDevice","cudaMemcpyDeviceToHost","cudaMemcpyFromArray","cudaMemcpyFromArrayAsync","cudaMemcpyFromSymbol","cudaMemcpyFromSymbolAsync","cudaMemcpyHostToDevice","cudaMemcpyHostToHost","cudaMemcpyKind","cudaMemcpyPeer","cudaMemcpyPeerAsync","cudaMemcpyToArray","cudaMemcpyToArrayAsync","cudaMemcpyToSymbol","cudaMemcpyToSymbolAsync","cudaMemoryAdvise","cudaMemoryType","cudaMemoryTypeDevice","cudaMemoryTypeHost","cudaMemoryTypeManaged","cudaMemoryTypeUnregistered","cudaMemset","cudaMemset2D","cudaMemset2DAsync","cudaMemset3D","cudaMemset3DAsync","cudaMemsetAsync","cudaMemsetParams","cudaMipmappedArray","cudaMipmappedArrayGetMemoryRequirements","cudaMipmappedArrayGetSparseProperties","cudaMipmappedArray_const_t","cudaMipmappedArray_t","cudaOccupancyAvailableDynamicSMemPerBlock","cudaOccupancyMaxActiveBlocksPerMultiprocessor","cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","cudaOutputMode","cudaOutputMode_t","cudaPeekAtLastError","cudaPitchedPtr","cudaPointerAttributes","cudaPointerGetAttributes","cudaPos","cudaReadModeElementType","cudaReadModeNormalizedFloat","cudaResViewFormatFloat1","cudaResViewFormatFloat2","cudaResViewFormatFloat4","cudaResViewFormatHalf1","cudaResViewFormatHalf2","cudaResViewFormatHalf4","cudaResViewFormatNone","cudaResViewFormatSignedBlockCompressed4","cudaResViewFormatSignedBlockCompressed5","cudaResViewFormatSignedBlockCompressed6H","cudaResViewFormatSignedChar1","cudaResViewFormatSignedChar2","cudaResViewFormatSignedChar4","cudaResViewFormatSignedInt1","cudaResViewFormatSignedInt2","cudaResViewFormatSignedInt4","cudaResViewFormatSignedShort1","cudaResViewFormatSignedShort2","cudaResViewFormatSignedShort4","cudaResViewFormatUnsignedBlockCompressed1","cudaResViewFormatUnsignedBlockCompressed2","cudaResViewFormatUnsignedBlockCompressed3","cudaResViewFormatUnsignedBlockCompressed4","cudaResViewFormatUnsignedBlockCompressed5","cudaResViewFormatUnsignedBlockCompressed6H","cudaResViewFormatUnsignedBlockCompressed7","cudaResViewFormatUnsignedChar1","cudaResViewFormatUnsignedChar2","cudaResViewFormatUnsignedChar4","cudaResViewFormatUnsignedInt1","cudaResViewFormatUnsignedInt2","cudaResViewFormatUnsignedInt4","cudaResViewFormatUnsignedShort1","cudaResViewFormatUnsignedShort2","cudaResViewFormatUnsignedShort4","cudaResourceDesc","cudaResourceDesc__bindgen_ty_1","cudaResourceDesc__bindgen_ty_1__bindgen_ty_1","cudaResourceDesc__bindgen_ty_1__bindgen_ty_2","cudaResourceDesc__bindgen_ty_1__bindgen_ty_3","cudaResourceDesc__bindgen_ty_1__bindgen_ty_4","cudaResourceType","cudaResourceTypeArray","cudaResourceTypeLinear","cudaResourceTypeMipmappedArray","cudaResourceTypePitch2D","cudaResourceViewDesc","cudaResourceViewFormat","cudaRoundMinInf","cudaRoundMode","cudaRoundNearest","cudaRoundPosInf","cudaRoundZero","cudaRuntimeGetVersion","cudaSetDevice","cudaSetDeviceFlags","cudaSetDoubleForDevice","cudaSetDoubleForHost","cudaSetValidDevices","cudaSharedCarveout","cudaSharedMemBankSizeDefault","cudaSharedMemBankSizeEightByte","cudaSharedMemBankSizeFourByte","cudaSharedMemConfig","cudaSharedmemCarveoutDefault","cudaSharedmemCarveoutMaxL1","cudaSharedmemCarveoutMaxShared","cudaSignalExternalSemaphoresAsync_v2","cudaStreamAddCallback","cudaStreamAddCaptureDependencies","cudaStreamAttachMemAsync","cudaStreamAttrID","cudaStreamAttrValue","cudaStreamAttributeAccessPolicyWindow","cudaStreamAttributeSynchronizationPolicy","cudaStreamBeginCapture","cudaStreamCallback_t","cudaStreamCaptureMode","cudaStreamCaptureModeGlobal","cudaStreamCaptureModeRelaxed","cudaStreamCaptureModeThreadLocal","cudaStreamCaptureStatus","cudaStreamCaptureStatusActive","cudaStreamCaptureStatusInvalidated","cudaStreamCaptureStatusNone","cudaStreamCopyAttributes","cudaStreamCreate","cudaStreamCreateWithFlags","cudaStreamCreateWithPriority","cudaStreamDestroy","cudaStreamEndCapture","cudaStreamGetAttribute","cudaStreamGetCaptureInfo","cudaStreamGetCaptureInfo_v2","cudaStreamGetFlags","cudaStreamGetPriority","cudaStreamIsCapturing","cudaStreamQuery","cudaStreamSetAttribute","cudaStreamSetCaptureDependencies","cudaStreamSynchronize","cudaStreamUpdateCaptureDependencies","cudaStreamUpdateCaptureDependenciesFlags","cudaStreamWaitEvent","cudaStream_t","cudaSuccess","cudaSuccess","cudaSurfaceBoundaryMode","cudaSurfaceFormatMode","cudaSurfaceObject_t","cudaSyncPolicyAuto","cudaSyncPolicyBlockingSync","cudaSyncPolicySpin","cudaSyncPolicyYield","cudaSynchronizationPolicy","cudaTextureAddressMode","cudaTextureDesc","cudaTextureFilterMode","cudaTextureObject_t","cudaTextureReadMode","cudaThreadExchangeStreamCaptureMode","cudaThreadExit","cudaThreadGetCacheConfig","cudaThreadGetLimit","cudaThreadSetCacheConfig","cudaThreadSetLimit","cudaThreadSynchronize","cudaUUID_t","cudaUnbindTexture","cudaUserObjectCreate","cudaUserObjectFlags","cudaUserObjectNoDestructorSync","cudaUserObjectRelease","cudaUserObjectRetain","cudaUserObjectRetainFlags","cudaUserObject_t","cudaWaitExternalSemaphoresAsync_v2","cudnnActivationBackward","cudnnActivationDescriptor_t","cudnnActivationForward","cudnnActivationMode_t","cudnnActivationStruct","cudnnAddTensor","cudnnAdvInferVersionCheck","cudnnAdvTrainVersionCheck","cudnnAlgorithmDescriptor_t","cudnnAlgorithmPerformanceStruct","cudnnAlgorithmPerformance_t","cudnnAlgorithmStruct","cudnnAlgorithmUnionStruct","cudnnAlgorithmUnionStruct_Algorithm","cudnnAlgorithm_t","cudnnAttnDescriptor_t","cudnnAttnQueryMap_t","cudnnAttnStruct","cudnnBackendAttributeName_t","cudnnBackendAttributeType_t","cudnnBackendBehaviorNote_t","cudnnBackendCreateDescriptor","cudnnBackendDescriptorType_t","cudnnBackendDescriptor_t","cudnnBackendDestroyDescriptor","cudnnBackendExecute","cudnnBackendFinalize","cudnnBackendGetAttribute","cudnnBackendHeurMode_t","cudnnBackendInitialize","cudnnBackendKnobType_t","cudnnBackendLayoutType_t","cudnnBackendNumericalNote_t","cudnnBackendSetAttribute","cudnnBackendTensorReordering_t","cudnnBatchNormMode_t","cudnnBatchNormOps_t","cudnnBatchNormalizationBackward","cudnnBatchNormalizationBackwardEx","cudnnBatchNormalizationForwardInference","cudnnBatchNormalizationForwardTraining","cudnnBatchNormalizationForwardTrainingEx","cudnnBnFinalizeStatsMode_t","cudnnBuildRNNDynamic","cudnnCTCLoss","cudnnCTCLossAlgo_t","cudnnCTCLossDescriptor_t","cudnnCTCLossStruct","cudnnCTCLoss_v8","cudnnCallback_t","cudnnCnnInferVersionCheck","cudnnCnnTrainVersionCheck","cudnnContext","cudnnConvolutionBackwardBias","cudnnConvolutionBackwardData","cudnnConvolutionBackwardFilter","cudnnConvolutionBiasActivationForward","cudnnConvolutionBwdDataAlgoPerfStruct","cudnnConvolutionBwdDataAlgoPerf_t","cudnnConvolutionBwdDataAlgo_t","cudnnConvolutionBwdFilterAlgoPerfStruct","cudnnConvolutionBwdFilterAlgoPerf_t","cudnnConvolutionBwdFilterAlgo_t","cudnnConvolutionDescriptor_t","cudnnConvolutionForward","cudnnConvolutionFwdAlgoPerfStruct","cudnnConvolutionFwdAlgoPerf_t","cudnnConvolutionFwdAlgo_t","cudnnConvolutionMode_t","cudnnConvolutionStruct","cudnnCopyAlgorithmDescriptor","cudnnCreate","cudnnCreateActivationDescriptor","cudnnCreateAlgorithmDescriptor","cudnnCreateAlgorithmPerformance","cudnnCreateAttnDescriptor","cudnnCreateCTCLossDescriptor","cudnnCreateConvolutionDescriptor","cudnnCreateDropoutDescriptor","cudnnCreateFilterDescriptor","cudnnCreateFusedOpsConstParamPack","cudnnCreateFusedOpsPlan","cudnnCreateFusedOpsVariantParamPack","cudnnCreateLRNDescriptor","cudnnCreateOpTensorDescriptor","cudnnCreatePersistentRNNPlan","cudnnCreatePoolingDescriptor","cudnnCreateRNNDataDescriptor","cudnnCreateRNNDescriptor","cudnnCreateReduceTensorDescriptor","cudnnCreateSeqDataDescriptor","cudnnCreateSpatialTransformerDescriptor","cudnnCreateTensorDescriptor","cudnnCreateTensorTransformDescriptor","cudnnDataType_t","cudnnDebugStruct","cudnnDebug_t","cudnnDeriveBNTensorDescriptor","cudnnDeriveNormTensorDescriptor","cudnnDestroy","cudnnDestroyActivationDescriptor","cudnnDestroyAlgorithmDescriptor","cudnnDestroyAlgorithmPerformance","cudnnDestroyAttnDescriptor","cudnnDestroyCTCLossDescriptor","cudnnDestroyConvolutionDescriptor","cudnnDestroyDropoutDescriptor","cudnnDestroyFilterDescriptor","cudnnDestroyFusedOpsConstParamPack","cudnnDestroyFusedOpsPlan","cudnnDestroyFusedOpsVariantParamPack","cudnnDestroyLRNDescriptor","cudnnDestroyOpTensorDescriptor","cudnnDestroyPersistentRNNPlan","cudnnDestroyPoolingDescriptor","cudnnDestroyRNNDataDescriptor","cudnnDestroyRNNDescriptor","cudnnDestroyReduceTensorDescriptor","cudnnDestroySeqDataDescriptor","cudnnDestroySpatialTransformerDescriptor","cudnnDestroyTensorDescriptor","cudnnDestroyTensorTransformDescriptor","cudnnDeterminism_t","cudnnDirectionMode_t","cudnnDivNormMode_t","cudnnDivisiveNormalizationBackward","cudnnDivisiveNormalizationForward","cudnnDropoutBackward","cudnnDropoutDescriptor_t","cudnnDropoutForward","cudnnDropoutGetReserveSpaceSize","cudnnDropoutGetStatesSize","cudnnDropoutStruct","cudnnErrQueryMode_t","cudnnFilterDescriptor_t","cudnnFilterStruct","cudnnFindConvolutionBackwardDataAlgorithm","cudnnFindConvolutionBackwardDataAlgorithmEx","cudnnFindConvolutionBackwardFilterAlgorithm","cudnnFindConvolutionBackwardFilterAlgorithmEx","cudnnFindConvolutionForwardAlgorithm","cudnnFindConvolutionForwardAlgorithmEx","cudnnFindRNNBackwardDataAlgorithmEx","cudnnFindRNNBackwardWeightsAlgorithmEx","cudnnFindRNNForwardInferenceAlgorithmEx","cudnnFindRNNForwardTrainingAlgorithmEx","cudnnFoldingDirection_t","cudnnForwardMode_t","cudnnFusedOpsConstParamLabel_t","cudnnFusedOpsConstParamPack_t","cudnnFusedOpsConstParamStruct","cudnnFusedOpsExecute","cudnnFusedOpsPlanStruct","cudnnFusedOpsPlan_t","cudnnFusedOpsPointerPlaceHolder_t","cudnnFusedOpsVariantParamLabel_t","cudnnFusedOpsVariantParamPack_t","cudnnFusedOpsVariantParamStruct","cudnnFusedOps_t","cudnnGenStatsMode_t","cudnnGetActivationDescriptor","cudnnGetActivationDescriptorSwishBeta","cudnnGetAlgorithmDescriptor","cudnnGetAlgorithmPerformance","cudnnGetAlgorithmSpaceSize","cudnnGetAttnDescriptor","cudnnGetBatchNormalizationBackwardExWorkspaceSize","cudnnGetBatchNormalizationForwardTrainingExWorkspaceSize","cudnnGetBatchNormalizationTrainingExReserveSpaceSize","cudnnGetCTCLossDescriptor","cudnnGetCTCLossDescriptorEx","cudnnGetCTCLossDescriptor_v8","cudnnGetCTCLossWorkspaceSize","cudnnGetCTCLossWorkspaceSize_v8","cudnnGetCallback","cudnnGetConvolution2dDescriptor","cudnnGetConvolution2dForwardOutputDim","cudnnGetConvolutionBackwardDataAlgorithmMaxCount","cudnnGetConvolutionBackwardDataAlgorithm_v7","cudnnGetConvolutionBackwardDataWorkspaceSize","cudnnGetConvolutionBackwardFilterAlgorithmMaxCount","cudnnGetConvolutionBackwardFilterAlgorithm_v7","cudnnGetConvolutionBackwardFilterWorkspaceSize","cudnnGetConvolutionForwardAlgorithmMaxCount","cudnnGetConvolutionForwardAlgorithm_v7","cudnnGetConvolutionForwardWorkspaceSize","cudnnGetConvolutionGroupCount","cudnnGetConvolutionMathType","cudnnGetConvolutionNdDescriptor","cudnnGetConvolutionNdForwardOutputDim","cudnnGetConvolutionReorderType","cudnnGetCudartVersion","cudnnGetDropoutDescriptor","cudnnGetErrorString","cudnnGetFilter4dDescriptor","cudnnGetFilterNdDescriptor","cudnnGetFilterSizeInBytes","cudnnGetFoldedConvBackwardDataDescriptors","cudnnGetFusedOpsConstParamPackAttribute","cudnnGetFusedOpsVariantParamPackAttribute","cudnnGetLRNDescriptor","cudnnGetMultiHeadAttnBuffers","cudnnGetMultiHeadAttnWeights","cudnnGetNormalizationBackwardWorkspaceSize","cudnnGetNormalizationForwardTrainingWorkspaceSize","cudnnGetNormalizationTrainingReserveSpaceSize","cudnnGetOpTensorDescriptor","cudnnGetPooling2dDescriptor","cudnnGetPooling2dForwardOutputDim","cudnnGetPoolingNdDescriptor","cudnnGetPoolingNdForwardOutputDim","cudnnGetProperty","cudnnGetRNNBackwardDataAlgorithmMaxCount","cudnnGetRNNBackwardWeightsAlgorithmMaxCount","cudnnGetRNNBiasMode","cudnnGetRNNDataDescriptor","cudnnGetRNNDescriptor_v6","cudnnGetRNNDescriptor_v8","cudnnGetRNNForwardInferenceAlgorithmMaxCount","cudnnGetRNNForwardTrainingAlgorithmMaxCount","cudnnGetRNNLinLayerBiasParams","cudnnGetRNNLinLayerMatrixParams","cudnnGetRNNMatrixMathType","cudnnGetRNNPaddingMode","cudnnGetRNNParamsSize","cudnnGetRNNProjectionLayers","cudnnGetRNNTempSpaceSizes","cudnnGetRNNTrainingReserveSize","cudnnGetRNNWeightParams","cudnnGetRNNWeightSpaceSize","cudnnGetRNNWorkspaceSize","cudnnGetReduceTensorDescriptor","cudnnGetReductionIndicesSize","cudnnGetReductionWorkspaceSize","cudnnGetSeqDataDescriptor","cudnnGetStream","cudnnGetTensor4dDescriptor","cudnnGetTensorNdDescriptor","cudnnGetTensorSizeInBytes","cudnnGetTensorTransformDescriptor","cudnnGetVersion","cudnnHandle_t","cudnnIm2Col","cudnnIndicesType_t","cudnnInitTransformDest","cudnnLRNCrossChannelBackward","cudnnLRNCrossChannelForward","cudnnLRNDescriptor_t","cudnnLRNMode_t","cudnnLRNStruct","cudnnLossNormalizationMode_t","cudnnMakeFusedOpsPlan","cudnnMathType_t","cudnnMultiHeadAttnBackwardData","cudnnMultiHeadAttnBackwardWeights","cudnnMultiHeadAttnForward","cudnnMultiHeadAttnWeightKind_t","cudnnNanPropagation_t","cudnnNormAlgo_t","cudnnNormMode_t","cudnnNormOps_t","cudnnNormalizationBackward","cudnnNormalizationForwardInference","cudnnNormalizationForwardTraining","cudnnOpTensor","cudnnOpTensorDescriptor_t","cudnnOpTensorOp_t","cudnnOpTensorStruct","cudnnOpsInferVersionCheck","cudnnOpsTrainVersionCheck","cudnnPaddingMode_t","cudnnPersistentRNNPlan","cudnnPersistentRNNPlan_t","cudnnPointwiseMode_t","cudnnPoolingBackward","cudnnPoolingDescriptor_t","cudnnPoolingForward","cudnnPoolingMode_t","cudnnPoolingStruct","cudnnQueryRuntimeError","cudnnRNNAlgo_t","cudnnRNNBackwardData","cudnnRNNBackwardDataEx","cudnnRNNBackwardData_v8","cudnnRNNBackwardWeights","cudnnRNNBackwardWeightsEx","cudnnRNNBackwardWeights_v8","cudnnRNNBiasMode_t","cudnnRNNClipMode_t","cudnnRNNDataDescriptor_t","cudnnRNNDataLayout_t","cudnnRNNDataStruct","cudnnRNNDescriptor_t","cudnnRNNForward","cudnnRNNForwardInference","cudnnRNNForwardInferenceEx","cudnnRNNForwardTraining","cudnnRNNForwardTrainingEx","cudnnRNNGetClip","cudnnRNNGetClip_v8","cudnnRNNInputMode_t","cudnnRNNMode_t","cudnnRNNPaddingMode_t","cudnnRNNSetClip","cudnnRNNSetClip_v8","cudnnRNNStruct","cudnnReduceTensor","cudnnReduceTensorDescriptor_t","cudnnReduceTensorIndices_t","cudnnReduceTensorOp_t","cudnnReduceTensorStruct","cudnnReorderFilterAndBias","cudnnReorderType_t","cudnnResampleMode_t","cudnnRestoreAlgorithm","cudnnRestoreDropoutDescriptor","cudnnRuntimeTag_t","cudnnSamplerType_t","cudnnSaveAlgorithm","cudnnScaleTensor","cudnnSeqDataAxis_t","cudnnSeqDataDescriptor_t","cudnnSeqDataStruct","cudnnSetActivationDescriptor","cudnnSetActivationDescriptorSwishBeta","cudnnSetAlgorithmDescriptor","cudnnSetAlgorithmPerformance","cudnnSetAttnDescriptor","cudnnSetCTCLossDescriptor","cudnnSetCTCLossDescriptorEx","cudnnSetCTCLossDescriptor_v8","cudnnSetCallback","cudnnSetConvolution2dDescriptor","cudnnSetConvolutionGroupCount","cudnnSetConvolutionMathType","cudnnSetConvolutionNdDescriptor","cudnnSetConvolutionReorderType","cudnnSetDropoutDescriptor","cudnnSetFilter4dDescriptor","cudnnSetFilterNdDescriptor","cudnnSetFusedOpsConstParamPackAttribute","cudnnSetFusedOpsVariantParamPackAttribute","cudnnSetLRNDescriptor","cudnnSetOpTensorDescriptor","cudnnSetPersistentRNNPlan","cudnnSetPooling2dDescriptor","cudnnSetPoolingNdDescriptor","cudnnSetRNNAlgorithmDescriptor","cudnnSetRNNBiasMode","cudnnSetRNNDataDescriptor","cudnnSetRNNDescriptor_v6","cudnnSetRNNDescriptor_v8","cudnnSetRNNMatrixMathType","cudnnSetRNNPaddingMode","cudnnSetRNNProjectionLayers","cudnnSetReduceTensorDescriptor","cudnnSetSeqDataDescriptor","cudnnSetSpatialTransformerNdDescriptor","cudnnSetStream","cudnnSetTensor","cudnnSetTensor4dDescriptor","cudnnSetTensor4dDescriptorEx","cudnnSetTensorNdDescriptor","cudnnSetTensorNdDescriptorEx","cudnnSetTensorTransformDescriptor","cudnnSeverity_t","cudnnSoftmaxAlgorithm_t","cudnnSoftmaxBackward","cudnnSoftmaxForward","cudnnSoftmaxMode_t","cudnnSpatialTfGridGeneratorBackward","cudnnSpatialTfGridGeneratorForward","cudnnSpatialTfSamplerBackward","cudnnSpatialTfSamplerForward","cudnnSpatialTransformerDescriptor_t","cudnnSpatialTransformerStruct","cudnnStatus","cudnnStatus","cudnnStatus_t","cudnnTensorDescriptor_t","cudnnTensorFormat_t","cudnnTensorStruct","cudnnTensorTransformDescriptor_t","cudnnTensorTransformStruct","cudnnTransformFilter","cudnnTransformTensor","cudnnTransformTensorEx","cudnnWgradMode_t","cudnn_version","cudnn_version","default","default","default","depth","depth","depth","desc","desc","determinism","determinism","determinism","determinism","determinism","determinism","devPtr","devPtr","device","deviceOverlap","devicePointer","dim3","directManagedMemAccessFromHost","disableTrilinearOptimization","disableTrilinearOptimization","dptr","dst","dstArray","dstArray","dstDevice","dstPos","dstPos","dstPtr","dstPtr","elementSize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extSemArray","extSemArray","extent","extent","extent","extra","f","fd","fd","fence","fence","fence","fence","fence","fence","fence","fence","filterMode","filterMode","firstLayer","firstMipmapLevel","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_","format","formatDesc","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","func","globalL1CacheSupported","gridDim","gridDim","handle","handle","handle","handle","handle","handle","handleTypes","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","height","hitProp","hitRatio","hostNativeAtomicSupported","hostPointer","id","integrated","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","isMultiGpuBoard","kernelExecTimeoutEnabled","kernelParams","key","key","key","key","keyedMutex","keyedMutex","keyedMutex","keyedMutex","kind","l2CacheSize","lastLayer","lastMipmapLevel","libraryPropertyType","libraryPropertyType_t","libraryPropertyType_t_MAJOR_VERSION","libraryPropertyType_t_MINOR_VERSION","libraryPropertyType_t_PATCH_LEVEL","linear","localL1CacheSupported","localSizeBytes","location","location","luid","luidDeviceNodeMask","major","managedMemory","mathType","mathType","mathType","mathType","mathType","mathType","maxAnisotropy","maxAnisotropy","maxBlocksPerMultiProcessor","maxDynamicSharedSizeBytes","maxGridSize","maxMipmapLevelClamp","maxMipmapLevelClamp","maxSurface1D","maxSurface1DLayered","maxSurface2D","maxSurface2DLayered","maxSurface3D","maxSurfaceCubemap","maxSurfaceCubemapLayered","maxTexture1D","maxTexture1DLayered","maxTexture1DLinear","maxTexture1DMipmap","maxTexture2D","maxTexture2DGather","maxTexture2DLayered","maxTexture2DLinear","maxTexture2DMipmap","maxTexture3D","maxTexture3DAlt","maxTextureCubemap","maxTextureCubemapLayered","maxThreadsDim","maxThreadsPerBlock","maxThreadsPerBlock","maxThreadsPerMultiProcessor","memPitch","memory","memory","memory","memory","memory","memory","memoryBusWidth","memoryClockRate","minMipmapLevelClamp","minMipmapLevelClamp","minor","mipmap","mipmap","mipmapFilterMode","mipmapFilterMode","mipmapLevelBias","mipmapLevelBias","miptailFirstLevel","miptailSize","missProp","multiGpuBoardGroupID","multiProcessorCount","name","name","name","normalized","normalizedCoords","numExtSems","numExtSems","numLevels","numRegs","num_bytes","nvSciBufObject","nvSciSync","nvSciSync","nvSciSync","nvSciSync","nvSciSyncObj","offset","offset","pageableMemoryAccess","pageableMemoryAccessUsesHostPageTables","params","params","params","params","paramsArray","paramsArray","pciBusID","pciDeviceID","pciDomainID","persistingL2CacheMaxSize","pid","pid","pitch","pitch","pitch2D","pitchInBytes","poolProps","preferredShmemCarveout","priority","ptr","ptxVersion","readMode","regsPerBlock","regsPerMultiprocessor","res","resType","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reservedSharedMemPerBlock","sRGB","sRGB","seamlessCubemap","sharedMem","sharedMemBytes","sharedMemPerBlock","sharedMemPerBlockOptin","sharedMemPerMultiprocessor","sharedSizeBytes","singleToDoublePrecisionPerfRatio","size","size","size","sizeInBytes","srcArray","srcArray","srcDevice","srcPos","srcPos","srcPtr","srcPtr","status","status","status","status","status","status","stream","stream","stream","streamPrioritiesSupported","surfaceAlignment","surfaceReference","syncPolicy","tccDriver","textureAlignment","texturePitchAlignment","textureReference","tid","tid","tileExtent","time","time","time","time","time","time","time_delta","time_delta","time_sec","time_sec","time_usec","time_usec","timeoutMs","timeoutMs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","totalConstMem","totalGlobalMem","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unifiedAddressing","userData","uuid","value","value","value","value","value","w","warpSize","width","width","width","width","width","win32","win32","win32SecurityAttributes","x","x","x","xsize","y","y","y","ysize","z","z","z"],"q":[[0,"rcudnn_sys"],[5203,"core::fmt"],[5204,"core::fmt"],[5205,"core::result"],[5206,"core::any"]],"do value.","No value.","No value.","","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[181,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,159,159,159,159,163,163,163,163,163,163,163,0,0,0,0,0,0,0,0,0,0,0,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,167,167,167,166,166,166,221,221,221,221,187,216,216,0,0,0,0,0,0,0,201,177,177,177,177,177,177,177,176,176,176,176,176,176,176,176,175,175,175,175,175,175,175,175,175,201,179,179,150,150,150,150,150,150,150,150,150,150,150,150,151,202,153,0,165,226,139,139,139,151,208,208,208,208,208,208,208,184,184,215,185,224,224,224,224,224,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,223,223,223,223,223,188,199,199,164,0,0,0,0,185,0,197,197,197,197,197,197,197,197,0,226,153,169,169,170,170,170,168,168,152,202,220,220,220,220,220,220,220,220,220,220,0,0,0,0,0,0,156,156,156,156,156,156,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,0,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,162,162,162,162,152,210,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,210,210,211,211,211,211,211,211,211,157,157,157,158,157,157,157,157,157,157,158,214,214,214,214,178,178,178,178,178,189,189,190,190,190,186,186,0,0,185,186,186,185,171,211,211,211,211,194,194,0,194,194,182,182,182,182,188,160,160,160,161,161,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,154,154,154,151,151,225,225,155,155,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,187,0,198,198,226,0,0,0,0,0,0,0,0,0,0,0,0,70,237,238,239,181,237,238,239,133,0,0,0,66,66,70,124,126,133,134,240,228,229,230,180,203,204,212,10,64,113,35,36,70,20,42,113,114,134,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,241,242,69,66,42,70,70,129,133,70,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,70,70,70,70,42,181,181,181,126,70,70,0,0,19,19,19,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,127,0,112,112,112,51,51,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,47,47,47,47,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,68,68,68,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,243,183,0,0,0,0,0,0,0,0,0,0,120,120,120,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,73,73,73,73,73,73,73,0,0,0,0,0,0,79,79,79,79,79,79,79,79,79,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,131,52,52,0,0,0,55,54,54,128,128,0,0,0,0,0,0,43,43,43,0,0,44,44,44,44,0,0,0,0,0,0,53,53,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,121,121,121,121,121,121,121,121,121,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,119,119,119,119,119,119,0,119,0,0,0,0,0,0,0,0,0,0,0,122,122,0,0,0,0,0,0,0,0,0,67,67,67,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,117,117,117,117,117,117,117,117,117,117,117,117,117,0,0,0,0,0,27,0,0,31,31,31,31,31,31,0,30,30,30,0,0,29,29,29,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,125,125,125,0,51,51,0,0,0,0,0,0,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,0,49,49,49,49,49,49,0,0,0,62,62,62,0,63,63,63,63,0,0,58,58,0,57,57,57,57,57,0,0,0,0,0,0,0,0,0,0,57,57,57,0,0,0,0,0,0,50,50,50,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132,132,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,0,0,0,0,0,32,32,32,32,0,0,1,0,1,1,1,0,0,0,0,0,0,0,45,45,45,0,46,46,46,0,0,25,0,0,0,123,123,0,0,0,23,23,23,0,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,3,3,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,243,183,0,0,0,0,0,0,0,0,0,0,243,183,228,229,230,9,14,40,38,39,228,229,230,203,204,212,38,39,41,70,41,0,70,133,134,66,18,16,17,17,16,17,16,17,18,1,3,4,11,12,19,22,23,24,25,26,27,29,30,31,32,33,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,62,63,67,68,73,79,112,117,119,120,121,122,123,125,127,128,130,131,132,135,137,139,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,175,176,177,178,179,182,184,185,186,187,188,189,190,194,197,198,199,201,202,208,209,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,115,116,16,17,78,114,5,75,81,84,86,89,91,94,96,99,101,133,134,40,40,8,61,74,77,78,80,83,88,93,98,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,78,79,82,85,87,90,92,95,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,21,40,78,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,113,114,70,113,114,243,74,76,80,82,183,64,1,3,4,11,12,19,22,23,24,25,26,27,29,30,31,32,33,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,62,63,67,68,73,79,112,117,119,120,121,122,123,125,127,128,130,131,132,135,137,139,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,175,176,177,178,179,182,184,185,186,187,188,189,190,194,197,198,199,201,202,208,209,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,9,14,18,39,40,20,20,70,41,59,70,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,70,70,114,87,92,97,102,84,89,94,99,16,70,40,40,0,0,0,0,0,35,70,42,61,64,70,70,70,70,228,229,230,203,204,212,133,134,70,42,70,133,134,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,42,70,70,70,228,229,230,203,204,212,70,70,133,134,70,35,37,133,134,133,134,8,8,20,70,70,70,76,82,133,134,115,116,78,42,20,75,84,89,94,99,81,77,78,70,70,83,88,93,98,115,116,70,70,70,70,243,183,13,18,35,39,66,42,126,13,42,134,70,70,34,34,244,245,243,228,229,230,8,10,64,65,71,72,86,91,93,94,96,98,99,101,183,203,204,212,70,133,134,134,113,114,70,70,70,42,70,10,74,77,38,16,17,17,16,17,16,17,228,229,230,203,204,212,243,113,183,70,70,0,124,70,70,70,0,243,183,8,228,229,230,203,204,212,243,183,243,183,243,183,92,102,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,70,70,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,41,59,74,80,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,70,21,70,18,85,90,95,100,5,70,9,14,18,39,40,75,81,64,2,5,15,13,2,5,15,13,2,5,15],"f":"````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000``````````{bb}{dd}{ff}{hh}{jj}{ll}{nn}{A`A`}{AbAb}{AdAd}{AfAf}{AhAh}{AjAj}{AlAl}{AnAn}{B`B`}{BbBb}{BdBd}{BfBf}{BhBh}{BjBj}{BlBl}{BnBn}{C`C`}{CbCb}{CdCd}{CfCf}{ChCh}{CjCj}{ClCl}{CnCn}{D`D`}{DbDb}{DdDd}{DfDf}{DhDh}{DjDj}{DlDl}{DnDn}{E`E`}{EbEb}{EdEd}{EfEf}{EhEh}{EjEj}{ElEl}{EnEn}{F`F`}{FbFb}{FdFd}{FfFf}{FhFh}{FjFj}{FlFl}{FnFn}{G`G`}{GbGb}{GdGd}{GfGf}{GhGh}{GjGj}{GlGl}{GnGn}{H`H`}{HbHb}{HdHd}{HfHf}{HhHh}{HjHj}{HlHl}{HnHn}{I`I`}{IbIb}{IdId}{IfIf}{IhIh}{IjIj}{IlIl}{InIn}{J`J`}{JbJb}{JdJd}{JfJf}{JhJh}{JjJj}{JlJl}{JnJn}{K`K`}{KbKb}{KdKd}{KfKf}{KhKh}{KjKj}{KlKl}{KnKn}{L`L`}{LbLb}{LdLd}{LfLf}{LhLh}{LjLj}{LlLl}{LnLn}{M`M`}{MbMb}{MdMd}{MfMf}{MhMh}{MjMj}{MlMl}{MnMn}{N`N`}{NbNb}{NdNd}{NfNf}{NhNh}{NjNj}{NlNl}{NnNn}{O`O`}{ObOb}{OdOd}{OfOf}{OhOh}{OjOj}{OlOl}{OnOn}{A`A`}{AbAb}{AdAd}{AfAf}{AhAh}{AjAj}{AlAl}{AnAn}{AA`AA`}{AAbAAb}{AAdAAd}{AAfAAf}{AAhAAh}{AAjAAj}{AAlAAl}{AAnAAn}{AB`AB`}{ABbABb}{ABdABd}{ABfABf}{ABhABh}{ABjABj}{ABlABl}{ABnABn}{AC`AC`}{ACbACb}{ACdACd}{ACfACf}{AChACh}{ACjACj}{AClACl}{ACnACn}{AD`AD`}{ADbADb}{ADdADd}{ADfADf}{ADhADh}{ADjADj}{ADlADl}{ADnADn}{AE`AE`}{AEbAEb}{AEdAEd}{AEfAEf}{AEhAEh}{AEjAEj}{AElAEl}{AEnAEn}{AF`AF`}{AFbAFb}{AFdAFd}{AFfAFf}{AFhAFh}{AFjAFj}{AFlAFl}{AFnAFn}{AG`AG`}{AGbAGb}{AGdAGd}{AGfAGf}{AGhAGh}{AGjAGj}{AGlAGl}{AGnAGn}{AH`AH`}{AHbAHb}{AHdAHd}{AHfAHf}{AHhAHh}{AHjAHj}{AHlAHl}{AHnAHn}{AI`AI`}{AIbAIb}{AIdAId}{AIfAIf}{AIhAIh}{AIjAIj}{AIlAIl}{AInAIn}{AJ`AJ`}{AJbAJb}{AJdAJd}{AJfAJf}{AJhAJh}{AJjAJj}{AJlAJl}{AJnAJn}{AK`AK`}{AKbAKb}{AKdAKd}{AKfAKf}{AKhAKh}{AKjAKj}{AKlAKl}{AKnAKn}{AL`AL`}{ALbALb}{ALdALd}{{ce}ALf{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{}ALh}{{}ALj}{{}ALl}``````````````````````````````{{bb}ALn}{{ff}ALn}{{hh}ALn}{{AfAf}ALn}{{AhAh}ALn}{{BfBf}ALn}{{BlBl}ALn}{{BnBn}ALn}{{C`C`}ALn}{{CbCb}ALn}{{CdCd}ALn}{{CfCf}ALn}{{CjCj}ALn}{{ClCl}ALn}{{CnCn}ALn}{{D`D`}ALn}{{DbDb}ALn}{{EfEf}ALn}{{EhEh}ALn}{{EjEj}ALn}{{ElEl}ALn}{{EnEn}ALn}{{F`F`}ALn}{{FbFb}ALn}{{FdFd}ALn}{{FfFf}ALn}{{FhFh}ALn}{{FjFj}ALn}{{FlFl}ALn}{{FnFn}ALn}{{G`G`}ALn}{{GbGb}ALn}{{GdGd}ALn}{{GhGh}ALn}{{GlGl}ALn}{{GnGn}ALn}{{HfHf}ALn}{{HhHh}ALn}{{IbIb}ALn}{{InIn}ALn}{{N`N`}ALn}{{NjNj}ALn}{{NnNn}ALn}{{O`O`}ALn}{{ObOb}ALn}{{OdOd}ALn}{{OfOf}ALn}{{OjOj}ALn}{{OnOn}ALn}{{A`A`}ALn}{{AdAd}ALn}{{AfAf}ALn}{{AhAh}ALn}{{AnAn}ALn}{{AAbAAb}ALn}{{AAfAAf}ALn}{{ABlABl}ALn}{{ABnABn}ALn}{{AC`AC`}ALn}{{ACbACb}ALn}{{ACdACd}ALn}{{ACfACf}ALn}{{AChACh}ALn}{{ACjACj}ALn}{{AClACl}ALn}{{ACnACn}ALn}{{AD`AD`}ALn}{{ADbADb}ALn}{{ADdADd}ALn}{{ADfADf}ALn}{{ADhADh}ALn}{{ADjADj}ALn}{{ADlADl}ALn}{{ADnADn}ALn}{{AE`AE`}ALn}{{AEbAEb}ALn}{{AEdAEd}ALn}{{AEfAEf}ALn}{{AEnAEn}ALn}{{AF`AF`}ALn}{{AFbAFb}ALn}{{AFdAFd}ALn}{{AFfAFf}ALn}{{AFlAFl}ALn}{{AG`AG`}ALn}{{AGbAGb}ALn}{{AGdAGd}ALn}{{AGfAGf}ALn}{{AGhAGh}ALn}{{AGjAGj}ALn}{{AGlAGl}ALn}{{AHdAHd}ALn}{{AHjAHj}ALn}{{AHlAHl}ALn}{{AHnAHn}ALn}{{AIbAIb}ALn}{{AIdAId}ALn}{{AJ`AJ`}ALn}{{AJbAJb}ALn}{{AJdAJd}ALn}{{AJfAJf}ALn}{{AJjAJj}ALn}{{AJlAJl}ALn}{{AJnAJn}ALn}{{AK`AK`}ALn}{{AKbAKb}ALn}{{AKdAKd}ALn}{{AKfAKf}ALn}{{AKhAKh}ALn}{{AKjAKj}ALn}{{AKlAKl}ALn}{{AKnAKn}ALn}{{AL`AL`}ALn}{{ALbALb}ALn}{{ALdALd}ALn}```````````````````````````````{{bAM`}AMb}{{dAM`}AMb}{{fAM`}AMb}{{hAM`}AMb}{{jAM`}AMb}{{lAM`}AMb}{{nAM`}AMb}{{A`AM`}AMb}{{AbAM`}AMb}{{AdAM`}AMb}{{AfAM`}AMb}{{AhAM`}AMb}{{AjAM`}AMb}{{AlAM`}AMb}{{AnAM`}AMb}{{B`AM`}AMb}{{BbAM`}AMb}{{BdAM`}AMb}{{BfAM`}AMb}{{BhAM`}AMb}{{BjAM`}AMb}{{BlAM`}AMb}{{BnAM`}AMb}{{C`AM`}AMb}{{CbAM`}AMb}{{CdAM`}AMb}{{CfAM`}AMb}{{ChAM`}AMb}{{CjAM`}AMb}{{ClAM`}AMb}{{CnAM`}AMb}{{D`AM`}AMb}{{DbAM`}AMb}{{DhAM`}AMb}{{DjAM`}AMb}{{DlAM`}AMb}{{DnAM`}AMb}{{E`AM`}AMb}{{EbAM`}AMb}{{EdAM`}AMb}{{EfAM`}AMb}{{EhAM`}AMb}{{EjAM`}AMb}{{ElAM`}AMb}{{EnAM`}AMb}{{F`AM`}AMb}{{FbAM`}AMb}{{FdAM`}AMb}{{FfAM`}AMb}{{FhAM`}AMb}{{FjAM`}AMb}{{FlAM`}AMb}{{FnAM`}AMb}{{G`AM`}AMb}{{GbAM`}AMb}{{GdAM`}AMb}{{GfAM`}AMb}{{GhAM`}AMb}{{GjAM`}AMb}{{GlAM`}AMb}{{GnAM`}AMb}{{H`AM`}AMb}{{HbAM`}AMb}{{HdAM`}AMb}{{HfAM`}AMb}{{HhAM`}AMb}{{HjAM`}AMb}{{HlAM`}AMb}{{HnAM`}AMb}{{I`AM`}AMb}{{IbAM`}AMb}{{IhAM`}AMb}{{IjAM`}AMb}{{IlAM`}AMb}{{InAM`}AMb}{{JdAM`}AMb}{{JjAM`}AMb}{{JnAM`}AMb}{{KdAM`}AMb}{{KhAM`}AMb}{{KnAM`}AMb}{{LbAM`}AMb}{{LhAM`}AMb}{{LlAM`}AMb}{{LnAM`}AMb}{{M`AM`}AMb}{{MbAM`}AMb}{{MdAM`}AMb}{{MfAM`}AMb}{{MhAM`}AMb}{{MjAM`}AMb}{{MlAM`}AMb}{{MnAM`}AMb}{{N`AM`}AMb}{{NbAM`}AMb}{{NdAM`}AMb}{{NfAM`}AMb}{{NhAM`}AMb}{{NjAM`}AMb}{{NlAM`}AMb}{{NnAM`}AMb}{{O`AM`}AMb}{{ObAM`}AMb}{{OdAM`}AMb}{{OfAM`}AMb}{{OjAM`}AMb}{{OnAM`}AMb}{{A`AM`}AMb}{{AbAM`}AMb}{{AdAM`}AMb}{{AfAM`}AMb}{{AhAM`}AMb}{{AjAM`}AMb}{{AlAM`}AMb}{{AnAM`}AMb}{{AA`AM`}AMb}{{AAbAM`}AMb}{{AAdAM`}AMb}{{AAfAM`}AMb}{{AAhAM`}AMb}{{AAjAM`}AMb}{{AAlAM`}AMb}{{AAnAM`}AMb}{{AB`AM`}AMb}{{ABbAM`}AMb}{{ABdAM`}AMb}{{ABfAM`}AMb}{{ABhAM`}AMb}{{ABjAM`}AMb}{{ABlAM`}AMb}{{ABnAM`}AMb}{{AC`AM`}AMb}{{ACbAM`}AMb}{{ACdAM`}AMb}{{ACfAM`}AMb}{{AChAM`}AMb}{{ACjAM`}AMb}{{AClAM`}AMb}{{ACnAM`}AMb}{{AD`AM`}AMb}{{ADbAM`}AMb}{{ADdAM`}AMb}{{ADfAM`}AMb}{{ADhAM`}AMb}{{ADjAM`}AMb}{{ADlAM`}AMb}{{ADnAM`}AMb}{{AE`AM`}AMb}{{AEbAM`}AMb}{{AEdAM`}AMb}{{AEfAM`}AMb}{{AEhAM`}AMb}{{AEjAM`}AMb}{{AElAM`}AMb}{{AEnAM`}AMb}{{AF`AM`}AMb}{{AFbAM`}AMb}{{AFdAM`}AMb}{{AFfAM`}AMb}{{AFlAM`}AMb}{{AFnAM`}AMb}{{AG`AM`}AMb}{{AGbAM`}AMb}{{AGdAM`}AMb}{{AGfAM`}AMb}{{AGhAM`}AMb}{{AGjAM`}AMb}{{AGlAM`}AMb}{{AGnAM`}AMb}{{AH`AM`}AMb}{{AHbAM`}AMb}{{AHdAM`}AMb}{{AHfAM`}AMb}{{AHhAM`}AMb}{{AHjAM`}AMb}{{AHlAM`}AMb}{{AHnAM`}AMb}{{AI`AM`}AMb}{{AIbAM`}AMb}{{AIdAM`}AMb}{{AIfAM`}AMb}{{AIhAM`}AMb}{{AIjAM`}AMb}{{AIlAM`}AMb}{{AInAM`}AMb}{{AJ`AM`}AMb}{{AJbAM`}AMb}{{AJdAM`}AMb}{{AJfAM`}AMb}{{AJhAM`}AMb}{{AJjAM`}AMb}{{AJlAM`}AMb}{{AJnAM`}AMb}{{AK`AM`}AMb}{{AKbAM`}AMb}{{AKdAM`}AMb}{{AKfAM`}AMb}{{AKhAM`}AMb}{{AKjAM`}AMb}{{AKlAM`}AMb}{{AKnAM`}AMb}{{AL`AM`}AMb}{{ALbAM`}AMb}{{ALdAM`}AMb}```{cc{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````````````{{bc}ALfAMd}{{fc}ALfAMd}{{hc}ALfAMd}{{Afc}ALfAMd}{{Ahc}ALfAMd}{{Bfc}ALfAMd}{{Blc}ALfAMd}{{Bnc}ALfAMd}{{C`c}ALfAMd}{{Cbc}ALfAMd}{{Cdc}ALfAMd}{{Cfc}ALfAMd}{{Cjc}ALfAMd}{{Clc}ALfAMd}{{Cnc}ALfAMd}{{D`c}ALfAMd}{{Dbc}ALfAMd}{{Efc}ALfAMd}{{Ehc}ALfAMd}{{Ejc}ALfAMd}{{Elc}ALfAMd}{{Enc}ALfAMd}{{F`c}ALfAMd}{{Fbc}ALfAMd}{{Fdc}ALfAMd}{{Ffc}ALfAMd}{{Fhc}ALfAMd}{{Fjc}ALfAMd}{{Flc}ALfAMd}{{Fnc}ALfAMd}{{G`c}ALfAMd}{{Gbc}ALfAMd}{{Gdc}ALfAMd}{{Ghc}ALfAMd}{{Glc}ALfAMd}{{Gnc}ALfAMd}{{Hfc}ALfAMd}{{Hhc}ALfAMd}{{Ibc}ALfAMd}{{Inc}ALfAMd}{{N`c}ALfAMd}{{Njc}ALfAMd}{{Nnc}ALfAMd}{{O`c}ALfAMd}{{Obc}ALfAMd}{{Odc}ALfAMd}{{Ofc}ALfAMd}{{Ojc}ALfAMd}{{Onc}ALfAMd}{{A`c}ALfAMd}{{Adc}ALfAMd}{{Afc}ALfAMd}{{Ahc}ALfAMd}{{Anc}ALfAMd}{{AAbc}ALfAMd}{{AAfc}ALfAMd}{{ABlc}ALfAMd}{{ABnc}ALfAMd}{{AC`c}ALfAMd}{{ACbc}ALfAMd}{{ACdc}ALfAMd}{{ACfc}ALfAMd}{{AChc}ALfAMd}{{ACjc}ALfAMd}{{AClc}ALfAMd}{{ACnc}ALfAMd}{{AD`c}ALfAMd}{{ADbc}ALfAMd}{{ADdc}ALfAMd}{{ADfc}ALfAMd}{{ADhc}ALfAMd}{{ADjc}ALfAMd}{{ADlc}ALfAMd}{{ADnc}ALfAMd}{{AE`c}ALfAMd}{{AEbc}ALfAMd}{{AEdc}ALfAMd}{{AEfc}ALfAMd}{{AEnc}ALfAMd}{{AF`c}ALfAMd}{{AFbc}ALfAMd}{{AFdc}ALfAMd}{{AFfc}ALfAMd}{{AFlc}ALfAMd}{{AG`c}ALfAMd}{{AGbc}ALfAMd}{{AGdc}ALfAMd}{{AGfc}ALfAMd}{{AGhc}ALfAMd}{{AGjc}ALfAMd}{{AGlc}ALfAMd}{{AHdc}ALfAMd}{{AHjc}ALfAMd}{{AHlc}ALfAMd}{{AHnc}ALfAMd}{{AIbc}ALfAMd}{{AIdc}ALfAMd}{{AJ`c}ALfAMd}{{AJbc}ALfAMd}{{AJdc}ALfAMd}{{AJfc}ALfAMd}{{AJjc}ALfAMd}{{AJlc}ALfAMd}{{AJnc}ALfAMd}{{AK`c}ALfAMd}{{AKbc}ALfAMd}{{AKdc}ALfAMd}{{AKfc}ALfAMd}{{AKhc}ALfAMd}{{AKjc}ALfAMd}{{AKlc}ALfAMd}{{AKnc}ALfAMd}{{AL`c}ALfAMd}{{ALbc}ALfAMd}{{ALdc}ALfAMd}```````````{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000``{c{{AMf{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{cAMh{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`````````````````````````````","c":[],"p":[[6,"cudaRoundMode",0],[5,"dim3",0],[6,"cudaError",0],[6,"cudaChannelFormatKind",0],[5,"cudaChannelFormatDesc",0],[5,"cudaArray",0],[5,"cudaMipmappedArray",0],[5,"cudaArraySparseProperties",0],[5,"cudaArraySparseProperties__bindgen_ty_1",0],[5,"cudaArrayMemoryRequirements",0],[6,"cudaMemoryType",0],[6,"cudaMemcpyKind",0],[5,"cudaPitchedPtr",0],[5,"cudaExtent",0],[5,"cudaPos",0],[5,"cudaMemcpy3DParms",0],[5,"cudaMemcpy3DPeerParms",0],[5,"cudaMemsetParams",0],[6,"cudaAccessProperty",0],[5,"cudaAccessPolicyWindow",0],[5,"cudaHostNodeParams",0],[6,"cudaStreamCaptureStatus",0],[6,"cudaStreamCaptureMode",0],[6,"cudaSynchronizationPolicy",0],[6,"cudaStreamUpdateCaptureDependenciesFlags",0],[6,"cudaUserObjectFlags",0],[6,"cudaUserObjectRetainFlags",0],[5,"cudaGraphicsResource",0],[6,"cudaGraphicsRegisterFlags",0],[6,"cudaGraphicsMapFlags",0],[6,"cudaGraphicsCubeFace",0],[6,"cudaResourceType",0],[6,"cudaResourceViewFormat",0],[5,"cudaResourceDesc",0],[20,"cudaResourceDesc__bindgen_ty_1",0],[5,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1",0],[5,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2",0],[5,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3",0],[5,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4",0],[5,"cudaResourceViewDesc",0],[5,"cudaPointerAttributes",0],[5,"cudaFuncAttributes",0],[6,"cudaFuncAttribute",0],[6,"cudaFuncCache",0],[6,"cudaSharedMemConfig",0],[6,"cudaSharedCarveout",0],[6,"cudaComputeMode",0],[6,"cudaLimit",0],[6,"cudaMemoryAdvise",0],[6,"cudaMemRangeAttribute",0],[6,"cudaOutputMode",0],[6,"cudaFlushGPUDirectRDMAWritesOptions",0],[6,"cudaGPUDirectRDMAWritesOrdering",0],[6,"cudaFlushGPUDirectRDMAWritesScope",0],[6,"cudaFlushGPUDirectRDMAWritesTarget",0],[6,"cudaDeviceAttr",0],[6,"cudaMemPoolAttr",0],[6,"cudaMemLocationType",0],[5,"cudaMemLocation",0],[6,"cudaMemAccessFlags",0],[5,"cudaMemAccessDesc",0],[6,"cudaMemAllocationType",0],[6,"cudaMemAllocationHandleType",0],[5,"cudaMemPoolProps",0],[5,"cudaMemPoolPtrExportData",0],[5,"cudaMemAllocNodeParams",0],[6,"cudaGraphMemAttributeType",0],[6,"cudaDeviceP2PAttr",0],[5,"CUuuid_st",0],[5,"cudaDeviceProp",0],[5,"cudaIpcEventHandle_st",0],[5,"cudaIpcMemHandle_st",0],[6,"cudaExternalMemoryHandleType",0],[5,"cudaExternalMemoryHandleDesc",0],[20,"cudaExternalMemoryHandleDesc__bindgen_ty_1",0],[5,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1",0],[5,"cudaExternalMemoryBufferDesc",0],[5,"cudaExternalMemoryMipmappedArrayDesc",0],[6,"cudaExternalSemaphoreHandleType",0],[5,"cudaExternalSemaphoreHandleDesc",0],[20,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1",0],[5,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1",0],[5,"cudaExternalSemaphoreSignalParams_v1",0],[5,"cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1",0],[5,"cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_1",0],[20,"cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_2",0],[5,"cudaExternalSemaphoreSignalParams_v1__bindgen_ty_1__bindgen_ty_3",0],[5,"cudaExternalSemaphoreWaitParams_v1",0],[5,"cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1",0],[5,"cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_1",0],[20,"cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_2",0],[5,"cudaExternalSemaphoreWaitParams_v1__bindgen_ty_1__bindgen_ty_3",0],[5,"cudaExternalSemaphoreSignalParams",0],[5,"cudaExternalSemaphoreSignalParams__bindgen_ty_1",0],[5,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1",0],[20,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2",0],[5,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3",0],[5,"cudaExternalSemaphoreWaitParams",0],[5,"cudaExternalSemaphoreWaitParams__bindgen_ty_1",0],[5,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1",0],[20,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2",0],[5,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3",0],[5,"CUstream_st",0],[5,"CUevent_st",0],[5,"CUexternalMemory_st",0],[5,"CUexternalSemaphore_st",0],[5,"CUgraph_st",0],[5,"CUgraphNode_st",0],[5,"CUuserObject_st",0],[5,"CUfunc_st",0],[5,"CUmemPoolHandle_st",0],[6,"cudaCGScope",0],[5,"cudaLaunchParams",0],[5,"cudaKernelNodeParams",0],[5,"cudaExternalSemaphoreSignalNodeParams",0],[5,"cudaExternalSemaphoreWaitNodeParams",0],[6,"cudaGraphNodeType",0],[5,"CUgraphExec_st",0],[6,"cudaGraphExecUpdateResult",0],[6,"cudaGetDriverEntryPointFlags",0],[6,"cudaGraphDebugDotFlags",0],[6,"cudaGraphInstantiateFlags",0],[6,"cudaStreamAttrID",0],[20,"cudaStreamAttrValue",0],[6,"cudaKernelNodeAttrID",0],[20,"cudaKernelNodeAttrValue",0],[6,"cudaSurfaceBoundaryMode",0],[6,"cudaSurfaceFormatMode",0],[5,"surfaceReference",0],[6,"cudaTextureAddressMode",0],[6,"cudaTextureFilterMode",0],[6,"cudaTextureReadMode",0],[5,"textureReference",0],[5,"cudaTextureDesc",0],[6,"cudaDataType_t",0],[5,"cudnnContext",0],[6,"cudnnStatus_t",0],[5,"cudnnRuntimeTag_t",0],[6,"cudnnErrQueryMode_t",0],[5,"cudnnTensorStruct",0],[5,"cudnnPoolingStruct",0],[5,"cudnnFilterStruct",0],[5,"cudnnLRNStruct",0],[5,"cudnnActivationStruct",0],[5,"cudnnSpatialTransformerStruct",0],[5,"cudnnOpTensorStruct",0],[5,"cudnnReduceTensorStruct",0],[5,"cudnnCTCLossStruct",0],[5,"cudnnTensorTransformStruct",0],[6,"cudnnDataType_t",0],[6,"cudnnMathType_t",0],[6,"cudnnNanPropagation_t",0],[6,"cudnnDeterminism_t",0],[6,"cudnnTensorFormat_t",0],[6,"cudnnFoldingDirection_t",0],[6,"cudnnOpTensorOp_t",0],[6,"cudnnReduceTensorOp_t",0],[6,"cudnnReduceTensorIndices_t",0],[6,"cudnnIndicesType_t",0],[6,"cudnnSoftmaxAlgorithm_t",0],[6,"cudnnSoftmaxMode_t",0],[6,"cudnnPoolingMode_t",0],[6,"cudnnActivationMode_t",0],[6,"cudnnLRNMode_t",0],[6,"cudnnDivNormMode_t",0],[6,"cudnnBatchNormMode_t",0],[6,"cudnnBatchNormOps_t",0],[6,"cudnnNormMode_t",0],[6,"cudnnNormAlgo_t",0],[6,"cudnnNormOps_t",0],[6,"cudnnSamplerType_t",0],[5,"cudnnDropoutStruct",0],[5,"cudnnAlgorithmStruct",0],[5,"cudnnAlgorithmPerformanceStruct",0],[6,"cudnnConvolutionFwdAlgo_t",0],[6,"cudnnConvolutionBwdFilterAlgo_t",0],[6,"cudnnConvolutionBwdDataAlgo_t",0],[6,"cudnnRNNAlgo_t",0],[6,"cudnnCTCLossAlgo_t",0],[5,"cudnnAlgorithmUnionStruct",0],[20,"cudnnAlgorithmUnionStruct_Algorithm",0],[6,"cudnnSeverity_t",0],[5,"cudnnDebugStruct",0],[6,"cudnnForwardMode_t",0],[6,"cudnnRNNMode_t",0],[6,"cudnnRNNBiasMode_t",0],[6,"cudnnDirectionMode_t",0],[6,"cudnnRNNInputMode_t",0],[6,"cudnnRNNClipMode_t",0],[6,"cudnnRNNDataLayout_t",0],[5,"cudnnRNNStruct",0],[5,"cudnnPersistentRNNPlan",0],[5,"cudnnRNNDataStruct",0],[6,"cudnnSeqDataAxis_t",0],[5,"cudnnSeqDataStruct",0],[5,"cudnnAttnStruct",0],[6,"cudnnMultiHeadAttnWeightKind_t",0],[6,"cudnnWgradMode_t",0],[6,"cudnnLossNormalizationMode_t",0],[5,"cudnnConvolutionStruct",0],[6,"cudnnConvolutionMode_t",0],[6,"cudnnReorderType_t",0],[5,"cudnnConvolutionFwdAlgoPerfStruct",0],[5,"cudnnConvolutionBwdDataAlgoPerfStruct",0],[5,"cudnnFusedOpsConstParamStruct",0],[5,"cudnnFusedOpsVariantParamStruct",0],[5,"cudnnFusedOpsPlanStruct",0],[6,"cudnnFusedOps_t",0],[6,"cudnnFusedOpsConstParamLabel_t",0],[6,"cudnnFusedOpsPointerPlaceHolder_t",0],[6,"cudnnFusedOpsVariantParamLabel_t",0],[5,"cudnnConvolutionBwdFilterAlgoPerfStruct",0],[6,"cudnnPointwiseMode_t",0],[6,"cudnnResampleMode_t",0],[6,"cudnnGenStatsMode_t",0],[6,"cudnnBnFinalizeStatsMode_t",0],[6,"cudnnBackendAttributeName_t",0],[6,"cudnnBackendAttributeType_t",0],[6,"cudnnBackendDescriptorType_t",0],[6,"cudnnBackendNumericalNote_t",0],[6,"cudnnBackendBehaviorNote_t",0],[6,"cudnnBackendKnobType_t",0],[6,"cudnnBackendLayoutType_t",0],[6,"cudnnBackendHeurMode_t",0],[6,"cudnnBackendTensorReordering_t",0],[6,"cudnnPaddingMode_t",0],[1,"unit"],[8,"cudnnConvolutionFwdAlgoPerf_t",0],[8,"cudnnConvolutionBwdDataAlgoPerf_t",0],[8,"cudnnConvolutionBwdFilterAlgoPerf_t",0],[1,"bool"],[5,"Formatter",5203],[8,"Result",5203],[10,"Hasher",5204],[6,"Result",5205],[5,"TypeId",5206],[8,"cudaHostFn_t",0],[8,"cudaStreamCallback_t",0],[8,"cudnnCallback_t",0],[8,"cudnnAlgorithm_t",0],[8,"CUuuid",0],[8,"cudaUUID_t",0],[8,"cudnnDebug_t",0],[8,"cudaIpcEventHandle_t",0],[8,"cudaIpcMemHandle_t",0]],"b":[]}],\
["rust_blas",{"doc":"BLAS bindings and wrappers.","t":"EEECCQCCCCPPGPPPPGPPGGPGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMMMPPGEPPGCNNNNNNNNNCCCNNNNNNNNNCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNKKNMMMNMNCNNNNCNMMMCCCCHHHHHHHHHEEEEEEEEEHHHHHHEEEEEEHHHHHHEEEEEEHHHHHHHHHEEEEEEEEEKKKKKKKKKMMMMMMMMMCCCCCCHHHHHHHHHHHHHHHHHHEEEEEEEEEEEEEEEEEEHHHHHHHHHHHHHHHHEEEEEEEEEEEEEEEEHHHHHHHHHHHHHHHHEEEEEEEEEEEEEEEEHHHHHHHHHHHHHHHHHHEEEEEEEEEEEEEEEEEEKKKKKKKKKKKKKKKKKKKKKKMMMNMMMMMMMMMMMMMMMMMMKKNNMMNNNNNMCNNNNCNNCCCCCEHHHHHHHEEEEEEEEHHHHHHHHHHHHHHEEEEEEEEEEEEEHHHHEEEEEEHHHHHHHHHHHHHHEEEEEEEEEEEEHHHHHHHEEEEEEKKKKKKKKKKMMMMMMNMMMMMM","n":["Matrix","Vector","VectorOperations","attribute","default","mat","math","matrix","matrix_vector","vector","ColMajor","ConjTrans","Diagonal","Left","Lower","NoTrans","NonUnit","Order","Right","RowMajor","Side","Symmetry","Trans","Transpose","Unit","Upper","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","from","from","from","from","from","into","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Default","neg_one","one","zero","H","H","Marker","Mat","T","T","Trans","bandmat","borrow","borrow","borrow_mut","borrow_mut","deref","from","from","into","into","mat","matrix","matrix_vector","mul","mul","mul","try_from","try_from","try_into","try_into","type_id","type_id","vector","BandMat","as_matrix","as_mut_ptr","as_ptr","borrow","borrow_mut","cols","cols","eq","fill","fmt","fmt","from","from","from_matrix","index","into","lead_dim","new","push","rows","rows","set_cols","set_rows","set_sub_diagonals","set_sup_diagonals","sub_diagonals","sup_diagonals","to_matrix","to_string","try_from","try_into","type_id","Mat","as_mut_ptr","as_ptr","borrow","borrow_mut","cols","cols","eq","fill","fmt","fmt","from","from","index","into","new","new_from_data","push","rows","rows","set_cols","set_rows","to_string","try_from","try_into","type_id","BandMatrix","Matrix","add","as_matrix","as_mut_ptr","as_ptr","bitxor","cols","lead_dim","ll","mul","mul","mul","mul","ops","order","rows","sub_diagonals","sup_diagonals","cblas_c","cblas_d","cblas_s","cblas_z","cblas_cgemm","cblas_chemm","cblas_cher2k","cblas_cherk","cblas_csymm","cblas_csyr2k","cblas_csyrk","cblas_ctrmm","cblas_ctrsm","gemm","hemm","her2k","herk","symm","syr2k","syrk","trmm","trsm","cblas_dgemm","cblas_dsymm","cblas_dsyr2k","cblas_dsyrk","cblas_dtrmm","cblas_dtrsm","gemm","strsm","symm","syr2k","syrk","trmm","cblas_sgemm","cblas_ssymm","cblas_ssyr2k","cblas_ssyrk","cblas_strmm","cblas_strsm","gemm","strsm","symm","syr2k","syrk","trmm","cblas_zgemm","cblas_zhemm","cblas_zher2k","cblas_zherk","cblas_zsymm","cblas_zsyr2k","cblas_zsyrk","cblas_ztrmm","cblas_ztrsm","gemm","hemm","her2k","herk","symm","syr2k","syrk","trmm","trsm","Gemm","Hemm","Her2k","Herk","Symm","Syr2k","Syrk","Trmm","Trsm","gemm","hemm","her2k","herk","symm","syr2k","syrk","trmm","trsm","ll","ops","cblas_c","cblas_d","cblas_s","cblas_z","cblas_cgbmv","cblas_cgemv","cblas_cgerc","cblas_cgeru","cblas_chbmv","cblas_chemv","cblas_cher","cblas_cher2","cblas_chpmv","cblas_chpr","cblas_chpr2","cblas_csymv","cblas_ctbmv","cblas_ctbsv","cblas_ctpmv","cblas_ctpsv","cblas_ctrmv","cblas_ctrsv","gbmv","gemv","gerc","geru","hbmv","hemv","her","her2","hpmv","hpr","hpr2","symv","tbmv","tbsv","tpmv","tpsv","trmv","trsv","cblas_dgbmv","cblas_dgemv","cblas_dger","cblas_dsbmv","cblas_dspmv","cblas_dspr","cblas_dspr2","cblas_dsymv","cblas_dsyr","cblas_dsyr2","cblas_dtbmv","cblas_dtbsv","cblas_dtpmv","cblas_dtpsv","cblas_dtrmv","cblas_dtrsv","gbmv","gemv","ger","sbmv","spmv","spr","spr2","symv","syr","syr2","tbmv","tbsv","tpmv","tpsv","trmv","trsv","cblas_sgbmv","cblas_sgemv","cblas_sger","cblas_ssbmv","cblas_sspmv","cblas_sspr","cblas_sspr2","cblas_ssymv","cblas_ssyr","cblas_ssyr2","cblas_stbmv","cblas_stbsv","cblas_stpmv","cblas_stpsv","cblas_strmv","cblas_strsv","gbmv","gemv","ger","sbmv","spmv","spr","spr2","symv","syr","syr2","tbmv","tbsv","tpmv","tpsv","trmv","trsv","cblas_zgbmv","cblas_zgemv","cblas_zgerc","cblas_zgeru","cblas_zhbmv","cblas_zhemv","cblas_zher","cblas_zher2","cblas_zhpmv","cblas_zhpr","cblas_zhpr2","cblas_zsymv","cblas_ztbmv","cblas_ztbsv","cblas_ztpmv","cblas_ztpsv","cblas_ztrmv","cblas_ztrsv","gbmv","gemv","gerc","geru","hbmv","hemv","her","her2","hpmv","hpr","hpr2","symv","tbmv","tbsv","tpmv","tpsv","trmv","trsv","Gbmv","Gemv","Ger","Gerc","Hbmv","Hemv","Her","Her2","Hpmv","Hpr","Hpr2","Sbmv","Spmv","Spr","Spr2","Symv","Syr","Syr2","Tbmv","Tbsv","Tpmv","Tpsv","gbmv","gemv","ger","gerc","hbmv","hemv","her","her2","hpmv","hpr","hpr2","sbmv","spmv","spr","spr2","symv","syr","syr2","tbmv","tbsv","tpmv","tpsv","Vector","VectorOperations","abs_sum","add","as_mut_ptr","as_ptr","bitxor","dot","inc","into","is_empty","len","ll","max_index","mul","mul","norm","ops","scale","update","cblas_c","cblas_d","cblas_i","cblas_s","cblas_z","axpy","cblas_caxpy","cblas_ccopy","cblas_cdotc_sub","cblas_cdotu_sub","cblas_cscal","cblas_csscal","cblas_cswap","copy","dotc_sub","dotu_sub","scal","sscal","swap","asum","axpy","cblas_dasum","cblas_daxpy","cblas_dcopy","cblas_ddot","cblas_dnrm2","cblas_drot","cblas_drotg","cblas_drotm","cblas_drotmg","cblas_dscal","cblas_dsdot","cblas_dswap","cblas_dzasum","cblas_dznrm2","copy","dot","dsdot","nrm2","rot","rotg","rotm","rotmg","scal","swap","zasum","znrm2","camax","cblas_icamax","cblas_idamax","cblas_isamax","cblas_izamax","damax","samax","zamax","asum","axpy","casum","cblas_sasum","cblas_saxpy","cblas_scasum","cblas_scnrm2","cblas_scopy","cblas_sdot","cblas_sdsdot","cblas_snrm2","cblas_srot","cblas_srotg","cblas_srotm","cblas_srotmg","cblas_sscal","cblas_sswap","cnrm2","copy","dot","dsdot","nrm2","rot","rotg","rotm","rotmg","scal","swap","axpy","cblas_zaxpy","cblas_zcopy","cblas_zdotc_sub","cblas_zdotu_sub","cblas_zdscal","cblas_zscal","cblas_zswap","copy","dotc_sub","dotu_sub","dscal","scal","swap","Asum","Axpy","Copy","Dot","Dotc","Iamax","Nrm2","Rot","Scal","Swap","asum","axpy","axpy_mat","copy","copy_mat","dot","dotc","iamax","nrm2","rot","scal","scal_mat","swap"],"q":[[0,"rust_blas"],[10,"rust_blas::attribute"],[76,"rust_blas::default"],[80,"rust_blas::math"],[110,"rust_blas::math::bandmat"],[143,"rust_blas::math::mat"],[169,"rust_blas::matrix"],[188,"rust_blas::matrix::ll"],[192,"rust_blas::matrix::ll::cblas_c"],[210,"rust_blas::matrix::ll::cblas_d"],[222,"rust_blas::matrix::ll::cblas_s"],[234,"rust_blas::matrix::ll::cblas_z"],[252,"rust_blas::matrix::ops"],[270,"rust_blas::matrix_vector"],[272,"rust_blas::matrix_vector::ll"],[276,"rust_blas::matrix_vector::ll::cblas_c"],[312,"rust_blas::matrix_vector::ll::cblas_d"],[344,"rust_blas::matrix_vector::ll::cblas_s"],[376,"rust_blas::matrix_vector::ll::cblas_z"],[412,"rust_blas::matrix_vector::ops"],[456,"rust_blas::vector"],[476,"rust_blas::vector::ll"],[481,"rust_blas::vector::ll::cblas_c"],[495,"rust_blas::vector::ll::cblas_d"],[523,"rust_blas::vector::ll::cblas_i"],[531,"rust_blas::vector::ll::cblas_s"],[559,"rust_blas::vector::ll::cblas_z"],[573,"rust_blas::vector::ops"],[596,"core::result"],[597,"core::any"],[598,"core::marker"],[599,"core::cmp"],[600,"core::clone"],[601,"core::fmt"],[602,"core::fmt"],[603,"alloc::string"],[604,"alloc::vec"],[605,"num_complex"]],"d":["","","","Various attributes of vectors and matrices.","","","","Matrix operations.","Matrix-vector operations.","Vector operations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Banded Matrix A banded matrix is a matrix where only the …","","","","","","","","","","","","Returns the argument unchanged.","","Converts a <code>Mat</code> into a <code>BandMat</code>.","","Calls <code>U::from(self)</code>.","","","","","","Set Columns Manually","Set Rows Manually","","","","","Converts a <code>BandMat</code> back into a <code>Mat</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Push a single value to matrix data backing","","","Set Matrix Columns Manually","Set Matrix Rows Manually","","","","","","Methods that allow a type to be used in BLAS functions as …","","","An unsafe pointer to a contiguous block of memory.","An unsafe pointer to a contiguous block of memory.","","Returns the number of columns.","The leading dimension of the matrix. Defaults to <code>cols</code> for …","Bindings for matrix functions.","","","","","Wrappers for matrix functions.","The order of the matrix. Defaults to <code>RowMajor</code>.","Returns the number of rows.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bindings for matrix-vector functions.","Wrappers for matrix-vector functions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","General band matrix multiply with vector.","General multiply with vector","General rank-1 update","General rank-1 update (using hermitian conjugate)","Hermitian band matrix multiply with vector","Hermitian multiply with vector","Hermitian rank-1 update","Hermitian rank-2 update","Hermitian packed matrix multiply with vector","Hermitian packed matrix rank-1 update","Hermitian packed matrix rank-2 update","Symmetric band matrix multiply with vector","Symmetric packed matrix multiply with vector","Symmetric packed matrix rank-1 update","Symmetric packed matrix rank-2 update","Symmetric multiply with vector","Symmetric rank-1 update","Symmetric rank-2 update","Triangular band matrix multiply with vector","Solve triangular band matrix system","Triangular packed matrix multiply with vector","Solve triangular packed matrix system","","","","","","","","","","","","","","","","","","","","","","","Methods that allow a type to be used in BLAS functions as …","","","","An unsafe mutable pointer to a contiguous block of memory.","An unsafe pointer to a contiguous block of memory.","","","The stride within the vector. For example, if <code>inc</code> returns …","","Check if Vector is empty","The number of elements in the vector.","Bindings for vector functions.","","","","","Wrappers for vector functions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the sum of the absolute values of elements in a …","Computes <code>a * x + y</code> and stores the result in <code>y</code>.","","Computes <code>x^T * y</code>.","Computes <code>x^H * y</code>.","Finds the index of the element with maximum absolute value …","Computes the L2 norm (Euclidian length) of a vector.","Applies a Givens rotation matrix to a pair of vectors, …","Computes <code>a * x</code> and stores the result in <code>x</code>.","Swaps the content of <code>x</code> and <code>y</code>.","","","","Copies <code>src.len()</code> elements of <code>src</code> into <code>dst</code>.","Copies the entire matrix <code>dst</code> into <code>src</code>.","","","","","","","","If they are different lengths, the shorter length is used."],"i":[0,0,0,0,0,0,0,0,0,0,1,2,0,5,3,2,4,0,5,1,0,0,2,0,4,3,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,0,9,9,9,10,36,0,0,10,36,0,0,10,36,10,36,10,10,36,10,36,0,0,0,10,10,10,10,36,10,36,10,36,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,11,29,11,11,11,11,11,0,11,11,11,11,0,11,11,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,39,40,42,43,44,45,46,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,37,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,0,0,69,14,14,14,14,69,14,14,14,14,0,69,14,14,69,0,69,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,35,35,16,16,17,18,72,70,73,38,38,74],"f":"``````````````````````````{ce{}{}}000000000{bb}{dd}{ff}{hh}{jj}{{ce}l{}{}}0000{cc{}}00007777777777{c{{n{e}}}{}{}}000000000{cA`{}}0000`{{}Ab}00````````::::{{{Ad{c}}}c{}}44;;```{{{Ad{Af}}Af}{{Ah{c}}}{AbAj}}{{{Ad{Af}}{Ad{Af}}}{{Ah{c}}}{AbAj}}{{{Ad{Al}}Al}c{AnB`BbBd}}666655``{{{Bf{c}}}Af{}}{{{Bf{c}}}{}{}}0{ce{}{}}0{{{Bf{c}}}Bh{}}{{{Bf{c}}}Bj{}}{{{Bf{c}}{Bf{c}}}BlBn}{{cBhBh}{{Bf{c}}}C`}{{{Bf{c}}Cb}CdCf}{{{Bf{c}}Cb}CdCh}{cc{}}{Cj{{Bf{c}}}B`}{{{Ah{c}}BjBj}{{Bf{c}}}Cl}{{{Bf{c}}Bh}{{Cn{c}}}{}}:8{{BhBhBjBj}{{Bf{c}}}{}}{{{Bf{c}}c}l{}}:;{{{Bf{c}}Bh}l{}}0{{{Bf{c}}Bj}l{}}0<<{{{Bf{c}}}{{Ah{c}}}{ClD`}}{cDb{}}{c{{n{e}}}{}{}}0{cA`{}}`{{{Ah{c}}}{}{}}0{ce{}{}}0{{{Ah{c}}}Bh{}}{{{Ah{c}}}Bj{}}{{{Ah{c}}{Ah{c}}}BlBn}{{cBhBh}{{Ah{c}}}C`}{{{Ah{c}}Cb}CdCf}{{{Ah{c}}Cb}CdCh}{Af{{Ah{c}}}B`}{cc{}}{{{Ah{c}}Bh}{{Cn{c}}}{}}9{{BhBh}{{Ah{c}}}{}}{{BhBh{Dd{c}}}{{Ah{c}}}{}}{{{Ah{c}}c}l{}};:{{{Ah{c}}Bh}l{}}0{cDb{}}{c{{n{e}}}{}{}}0{cA`{}}``{{AfAf}{{Ah{c}}}{DfB`Ab}}{CjAf}{Af}0{{AfDh}{{Ad{Af}}}}{AfBj}0`{{AfAf}{{Ah{c}}}{AbAj}}{{AfAl}{{Dd{c}}}{AbClDj}}{{Af{Ad{Af}}}{{Ah{c}}}{AbAj}}{{Afc}{{Ah{c}}}{AnB`Dl}}`{Afb}5{CjBj}0`````````````````````````````````````````````````````````````````````````{{AjdAfdAfAjAf}l}{{jfDnAfAfDnAf}l}{{fd{Eb{E`}}AfAfE`Af}l}{{fdEdAfEdAf}l}{{jfEfAfAfEfAf}l}{{fdEhAfAfEhAf}l}{{fdEjAfEjAf}l}{{jfdhElAfAf}l}{{jfdhEnAfAf}l}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{dF`CjcF`e}l{An{Al{F`}}}{An{Al{F`}}}}{{dDjAfcDje}l{An{Al{Dj}}}{An{Al{Dj}}}}{{FbceAf}l{An{Al{Fb}}}{An{Al{Fb}}}}{{FdceAf}l{An{Al{Fd}}}{An{Al{Fd}}}}{{fFfCjcFfe}l{An{Al{Ff}}}{An{Al{Ff}}}}{{fFhAfcFhe}l{An{Al{Fh}}}{An{Al{Fh}}}}{{fFjcAf}l{An{Al{{Eb{Fj}}}}}}{{fFlceAf}l{An{Al{Fl}}}{An{Al{Fl}}}}{{fFnAfcFne}l{An{Al{Fn}}}{An{Al{Fn}}}}{{fG`cAf}l{An{Al{{Eb{G`}}}}}}{{fGbceAf}l{An{Al{Gb}}}{An{Al{Gb}}}}{{fGdCjcGde}l{An{Al{Gd}}}{An{Al{Gd}}}}{{fGfAfcGfe}l{An{Al{Gf}}}{An{Al{Gf}}}}{{fGhcAf}l{An{Al{Gh}}}}{{fGjceAf}l{An{Al{Gj}}}{An{Al{Gj}}}}{{fGlAfcGle}l{An{Al{Gl}}}{An{Al{Gl}}}}{{fGncAf}l{An{Al{Gn}}}}{{fH`ceAf}l{An{Al{H`}}}{An{Al{H`}}}}{{fdhCjc}l{An{Al{Hb}}}}{{fdhCjc}l{An{Al{Hd}}}}{{fdhAfc}l{An{Al{Hf}}}}{{fdhAfc}l{An{Al{Hh}}}}``{Hjc{B`DfDlBbHlHnI`}}{{AlAl}{{Dd{c}}}{DfB`Ab}}{Al}0{{AlDh}{{Ad{Al}}}}{{HjAl}c{B`DfDlBbHlHnI`}}{AlBj}{Al{{Dd{c}}}B`}{AlBl}2`{HjBh}{{Alc}{{Dd{c}}}{AnB`Dl}}{{Al{Ad{Al}}}{{Ah{c}}}{AbFbFdC`}}:`{{Hjc}Hj{B`DfDlBbHlHnI`}}{{HjcAl}Hj{B`DfDlBbHlHnI`}}```````````````````````````````````````````````````````````````````````````````````````````````````````````{cHn{An{Al{Hn}}}}{{Dfce}l{An{Al{Df}}}{An{Al{Df}}}}{{DfAfAf}l}{{ce}l{An{Al{B`}}}{An{Al{B`}}}}{{AfAf}l}{{ce}Bb{An{Al{Bb}}}{An{Al{Bb}}}}{{ce}Bd{An{Al{Bd}}}{An{Al{Bd}}}}{cBh{An{Al{I`}}}}{cHl{An{Al{Hl}}}}{{ceIbIb}l{An{Al{Ib}}}{An{Al{Ib}}}}{{Dlc}l{An{Al{Dl}}}}{{DlAf}l}{{ce}l{An{Al{Id}}}{An{Al{Id}}}}","c":[],"p":[[6,"Order",10],[6,"Transpose",10],[6,"Symmetry",10],[6,"Diagonal",10],[6,"Side",10],[1,"unit"],[6,"Result",596],[5,"TypeId",597],[10,"Default",76],[6,"Trans",80],[10,"Matrix",169],[5,"Mat",143],[10,"Gemm",252],[10,"Vector",456],[10,"Sized",598],[10,"Copy",573],[10,"Dot",573],[10,"Dotc",573],[5,"BandMat",110],[1,"usize"],[1,"u32"],[1,"bool"],[10,"PartialEq",599],[10,"Clone",600],[5,"Formatter",601],[8,"Result",601],[10,"Debug",601],[10,"Display",601],[10,"BandMatrix",169],[10,"Copy",598],[1,"slice"],[10,"Default",602],[5,"String",603],[5,"Vec",604],[10,"Axpy",573],[6,"Marker",80],[10,"Gemv",412],[10,"Scal",573],[10,"Hemm",252],[10,"Her2k",252],[5,"Complex",605],[10,"Herk",252],[10,"Symm",252],[10,"Syr2k",252],[10,"Syrk",252],[10,"Trmm",252],[10,"Trsm",252],[10,"Gbmv",412],[10,"Ger",412],[10,"Gerc",412],[10,"Hbmv",412],[10,"Hemv",412],[10,"Her",412],[10,"Her2",412],[10,"Hpmv",412],[10,"Hpr",412],[10,"Hpr2",412],[10,"Sbmv",412],[10,"Spmv",412],[10,"Spr",412],[10,"Spr2",412],[10,"Symv",412],[10,"Syr",412],[10,"Syr2",412],[10,"Tbmv",412],[10,"Tbsv",412],[10,"Tpmv",412],[10,"Tpsv",412],[10,"VectorOperations",456],[10,"Nrm2",573],[10,"Asum",573],[10,"Iamax",573],[10,"Rot",573],[10,"Swap",573]],"b":[[100,"impl-Mul%3C%26dyn+Matrix%3CT%3E%3E-for-Trans%3C%26dyn+Matrix%3CT%3E%3E"],[101,"impl-Mul-for-Trans%3C%26dyn+Matrix%3CT%3E%3E"],[102,"impl-Mul%3C%26dyn+Vector%3CT%3E%3E-for-Trans%3C%26dyn+Vector%3CT%3E%3E"],[116,"impl-BandMat%3CT%3E"],[117,"impl-Matrix%3CT%3E-for-BandMat%3CT%3E"],[120,"impl-Debug-for-BandMat%3CT%3E"],[121,"impl-Display-for-BandMat%3CT%3E"],[130,"impl-Matrix%3CT%3E-for-BandMat%3CT%3E"],[131,"impl-BandMat%3CT%3E"],[148,"impl-Mat%3CT%3E"],[149,"impl-Matrix%3CT%3E-for-Mat%3CT%3E"],[152,"impl-Debug-for-Mat%3CT%3E"],[153,"impl-Display-for-Mat%3CT%3E"],[161,"impl-Mat%3CT%3E"],[162,"impl-Matrix%3CT%3E-for-Mat%3CT%3E"],[179,"impl-Mul-for-%26dyn+Matrix%3CT%3E"],[180,"impl-Mul%3C%26dyn+Vector%3CT%3E%3E-for-%26dyn+Matrix%3CT%3E"],[181,"impl-Mul%3CTrans%3C%26dyn+Matrix%3CT%3E%3E%3E-for-%26dyn+Matrix%3CT%3E"],[182,"impl-Mul%3CT%3E-for-%26dyn+Matrix%3CT%3E"],[470,"impl-Mul%3CT%3E-for-%26dyn+Vector%3CT%3E"],[471,"impl-Mul%3CTrans%3C%26dyn+Vector%3CT%3E%3E%3E-for-%26dyn+Vector%3CT%3E"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
