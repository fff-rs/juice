var searchIndex = JSON.parse('{\
"coaster":{"doc":"Provides a simple and unified API to run fast and highly …","t":[2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,3,3,16,8,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,13,4,16,8,8,16,13,8,13,13,13,10,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,10,10,11,11,11,11,11,12,12,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,16,13,16,4,16,10,8,13,10,11,11,11,11,11,11,10,11,10,10,10,11,11,11,11,11,12,12,2,2,0,0,13,13,13,13,2,13,13,13,3,13,2,2,3,4,13,13,2,13,13,13,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,2,13,2,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,11,11,11,11,11,11,11,11,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,2,2,4,2,11,8,13,3,5,0,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,11,11,0,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,8,13,11,11,10,11,11,10,11,11,11,10,11,10,11,10,10,10,10,11,11,11,11,8,4,8,13,13,13,13,10,10,10,10,10,10,10,10,10,11,11,10,10,10,10,10,11,10,10,10,10,11,11,10,11,11,11,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,11,10,10,10,11,11,11,10,11,11,11,12,12,12,12,8,8,8,8,8,8,8,8,8,8,10,13,10,10,10,10,10,10,10,10,10,8,8,4,8,16,8,13,10,10,11,10,11,10,8,8,8,8,8,8,8,8,8,8,16,16,16,10,3,8,8,8,10,8,8,8,8,8,11,8,8,8,8,8,8,8,8,8,5,10,10,5,10,10,10,10,10,10,10,10,10,10,11,11,11,11,0,0,5,10,10,10,10,10,10,5,10,10,10,10,5,5,5,10,10,10,10,10,11,10,10,10,0,10,11,11,11,10,10,11,11,10,11,11,11,11,11,10,11,11,10,10,11,11,11,10,11,11,10,0,10,0,10,11,11,10,10,10,10,10,10,11,10,10,10,10,12,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,5,10,0,0,5,10,10,10,10,0,10,10,10,10,10,10,10,10,10,11,11,0,10,10,5,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,10,11,11,10,10,11,11,11,11,11,11,10,10,10,10,10,10,10,10,5,10,8,10,10,8,8,8,8,10,5,10,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,10,10,10,10,10,10,10,10,10,10,8,8,8,10,10,11,10,11,10,10,10,11,10,11,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,11,10,10,10,10,11,10,11,10,10,10,10,10,10,11,10,11,10,11,10,11,10,11,10,11,10,10,10,10,10,10,11,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,11,10,11,10,11,10,10,10,10,10,10,10,11,10,11,10,11,8,8,11,10,5,10,11,11,5,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,8,16,10,8,8,16,10,10,8,8,8,10,10,10,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,10,16,8,5,5,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,8,5,10,5,10,10,10,5,10,2,2,2,2,2,2,2,2,2,2,2,2,13,13,4,8,8,13,13,3,6,13,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Cuda","Error","HardwareType","IDevice","IFramework","IHardware","IMemory","ITensorDesc","IntoTensorDesc","Native","SharedTensor","TensorDesc","backend","binary","device","error","framework","frameworks","hardware","operation","plugin","prelude","tensor","Backend","BackendConfig","F","IBackend","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","device","device","device","device","fmt","fmt","framework","framework","from","from","hardwares","into","into","new","new","synchronize","synchronize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","IBinary","Cuda","Error","H","IDevice","IMemory","M","MemoryAllocationError","MemorySync","MemorySyncError","Native","NoMemorySyncRoute","alloc_memory","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from","from","hardwares","id","into","ne","source","sync_in","sync_out","to_owned","to_string","try_from","try_into","type_id","0","0","Device","Error","Framework","Plugin","Tensor","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","into","source","to_string","try_from","try_into","type_id","0","0","0","0","B","Cuda","D","Error","H","ID","IFramework","Implementation","binary","borrow","borrow_mut","fmt","fmt","from","from","hardwares","into","load_hardwares","new","new_device","source","to_string","try_from","try_into","type_id","0","0","Cuda","Native","cuda","native","AlreadyAquired","AlreadyMapped","ArrayIsMapped","Assert","Context","ContextAlreadyCurrent","ContextAlreadyInUse","ContextIsDestroyed","Cuda","Deinitialized","Device","DeviceInfo","Driver","DriverError","EccUncorrectable","FileNotFound","Function","HardwareStackError","HostMemoryAlreadyRegistered","HostMemoryNotRegistered","ID","IllegalAddress","IllegalInstruction","InvalidAddressSpace","InvalidContext","InvalidDevice","InvalidGraphicsContent","InvalidHandle","InvalidImage","InvalidPc","InvalidPtx","InvalidSource","InvalidValue","LauncIncompatibleTexturing","LaunchFailed","LaunchOutOfResources","LaunchTimeout","MapFailed","Memory","MisalignedAddress","Module","NoBinaryForGpu","NoDevice","NotFound","NotInitialized","NotMapped","NotMappedAsArray","NotMappedAsPointer","NotPermitted","NotReady","NotSupported","OperatingSystem","OutOfMemory","PeerAccessAlreadyEnabled","PeerAccessNotEnabled","PeerAccessUnsupported","PrimaryContextActive","ProfilerAlreadyStarted","ProfilerAlreadyStopped","ProfilerDisabled","ProfilerNotInitialized","SharedObjectInitFailed","SharedObjectSymbolNotFound","TooManyPeers","Unknown","UnmapFailed","UnsupportedLimit","binary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","context","create_context","cublas","cudnn","destroy_context","device","eq","fmt","fmt","fmt","fmt","from","from","from","function","get_cuda_backend","hardwares","init","initialise_cublas","initialise_cudnn","into","into","into","load_device_info","load_device_list","load_devices","load_hardwares","mem_alloc","mem_cpy_d_to_h","mem_cpy_h_to_d","mem_free","memory","module","ne","new","new_device","synchronize_context","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","Context","alloc_memory","borrow","borrow_mut","clone","clone_into","drop","eq","fmt","from","from_c","hardwares","hash","id","id","id_c","into","new","sync_in","sync_out","synchronize","to_owned","try_from","try_into","type_id","Device","DeviceInfo","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","compute_units","default","eq","fmt","fmt","fmt","from","from","from_c","from_isize","hardware_type","id","id_c","into","into","load_compute_units","load_device_type","load_name","name","new","set_compute_units","set_hardware_type","set_name","to_isize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Function","borrow","borrow_mut","clone","clone_into","fmt","from","from_isize","into","to_owned","try_from","try_into","type_id","Memory","borrow","borrow_mut","drop","fmt","from","from_c","id_c","into","new","try_from","try_into","type_id","Module","borrow","borrow_mut","clone","clone_into","fmt","from","from_isize","into","to_owned","try_from","try_into","type_id","Binary","Cpu","Error","Function","ID","INative","Memory","Native","allocate_boxed_slice","binary","binary","borrow","borrow","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","description","device","eq","flatbox","fmt","fmt","fmt","from","from","function","get_native_backend","hardware","hardwares","into","into","load_hardwares","ne","new","new_device","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","Binary","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","new","to_owned","try_from","try_into","type_id","Cpu","alloc_memory","borrow","borrow_mut","clone","clone_into","eq","fmt","from","hardwares","hash","id","into","new","sync_in","sync_out","to_owned","try_from","try_into","type_id","FlatBox","as_mut_slice","as_slice","borrow","borrow_mut","byte_size","drop","fmt","from","from_box","into","try_from","try_into","type_id","Function","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","new","to_owned","try_from","try_into","type_id","Hardware","borrow","borrow_mut","build","clone","clone_into","compute_units","default","fmt","from","hardware_type","id","into","name","new","set_compute_units","set_hardware_type","set_name","to_owned","try_from","try_into","type_id","ACCELERATOR","CPU","GPU","HardwareType","IHardware","OTHER","borrow","borrow_mut","build","clone","clone_into","compute_units","eq","fmt","from","hardware_type","hash","id","into","name","set_compute_units","set_hardware_type","set_name","to_owned","try_from","try_into","type_id","IOperation","Error","Float","Operation","Plugin","PluginInner","SharedTensor","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","borrow","borrow_mut","cbrt","ceil","classify","cos","cosh","epsilon","exp","exp2","exp_m1","floor","fmt","fmt","fract","from","from","from","hypot","infinity","integer_decode","into","is_finite","is_infinite","is_nan","is_normal","is_sign_negative","is_sign_positive","ln","ln_1p","log","log10","log2","max","max_value","min","min_positive_value","min_value","mul_add","nan","neg_infinity","neg_zero","numeric_helpers","powf","powi","recip","round","signum","sin","sin_cos","sinh","source","sqrt","tan","tanh","to_degrees","to_radians","to_string","trunc","try_from","try_into","type_id","0","0","0","0","AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","E","Empty","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatErrorKind","FromPrimitive","FromStrRadixErr","Inv","Invalid","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","Output","Output","Output","PI","ParseFloatError","Pow","PrimInt","RefNum","SQRT_2","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","TAU","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs","abs","abs_sub","abs_sub","abs_sub","acos","acosh","as_","asin","asinh","atan","atan2","atanh","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","cbrt","ceil","checked_add","checked_div","checked_mul","checked_neg","checked_pow","checked_rem","checked_shl","checked_shr","checked_sub","clamp","clamp_max","clamp_min","classify","cos","cosh","count_ones","count_zeros","epsilon","exp","exp2","exp_m1","float","floor","fmt","fmt","fmt","fract","from","from","from","from_be","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_le","from_str_radix","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","hypot","identities","infinity","int","integer_decode","into","into","inv","is_finite","is_infinite","is_nan","is_negative","is_normal","is_one","is_positive","is_sign_negative","is_sign_positive","is_zero","kind","leading_zeros","ln","ln_1p","log","log10","log2","max","max_value","max_value","min","min_positive_value","min_value","min_value","mul_add","mul_add","mul_add_assign","nan","neg_infinity","neg_zero","one","one","ops","pow","pow","pow","pow","powf","powi","real","recip","rotate_left","rotate_right","round","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","set_one","set_zero","sign","signed_shl","signed_shr","signum","signum","signum","sin","sin_cos","sinh","sqrt","swap_bytes","tan","tanh","to_be","to_degrees","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_le","to_radians","to_string","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","trailing_zeros","trunc","try_from","try_from","try_into","try_into","type_id","type_id","unsigned_shl","unsigned_shr","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","zero","zero","Bounded","max_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","ceil","classify","classify","cos","cosh","epsilon","epsilon","exp","exp2","exp_m1","floor","floor","fract","fract","hypot","infinity","infinity","integer_decode","integer_decode","is_finite","is_finite","is_infinite","is_infinite","is_nan","is_nan","is_normal","is_normal","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","ln","ln_1p","log","log10","log2","max","max","max_value","max_value","min","min","min_positive_value","min_positive_value","min_value","min_value","mul_add","nan","nan","neg_infinity","neg_infinity","neg_zero","neg_zero","powf","powi","powi","recip","recip","round","round","signum","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_degrees","to_radians","to_radians","trunc","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_zeros","pow","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_zeros","unsigned_shl","unsigned_shr","checked","inv","mul_add","overflowing","saturating","wrapping","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Real","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","cos","cosh","epsilon","exp","exp2","exp_m1","floor","fract","hypot","is_sign_negative","is_sign_positive","ln","ln_1p","log","log10","log2","max","max_value","min","min_positive_value","min_value","mul_add","powf","powi","recip","round","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_radians","trunc","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum","Cuda","FlatBox","HardwareType","IDevice","IFramework","IHardware","IMemory","ITensorDesc","IntoTensorDesc","Native","SharedTensor","TensorDesc","CapacityExceeded","DeviceError","Error","ITensorDesc","IntoTensorDesc","InvalidRemove","InvalidShape","SharedTensor","TensorDesc","UninitializedMemory","borrow","borrow","borrow_mut","borrow_mut","capacity","clone","clone_into","default_stride","default_stride_i32","desc","dims","dims","dims_i32","dims_i32","drop","eq","fmt","fmt","fmt","from","from","from","into","into","into","mem_size","ne","new","rank","rank","read","read_write","reshape","resize","size","size","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","write_only","0","0","0"],"q":["coaster","","","","","","","","","","","","","","","","","","","","","","","coaster::backend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coaster::binary","coaster::device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coaster::device::Error","","coaster::error","","","","","","","","","","","","","","","","","","","","coaster::error::Error","","","","coaster::framework","","","","","","","","","","","","","","","","","","","","","","","","","coaster::framework::Error","","coaster::frameworks","","","","coaster::frameworks::cuda","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coaster::frameworks::cuda::DriverError","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coaster::frameworks::cuda::context","","","","","","","","","","","","","","","","","","","","","","","","","coaster::frameworks::cuda::device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coaster::frameworks::cuda::function","","","","","","","","","","","","","coaster::frameworks::cuda::memory","","","","","","","","","","","","","coaster::frameworks::cuda::module","","","","","","","","","","","","","coaster::frameworks::native","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coaster::frameworks::native::Error","coaster::frameworks::native::binary","","","","","","","","","","","","","","coaster::frameworks::native::device","","","","","","","","","","","","","","","","","","","","coaster::frameworks::native::flatbox","","","","","","","","","","","","","","coaster::frameworks::native::function","","","","","","","","","","","","","","coaster::frameworks::native::hardware","","","","","","","","","","","","","","","","","","","","","","coaster::hardware","","","","","","","","","","","","","","","","","","","","","","","","","","","coaster::operation","coaster::plugin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coaster::plugin::Error","","","","coaster::plugin::numeric_helperscoaster::plugin::numeric_helpers::bounds","","","coaster::plugin::numeric_helpers::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coaster::plugin::numeric_helpers::float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coaster::plugin::numeric_helpers::identities","","","","","","","","","","coaster::plugin::numeric_helpers::int","","","","","","","","","","","","","","","","","coaster::plugin::numeric_helpers::ops","","","","","","coaster::plugin::numeric_helpers::ops::checked","","","","","","","","","","","","","","","","coaster::plugin::numeric_helpers::ops::inv","","","coaster::plugin::numeric_helpers::ops::mul_add","","","","","coaster::plugin::numeric_helpers::ops::overflowing","","","","","","coaster::plugin::numeric_helpers::ops::saturating","","","","","","","","","coaster::plugin::numeric_helpers::ops::wrapping","","","","","","","","","","","","coaster::plugin::numeric_helpers::pow","","","","","coaster::plugin::numeric_helpers::real","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coaster::plugin::numeric_helpers::sign","","","","","","","","","","coaster::prelude","","","","","","","","","","","","coaster::tensor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coaster::tensor::Error","",""],"d":["","","","","","","","","","","","","Provides the interface for running parallel computations …","Provides the generic functionality for a backend-specific …","Provides a representation for one or many ready to use …","Defines the general set of error types in Coaster.","Provides the generic functionality of a hardware …","Exposes the specific Framework implementations.","Provides a representation for a collection of available …","Provides the generic functionality for backend-agnostic …","Provides helpers for explicit implementations of Backend […","A module meant to be glob imported when using Coaster.","Provides the functionality for memory management across …","Defines the main and highest struct of Coaster.","Provides Backend Configuration.","Represents the Framework of a Backend.","Describes a Backend.","","","","","","","","","Try to create a default backend.","Returns the backend device.","Returns the backend device.","","","","","Returns the backend framework.","Provides the Framework.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the available hardware.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Initialize a new native Backend from a BackendConfig.","Creates a new BackendConfig.","Synchronize backend.","","","","","","","","","","Defines the functionality for turning a library into …","Failures related to the Cuda framework implementation.","Defines a generic set of Memory Errors.","The Hardware representation for this Device.","Specifies Hardware behavior across frameworks.","Marker trait for backing memory.","The Memory representation for this Device.","Framework error at memory allocation.","This trait should be implemented for <code>Device</code>. Use of <code>Any</code> …","Framework error at memory synchronization.","Failures related to the Native framework implementation.","No route found for memory transfer between devices","Allocate memory on the Device.","","","","","","","","Returns the argument unchanged.","","","Returns the hardwares, which define the Device.","Returns the unique identifier of the Device.","Calls <code>U::from(self)</code>.","","","FIXME","FIXME","","","","","","","","Failure related to a Device.","Defines the set of available Coaster error types.","Failure related to the Framework implementation.","Failure at Plugin Operation.","Failure related to the Tensor.","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","The Binary representation for this Framework.","Failures related to the Cuda framework implementation.","The Device representation for this Framework.","Defines a generic set of Framework Errors.","The Hardware representation for this Framework.","Defines the Framework by a Name.","Defines a Framework.","Failure related to the Coaster implementation of a …","Returns the initialized binary.","","","","","Returns the argument unchanged.","","Returns the cached and available hardwares.","Calls <code>U::from(self)</code>.","Initializes all the available hardwares.","Initializes a new Framework.","Initializes a new Device from the provided hardwares.","","","","","","","","","","Provides informations about the software system, such as …","Provides informations about the software system, such as …","","","","","","","","","Provides the Cuda Framework.","","","","Defines the Cuda API.","OpenCL device errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides a Rust wrapper around Cuda’s context.","Creates a Cuda context.","Return a reference to the CUBLAS Handle","Return a reference to the CUDNN Handle","Removes a created Cuda context from the device.","Provides a Rust wrapper around Cuda’s device.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Provides a Rust wrapper around Cuda’s Function.","Initialise the CUDA, CUBLAS, and CUDNN APIs","","Initialize the Cuda Driver API.","Create a handle to CUBLAS and assign it to CUDA Object","Create a handle to CUDNN and assign it to CUDA Object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the requested DeviceInfo for the provided device.","Returns a list of available devices for the provided …","Returns fully initialized devices available through Cuda.","","Allocates memory on the Cuda device.","Copies memory from the Cuda device to the Host.","Copies memory from the Host to the Cuda device.","Releases allocated memory from the Cuda device.","Provides a Rust wrapper around Cuda’s memory.","Provides a Rust wrapper around Cuda’s Module.","","","Creates a new Cuda context for computation.","Synchronize the CUDA context associated with the current …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines a Cuda Context.","","","","","","","","","Returns the argument unchanged.","Initializes a new Cuda platform from its C type.","","","","Returns the id as isize.","Returns the id as its C type.","Calls <code>U::from(self)</code>.","Initializes a new Cuda context.","","","Synchronize this Context.","","","","","Defines a Cuda Device.","Defines a generic DeviceInfo container.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Initializes a new Cuda device from its C type.","Initializes a new Cuda device.","","","Returns the id as its C type.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Loads the compute units of the device via a foreign Cuda …","Loads the device type via a foreign Cuda call.","Loads the name of the device via a foreign Cuda call.","","Initializes a new Device Info","","","","","","","","","","","","","","Defines a Cuda Function.","","","","","","Returns the argument unchanged.","Initializes a new OpenCL device.","Calls <code>U::from(self)</code>.","","","","","Defines a Cuda Memory.","","","","","Returns the argument unchanged.","Initializes a new Cuda memory from its C type.","Returns the memory id as its C type.","Calls <code>U::from(self)</code>.","Initializes a new Cuda memory.","","","","Defines a Cuda Module.","","","","","","Returns the argument unchanged.","Initializes a new Cuda Module.","Calls <code>U::from(self)</code>.","","","","","","","Defines the Native Error.","","","Provides the Native framework trait for explicit Backend …","Failure related to allocation, syncing memory","Provides the Native framework.","Traditional allocation via creation of a filled Vec.","Provides a binary on native CPU.","","","","","","","","","","","","Provides a hardware aka. the host CPU.","","Provides a Box without any knowledge of its underlying …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Provides a operation on native CPU.","Initialise the Native Backend for running Tensor Operations","Provides a hardware aka. the host CPU.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Defines a host CPU binary.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Initializes the native CPU binary.","","","","","Defines the host CPU Hardware.","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Initializes a new OpenCL hardware.","","","","","","","A Box without any knowledge of its underlying type.","Access memory as mutable slice.","Access memory as slice.","","","Returns memory size of the Flatbox.","","","Returns the argument unchanged.","Create FlatBox from Box, consuming it.","Calls <code>U::from(self)</code>.","","","","Defines a host CPU operation.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Initializes a native CPU hardware.","","","","","Defines the host CPU Hardware.","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Initializes a new OpenCL hardware.","","","","","","","","Hardware Accelerator devices","CPU devices","GPU devices","Specifies the available Hardware types.","Specifies Hardware behavior accross frameworks.","Used for anything else","","","Build an inmutable Hardware","","","Returns the compute_units of the Hardware","","","Returns the argument unchanged.","Returns the device_type of the Hardware","","Returns the ID of the Hardware","Calls <code>U::from(self)</code>.","Returns the name of the Hardware","Defines the compute_units of the Hardware","Defines the hardware_type of the Hardware","Defines the name of the Hardware","","","","","Defines the functionality of an operation.","Defines a high-level Plugin Error.","Generic trait for floating point numbers","Failure at the execution of the Operation.","","Failure at the Plugin with an inner error type.","Failure related to <code>SharedTensor</code>: use of uninitialized …","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","","","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","","","Returns the fractional part of a number.","","Returns the argument unchanged.","","Calculate the length of the hypotenuse of a right-angle …","Returns the infinite value.","Returns the mantissa, base 2 exponent, and sign as …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Returns the <code>NaN</code> value.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Describes numeric types and traits for a Plugin.","Raise a number to a floating point power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts radians to degrees.","Converts degrees to radians.","","Return the integer part of a number.","","","","","","","","A generic interface for casting between machine scalars …","Numbers which have upper and lower bounds","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Return Euler’s number.","","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","","A generic trait for converting a number to a value.","","Unary operator for retrieving the multiplicative inverse, …","","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","The trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","An interface for casting between machine scalars.","The trait for types implementing basic numeric operations","The trait for <code>Num</code> types which also implement numeric …","Defines a multiplicative identity element for <code>Self</code>.","The result after applying the operator.","The resulting type after applying the fused multiply-add.","The result after applying the operator.","Return Archimedes’ constant <code>π</code>.","","Binary operator for raising a value to a power.","Generic trait for primitive integers.","The trait for references which implement numeric …","Return <code>sqrt(2.0)</code>.","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Useful functions for signed numbers (i.e. numbers that can …","Return the full circle constant <code>τ</code>.","A generic trait for converting a value to a number.","A trait for values which cannot be negative","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Defines an additive identity element for <code>Self</code>.","Computes the absolute value.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Convert a value to another, using the <code>as</code> operator.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","","","","","","","Cast from one machine scalar to another.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Raises a value to the power of exp, returning <code>None</code> if an …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","Returns the floating point category of the number. If only …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","","Returns the largest integer less than or equal to a number.","","","","Returns the fractional part of a number.","Creates a number from another value that can be converted …","Returns the argument unchanged.","Returns the argument unchanged.","Convert an integer from big endian to the target’s …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Convert an integer from little endian to the target’s …","Convert from a string and radix (typically <code>2..=36</code>).","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Calculate the length of the hypotenuse of a right-angle …","","Returns the infinite value.","","Returns the mantissa, base 2 exponent, and sign as …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the multiplicative inverse of <code>self</code>.","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns true if the number is negative and false if the …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns true if the number is positive and false if the …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","","Returns the number of leading zeros in the binary …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","returns the largest finite number this type can represent","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","returns the smallest finite number this type can represent","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Returns the <code>NaN</code> value.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","","","Raises a value to the power of exp, using exponentiation …","Raises self to the power of <code>exp</code>, using exponentiation by …","Returns <code>self</code> to the power <code>rhs</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the nearest integer to a number. Round half-way …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the sign of the number.","Returns a number that represents the sign of <code>self</code>.","Returns the sign of the number.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Reverses the byte order of the integer.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Convert <code>self</code> to big endian from the target’s endianness.","Converts radians to degrees.","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Convert <code>self</code> to little endian from the target’s …","Converts degrees to radians.","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Returns the number of trailing zeros in the binary …","Return the integer part of a number.","","","","","","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Numbers which have upper and lower bounds","returns the largest finite number this type can represent","returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value of <code>self</code>. Returns …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns positive infinity.","Returns the infinite value.","Returns the mantissa, base 2 exponent, and sign as …","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Returns NaN.","Returns the <code>NaN</code> value.","Returns negative infinity.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns <code>-0.0</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts to degrees, assuming the number is in radians.","Converts radians to degrees.","Converts to radians, assuming the number is in degrees.","Converts degrees to radians.","Return the integer part of a number.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","A trait for real number types that do not necessarily have …","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Raise a number to a real number power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts radians to degrees.","Converts degrees to radians.","Return the integer part of a number.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number.","","","","","","","","","","","","","Maximal number of backing memories has been reached.","Error caused by operations with device: allocation, memory …","Errors than can occur when synchronizing memory.","Describes the Descriptor of a Tensor.","Describes a conversion into a Tensor Descriptor.","Unable to remove Memory copy from SharedTensor.","Shape provided for reshaping is not compatible with old …","Container that handles synchronization of [Memory][1] of …","Describes the Descriptor of a SharedTensor.","Memory is requested for reading, but it hasn’t been …","","","","","Returns the number of elements for which the Tensor has …","","","Returns the default stride for an Rust allocated Tensor.","Returns the default stride for a Rust allocated Tensor as …","Returns the descriptor of the Tensor.","Returns the dimensions of the Tensor.","","Returns the dimensions of the Tensor as Vec.","","Drops memory allocation on the specified device. Returns …","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Converts the implemented type into a TensorDesc.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the allocated Memory size in bytes.","","Create new Tensor by allocating [Memory][1] on a Device. [1…","Returns the rank of the Tensor.","","Get memory for reading on the specified <code>device</code>. Can fail …","Get memory for reading and writing on the specified <code>device</code>.","Change the shape of the Tensor.","Change the size and shape of the Tensor.","Returns the summed up length of all dimensions of the …","","","","","","","","","","","Get memory for writing only. This function skips …","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,3,2,3,2,3,2,3,1,1,2,2,2,2,3,2,2,2,3,2,2,3,2,3,1,2,2,3,2,3,2,3,2,3,0,4,0,5,0,0,5,4,0,4,4,4,5,4,4,4,4,4,4,4,4,4,4,5,5,4,4,4,6,6,4,4,4,4,4,7,8,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,11,12,13,14,15,14,0,14,14,0,15,14,15,15,15,15,15,15,14,15,14,14,14,15,15,15,15,15,16,17,0,0,0,0,18,18,18,18,0,18,18,18,0,18,0,0,0,0,18,18,0,18,18,18,19,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,18,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,20,18,19,20,18,19,20,18,19,20,18,19,0,20,19,19,20,0,18,20,18,18,19,20,18,19,0,0,19,20,19,19,20,18,19,20,20,20,19,20,20,20,20,0,0,18,19,19,20,20,18,19,18,20,18,19,20,18,19,20,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,77,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,79,80,79,80,79,79,80,79,80,79,79,79,79,80,80,79,80,79,79,79,79,79,79,80,79,79,79,79,80,79,79,79,80,79,80,80,79,80,79,80,79,80,0,81,81,81,81,81,81,81,81,81,81,81,81,0,82,82,82,82,82,82,82,82,82,82,82,82,0,83,83,83,83,83,83,83,83,83,83,83,83,0,0,0,0,84,0,85,0,0,0,84,85,84,85,84,85,85,84,85,84,85,0,85,0,85,85,84,85,84,0,0,0,84,85,84,84,85,84,84,85,84,85,85,84,85,84,85,84,86,0,87,87,87,87,87,87,87,87,87,87,87,87,87,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,89,89,89,89,89,89,89,89,89,89,89,89,89,0,90,90,90,90,90,90,90,90,90,90,90,90,90,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,92,92,92,0,0,92,92,92,93,92,92,93,92,92,92,93,92,93,92,93,93,93,93,92,92,92,92,0,0,0,94,94,94,94,95,95,95,95,95,95,95,95,95,94,94,95,95,95,95,95,95,95,95,95,95,94,94,95,94,94,94,95,95,95,94,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,95,95,95,95,95,95,95,95,94,95,95,95,95,95,94,95,94,94,94,96,97,98,99,0,0,0,0,0,0,0,0,0,0,100,101,100,100,100,100,100,100,100,100,100,0,0,0,0,102,0,101,100,100,100,100,100,100,0,0,0,0,0,0,0,0,0,0,103,104,105,100,0,0,0,0,100,0,0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,95,106,0,95,106,95,95,107,95,95,95,95,95,101,108,101,108,0,0,0,95,95,109,110,111,112,0,113,114,115,116,0,0,0,95,95,95,117,117,95,95,95,95,0,95,101,108,108,95,118,101,108,117,119,119,119,119,119,119,119,119,117,102,119,119,119,119,119,119,95,0,95,0,95,101,108,103,95,95,95,106,95,120,106,95,95,121,108,117,95,95,95,95,95,95,122,95,95,95,122,95,95,104,123,95,95,95,0,120,0,0,0,117,105,95,95,0,95,117,117,95,124,125,126,124,127,120,121,0,117,117,0,95,106,95,95,95,95,117,95,95,117,95,128,128,128,128,128,128,128,128,117,95,108,128,128,128,128,128,128,117,95,101,108,101,108,101,108,117,117,129,130,131,132,133,134,0,121,0,122,122,0,0,0,0,107,0,118,119,119,119,119,119,119,119,119,119,119,119,119,119,119,128,128,128,128,128,128,128,128,128,128,128,128,128,128,100,100,100,100,100,100,100,100,100,100,0,0,0,100,100,100,100,100,100,100,100,100,95,135,95,95,95,95,95,95,95,95,95,95,135,135,95,95,95,135,95,95,95,95,95,135,95,135,95,135,95,135,95,95,135,95,135,95,135,95,135,95,135,95,135,95,95,95,95,95,95,135,135,95,95,135,135,95,135,95,95,135,95,135,95,135,95,95,95,135,95,135,95,135,95,135,95,95,95,95,95,95,135,95,135,95,95,135,0,0,120,121,0,120,120,121,0,121,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,110,111,112,113,114,115,116,0,103,103,0,0,104,104,123,0,0,0,136,137,138,0,0,0,0,124,125,126,124,127,0,0,0,0,0,0,129,130,131,132,133,134,105,0,0,0,105,0,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,0,0,0,106,0,106,106,106,0,106,0,0,0,0,0,0,0,0,0,0,0,0,140,140,0,0,0,140,140,0,0,140,141,140,141,140,141,140,140,142,142,141,142,143,142,143,141,140,141,140,140,141,140,140,144,141,140,141,140,141,142,143,141,141,141,141,142,143,140,140,140,141,140,141,140,141,140,141,145,146,147],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["backend",3,[["",26,[["clone",8],["iframework",8]]]]]],["backend",3,[["",26,[["clone",8],["iframework",8]]]]]],[[["backendconfig",3,[["",26,[["clone",8],["iframework",8]]]]]],["backendconfig",3,[["",26,[["clone",8],["iframework",8]]]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["result",4,[["backend",3],["error",4]]]],[[["",0]]],[[["backend",3,[["",26,[["iframework",8],["clone",8]]]]]]],[[["backend",3,[["native",3]]]],["cpu",3]],[[["backend",3,[["cuda",3]]]],["context",3]],[[["backend",3,[["",26,[["debug",8],["iframework",8]]]]],["formatter",3]],["result",6]],[[["backendconfig",3,[["",26,[["debug",8],["iframework",8]]]]],["formatter",3]],["result",6]],[[["backend",3,[["",26,[["iframework",8],["clone",8]]]]]],["",0]],null,[[]],[[]],[[["backend",3,[["",26,[["iframework",8],["clone",8]]]]]]],[[]],[[]],[[["backendconfig",3,[["",26,[["iframework",8],["clone",8]]]]]],["result",4,[["backend",3,[["",26,[["iframework",8],["clone",8]]]]],["error",4]]]],[[["",26,[["iframework",8],["clone",8]]]],["backendconfig",3,[["",26,[["iframework",8],["clone",8]]]]]],[[["",0]],["result",4,[["error",4]]]],[[["backend",3,[["cuda",3]]]],["result",4,[["error",4]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["usize",0]],["result",4,[["error",4]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["error",4]],["error",4]],[[["",0],["",0]]],[[["error",4],["error",4]],["bool",0]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[]],[[["nativeerror",4]],["error",4]],[[["cudaerror",4]],["error",4]],[[["",0]],["vec",3]],[[["",0]],["isize",0]],[[]],[[["error",4],["error",4]],["bool",0]],[[["error",4]],["option",4,[["error",8]]]],[[["",0],["any",8],["any",8],["any",8]],["result",4,[["error",4]]]],[[["",0],["any",8],["any",8],["any",8]],["result",4,[["error",4]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["error",4]],["error",4]],[[]],[[["error",4]],["error",4]],[[["error",4]],["error",4]],[[["error",4]],["error",4]],[[]],[[["error",4]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[],["str",0]],null,null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[]],[[["cudaerror",4]],["error",4]],[[["",0]]],[[]],[[],["result",4,[["vec",3],["error",4]]]],[[]],[[["",0]],["result",4,[["error",4]]]],[[["error",4]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cuda",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["api",3]],["api",3]],[[["error",4]],["error",4]],[[["cuda",3]],["cuda",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["device",3]],["result",4,[["struct_cuctx_st",0],["error",4]]]],[[["cuda",3]],["context",3]],[[["cuda",3]],["cudnn",3]],[[["struct_cuctx_st",0]],["result",4,[["error",4]]]],null,[[["error",4],["error",4]],["bool",0]],[[["api",3],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["cuda",3],["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[],["backend",3,[["cuda",3]]]],[[["cuda",3]]],[[],["result",4,[["error",4]]]],[[["cuda",3]],["result",4,[["error",4]]]],[[["cuda",3]],["result",4,[["error",4]]]],[[]],[[]],[[]],[[["device",3],["cudevice_attribute",4]],["result",4,[["deviceinfo",3],["error",4]]]],[[],["result",4,[["vec",3,[["device",3]]],["error",4]]]],[[],["result",4,[["vec",3,[["device",3]]],["error",4]]]],[[],["result",4,[["vec",3,[["device",3]]],["error",4]]]],[[["size_t",6]],["result",4,[["memory",3],["error",4]]]],[[["memory",3],["flatbox",3]],["result",4,[["error",4]]]],[[["flatbox",3],["memory",3]],["result",4,[["error",4]]]],[[["c_ulonglong",6]],["result",4,[["error",4]]]],null,null,[[["error",4],["error",4]],["bool",0]],[[],["cuda",3]],[[["cuda",3]],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["context",3],["size_t",6]],["result",4,[["memory",3],["deviceerror",4]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["context",3]],["context",3]],[[["",0],["",0]]],[[["context",3]]],[[["context",3],["context",3]],["bool",0]],[[["context",3],["formatter",3]],["result",6]],[[]],[[["struct_cuctx_st",0],["vec",3,[["device",3]]]],["context",3]],[[["context",3]],["vec",3]],[[["context",3],["",0]]],[[["context",3]],["isize",0]],[[["context",3]],["isize",0]],[[["context",3]],["struct_cuctx_st",0]],[[]],[[["device",3]],["result",4,[["context",3],["drivererror",4]]]],[[["context",3],["any",8],["any",8],["any",8]],["result",4,[["deviceerror",4]]]],[[["context",3],["any",8],["any",8],["any",8]],["result",4,[["deviceerror",4]]]],[[["context",3]],["result",4,[["drivererror",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["device",3]],["device",3]],[[["device",3]],["device",3]],[[["deviceinfo",3]],["deviceinfo",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["device",3]],["option",4,[["isize",0]]]],[[],["device",3]],[[["device",3],["device",3]],["bool",0]],[[["device",3],["formatter",3]],["result",6]],[[["deviceinfo",3],["formatter",3]],["result",6]],[[["deviceinfo",3],["formatter",3]],["result",6]],[[]],[[]],[[["c_int",6]],["device",3]],[[["isize",0]],["device",3]],[[["device",3]],["option",4,[["hardwaretype",4]]]],[[["device",3]],["isize",0]],[[["device",3]],["c_int",6]],[[]],[[]],[[["device",3]],["device",3]],[[["device",3]],["device",3]],[[["device",3]],["device",3]],[[["device",3]],["option",4,[["string",3]]]],[[["vec",3,[["u8",0]]]],["deviceinfo",3]],[[["device",3],["option",4,[["isize",0]]]],["device",3]],[[["device",3],["option",4,[["hardwaretype",4]]]],["device",3]],[[["device",3],["option",4,[["string",3]]]],["device",3]],[[["deviceinfo",3]],["isize",0]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["function",3]],["function",3]],[[["",0],["",0]]],[[["function",3],["formatter",3]],["result",6]],[[]],[[["isize",0]],["function",3]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["memory",3]]],[[["memory",3],["formatter",3]],["result",6]],[[]],[[["c_ulonglong",6]],["memory",3]],[[["memory",3]],["c_ulonglong",6]],[[]],[[["usize",0]],["result",4,[["memory",3],["drivererror",4]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["module",3]],["module",3]],[[["",0],["",0]]],[[["module",3],["formatter",3]],["result",6]],[[]],[[["isize",0]],["module",3]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,[[],["str",0]],null,null,null,[[["usize",0]],["box",3]],null,[[["native",3]],["binary",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["error",4]],["option",4,[["error",8]]]],[[["error",4]],["error",4]],[[["native",3]],["native",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["error",4]],["str",0]],null,[[["error",4],["error",4]],["bool",0]],null,[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["native",3],["formatter",3]],["result",6]],[[]],[[]],null,[[],["backend",3,[["native",3]]]],null,[[["native",3]]],[[]],[[]],[[],["result",4,[["vec",3,[["hardware",3]]],["error",4]]]],[[["error",4],["error",4]],["bool",0]],[[],["native",3]],[[["native",3]],["result",4,[["error",4]]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["binary",3]],["binary",3]],[[["",0],["",0]]],[[],["binary",3]],[[["binary",3],["formatter",3]],["result",6]],[[]],[[]],[[],["binary",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["cpu",3],["usize",0]],["result",4,[["flatbox",3],["deviceerror",4]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cpu",3]],["cpu",3]],[[["",0],["",0]]],[[["cpu",3],["cpu",3]],["bool",0]],[[["cpu",3],["formatter",3]],["result",6]],[[]],[[["cpu",3]],["vec",3]],[[["cpu",3],["",0]]],[[["cpu",3]],["isize",0]],[[]],[[["vec",3,[["hardware",3]]]],["cpu",3]],[[["cpu",3],["any",8],["any",8],["any",8]],["result",4,[["deviceerror",4]]]],[[["cpu",3],["any",8],["any",8],["any",8]],["result",4,[["deviceerror",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["flatbox",3]]],[[["flatbox",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["flatbox",3]],["usize",0]],[[["flatbox",3]]],[[["flatbox",3],["formatter",3]],["result",6]],[[]],[[["box",3]],["flatbox",3]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["function",3]],["function",3]],[[["",0],["",0]]],[[],["function",3]],[[["function",3],["formatter",3]],["result",6]],[[]],[[]],[[],["function",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["hardware",3]],["hardware",3]],[[["hardware",3]],["hardware",3]],[[["",0],["",0]]],[[["hardware",3]],["option",4,[["isize",0]]]],[[],["hardware",3]],[[["hardware",3],["formatter",3]],["result",6]],[[]],[[["hardware",3]],["option",4,[["hardwaretype",4]]]],[[["hardware",3]],["isize",0]],[[]],[[["hardware",3]],["option",4,[["string",3]]]],[[["isize",0]],["hardware",3]],[[["hardware",3],["option",4,[["isize",0]]]],["hardware",3]],[[["hardware",3],["option",4,[["hardwaretype",4]]]],["hardware",3]],[[["hardware",3],["option",4,[["string",3]]]],["hardware",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["hardwaretype",4]],["hardwaretype",4]],[[["",0],["",0]]],[[["",0]],["option",4,[["isize",0]]]],[[["hardwaretype",4],["hardwaretype",4]],["bool",0]],[[["hardwaretype",4],["formatter",3]],["result",6]],[[]],[[["",0]],["option",4,[["hardwaretype",4]]]],[[["hardwaretype",4],["",0]]],[[["",0]],["isize",0]],[[]],[[["",0]],["option",4,[["string",3]]]],[[["",0],["option",4,[["isize",0]]]]],[[["",0],["option",4,[["hardwaretype",4]]]]],[[["",0],["option",4,[["string",3]]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[]],[[["box",3,[["error",8]]]],["error",4]],[[]],[[["error",4]],["error",4]],[[]],[[]],[[]],[[]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[["i32",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",4]],["option",4,[["error",8]]]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["string",3]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,[[]],null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[["",0]]],[[]],[[]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[],["option",4]],[[]],[[]],[[["",0],["",0]],["option",4]],[[["",0],["",0]],["option",4]],[[["",0],["",0]],["option",4]],[[["",0]],["option",4]],[[["usize",0]],["option",4]],[[["",0],["",0]],["option",4]],[[["",0],["u32",0]],["option",4]],[[["",0],["u32",0]],["option",4]],[[["",0],["",0]],["option",4]],[[]],[[]],[[]],[[],["fpcategory",4]],[[]],[[]],[[],["u32",0]],[[],["u32",0]],[[]],[[]],[[]],[[]],null,[[]],[[["floaterrorkind",4],["formatter",3]],["result",4,[["error",3]]]],[[["parsefloaterror",3],["formatter",3]],["result",4,[["error",3]]]],[[["parsefloaterror",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[],["option",4]],[[]],[[]],[[]],[[["f32",0]],["option",4]],[[["f64",0]],["option",4]],[[["i128",0]],["option",4]],[[["i16",0]],["option",4]],[[["i32",0]],["option",4]],[[["i64",0]],["option",4]],[[["i8",0]],["option",4]],[[["isize",0]],["option",4]],[[]],[[["str",0],["u32",0]],["result",4]],[[["u128",0]],["option",4]],[[["u16",0]],["option",4]],[[["u32",0]],["option",4]],[[["u64",0]],["option",4]],[[["u8",0]],["option",4]],[[["usize",0]],["option",4]],[[]],null,[[]],null,[[]],[[]],[[]],[[]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[["",0]],["bool",0]],[[],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[["",0]],["bool",0]],null,[[],["u32",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[]],[[]],[[]],[[]],[[]],null,null,[[["usize",0]]],[[["u32",0]]],[[]],[[]],[[["i32",0]]],null,[[]],[[["u32",0]]],[[["u32",0]]],[[]],[[]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[["",0],["",0]]],[[["",0]]],[[["",0]]],null,[[["u32",0]]],[[["u32",0]]],[[]],[[]],[[["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["option",4,[["f32",0]]]],[[["",0]],["option",4,[["f64",0]]]],[[["",0]],["option",4,[["i128",0]]]],[[["",0]],["option",4,[["i16",0]]]],[[["",0]],["option",4,[["i32",0]]]],[[["",0]],["option",4,[["i64",0]]]],[[["",0]],["option",4,[["i8",0]]]],[[["",0]],["option",4,[["isize",0]]]],[[]],[[]],[[["",0]],["string",3]],[[["",0]],["option",4,[["u128",0]]]],[[["",0]],["option",4,[["u16",0]]]],[[["",0]],["option",4,[["u32",0]]]],[[["",0]],["option",4,[["u64",0]]]],[[["",0]],["option",4,[["u8",0]]]],[[["",0]],["option",4,[["usize",0]]]],[[],["u32",0]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["u32",0]]],[[["u32",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]]],[[["",0],["u32",0]]],[[["",0],["u32",0]]],[[["",0],["",0]]],[[]],[[]],null,[[]],[[]],null,null,null,null,[[]],[[],["option",4]],[[],["option",4]],[[["f32",0]],["option",4]],[[["f64",0]],["option",4]],[[["i128",0]],["option",4]],[[["i16",0]],["option",4]],[[["i32",0]],["option",4]],[[["i64",0]],["option",4]],[[["i8",0]],["option",4]],[[["isize",0]],["option",4]],[[["u128",0]],["option",4]],[[["u16",0]],["option",4]],[[["u32",0]],["option",4]],[[["u64",0]],["option",4]],[[["u8",0]],["option",4]],[[["usize",0]],["option",4]],[[["",0]],["option",4,[["f32",0]]]],[[["",0]],["option",4,[["f64",0]]]],[[["",0]],["option",4,[["i128",0]]]],[[["",0]],["option",4,[["i16",0]]]],[[["",0]],["option",4,[["i32",0]]]],[[["",0]],["option",4,[["i64",0]]]],[[["",0]],["option",4,[["i8",0]]]],[[["",0]],["option",4,[["isize",0]]]],[[["",0]],["option",4,[["u128",0]]]],[[["",0]],["option",4,[["u16",0]]]],[[["",0]],["option",4,[["u32",0]]]],[[["",0]],["option",4,[["u64",0]]]],[[["",0]],["option",4,[["u8",0]]]],[[["",0]],["option",4,[["usize",0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fpcategory",4]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",0]]],[[["i32",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[]],[[]],[[["",0]]],[[["",0]]],[[]],[[]],null,[[],["u32",0]],[[],["u32",0]],[[]],[[]],[[],["u32",0]],[[["u32",0]]],[[["u32",0]]],[[["u32",0]]],[[["u32",0]]],[[["u32",0]]],[[]],[[]],[[]],[[],["u32",0]],[[["u32",0]]],[[["u32",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["",0]],["option",4]],[[["",0],["",0]],["option",4]],[[["",0],["",0]],["option",4]],[[["",0]],["option",4]],[[["",0],["",0]],["option",4]],[[["",0],["u32",0]],["option",4]],[[["",0],["u32",0]],["option",4]],[[["",0],["",0]],["option",4]],null,null,[[]],null,null,null,[[]],[[["",0]]],null,null,null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,[[]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[["",0],["",0]]],null,null,null,null,null,null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]]],[[["",0],["u32",0]]],[[["",0],["u32",0]]],[[["",0],["",0]]],null,null,[[["usize",0]],["option",4]],[[["usize",0]]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",0]],[[],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[["",0]]],[[]],[[["",0],["",0]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[]],[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["sharedtensor",3]],["usize",0]],[[["error",4]],["error",4]],[[["",0],["",0]]],[[["",0]],["vec",3,[["usize",0]]]],[[["",0]],["vec",3,[["i32",0]]]],[[["sharedtensor",3]],["tensordesc",6]],[[["",0]],["vec",3]],[[["tensordesc",6]],["vec",3]],[[["",0]],["vec",3,[["i32",0]]]],[[["tensordesc",6]],["vec",3,[["i32",0]]]],[[["sharedtensor",3],["",0]],["result",4,[["error",4]]]],[[["error",4],["error",4]],["bool",0]],[[["sharedtensor",3],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[]],[[["deviceerror",4]],["error",4]],[[]],[[["",0]],["tensordesc",6]],[[]],[[]],[[["usize",0]],["usize",0]],[[["error",4],["error",4]],["bool",0]],[[["",0]],["sharedtensor",3]],[[["",0]],["usize",0]],[[["tensordesc",6]],["usize",0]],[[["sharedtensor",3],["",0]],["result",4,[["error",4]]]],[[["sharedtensor",3],["",0]],["result",4,[["error",4]]]],[[["sharedtensor",3],["",0]],["result",4,[["error",4]]]],[[["sharedtensor",3],["",0]],["result",4,[["error",4]]]],[[["",0]],["usize",0]],[[["tensordesc",6]],["usize",0]],[[["error",4]],["option",4,[["error",8]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["sharedtensor",3],["",0]],["result",4,[["error",4]]]],null,null,null],"p":[[8,"IBackend"],[3,"Backend"],[3,"BackendConfig"],[4,"Error"],[8,"IDevice"],[8,"MemorySync"],[13,"Native"],[13,"Cuda"],[4,"Error"],[13,"Framework"],[13,"Tensor"],[13,"Plugin"],[13,"Device"],[8,"IFramework"],[4,"Error"],[13,"Cuda"],[13,"Implementation"],[4,"DriverError"],[3,"Cuda"],[3,"Driver"],[13,"InvalidValue"],[13,"OutOfMemory"],[13,"NotInitialized"],[13,"Deinitialized"],[13,"ProfilerDisabled"],[13,"ProfilerNotInitialized"],[13,"ProfilerAlreadyStarted"],[13,"ProfilerAlreadyStopped"],[13,"NoDevice"],[13,"InvalidDevice"],[13,"InvalidImage"],[13,"InvalidContext"],[13,"ContextAlreadyCurrent"],[13,"MapFailed"],[13,"UnmapFailed"],[13,"ArrayIsMapped"],[13,"AlreadyMapped"],[13,"NoBinaryForGpu"],[13,"AlreadyAquired"],[13,"NotMapped"],[13,"NotMappedAsArray"],[13,"NotMappedAsPointer"],[13,"EccUncorrectable"],[13,"UnsupportedLimit"],[13,"ContextAlreadyInUse"],[13,"PeerAccessUnsupported"],[13,"InvalidPtx"],[13,"InvalidGraphicsContent"],[13,"InvalidSource"],[13,"FileNotFound"],[13,"SharedObjectSymbolNotFound"],[13,"SharedObjectInitFailed"],[13,"OperatingSystem"],[13,"InvalidHandle"],[13,"NotFound"],[13,"NotReady"],[13,"IllegalAddress"],[13,"LaunchOutOfResources"],[13,"LaunchTimeout"],[13,"LauncIncompatibleTexturing"],[13,"PeerAccessAlreadyEnabled"],[13,"PeerAccessNotEnabled"],[13,"PrimaryContextActive"],[13,"ContextIsDestroyed"],[13,"Assert"],[13,"TooManyPeers"],[13,"HostMemoryAlreadyRegistered"],[13,"HostMemoryNotRegistered"],[13,"HardwareStackError"],[13,"IllegalInstruction"],[13,"MisalignedAddress"],[13,"InvalidAddressSpace"],[13,"InvalidPc"],[13,"LaunchFailed"],[13,"NotPermitted"],[13,"NotSupported"],[13,"Unknown"],[3,"Context"],[3,"Device"],[3,"DeviceInfo"],[3,"Function"],[3,"Memory"],[3,"Module"],[3,"Native"],[4,"Error"],[13,"Memory"],[3,"Binary"],[3,"Cpu"],[3,"FlatBox"],[3,"Function"],[3,"Hardware"],[4,"HardwareType"],[8,"IHardware"],[4,"Error"],[8,"Float"],[13,"SharedTensor"],[13,"Operation"],[13,"Plugin"],[13,"PluginInner"],[8,"FloatConst"],[4,"FloatErrorKind"],[8,"Num"],[8,"Inv"],[8,"MulAdd"],[8,"Pow"],[8,"Signed"],[8,"AsPrimitive"],[3,"ParseFloatError"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedMul"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"CheckedSub"],[8,"PrimInt"],[8,"NumCast"],[8,"FromPrimitive"],[8,"One"],[8,"Zero"],[8,"Bounded"],[8,"MulAddAssign"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"ToPrimitive"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"WrappingSub"],[8,"FloatCore"],[8,"OverflowingAdd"],[8,"OverflowingMul"],[8,"OverflowingSub"],[8,"Real"],[4,"Error"],[3,"SharedTensor"],[8,"ITensorDesc"],[6,"TensorDesc"],[8,"IntoTensorDesc"],[13,"DeviceError"],[13,"InvalidRemove"],[13,"InvalidShape"]]},\
"coaster_blas":{"doc":"Provides backend-agnostic BLAS operations for Coaster.","t":[0,0,14,14,14,14,14,14,14,14,14,0,0,0,16,16,16,16,8,16,16,16,10,10,10,10,10,10,10,0,0,0,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,8,8,8,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,10,10,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["binary","frameworks","iblas_asum_for_cuda","iblas_axpy_for_cuda","iblas_copy_for_cuda","iblas_dot_for_cuda","iblas_gbmv_for_cuda","iblas_gemm_for_cuda","iblas_nrm2_for_cuda","iblas_scal_for_cuda","iblas_swap_for_cuda","operation","plugin","transpose","Asum","Axpy","Copy","Dot","IBlasBinary","Nrm2","Scale","Swap","asum","axpy","copy","dot","nrm2","scale","swap","cuda","native","helper","IOperationAsum","IOperationAxpy","IOperationCopy","IOperationDot","IOperationGemm","IOperationNrm2","IOperationScale","IOperationSwap","compute","compute","compute","compute","compute","compute","compute","compute","Asum","Axpy","BlasBinaryProvider","Copy","Dot","Gbmv","Gemm","IBlas","Nrm2","Scal","Swap","asum","axpy","binary","copy","dot","gbmv","gemm","nrm2","scal","swap","ConjTrans","NoTrans","Trans","Transpose","borrow","borrow_mut","clone","clone_into","fmt","from","from","into","to_owned","to_rblas","try_from","try_into","type_id"],"q":["coaster_blas","","","","","","","","","","","","","","coaster_blas::binary","","","","","","","","","","","","","","","coaster_blas::frameworks","","coaster_blas::frameworks::cuda","coaster_blas::operation","","","","","","","","","","","","","","","","coaster_blas::plugin","","","","","","","","","","","","","","","","","","","","","coaster_blas::transpose","","","","","","","","","","","","","","","",""],"d":["Provides the IBlasBinary binary trait for Coaster’s …","Provides the specific Framework implementations for the …","asum with cuda","axpy with cuda","copy for cuda","dot product for cuda","gbmv for cuda","gemm for cuda","nrm2 for cuda","scalar mul for cuda","swap matrices for cuda","Provides the IOperationX operation traits for Coaster’s …","Provides the IBlas library trait for Coaster …","Provides the Transpose functionality for Matrix operations.","Describes the Asum Operation.","Describes the Axpy Operation.","Describes the Copy Operation.","Describes the Dot Operation.","Describes the operation binding for a Blas Binary …","Describes the Nrm2 Operation.","Describes the Scale Operation.","Describes the Swap Operation.","Returns an initialized Asum operation.","Returns an initialized Axpy operation.","Returns an initialized Copy operation.","Returns an initialized Dot operation.","Returns an initialized Nrm2 operation.","Returns an initialized Scale operation.","Returns an initialized Swap operation.","Provides BLAS for a CUDA backend.","Provides BLAS for a Native backend.","","Describes a Asum Operation.","Describes a Axpy Operation.","Describes a Copy Operation.","Describes a Dot Operation.","Describes a Gemm Operation.","Describes a Nrm2 Operation.","Describes a Scale Operation.","Describes a Swap Operation.","Computes the Asum operation.","Computes the Axpy operation.","Computes the Copy operation.","Computes the Dot operation.","Computes the Nrm2 operation.","Computes the Scale operation.","Computes the Swap operation.","Computes the Gemm operation.","Provides the asum operation.","Provides the axpy operation.","Allows a BlasBinary to be provided which is used for a …","Provides the copy operation.","Provides the dot operation.","Provides the gbmv operation","Provides the gemm operation.","Provides the functionality for a backend to support Basic …","Provides the nrm2 operation.","Provides the scal operation.","Provides the swap operation.","Computes the absolute sum of vector <code>x</code>.","Computes a vector <code>x</code> times a constant <code>a</code> plus a vector <code>y</code> …","Returns the binary representation","Copies <code>x.len()</code> elements of vector <code>x</code> into vector <code>y</code>.","Computes the [dot product][dot-product] over x and y. […","Computes a matrix-vector product with a band matrix","Computes a matrix-matrix product with general matrices.","Computes the L2 norm aka. euclidean length of vector <code>x</code>.","Scales a vector <code>x</code> by a constant <code>a</code> aka. <code>a * x</code>.","Swaps the content of vector <code>x</code> and vector <code>y</code> with complete …","Take the conjugate transpose of the matrix.","Take the matrix as it is.","Take the transpose of the matrix.","Possible transpose operations that can be applied in Level …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Create a rust-blas <code>Transpose</code> from coaster-blas <code>Transpose</code>.","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,0,0,0,0,10,11,12,13,14,15,16,17,18,19,20,20,20,0,20,20,20,20,20,20,20,20,20,20,20,20,20],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["transpose",4],["sharedtensor",3],["transpose",4],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],null,null,null,null,null,null,null,null,null,null,null,[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0]],["",0]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["transpose",4],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["transpose",4],["sharedtensor",3],["transpose",4],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["transpose",4]],["transpose",4]],[[["",0],["",0]]],[[["transpose",4],["formatter",3]],["result",6]],[[]],[[["operation",4]],["transpose",4]],[[]],[[["",0]]],[[["transpose",4]],["transpose",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[8,"IBlasBinary"],[8,"IOperationAsum"],[8,"IOperationAxpy"],[8,"IOperationCopy"],[8,"IOperationDot"],[8,"IOperationNrm2"],[8,"IOperationScale"],[8,"IOperationSwap"],[8,"IOperationGemm"],[8,"Asum"],[8,"Axpy"],[8,"BlasBinaryProvider"],[8,"Copy"],[8,"Dot"],[8,"Gbmv"],[8,"Gemm"],[8,"Nrm2"],[8,"Scal"],[8,"Swap"],[4,"Transpose"]]},\
"coaster_nn":{"doc":"Provides a Coaster Plugin, to extend Coaster with Neural …","t":[13,13,13,13,16,16,16,16,16,4,4,4,8,8,13,13,13,4,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,13,13,8,4,8,8,13,13,8,13,8,8,8,4,8,4,4,4,8,8,13,8,13,8,13,8,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,10,14,14,14,14,14,14,10,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,4,8,13,13,13,8,13,13,3,4,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,0,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,12,12,12,5,5,12,12,5,5,12,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5],"n":["Auto","Auto","Auto","BiDirectional","CC","CDROP","CLRN","CPOOL","CRNN","ConvBackwardDataAlgo","ConvBackwardFilterAlgo","ConvForwardAlgo","Convolution","ConvolutionConfig","Count","Default","Direct","DirectionMode","Disabled","Dropout","Enabled","FFT","FFT","FFT","FFTTiling","FFTTiling","GEMM","GRU","ImplicitGEMM","ImplicitGEMM","ImplicitGEMM","ImplicitGEMMSum","ImplicitGEMMSum","ImplicitPrecompiledGEMM","ImplicitPrecompiledGEMMSum","LRN","LSTM","LinearInput","LogSoftmax","MathType","NN","NNOperationConfig","PersistDynamic","PersistStatic","Pooling","ReLU","Relu","ReluPointwise","Rnn","RnnAlgorithm","RnnConfig","RnnInputMode","RnnNetworkMode","RnnPaddingMode","Sigmoid","SigmoidPointwise","SkipInput","Softmax","Standard","Tanh","Tanh","TanhPointwise","TensorOPMath","TensorOPMathAllowConversion","UniDirectional","Winograd","Winograd","WinogradNonFused","WinogradNonFused","WinogradNonFused","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","convolution","convolution_grad_data","convolution_grad_filter","dropout","dropout_grad","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frameworks","from","from","from","from","from","from","from","from","from","from_string","from_string","from_string","generate_rnn_weight_description","impl_ops_log_softmax_for","impl_ops_lrn_for","impl_ops_relu_for","impl_ops_sigmoid_for","impl_ops_softmax_for","impl_ops_tanh_for","init_nn","into","into","into","into","into","into","into","into","into","is_auto","is_auto","is_auto","log_softmax","log_softmax_grad","lrn","lrn_grad","new_convolution_config","new_dropout_config","new_lrn_config","new_pooling_config","new_rnn_config","pooling_avg","pooling_avg_grad","pooling_max","pooling_max_grad","relu","relu_grad","relu_pointwise","relu_pointwise_grad","rnn_backward_data","rnn_backward_weights","rnn_forward","sigmoid","sigmoid_grad","sigmoid_pointwise","sigmoid_pointwise_grad","softmax","softmax_grad","tanh","tanh_grad","tanh_pointwise","tanh_pointwise_grad","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","workspace_size","workspace_size","workspace_size","workspace_size","cuda","native","DataType","DataTypeInfo","Double","Float","Half","ICudnnDesc","Inner","Misc","RnnSequenceDescriptors","WrappingError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cudnn_convolution_desc","cudnn_data_type","cudnn_filter_desc","cudnn_rnn_desc","cudnn_tensor_desc","cudnn_tensor_desc_flat","cudnn_tensor_desc_softmax","cx_desc","cy_desc","dcx_desc","dcy_desc","dhx_desc","dhy_desc","dx_desc","dy_desc","fmt","fmt","fmt","fmt","from","from","from","from","helper","hx_desc","hy_desc","into","into","into","into","into","size","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","x_desc","y_desc","0","0","helper","ConvolutionConfig","DropoutConfig","NormalizationConfig","PoolingConfig","RnnConfig","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","direction_mode","dropout_probability","dropout_seed","filter_shape","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hidden_size","input_mode","into","into","into","into","into","num_layers","padding","padding","probability","relu","relu_grad","rnn_type","seed","sigmoid","sigmoid_grad","stride","stride","tanh","tanh_grad","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","window","write_to_memory"],"q":["coaster_nncoaster_nn::frameworks","","coaster_nn::frameworks::cuda","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coaster_nn::frameworks::cuda::WrappingError","","coaster_nn::frameworks::native","coaster_nn::frameworks::native::helper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Attempt to automatically find the best algorithm of all …","Attempt to automatically find the best algorithm of all …","Attempt to automatically find the best algorithm of all …","CUDNN_BIDIRECTION - Concats recurrent output of First -&gt; …","The Convolution Operation Config representation for this …","The Dropout Operation Config representation for this …","The LRN Operation Config representation for this Plugin.","The Pooling Operation Config representation for this …","The RNN Operation Config representation for this Plugin","Different algorithms to compute the gradient with respect …","Different algorithms to compute the gradient with respect …","Different algorithms to compute the convolution forward …","Provides the functionality for a Backend to support …","Provides Convolution Config functionality.","Count - Cannot find in docs but is in Generated - FIXME","No Tensor Core ops","Compute the convolution without implicit or explicit …","Direction Mode for RNN [cudnnDirectionMode_t][1] [1]: …","Padding disabled","Provides the functionality for a Backend to support …","Padding enabled","Compute the convolution as Fast-Fourier Transform.","Compute the convolution as Fast-Fourier Transform.","Compute the convolution as Fast-Fourier Transform.","Compute the convolution as Fast-Fourier Transform with …","Compute the convolution as Fast-Fourier Transform with …","Compute the convolution as explicit matrix product.","Three-gate network with Gated Recurrent Units","Compute the convolution as matrix product without forming …","Compute the convolution as matrix product without forming …","Compute the convolution as matrix product without forming …","Compute the convolution as sum of matrix product without …","Compute the convolution as sum of matrix product without …","Similar to <code>ImplicitGEMM</code> but needs some workspace to …","Similar to <code>ImplicitGEMMSum</code> but needs some workspace to …","Provides the functionality for a Backend to support Local …","Four-gate LSTM Network with no peephole connection","CUDNN_LINEAR_INPUT - A biased matrix multiplication is …","Provides the functionality for a Backend to support …","Indicate if Tensor Core Operations are permitted […","Provides the functionality for a backend to support Neural …","Provides generic NN Operation Config functionality.","RNN parts use a persistent kernel. Fast when the first …","Uses a Persistent Kernel - fast when the first D of the …","Provides the functionality for a Backend to support …","CUDNN_RNN_RELU - Single gate RNN with a ReLU activation …","Provides the functionality for a Backend to support ReLU …","Provides the functionality for pointwise ReLU operations …","Provide the functionality for a Backend to support RNN …","Algorithm for RNN [cudnnRNNAlgo_t][1] [1]: …","Provides Rnn Config functionality.","Input Modes for RNN [cudnnRNNInputMode_t][1] [1]: …","Network Type for RNN Networks [cudnnRNNMOde_t][1] [1]: …","Enables/Disables the padded input/output […","Provides the functionality for a Backend to support …","Provides the functionality for pointwise Sigmoid …","CUDNN_SKIP_INPUT - No operation is performed at the input …","Provides the functionality for a Backend to support …","Sequence of Operations for each RNN Layer","Provides the functionality for a Backend to support TanH …","Single-gate RNN with a tanh activation function","Provides the functionality for pointwise ReLU operations …","Uses Tensor Core ops","Uses FP32 Tensors for input/output","CUDNN_UNIDIRECTIONAL - The network iterates from first to …","Winograd  Transform","Winograd  Transform","Winograd  Transform Non-Fused","Winograd  Transform Non-Fused","Winograd  Transform Non-Fused","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes a [CNN convolution][convolution] over the input …","Computes the gradient of a [CNN convolution][convolution] …","Computes the gradient of a [CNN convolution][convolution] …","Computes non-linear down-sampling ([max Pooling][pooling]) …","Computes non-linear down-sampling ([max Pooling][pooling]) …","","","","","","","","","","","","","","","","","","","","","Provides the specific Framework implementations for the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert RnnNetworkMode to String Representation","Convert to RnnInputMode from String Representation","Convert to DirectionMode from String Representation","Generate Weights for RNN","log softmax impl generation macro","lrn impl generation macro TODO it’s all unimplemented!() …","relu impl generation macro","sigmoid impl generation macro","softmax impl generation macro","tanh impl generation macro","Initializes the Plugin.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if algorithim should be chosen automatically.","Check if algorithim should be chosen automatically.","Check if algorithim should be chosen automatically.","Computes a logarithmic softmax over the input Tensor <code>x</code>.","Computes the gradient of a logarithmic softmax over the …","Computes a [LRN][lrn] over the input Tensor <code>x</code>. [lrn]: …","Computes the gradient of a [LRN][lrn] over the input …","Creates a new ConvolutionConfig, which needs to be passed …","Creates a new DropoutConfig, which needs to be passed to …","Creates a new (Local Response Normalization) LRNConfig, …","Creates a new PoolingConfig, which needs to be passed to …","Create a RnnConfig","Computes non-linear down-sampling ([average Pooling][…","Computes the gradient of [average Pooling][pooling] over …","Computes non-linear down-sampling ([max Pooling][pooling]) …","Computes the gradient of [max Pooling][pooling] over the …","Computes the [Rectified linear units][relu] over the input …","Computes the gradient of [ReLU][relu] over the input …","Computes the [Rectified linear units][relu] over the input …","Computes the gradient of [ReLU][relu] over the input …","Calculates RNN Gradients for Input/Hidden/Cell","Calculates RNN Gradients for Weights","Train a LSTM Network and Return Results","Computes the [Sigmoid function][sigmoid] over the input …","Computes the gradient of a [Sigmoid function][sigmoid] …","Computes the [Sigmoid function][sigmoid] over the input …","Computes the gradient of a [Sigmoid function][sigmoid] …","Computes a [Softmax][softmax] over the input Tensor <code>x</code>. […","Computes the gradient of a [Softmax][softmax] over the …","Computes the [hyperbolic Tangent][tanh] over the input …","Computes the gradient of [hyperbolic Tangent][tanh] over …","Computes the [hyperbolic Tangent][tanh] over the input …","Computes the gradient of [tanh][tanh] over the input …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the largest workspace size in bytes needed for any …","Returns the largest workspace size in bytes needed for any …","Workspace Size - Overwritten by each plugin method except …","Workspace Size - Overwritten by each plugin method except …","Provides NN for a CUDA backend.","Provides NN for a Native backend.","Defines the available data types for the CUDA cuDNN data …","CuDnn type info for generic use.","F64","F32","F16 (no native Rust support yet)","","","","Struct to hold all Sequence Descriptors for an RNN Pass","","","","","","","","","","","Mostly internal.","","","","Creates a TensorDescriptor similar to <code>cudnn_tensor_desc</code>, …","Creates a TensorDescriptor similar to <code>cudnn_tensor_desc</code>, …","Cell Input Descriptor","Cell Output Descriptor","Gradient Cell Input Descriptor","Gradient Cell Output Descriptor","Gradient Hidden Input Descriptor","Gradient Hidden Output Descriptor","Gradient Input Descriptor","Gradient Output Descriptor","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Provides useful macros for easier NN implementation for …","Hidden Input Descriptor","Hidden Output Descriptor","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Input Descriptor","Output Descriptor","","","Provides useful macros for easier NN implementation for …","","","","","","","","","","","","","","","","","","","","","","","","","","RNN Direction","Dropout Probability","Dropout Seed","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Size of the Hidden Layer","Input Mode","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Number of Hidden Layers","","","","Computes the ReLU Function on the CPU","Computes the ReLU Gradient on the CPU","Type of RNN","","Computes the Sigmoid Function on the CPU","Computes the Sigmoid Gradient on the CPU","","","Computes the Tanh Function on the CPU","Computes the Tanh Gradient on the CPU","","","","","","","","","","","","","","","","","","","","","","","","","","","Just a helper function until SharedTensor has a nice …"],"i":[1,2,3,4,5,5,5,5,5,0,0,0,0,0,6,7,1,0,8,0,8,1,2,3,1,3,1,9,1,2,3,2,3,1,2,0,9,10,0,0,0,0,6,6,0,9,0,0,0,0,0,0,0,0,0,0,10,0,6,0,9,0,7,7,4,1,3,1,2,3,1,2,3,9,10,4,6,8,7,1,2,3,9,10,4,6,8,7,1,2,3,9,10,4,6,8,7,1,2,3,9,10,4,6,8,7,11,11,11,12,12,1,2,3,9,10,4,6,1,2,3,9,9,10,10,4,4,6,6,8,7,0,1,2,3,9,10,4,6,8,7,9,10,4,13,0,0,0,0,0,0,5,1,2,3,9,10,4,6,8,7,1,2,3,14,14,15,15,11,12,15,16,13,16,16,16,16,17,17,18,18,13,13,13,19,19,20,20,21,21,22,22,23,23,1,2,3,9,10,4,6,8,7,9,10,4,6,1,2,3,9,10,4,6,8,7,1,2,3,9,10,4,6,8,7,1,2,3,9,10,4,6,8,7,1,2,3,9,10,4,6,8,7,24,24,25,25,0,0,0,0,26,26,26,0,27,27,0,0,28,27,26,28,27,26,26,26,29,30,29,29,29,29,29,28,28,28,28,28,28,28,28,28,27,27,26,28,27,27,26,0,28,28,28,27,27,27,26,30,27,26,27,28,27,26,28,27,26,28,27,26,28,27,26,28,28,31,32,0,0,0,0,0,0,33,34,35,36,37,33,34,35,36,37,33,34,35,36,37,33,34,35,36,37,37,37,37,36,33,34,35,36,37,33,34,35,36,37,37,37,33,34,35,36,37,37,34,36,35,0,0,37,35,0,0,34,36,0,0,33,34,35,36,37,33,34,35,36,37,33,34,35,36,37,33,34,35,36,37,33,34,35,36,37,34,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["convforwardalgo",4]],["convforwardalgo",4]],[[["convbackwardfilteralgo",4]],["convbackwardfilteralgo",4]],[[["convbackwarddataalgo",4]],["convbackwarddataalgo",4]],[[["rnnnetworkmode",4]],["rnnnetworkmode",4]],[[["rnninputmode",4]],["rnninputmode",4]],[[["directionmode",4]],["directionmode",4]],[[["rnnalgorithm",4]],["rnnalgorithm",4]],[[["rnnpaddingmode",4]],["rnnpaddingmode",4]],[[["mathtype",4]],["mathtype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["convforwardalgo",4],["convforwardalgo",4]],["bool",0]],[[["convbackwardfilteralgo",4],["convbackwardfilteralgo",4]],["bool",0]],[[["convbackwarddataalgo",4],["convbackwarddataalgo",4]],["bool",0]],[[["rnnnetworkmode",4],["rnnnetworkmode",4]],["bool",0]],[[["rnninputmode",4],["rnninputmode",4]],["bool",0]],[[["directionmode",4],["directionmode",4]],["bool",0]],[[["rnnalgorithm",4],["rnnalgorithm",4]],["bool",0]],[[["convforwardalgo",4],["formatter",3]],["result",6]],[[["convbackwardfilteralgo",4],["formatter",3]],["result",6]],[[["convbackwarddataalgo",4],["formatter",3]],["result",6]],[[["rnnnetworkmode",4],["formatter",3]],["result",6]],[[["rnnnetworkmode",4],["formatter",3]],["result",6]],[[["rnninputmode",4],["formatter",3]],["result",6]],[[["rnninputmode",4],["formatter",3]],["result",6]],[[["directionmode",4],["formatter",3]],["result",6]],[[["directionmode",4],["formatter",3]],["result",6]],[[["rnnalgorithm",4],["formatter",3]],["result",6]],[[["rnnalgorithm",4],["formatter",3]],["result",6]],[[["rnnpaddingmode",4],["formatter",3]],["result",6]],[[["mathtype",4],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4,[["rnnnetworkmode",4],["str",0]]]],[[["str",0]],["result",4,[["rnninputmode",4],["str",0]]]],[[["str",0]],["result",4,[["directionmode",4],["str",0]]]],[[["",0],["i32",0],["i32",0]],["result",4,[["vec",3,[["usize",0]]],["error",4]]]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["convforwardalgo",4]],["bool",0]],[[["convbackwardfilteralgo",4]],["bool",0]],[[["convbackwarddataalgo",4]],["bool",0]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["convforwardalgo",4],["convbackwardfilteralgo",4],["convbackwarddataalgo",4]],["result",4,[["error",4]]]],[[["",0],["f32",0],["u64",0]],["result",4,[["error",4]]]],[[["",0],["u32",0],["f64",0],["f64",0],["f64",0]],["result",4,[["error",4]]]],[[["",0]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["option",4,[["f32",0]]],["option",4,[["u64",0]]],["i32",0],["rnnnetworkmode",4],["rnninputmode",4],["directionmode",4],["rnnalgorithm",4],["i32",0],["i32",0],["i32",0]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["datatype",4]],["datatype",4]],[[["",0],["",0]]],[[["",0],["sharedtensor",3]],["result",4,[["convolutiondescriptor",3],["pluginerror",4]]]],[[],["datatype",4]],[[["",0]],["result",4,[["filterdescriptor",3],["pluginerror",4]]]],[[["",0],["cudnn",3],["i32",0],["i32",0],["dropoutconfig",3],["cudnnrnninputmode_t",4],["cudnndirectionmode_t",4],["cudnnrnnmode_t",4],["cudnnrnnalgo_t",4],["cudnnrnnpaddingmode_t",6]],["result",4,[["rnndescriptor",3],["pluginerror",4]]]],[[["",0]],["result",4,[["tensordescriptor",3],["pluginerror",4]]]],[[["",0]],["result",4,[["tensordescriptor",3],["pluginerror",4]]]],[[["",0]],["result",4,[["tensordescriptor",3],["pluginerror",4]]]],null,null,null,null,null,null,null,null,[[["rnnsequencedescriptors",3],["formatter",3]],["result",6]],[[["wrappingerror",4],["formatter",3]],["result",6]],[[["wrappingerror",4],["formatter",3]],["result",6]],[[["datatype",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["error",4]],["wrappingerror",4]],[[]],null,null,null,[[]],[[]],[[["wrappingerror",4]],["pluginerror",4]],[[["wrappingerror",4]],["error",4]],[[]],[[],["usize",0]],[[["wrappingerror",4]],["option",4,[["error",8]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["normalizationconfig",3]],["normalizationconfig",3]],[[["poolingconfig",3]],["poolingconfig",3]],[[["dropoutconfig",3]],["dropoutconfig",3]],[[["convolutionconfig",3]],["convolutionconfig",3]],[[["rnnconfig",3]],["rnnconfig",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,[[["normalizationconfig",3],["formatter",3]],["result",6]],[[["poolingconfig",3],["formatter",3]],["result",6]],[[["dropoutconfig",3],["formatter",3]],["result",6]],[[["convolutionconfig",3],["formatter",3]],["result",6]],[[["rnnconfig",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["float",8]],["float",8]],[[["float",8],["float",8]],["float",8]],null,null,[[["float",8]],["float",8]],[[["float",8],["float",8]],["float",8]],null,null,[[["float",8]],["float",8]],[[["float",8],["float",8]],["float",8]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,[[["flatbox",3],["iterator",8]]]],"p":[[4,"ConvForwardAlgo"],[4,"ConvBackwardFilterAlgo"],[4,"ConvBackwardDataAlgo"],[4,"DirectionMode"],[8,"NN"],[4,"RnnAlgorithm"],[4,"MathType"],[4,"RnnPaddingMode"],[4,"RnnNetworkMode"],[4,"RnnInputMode"],[8,"Convolution"],[8,"Dropout"],[8,"Rnn"],[8,"LogSoftmax"],[8,"LRN"],[8,"Pooling"],[8,"Relu"],[8,"ReluPointwise"],[8,"Sigmoid"],[8,"SigmoidPointwise"],[8,"Softmax"],[8,"Tanh"],[8,"TanhPointwise"],[8,"ConvolutionConfig"],[8,"RnnConfig"],[4,"DataType"],[4,"WrappingError"],[3,"RnnSequenceDescriptors"],[8,"ICudnnDesc"],[8,"DataTypeInfo"],[13,"Misc"],[13,"Inner"],[3,"NormalizationConfig"],[3,"PoolingConfig"],[3,"DropoutConfig"],[3,"ConvolutionConfig"],[3,"RnnConfig"]]},\
"example_mnist_classification":{"doc":"","t":[3,13,17,4,13,5,5,5,12,12,12,12,12,11,11,11,11,12,12,12,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11],"n":["Args","Fashion","MAIN_USAGE","MnistType","Numbers","add_conv_net","add_linear_net","add_mlp","arg_batch_size","arg_dataset_name","arg_learning_rate","arg_model_name","arg_momentum","borrow","borrow","borrow_mut","borrow_mut","cmd_fashion","cmd_load_dataset","cmd_mnist","deserialize","fmt","from","from","into","into","main","run_mnist","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["example_mnist_classification","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,1,0,0,1,0,0,0,2,2,2,2,2,1,2,1,2,2,2,2,2,2,1,2,1,2,0,0,1,2,1,2,1,2,1,2],"f":[null,null,null,null,null,[[["sequentialconfig",3],["usize",0],["usize",0]],["sequentialconfig",3]],[[["sequentialconfig",3]],["sequentialconfig",3]],[[["sequentialconfig",3],["usize",0],["usize",0]],["sequentialconfig",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[],["result",4,[["args",3]]]],[[["args",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["mnisttype",4],["option",4,[["string",3]]],["option",4,[["usize",0]]],["option",4,[["f32",0]]],["option",4,[["f32",0]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]]],"p":[[4,"MnistType"],[3,"Args"]]},\
"example_rnn_regression":{"doc":"","t":[17,3,17,17,5,0,12,12,12,12,12,12,12,12,12,12,11,11,11,5,5,11,11,11,11,5,11,12,5,5,11,11,11,11,3,4,17,13,13,12,11,11,11,11,11,12,12,11,11,5,5,5,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DATA_COLUMNS","Record","TEST_ROWS","TRAIN_ROWS","add_solver","args","b1","b10","b2","b3","b4","b5","b6","b7","b8","b9","borrow","borrow_mut","bs","create_network","data_generator","deserialize","fmt","from","into","main","target","target","test","train","try_from","try_into","type_id","vzip","Args","DataMode","MAIN_USAGE","Test","Train","arg_networkfile","as_path","borrow","borrow","borrow_mut","borrow_mut","cmd_test","cmd_train","data_mode","default","default_batch_size","default_learning_rate","default_momentum","deserialize","eq","flag_batch_size","flag_learning_rate","flag_momentum","fmt","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["example_rnn_regression","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","example_rnn_regression::args","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Test a the validation subset of data items against the …","Train, and optionally, save the resulting network …","","","","","","","","","","Path to the stored network.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,0,0,1,1,1,1,0,0,0,2,2,3,2,2,3,2,3,3,3,3,3,0,0,0,3,3,3,3,3,3,2,3,2,3,2,3,2,3,2,3,2,3],"f":[null,null,null,null,[[["rc",3,[["backend",3,[["iframework",8]]]]],["sequentialconfig",3],["usize",0],["f32",0],["f32",0]],["solver",3,[["backend",3,[["iframework",8]]],["backend",3,[["iframework",8]]]]]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["record",3]],["vec",3,[["f32",0]]]],[[["usize",0],["usize",0]],["sequentialconfig",3]],[[["datamode",4]],["iterator",8]],[[],["result",4,[["record",3]]]],[[["record",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["record",3]],["f32",0]],null,[[["rc",3,[["backend",3,[["iframework",8]]]]],["usize",0],["path",3]],["result",4,[["box",3,[["error",8]]]]]],[[["rc",3,[["backend",3,[["iframework",8]]]]],["usize",0],["f32",0],["f32",0],["pathbuf",3]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,[[["datamode",4]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["args",3]],["datamode",4]],[[],["args",3]],[[],["usize",0]],[[],["f32",0]],[[],["f32",0]],[[],["result",4,[["args",3]]]],[[["args",3],["args",3]],["bool",0]],null,null,null,[[["args",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]]],"p":[[3,"Record"],[4,"DataMode"],[3,"Args"]]},\
"greenglas":{"doc":"Greenglas provides convenient and universal Machine …","t":[2,8,2,2,0,0,11,11,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,8,8,10,11,11,13,13,13,13,13,8,4,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11],"n":["Image","Set","Transformer","Word","image","modifier","set","set_mut","transformer","word","Image","borrow","borrow_mut","deref","deref_mut","drop","from","from_buffer","from_luma_pixels","from_lumaa_pixels","from_path","from_rgb_pixels","from_rgba_pixels","init","into","modifiers","new","transform_to_vec","try_from","try_into","type_id","Crop","Grayscale","Resize","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","height","height","init","init","init","into","into","into","modify","modify","modify","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","width","width","x","y","Modifier","Set","modify","set","set_mut","InvalidLumaAlphaPixels","InvalidLumaPixels","InvalidRgbPixels","InvalidRgbaPixels","InvalidShape","Transformer","TransformerError","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","to_owned","transform","transform_to_vec","try_from","try_into","type_id","write_to_memory","write_to_memory_offset","Word","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","modifiers","new","transform_to_vec","try_from","try_into","type_id"],"q":["greenglas","","","","","","","","","","greenglas::image","","","","","","","","","","","","","","","","","","","","","greenglas::image::modifiers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","greenglas::modifier","","","","","greenglas::transformer","","","","","","","","","","","","","","","","","","","","","","","","","","greenglas::word","","","","","","","","","","","","","","",""],"d":["","A trait providing the set and set_mut methods for all …","","","The Image Struct and its Modifiers","Re-exports from the modifier crate.","Modify self using the provided modifier.","Modify self through a mutable reference with the provided …","Transformer","The Word Struct and its Modifiers","The Transformable Data Type <code>Image</code>","","","","","","Returns the argument unchanged.","Create a new Image from Buffer","Create a new Image from Luma (greyscale) style pixel …","Create a new Image from LumaA style pixel container such …","Create a new Image from a Path","Create a new Image from RGB style pixel container such as …","Create a new Image from RGBa style pixel container such as …","","Calls <code>U::from(self)</code>.","The Modifiers form <code>Image</code>","Create a new Image from a DynamicImage","","","","","Crop Modifier for <code>Image</code>","Grayscale Modifier for <code>Image</code>","Resize Modifier for <code>Image</code>","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The resized heigt of the new Image","The height for the new Image","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The resized width of the new Image","The width for the new Image","The x value from where the new Image should start","The y value from where the new Image should start","Allows use of the implemented type as an argument to …","A trait providing the set and set_mut methods for all …","Modify <code>F</code> with self.","Modify self using the provided modifier.","Modify self through a mutable reference with the provided …","When The Image Pixel Buffer can’t be converted to a …","When The Image Pixel Buffer can’t be converted to a …","When The Image Pixel Buffer can’t be converted to a RGB …","When The Image Pixel Buffer can’t be converted to a RGBA …","When the speficied shape capacitiy differs from the actual …","The Transformer Trait","The Transformer Errors","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Transforms non-numeric data into a numeric <code>SharedTensor</code>","Transforms the non-numeric data into a numeric <code>Vec</code>","","","","Write into a native Coaster Memory.","Write into a native Coaster Memory with a offset.","The Transformable Data Type <code>Word</code>","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","The Modifiers for <code>Word</code>","Creates a new <code>Word</code>","","","",""],"i":[0,0,0,0,0,0,1,1,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,0,0,0,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,3,4,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,3,4,4,4,0,0,6,1,1,7,7,7,7,7,0,0,7,7,7,7,7,7,7,7,7,7,7,7,8,8,7,7,7,8,8,0,9,9,9,9,9,9,9,9,9,0,9,9,9,9,9],"f":[null,null,null,null,null,null,[[]],[[["",0]],["",0]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[],["image",3]],[[["u32",0],["u32",0],["vec",3,[["u8",0]]]],["result",4,[["image",3],["transformererror",4]]]],[[["u32",0],["u32",0],["vec",3,[["u8",0]]]],["result",4,[["image",3],["transformererror",4]]]],[[],["image",3]],[[["u32",0],["u32",0],["vec",3,[["u8",0]]]],["result",4,[["image",3],["transformererror",4]]]],[[["u32",0],["u32",0],["vec",3,[["u8",0]]]],["result",4,[["image",3],["transformererror",4]]]],[[],["usize",0]],[[]],null,[[["dynamicimage",4]],["image",3]],[[["image",3]],["vec",3,[["f32",0]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["resize",3]],["resize",3]],[[["crop",3]],["crop",3]],[[["grayscale",3]],["grayscale",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["resize",3],["formatter",3]],["result",6]],[[["crop",3],["formatter",3]],["result",6]],[[["grayscale",3],["formatter",3]],["result",6]],[[]],[[]],[[]],null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[["resize",3],["image",3]]],[[["crop",3],["image",3]]],[[["grayscale",3],["image",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]]],[[]],[[["",0]],["",0]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["transformererror",4]],["transformererror",4]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["transformererror",4],["formatter",3]],["result",6]],[[]],[[],["usize",0]],[[]],[[["",0]]],[[["",0]],["result",4,[["sharedtensor",3,[["f32",0]]],["transformererror",4]]]],[[["",0]],["vec",3,[["f32",0]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["flatbox",3]],["result",4,[["transformererror",4]]]],[[["flatbox",3],["usize",0]],["result",4,[["transformererror",4]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["word",3],["formatter",3]],["result",6]],[[]],[[],["usize",0]],[[]],null,[[["string",3]],["word",3]],[[["word",3]],["vec",3,[["f32",0]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[8,"Set"],[3,"Image"],[3,"Resize"],[3,"Crop"],[3,"Grayscale"],[8,"Modifier"],[4,"TransformerError"],[8,"Transformer"],[3,"Word"]]},\
"juice":{"doc":"Juice is a open, modular and clear-designed Machine …","tn":["impl_ilayer_activation","impl_ilayer_common","impl_ilayer_loss","impl_isolver_sgd","layer","layers","solver","solvers","util","weight","ComputeInputGradient","ComputeOutput","ComputeParametersGradient","Convolution","Dropout","ILayer","Layer","LayerConfig","LayerType","Linear","LogSoftmax","MeanSquaredError","NegativeLogLikelihood","Pooling","ReLU","Reshape","Rnn","Sequential","Sigmoid","Softmax","TanH","add_input","add_output","allow_force_backward","auto_output_blobs","auto_weight_blobs","backward","backward_input","backward_input","backward_parameters","backward_parameters","blob_names","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_weights_gradients","clone","clone","clone_into","clone_into","compute_in_place","compute_input_gradient","compute_output","compute_parameters_gradient","config","connect","exact_num_input_blobs","exact_num_output_blobs","fmt","fmt","fmt","fmt","forward","forward","from","from","from","from_config","init","init_backprop","init_force_backward","input","input_blob_names","input_blob_names","input_blobs_data","input_blobs_gradient","inputs","inputs_data","inputs_gradients","inputs_len","into","into","into","is_container","is_using_in_place","layer_type","learnable_weights","learnable_weights_data","learnable_weights_gradients","learnable_weights_gradients","learnable_weights_lr","learnable_weights_lr","learnable_weights_names","learnable_weights_names","load","loss","loss_weight","min_output_blobs","name","name","new","output","output_blobs_data","output_blobs_gradient","outputs","outputs_data","outputs_gradients","outputs_len","param","params","params_len","propagate_down","reshape","resize_shared_workspace","save","set_weight_propagate_down","supports_in_place","sync_native","synchronize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_weights","validate","vzip","vzip","vzip","weights_data","weights_gradient","worker","0","0","0","0","0","0","0","0","Convolution","ConvolutionConfig","Dropout","DropoutConfig","Flatten","Linear","LinearConfig","LogSoftmax","MeanSquaredError","NegativeLogLikelihood","NegativeLogLikelihoodConfig","Pooling","PoolingConfig","PoolingMode","ReLU","Reshape","ReshapeConfig","Rnn","RnnConfig","Sequential","SequentialConfig","Sigmoid","Softmax","TanH","activation","common","container","loss","utility","ReLU","Sigmoid","TanH","relu","sigmoid","tanh","ReLU","borrow","borrow_mut","clone","clone_into","compute_in_place","compute_input_gradient","compute_output","exact_num_input_blobs","exact_num_output_blobs","fmt","from","into","reshape","to_owned","try_from","try_into","type_id","vzip","Sigmoid","borrow","borrow_mut","clone","clone_into","compute_in_place","compute_input_gradient","compute_output","exact_num_input_blobs","exact_num_output_blobs","fmt","from","into","reshape","to_owned","try_from","try_into","type_id","vzip","TanH","borrow","borrow_mut","clone","clone_into","compute_in_place","compute_input_gradient","compute_output","exact_num_input_blobs","exact_num_output_blobs","fmt","from","into","reshape","to_owned","try_from","try_into","type_id","vzip","Convolution","ConvolutionConfig","Dropout","DropoutConfig","FilterLayer","Linear","LinearConfig","LogSoftmax","Pooling","PoolingConfig","PoolingMode","Rnn","RnnConfig","Softmax","calculate_output_shape","calculate_spatial_output_dims","convolution","dropout","filter_shape","linear","log_softmax","num_spatial_dims","padding","padding_dims","pooling","rnn","softmax","spatial_filter_dims","stride","stride_dims","Convolution","ConvolutionConfig","auto_weight_blobs","borrow","borrow","borrow_mut","borrow_mut","calculate_output_shape","clone","clone","clone_into","clone_into","compute_input_gradient","compute_output","compute_parameters_gradient","exact_num_input_blobs","exact_num_output_blobs","filter_shape","filter_shape","fmt","fmt","from","from","from_config","into","into","into","num_output","num_spatial_dims","padding","padding","reshape","resize_shared_workspace","stride","stride","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Dropout","DropoutConfig","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_input_gradient","compute_output","default","exact_num_input_blobs","exact_num_output_blobs","fmt","fmt","from","from","from_config","into","into","into","probability","reshape","seed","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Linear","LinearConfig","auto_weight_blobs","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compute_input_gradient","compute_output","compute_parameters_gradient","default","exact_num_output_blobs","fmt","fmt","from","from","from_config","into","into","into","output_size","reshape","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","LogSoftmax","borrow","borrow_mut","clone","clone_into","compute_input_gradient","compute_output","default","fmt","from","into","reshape","to_owned","try_from","try_into","type_id","vzip","Average","Max","Pooling","PoolingConfig","PoolingMode","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_output_shape","clone","clone","clone","clone_into","clone_into","clone_into","compute_input_gradient","compute_output","exact_num_input_blobs","exact_num_output_blobs","filter_shape","filter_shape","fmt","fmt","fmt","from","from","from","from_config","into","into","into","into","mode","num_spatial_dims","padding","padding","reshape","stride","stride","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Rnn","RnnConfig","auto_weight_blobs","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_input_gradient","compute_output","compute_parameters_gradient","direction_mode","dropout_probability","dropout_seed","exact_num_input_blobs","exact_num_output_blobs","fmt","fmt","from","from","from_config","hidden_size","input_mode","into","into","into","num_layers","reshape","resize_shared_workspace","rnn_type","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Softmax","borrow","borrow_mut","clone","clone_into","compute_input_gradient","compute_output","default","fmt","from","into","reshape","to_owned","try_from","try_into","type_id","vzip","Sequential","SequentialConfig","sequential","Sequential","SequentialConfig","add_input","add_layer","backward_input","backward_parameters","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compute_input_gradient","compute_output","compute_parameters_gradient","default","empty","find_in_place_output","fmt","fmt","force_backward","forward","from","from","from_config","init_layers","inputs","inputs_data","inputs_gradients","into","into","into","is_container","layers","learnable_weights","learnable_weights_gradients","learnable_weights_names","outputs_data","outputs_gradients","resize_shared_workspace","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MeanSquaredError","NegativeLogLikelihood","NegativeLogLikelihoodConfig","mean_squared_error","negative_log_likelihood","MeanSquaredError","borrow","borrow_mut","clone","clone_into","compute_input_gradient","compute_output","default","fmt","from","into","reshape","to_owned","try_from","try_into","type_id","vzip","NegativeLogLikelihood","NegativeLogLikelihoodConfig","auto_output_blobs","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_input_gradient","compute_output","exact_num_input_blobs","exact_num_output_blobs","fmt","fmt","from","from","from_config","into","into","into","loss_weight","num_classes","reshape","sync_native","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Flatten","Reshape","ReshapeConfig","flatten","reshape","Flatten","borrow","borrow_mut","clone","clone_into","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","Reshape","ReshapeConfig","auto_output_blobs","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_in_place","compute_input_gradient","compute_output","fmt","fmt","from","from","from_config","into","into","into","of_shape","reshape","shape","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConfusionMatrix","Exp","Fixed","ISolver","L2","LRPolicy","Momentum","RegressionEvaluator","RegressionLoss","RegularizationMethod","SGD","SGDKind","Solver","SolverConfig","SolverKind","Step","backend","base_lr","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clip_gradients","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compute_update","confusion_matrix","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_config","gamma","get_learning_rate","init","into","into","into","into","into","into","lr_policy","minibatch_size","momentum","mut_network","name","network","network","objective","regression_evaluator","regularization_method","solver","stepsize","to_owned","to_owned","to_owned","to_owned","to_owned","train_minibatch","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","weight_decay","with_config","with_config","worker","0","Accuracy","ConfusionMatrix","Sample","accuracy","add_sample","add_samples","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","correct","fmt","fmt","fmt","fmt","fmt","from","from","from","get_predictions","into","into","into","new","samples","set_capacity","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MeanSquaredErrorAccuracy","RegressionEvaluator","RegressionLoss","Sample","accuracy","add_sample","add_samples","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","fmt","fmt","fmt","from","from","from","get_predictions","into","into","into","loss","loss","new","samples","set_capacity","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Momentum","sgd","Momentum","momentum","Momentum","backend","borrow","borrow_mut","compute_update","fmt","from","init","into","new","try_from","try_into","type_id","vzip","ArcLock","Axpby","LayerOps","SolverOps","axpby","cast_vec_usize_to_i32","native_backend","native_scalar","write_batch_sample","write_to_memory","write_to_memory_offset","Constant","DimCheckMode","FillerType","Glorot","Permissive","Strict","WeightConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_dimensions","clone","clone","clone","clone_into","clone_into","clone_into","decay_mult","decay_mult","default","fill","fill_constant","fill_glorot","filler","fmt","fmt","fmt","from","from","from","into","into","into","lr_mult","lr_mult","name","share_mode","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","input_size","output_size","value"],"q":["juice","","","","","","","","","","juice::layer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juice::layer::LayerType","","","","","","","","juice::layers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juice::layers::activation","","","","","","juice::layers::activation::relu","","","","","","","","","","","","","","","","","","","juice::layers::activation::sigmoid","","","","","","","","","","","","","","","","","","","juice::layers::activation::tanh","","","","","","","","","","","","","","","","","","","juice::layers::common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juice::layers::common::convolution","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juice::layers::common::dropout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juice::layers::common::linear","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juice::layers::common::log_softmax","","","","","","","","","","","","","","","","","juice::layers::common::pooling","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juice::layers::common::rnn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juice::layers::common::softmax","","","","","","","","","","","","","","","","","juice::layers::container","","","juice::layers::container::sequential","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juice::layers::loss","","","","","juice::layers::loss::mean_squared_error","","","","","","","","","","","","","","","","","juice::layers::loss::negative_log_likelihood","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juice::layers::utility","","","","","juice::layers::utility::flatten","","","","","","","","","","","","","juice::layers::utility::reshape","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juice::solver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juice::solver::SolverKind","juice::solver::confusion_matrix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juice::solver::regression_evaluator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juice::solvers","","juice::solvers::sgd","","juice::solvers::sgd::momentum","","","","","","","","","","","","","","juice::util","","","","","","","","","","","juice::weight","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juice::weight::FillerType","",""],"d":["macro helper to implement activation trait TODO see common","macro to implement ilayer common TODO use Some(1) as a …","macro helper for default loss","Implement [ISolver][1] for [SGD solvers][2]. [1]: …","Provides the generics and interfaces for the specific …","Provides the fundamental units of computation in a Neural …","Provides the generics and interfaces for the specific …","Provides the trainers for the Layers.","Provides common utility functions","Provides configuration of weights and their initialization.","A Layer that can compute the gradient with respect to its …","A Layer that can compute the output for a given input.","A Layer that can compute the gradient with respect to its …","Convolution Layer","Dropout","A Layer in a Neural Network that can handle forward and …","The generic Layer","Layer Configuration Struct","The Layer Types","Linear Layer","LogSoftmax Layer","MeanSquaredError Layer","NegativeLogLikelihood Layer","Pooling Layer","ReLU Layer","Reshape Layer","RNN Layer","Sequential Layer","Sigmoid Layer","Softmax Layer","TanH Layer","Add a input by name","Add a output by name","Return whether to allow force_backward for a given input …","Return whether “anonymous” output blobs are created …","Return whether weight blobs are created automatically for …","Uses the underlying layer implementation to compute a …","Compute the [backpropagation][1] input gradient using the …","Calculate the gradient w.r.t. input.","Compute the [backpropagation][1] parameters gradient using …","Calculate the gradient w.r.t. parameters.","All the blobs of the layer that can be addressed by name.","","","","","","","Clears the [weights][1] gradients and zero-inits them. [1]…","","","","","Return wether the computations of a layer should be done …","Compute gradients with respect to the inputs and write …","Compute output for given input and write them into …","Compute gradients with respect to the parameters and write …","The configuration of the Layer","Connect the layer to another layers and set up tensors for …","Returns the exact number of input blobs required by the …","Returns the exact number of output blobs required by the …","","","","","Compute the [feedforward][1] layer output using the …","Uses the underlying layer implementation to compute a …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new Layer from a [LayerConfig][1]. [1]: …","Initialize the layer for computation.","Initializes layer for [backpropagation][1] [1]: …","Set [backpropagation][1] flags to force this layer to …","Returns the Name of the requested input Blob","Returns the names of all the input blobs.","Names for all the input blobs of the layer.","References to all the input blobs of the layer.","References to all the input blobs of the layer.","The name for each input Blob","Return the input tensors of the layer.","Return the gradients of the input tensors of the layer.","Returns the number of input Blobs","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return wether the layer is a container.","Returns <code>true</code> when the layer is using in-place computation.","The type of the Layer","Return the learnable weights inside the layer.","Returns all the learnable weights in the layer.","Return the gradients for the learnable weights inside the …","Returns the gradients for all the learnable weights in the …","Return the learning rates for the learnable weights inside …","Returns the learning rate for all the learnable weights in …","Return the names of the learnable weights inside the layer.","Returns the names of all the learnable weights in the …","Read a Cap’n Proto file at the specified path and …","Returns the [loss weight][1] associated with the weight …","Return the associated loss weight for a given output blob …","Returns the minimum number of output blobs required by the …","Identifies the Network","The name of the Layer","Creates a new LayerConfig","Returns the Name of the requested output Blob","References to all the output blobs of the layer.","References to all the output blobs of the layer.","The name for each output Blob","Return the output tensors of the layer.","Return the gradients of the output tensors of the layer.","Returns the number of output Blobs","Returns the requested WeightConfig","Specifies training configuration for each weight blob.","Returns the number of params","Specifies on which inputs the backpropagation should be …","Adjust to shapes of the output blobs to fit the shapes of …","Adjust size of shared workspace.","Serialize the Layer and it’s weights to a Cap’n Proto …","Sets whether the layer should compute gradients w.r.t. a …","Returns wether the LayerType supports in-place operations.","Return wether a simple native backend should be used to […","Synchronize the layers backend.","","","","","","","","","","","","Updates the [weights][1] with the weight update computed …","Check if the configured parameters make sense.","","","","The vector that stores shared references to the weights in …","The vector that stores shared references to the weights in …","The [implementation][1] of the Layer. [1]: …","","","","","","","","","","","","","","","","","","","","","","","Implement [ILayer][1] for [activation layers][2]. [1]: …","","","","","","","Implement [ILayer][1] for [activation layers][2]. [1]: …","","Implement [ILayer][1] for [activation layers][2]. [1]: …","Provides nonlinear activation methods.","Provides common neural network layers.","Provides container layers.","Provides methods to calculate the loss (cost) of some …","Provides various helpful layers, which might be not …","","","","Applies the nonlinear Rectified Linear Unit.","Applies the nonlinear Log-Sigmoid function.","Applies the nonlinear TanH function.","ReLU Activation Layer","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Sigmoid Activation Layer","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","TanH Activation Layer","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Provides common utilities for Layers that utilize a filter …","","","","","","","","","","Calculate output shape based on the shape of filter, …","Computes the shape of the spatial dimensions.","Convolves the input tensor.","Applies a Dropout layer to the input data <code>x</code>","The filter_shape that will be used by <code>spatial_filter_dims</code>.","Applies a linear transformation to the input data …","Computes the logarithmic softmax of its input.","Calculates the number of spatial dimensions for the …","The padding that will be used by <code>padding_dims</code>.","Retrievs the padding for the convolution based on …","Applies pooling to the input.","Create a Recursive Layer","Computes the softmax of its input.","Retrievs the spatial dimensions for the filter based on …","The stride that will be used by <code>stride_dims</code>.","Retrievs the stride for the convolution based on …","Convolution Layer","Specifies configuration parameters for a Convolution Layer.","","","","","","","","","","","","","","","","","The size of the kernel","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a Convolution layer from a ConvolutionConfig.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The number of output feature maps","Calculates the number of spatial dimensions for the …","","The padding size","","","","The stride size","","","","","","","","","","","Dropout Layer","Specifies configuration parameters for a Dropout Layer.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a Dropout layer from a DropoutConfig.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","The probability to clamp a value to zero","","The initial seed for the (pseudo-)random generator","","","","","","","","","","","Linear Layer","Specifies configuration parameters for a Linear Layer.","","","","","","","","Since we have row vectors instead of columns, xW^T = …","Basically, x has the shape (k, n) where k is the batch …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a Linear layer from a LinearConfig.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","The number of output values","","","","","","","","","","","LogSoftmax Layer","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","The average of all values inside the pooling window will …","The maximum value inside the pooling window will be used …","Pooling Layer","Specifies configuration parameters for a Pooling Layer.","The different modes of pooling that can be calculated.","","","","","","","","","","","","","","","","","","","The shape of the filter","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a Pooling layer from a PoolingConfig.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","The PoolingMode to use","Calculates the number of spatial dimensions for the …","","The padding size","","","The stride size","","","","","","","","","","","","","","","","","Specifies configuration parameters for a RNN Layer. TODO: …","","","","","","","","","","","","","RNN Direction","Dropout Probability","Dropout Seed","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a RNN from a RNNConfig","Size of the Hidden Layer","Input Mode","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Number of Hidden Layers","","","Type of RNN","","","","","","","","","","","Softmax Layer","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","A container layer that runs operations sequentially on the …","Sequential Layer","Specifies configuration parameters for a Sequential Layer.","Add a input to the network.","Add layer at the end of the sequential container.","","","","","","","","","","","","","Create a empty Sequential container layer.","Tries to find the output of a previous layer that is …","","","Defines if the container will force every layer to do […","","Returns the argument unchanged.","Returns the argument unchanged.","Create a Sequential layer from a SequentialConfig.","Initializes a sequential container.","Defines the names and shapes of the input tensors.","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Defines the layers of the container via LayerConfigs.","","","","","","","","","","","","","","","","","","","Provides Loss &amp; Gradient for Mean Squared Error","TODO: DOC","Mean Squared Error Layer","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","NegativeLogLikelihood Loss Layer","Specifies configuration parameters for a …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a NegativeLogLikelihood layer from a …","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","How many different classes can be classified.","","","","","","","","","","","","","","","","Flattens the bottom Blob into a simpler top Blob.","Utility layer to give a tensor another shape.","Flattening Utility Layer","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Reshape Utility Layer","Specifies configuration parameters for a Reshape Layer.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a Reshape layer from a ReshapeConfig.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Create a ReshapeConfig that describes a Reshape layer with …","","The target shape that the input should assume.","","","","","","","","","","","","return base_lr * gamma ^ iter","always return base_lr","Implementation of a specific Solver.","L2 regularization","Learning Rate Policy for a [Solver][1] [1]: …","Stochastic Gradient Descent with Momentum. See […","","","[Regularization][1] method for a [Solver][2]. [1]: …","Stochastic Gradient Descent. See [SGDKind][1] for all …","All available types of Stochastic Gradient Descent solvers.","Solver that optimizes a [Layer][1] with a given objective. …","Configuration for a Solver","All available types of solvers.","learning rate decays every <code>step</code> iterations. return base_lr …","Returns the backend used by the solver.","The base learning rate.","","","","","","","","","","","","","The threshold for clipping gradients.","","","","","","","","","","","Update the weights of the net with part of the gradient.","TODO: DOC","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create Solver from [SolverConfig][1] [1]: …","gamma as used in the calculation of most learning rate …","Return the learning rate for a supplied iteration.","Initialize the solver, setting up any network related data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The learning rate policy to be used.","Accumulate gradients over <code>minibatch_size</code> instances.","The [momentum][1] multiplier for [SGD solvers][2]. [1]: …","Returns the network trained by the solver.","Name of the solver.","Returns the network trained by the solver.","The [LayerConfig][1] that is used to initialize the …","The [LayerConfig][1] that is used to initialize the …","Set of Evaluators for Regression Problems","The method of [regularization][1] to use. [1]: …","The [Solver implementation][1] to be used. [1]: …","The stepsize used in Step and Sigmoid learning policies.","","","","","","Train the network with one minibatch","","","","","","","","","","","","","","","","","","","","","","","","","The global [weight decay][1] multiplier for [regularization…","Create a Solver of the specified kind with the supplied …","Create a Solver of the specified kind with the supplied …","The implementation of the Solver","","The accuracy of the predictions in a ConfusionMatrix.","A ConfusionMatrix.","A single prediction Sample.","Return the accuracy of the collected predictions.","Add a sample by providing the expected <code>target</code> class and …","Add a batch of samples.","","","","","","","","","","","Returns if the prediction is equal to the expected target.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the predicted classes from the output of a network.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a ConfusionMatrix that analyzes the prediction of …","Return all collected samples.","Set the <code>capacity</code> of the ConfusionMatrix","","","","","","","","","","","","","","","","","Provides loss calculated by Mean Squared Error for sampled …","Sampled Evaluator for Regression Problems","Trait to show loss &amp; metric for a Regression Evaluator","A single prediction sample.","Return the accuracy of the collected predictions.","Add a sample by providing the expected <code>target</code> value and …","Add a batch of samples.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the predicted value from the output of a network.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Loss function to produce metric","","Create an evaluator for Regression Problems","Return all collected samples.","Set the <code>capacity</code> of the Regression Evaluator","","","","","","","","","","","","","","","","","Provides ISolver implementations based on [Stochastic …","","A [Stochastic Gradient Descent with Momentum][1] [1]: …","Stochastic Gradient Descent with Momentum.","","","","","","Returns the argument unchanged.","Initialize the SGD Momentum solver, allocating memory for …","Calls <code>U::from(self)</code>.","Create a new SGD Momentum solver.","","","","","Shared Lock used for our tensors","Extends IBlas with Axpby","Encapsulates all traits used in Layers.","Encapsulates all traits required by Solvers.","Performs the operation y := a<em>x + b</em>y .","Casts a Vec to as Vec","Create a simple native backend.","Create a Coaster SharedTensor for a scalar value.","Write the <code>i</code>th sample of a batch into a SharedTensor.","Write into a native Coaster Memory.","Write into a native Coaster Memory with a offset.","Fills the weight blob with a constant <code>value</code> (all values …","Enum for specifing the shared weights behaviour","Enum for specifing the type of Filler.","Fills the weight blobs based on the paper:","Permissive requires only the count of weights to match.","Strict requires that shapes match.","Specifies training configuration for a weight blob.","","","","","","","Checks dimensions of two blobs according to the <code>share_mode</code>.","","","","","","","The multiplier on the global weight decay for this weight …","The multiplier on the global weight decay for this …","","Uses a filler as specified by this FillerType to fill the …","Directly use the Constant Filler.","Directly use the Glorot Filler.","The filler that initializes the weights in the weight blob.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The multiplier on the global learning rate for this weight …","The multiplier on the global learning rate for this …","The name of the weight blob – useful for sharing weights …","Whether to require shared weights to have the same shape, …","","","","","","","","","","","","","","","","Number of input nodes for each output.","Number of output nodes for each input.","The value that will be used to fill the blob."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,3,3,3,4,3,4,3,4,4,4,2,1,4,2,1,4,2,1,2,1,3,5,6,7,4,4,3,3,3,4,2,1,3,4,4,2,1,4,3,4,4,2,4,4,4,4,2,3,3,2,4,2,1,3,4,2,3,4,3,4,3,4,3,4,4,4,3,3,4,2,2,2,4,4,2,3,3,2,2,2,2,2,3,3,4,4,1,3,4,2,1,4,2,1,4,2,1,4,2,1,4,2,4,2,1,4,4,4,8,9,10,11,12,13,14,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,19,0,0,19,19,19,0,0,0,19,19,19,0,0,20,20,21,20,21,20,20,21,20,21,20,20,20,20,20,20,21,20,21,20,21,20,20,21,21,21,20,20,21,20,20,20,21,20,21,20,21,20,21,20,21,20,21,0,0,22,23,22,23,22,23,22,23,22,22,23,22,22,22,23,22,23,22,22,23,23,23,22,23,22,23,22,23,22,23,22,23,22,23,0,0,24,24,25,24,25,25,25,24,24,24,24,24,24,25,24,25,24,24,25,25,25,24,25,24,25,24,25,24,25,24,25,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,0,0,0,28,29,27,28,29,27,28,28,29,27,28,29,27,28,28,28,28,28,29,28,29,27,28,29,27,28,28,29,29,27,29,28,28,29,28,28,29,28,29,27,28,29,27,28,29,27,28,29,27,28,29,27,0,0,30,30,31,30,31,30,31,30,31,30,30,30,31,31,31,30,30,30,31,30,31,30,31,31,30,31,31,31,30,30,31,30,31,30,31,30,31,30,31,30,31,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,0,33,33,34,34,34,33,34,33,33,33,34,34,34,33,34,33,34,33,33,34,34,33,34,34,33,34,34,34,33,33,34,33,34,34,34,34,34,34,33,34,33,34,33,34,33,34,33,0,0,0,0,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,36,36,37,36,37,36,37,36,37,36,36,36,36,36,37,36,37,36,36,37,37,36,37,36,36,36,37,36,37,36,37,36,37,36,37,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,38,38,38,0,0,39,39,40,39,40,39,40,39,40,39,39,39,39,40,39,40,39,39,40,40,40,39,40,39,40,39,40,39,40,39,40,39,40,0,41,41,0,42,0,43,0,0,0,44,0,0,0,0,41,45,46,47,46,44,43,41,42,47,46,44,43,41,42,46,46,44,43,41,42,46,44,43,41,42,45,0,46,45,47,46,44,43,41,42,47,46,44,43,41,42,47,46,46,45,47,46,44,43,41,42,46,46,46,47,46,47,46,46,0,46,46,46,46,44,43,41,42,47,47,46,44,43,41,42,47,46,44,43,41,42,47,46,44,43,41,42,47,46,44,43,41,42,46,44,43,47,48,0,0,0,49,49,49,49,50,51,49,50,51,50,51,50,51,50,49,50,50,51,51,49,50,51,49,49,50,51,49,49,49,50,51,50,51,49,50,51,49,50,51,49,50,51,49,50,51,0,0,0,0,52,52,52,52,53,54,52,53,54,53,54,53,54,55,52,53,53,54,52,53,54,52,52,53,54,55,54,52,52,52,53,54,53,52,53,54,52,53,54,52,53,54,52,53,54,0,0,0,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,57,0,0,0,0,0,0,58,0,0,58,59,59,0,60,59,58,60,59,58,60,60,59,58,60,59,58,60,60,60,58,58,58,60,60,59,58,60,59,58,60,59,58,60,60,60,60,60,59,58,60,59,58,60,59,58,60,59,58,60,59,58,61,61,62],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["layerconfig",3],["str",0]]],[[["layerconfig",3],["str",0]]],[[["",0],["usize",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["layer",3,[["ibackend",8]]]],["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]],[[["",0],["",0]]],[[["layer",3,[["ibackend",8]]]],["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]],[[["",0],["",0]]],[[["layer",3,[["ibackend",8]]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["layer",3,[["ibackend",8]]]]],[[["layerconfig",3]],["layerconfig",3]],[[["layertype",4]],["layertype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["bool",0]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["layer",3,[["ibackend",8]]],["hashmap",3],["hashmap",3]]],[[["",0]],["option",4,[["usize",0]]]],[[["",0]],["option",4,[["usize",0]]]],[[["ilayer",8],["formatter",3]],["result",6]],[[["layer",3,[["",26,[["debug",8],["ibackend",8]]]]],["formatter",3]],["result",6]],[[["layerconfig",3],["formatter",3]],["result",6]],[[["layertype",4],["formatter",3]],["result",6]],[[["",0],["",0]]],[[["layer",3,[["ibackend",8]]]],["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]],[[]],[[]],[[]],[[["rc",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]],["copy",8,[["f32",0]]]]]]],["layerconfig",3]],["layer",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]],["copy",8,[["f32",0]]]]]]]],[[["",0],["rc",3]]],[[["layer",3,[["ibackend",8]]],["hashset",3],["hashset",3]]],[[["layer",3,[["ibackend",8]]]]],[[["layerconfig",3],["usize",0]],["option",4,[["string",3]]]],[[["layer",3,[["ibackend",8]]]]],null,null,null,null,[[["",0]],["option",4,[["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]]]],[[["",0]],["option",4,[["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]]]],[[["layerconfig",3]],["usize",0]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["layer",3,[["ibackend",8]]]],["bool",0]],null,[[["",0]],["option",4,[["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]]]],[[["layer",3,[["ibackend",8]]]],["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]],[[["",0]],["option",4,[["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]]]],[[["layer",3,[["ibackend",8]]]],["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]],[[["",0]],["option",4,[["vec",3,[["option",4,[["f32",0]]]]]]]],[[["layer",3,[["ibackend",8]]]],["vec",3,[["option",4,[["f32",0]]]]]],[[["",0]],["option",4,[["vec",3,[["string",3]]]]]],[[["layer",3,[["ibackend",8]]]],["vec",3,[["string",3]]]],[[["rc",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]],["asref",8,[["path",3]]]],["result",6,[["layer",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]]]]],[[["layer",3,[["ibackend",8]]],["usize",0]],["option",4,[["f32",0]]]],[[["",0],["usize",0]],["option",4,[["f32",0]]]],[[["",0]],["usize",0]],null,null,[[["str",0],["into",8,[["layertype",4]]]],["layerconfig",3]],[[["layerconfig",3],["usize",0]],["option",4,[["string",3]]]],null,null,null,[[["",0]],["option",4,[["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]]]],[[["",0]],["option",4,[["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]]]],[[["layerconfig",3]],["usize",0]],[[["layerconfig",3],["usize",0]],["option",4,[["weightconfig",3]]]],null,[[["layerconfig",3]],["usize",0]],null,[[["",0],["rc",3],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3]]],[[["",0],["rc",3],["option",4,[["arclock",6,[["sharedtensor",3,[["u8",0]]]]]]]],["option",4,[["arclock",6,[["sharedtensor",3,[["u8",0]]]]]]]],[[["layer",3,[["ibackend",8]]],["asref",8,[["path",3]]]],["result",6]],[[["layer",3,[["ibackend",8]]],["usize",0],["bool",0]]],[[["layertype",4]],["bool",0]],[[["",0]],["bool",0]],[[["layer",3,[["ibackend",8]]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["layer",3,[["ibackend",8]]],["",0]]],[[["layerconfig",3]],["result",4,[["str",0]]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["relu",3]],["relu",3]],[[["",0],["",0]]],[[["relu",3]],["bool",0]],[[["relu",3],["",0]]],[[["relu",3],["",0]]],[[["relu",3]],["option",4,[["usize",0]]]],[[["relu",3]],["option",4,[["usize",0]]]],[[["relu",3],["formatter",3]],["result",6]],[[]],[[]],[[["relu",3],["rc",3,[["",26,[["ibackend",8],["relu",8,[["f32",0]]],["relupointwise",8,[["f32",0]]]]]]],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["sigmoid",3]],["sigmoid",3]],[[["",0],["",0]]],[[["sigmoid",3]],["bool",0]],[[["sigmoid",3],["",0]]],[[["sigmoid",3],["",0]]],[[["sigmoid",3]],["option",4,[["usize",0]]]],[[["sigmoid",3]],["option",4,[["usize",0]]]],[[["sigmoid",3],["formatter",3]],["result",6]],[[]],[[]],[[["sigmoid",3],["rc",3,[["",26,[["ibackend",8],["sigmoid",8,[["f32",0]]],["sigmoidpointwise",8,[["f32",0]]]]]]],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["tanh",3]],["tanh",3]],[[["",0],["",0]]],[[["tanh",3]],["bool",0]],[[["tanh",3],["",0]]],[[["tanh",3],["",0]]],[[["tanh",3]],["option",4,[["usize",0]]]],[[["tanh",3]],["option",4,[["usize",0]]]],[[["tanh",3],["formatter",3]],["result",6]],[[]],[[]],[[["tanh",3],["rc",3,[["",26,[["ibackend",8],["tanh",8,[["f32",0]]],["tanhpointwise",8,[["f32",0]]]]]]],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["vec",3,[["usize",0]]]],[[],["vec",3,[["usize",0]]]],null,null,[[["",0]]],null,null,[[["",0]],["usize",0]],[[["",0]]],[[["",0],["usize",0]],["vec",3,[["usize",0]]]],null,null,null,[[["",0],["usize",0]],["vec",3,[["usize",0]]]],[[["",0]]],[[["",0],["usize",0]],["vec",3,[["usize",0]]]],null,null,[[["convolution",3,[["",26,[["ibackend",8],["convolution",8,[["f32",0]]]]]]]],["bool",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["convolution",3,[["convolution",8,[["f32",0]]]]]],["vec",3,[["usize",0]]]],[[["convolution",3,[["",26,[["clone",8],["convolution",8,[["f32",0]]]]]]]],["convolution",3,[["",26,[["clone",8],["convolution",8,[["f32",0]]]]]]]],[[["convolutionconfig",3]],["convolutionconfig",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["convolution",3,[["",26,[["ibackend",8],["convolution",8,[["f32",0]]]]]]],["",0]]],[[["convolution",3,[["",26,[["ibackend",8],["convolution",8,[["f32",0]]]]]]],["",0]]],[[["convolution",3,[["",26,[["ibackend",8],["convolution",8,[["f32",0]]]]]]],["",0]]],[[["convolution",3,[["",26,[["ibackend",8],["convolution",8,[["f32",0]]]]]]]],["option",4,[["usize",0]]]],[[["convolution",3,[["",26,[["ibackend",8],["convolution",8,[["f32",0]]]]]]]],["option",4,[["usize",0]]]],[[["convolution",3,[["convolution",8,[["f32",0]]]]]]],null,[[["convolution",3,[["",26,[["debug",8],["convolution",8,[["f32",0]]]]]]],["formatter",3]],["result",6]],[[["convolutionconfig",3],["formatter",3]],["result",6]],[[]],[[]],[[["convolutionconfig",3]],["convolution",3,[["convolution",8,[["f32",0]]]]]],[[]],[[]],[[["convolutionconfig",3]],["layertype",4]],null,[[["convolution",3,[["convolution",8,[["f32",0]]]]]],["usize",0]],[[["convolution",3,[["convolution",8,[["f32",0]]]]]]],null,[[["convolution",3,[["",26,[["ibackend",8],["convolution",8,[["f32",0]]]]]]],["rc",3,[["",26,[["ibackend",8],["convolution",8,[["f32",0]]]]]]],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3]]],[[["convolution",3,[["",26,[["ibackend",8],["convolution",8,[["f32",0]]]]]]],["rc",3,[["",26,[["ibackend",8],["convolution",8,[["f32",0]]]]]]],["option",4,[["arclock",6,[["sharedtensor",3,[["u8",0]]]]]]]],["option",4,[["arclock",6,[["sharedtensor",3,[["u8",0]]]]]]]],[[["convolution",3,[["convolution",8,[["f32",0]]]]]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["dropout",3,[["clone",8],["",26,[["clone",8],["dropout",8,[["clone",8]]]]]]]],["dropout",3,[["clone",8],["",26,[["clone",8],["dropout",8,[["clone",8]]]]]]]],[[["dropoutconfig",3]],["dropoutconfig",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["dropout",3,[["f32",0],["",26,[["ibackend",8],["dropout",8,[["f32",0]]]]]]],["",0]]],[[["dropout",3,[["f32",0],["",26,[["ibackend",8],["dropout",8,[["f32",0]]]]]]],["",0]]],[[],["dropoutconfig",3]],[[["dropout",3,[["f32",0],["",26,[["ibackend",8],["dropout",8,[["f32",0]]]]]]]],["option",4,[["usize",0]]]],[[["dropout",3,[["f32",0],["",26,[["ibackend",8],["dropout",8,[["f32",0]]]]]]]],["option",4,[["usize",0]]]],[[["dropout",3,[["debug",8],["",26,[["debug",8],["dropout",8,[["debug",8]]]]]]],["formatter",3]],["result",6]],[[["dropoutconfig",3],["formatter",3]],["result",6]],[[]],[[]],[[["dropoutconfig",3]],["dropout",3,[["dropout",8]]]],[[]],[[["dropoutconfig",3]],["layertype",4]],[[]],null,[[["dropout",3,[["f32",0],["",26,[["ibackend",8],["dropout",8,[["f32",0]]]]]]],["rc",3,[["",26,[["ibackend",8],["dropout",8,[["f32",0]]]]]]],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,[[["linear",3]],["bool",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["linearconfig",3]],["linearconfig",3]],[[["",0],["",0]]],[[["linear",3],["",0]]],[[["linear",3],["",0]]],[[["linear",3],["",0]]],[[],["linear",3]],[[["linear",3]],["option",4,[["usize",0]]]],[[["linear",3],["formatter",3]],["result",6]],[[["linearconfig",3],["formatter",3]],["result",6]],[[]],[[]],[[["linearconfig",3]],["linear",3]],[[]],[[["linearconfig",3]],["layertype",4]],[[]],null,[[["linear",3],["rc",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["logsoftmax",3]],["logsoftmax",3]],[[["",0],["",0]]],[[["logsoftmax",3],["",0]]],[[["logsoftmax",3],["",0]]],[[],["logsoftmax",3]],[[["logsoftmax",3],["formatter",3]],["result",6]],[[]],[[]],[[["logsoftmax",3],["rc",3,[["",26,[["ibackend",8],["logsoftmax",8,[["f32",0]]]]]]],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["pooling",3,[["pooling",8]]]],["vec",3,[["usize",0]]]],[[["pooling",3,[["clone",8],["",26,[["clone",8],["pooling",8,[["clone",8]]]]]]]],["pooling",3,[["clone",8],["",26,[["clone",8],["pooling",8,[["clone",8]]]]]]]],[[["poolingconfig",3]],["poolingconfig",3]],[[["poolingmode",4]],["poolingmode",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["pooling",3,[["f32",0],["",26,[["ibackend",8],["pooling",8,[["f32",0]]]]]]],["",0]]],[[["pooling",3,[["f32",0],["",26,[["ibackend",8],["pooling",8,[["f32",0]]]]]]],["",0]]],[[["pooling",3,[["f32",0],["",26,[["ibackend",8],["pooling",8,[["f32",0]]]]]]]],["option",4,[["usize",0]]]],[[["pooling",3,[["f32",0],["",26,[["ibackend",8],["pooling",8,[["f32",0]]]]]]]],["option",4,[["usize",0]]]],[[["pooling",3,[["pooling",8]]]]],null,[[["pooling",3,[["debug",8],["",26,[["debug",8],["pooling",8,[["debug",8]]]]]]],["formatter",3]],["result",6]],[[["poolingconfig",3],["formatter",3]],["result",6]],[[["poolingmode",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["poolingconfig",3]],["pooling",3,[["pooling",8]]]],[[]],[[]],[[["poolingconfig",3]],["layertype",4]],[[]],null,[[["pooling",3,[["pooling",8]]]],["usize",0]],[[["pooling",3,[["pooling",8]]]]],null,[[["pooling",3,[["f32",0],["",26,[["ibackend",8],["pooling",8,[["f32",0]]]]]]],["rc",3,[["",26,[["ibackend",8],["pooling",8,[["f32",0]]]]]]],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3]]],[[["pooling",3,[["pooling",8]]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,[[["rnn",3,[["",26,[["ibackend",8],["rnn",8,[["f32",0]]]]]]]],["bool",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["rnn",3,[["",26,[["clone",8],["rnn",8,[["f32",0]]]]]]]],["rnn",3,[["",26,[["clone",8],["rnn",8,[["f32",0]]]]]]]],[[["rnnconfig",3]],["rnnconfig",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["rnn",3,[["",26,[["ibackend",8],["rnn",8,[["f32",0]]]]]]],["",0]]],[[["rnn",3,[["",26,[["ibackend",8],["rnn",8,[["f32",0]]]]]]],["",0]]],[[["rnn",3,[["",26,[["ibackend",8],["rnn",8,[["f32",0]]]]]]],["",0]]],null,null,null,[[["rnn",3,[["",26,[["ibackend",8],["rnn",8,[["f32",0]]]]]]]],["option",4,[["usize",0]]]],[[["rnn",3,[["",26,[["ibackend",8],["rnn",8,[["f32",0]]]]]]]],["option",4,[["usize",0]]]],[[["rnn",3,[["",26,[["debug",8],["rnn",8,[["f32",0]]]]]]],["formatter",3]],["result",6]],[[["rnnconfig",3],["formatter",3]],["result",6]],[[]],[[]],[[["rnnconfig",3]],["rnn",3,[["rnn",8,[["f32",0]]]]]],null,null,[[]],[[["rnnconfig",3]],["layertype",4]],[[]],null,[[["rnn",3,[["",26,[["ibackend",8],["rnn",8,[["f32",0]]]]]]],["rc",3,[["",26,[["ibackend",8],["rnn",8,[["f32",0]]]]]]],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3]]],[[["rnn",3,[["",26,[["ibackend",8],["rnn",8,[["f32",0]]]]]]],["rc",3,[["",26,[["ibackend",8],["rnn",8,[["f32",0]]]]]]],["option",4,[["arclock",6,[["sharedtensor",3,[["u8",0]]]]]]]],["option",4,[["arclock",6,[["sharedtensor",3,[["u8",0]]]]]]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["softmax",3]],["softmax",3]],[[["",0],["",0]]],[[["softmax",3],["",0]]],[[["softmax",3],["",0]]],[[],["softmax",3]],[[["softmax",3],["formatter",3]],["result",6]],[[]],[[]],[[["softmax",3],["rc",3,[["",26,[["ibackend",8],["softmax",8,[["f32",0]]]]]]],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,[[["sequentialconfig",3],["str",0]]],[[["sequentialconfig",3],["layerconfig",3]]],[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]],["",0]]],[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]],["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["sequentialconfig",3]],["sequentialconfig",3]],[[["",0],["",0]]],[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]],["",0]]],[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]],["",0]]],[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]],["",0]]],[[],["sequentialconfig",3]],[[],["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]]],[[["sequentialconfig",3],["usize",0]],["option",4,[["string",3]]]],[[["sequential",3,[["",26,[["debug",8],["ibackend",8],["layerops",8,[["f32",0]]]]]]],["formatter",3]],["result",6]],[[["sequentialconfig",3],["formatter",3]],["result",6]],null,[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]],["",0]]],[[]],[[]],[[["rc",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]],["sequentialconfig",3]],["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]]],[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]],["rc",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]],["sequentialconfig",3]]],null,[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]]],["option",4,[["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]]]],[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]]],["option",4,[["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]]]],[[]],[[["sequentialconfig",3]],["layertype",4]],[[]],[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]]],["bool",0]],null,[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]]],["option",4,[["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]]]],[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]]],["option",4,[["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]]]],[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]]],["option",4,[["vec",3,[["string",3]]]]]],[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]]],["option",4,[["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]]]],[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]]],["option",4,[["vec",3,[["arclock",6,[["sharedtensor",3,[["f32",0]]]]]]]]]],[[["sequential",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]],["rc",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]]]]]],["option",4,[["arclock",6,[["sharedtensor",3,[["u8",0]]]]]]]],["option",4,[["arclock",6,[["sharedtensor",3,[["u8",0]]]]]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["meansquarederror",3]],["meansquarederror",3]],[[["",0],["",0]]],[[["meansquarederror",3],["",0]]],[[["meansquarederror",3],["",0]]],[[],["meansquarederror",3]],[[["meansquarederror",3],["formatter",3]],["result",6]],[[]],[[]],[[["meansquarederror",3],["rc",3,[["",26,[["ibackend",8],["layerops",8,[["f32",0]]],["axpby",8,[["f32",0]]]]]]],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,[[["negativeloglikelihood",3]],["bool",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["negativeloglikelihood",3]],["negativeloglikelihood",3]],[[["negativeloglikelihoodconfig",3]],["negativeloglikelihoodconfig",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["negativeloglikelihood",3],["",0]]],[[["negativeloglikelihood",3],["",0]]],[[["negativeloglikelihood",3]],["option",4,[["usize",0]]]],[[["negativeloglikelihood",3]],["option",4,[["usize",0]]]],[[["negativeloglikelihood",3],["formatter",3]],["result",6]],[[["negativeloglikelihoodconfig",3],["formatter",3]],["result",6]],[[]],[[]],[[["negativeloglikelihoodconfig",3]],["negativeloglikelihood",3]],[[]],[[["negativeloglikelihoodconfig",3]],["layertype",4]],[[]],[[["negativeloglikelihood",3],["usize",0]],["option",4,[["f32",0]]]],null,[[["negativeloglikelihood",3],["rc",3,[["ibackend",8]]],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3]]],[[["negativeloglikelihood",3]],["bool",0]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["flatten",3]],["flatten",3]],[[["",0],["",0]]],[[["flatten",3],["formatter",3]],["result",6]],[[]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,[[["reshape",3]],["bool",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["reshape",3]],["reshape",3]],[[["reshapeconfig",3]],["reshapeconfig",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["reshape",3]],["bool",0]],[[["reshape",3],["",0]]],[[["reshape",3],["",0]]],[[["reshape",3],["formatter",3]],["result",6]],[[["reshapeconfig",3],["formatter",3]],["result",6]],[[]],[[]],[[["reshapeconfig",3]],["reshape",3]],[[]],[[["reshapeconfig",3]],["layertype",4]],[[]],[[],["reshapeconfig",3]],[[["reshape",3],["rc",3,[["ibackend",8]]],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3],["vec",3]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["solverconfig",3]],["solverconfig",3]],[[["solverkind",4]],["solverkind",4]],[[["sgdkind",4]],["sgdkind",4]],[[["lrpolicy",4]],["lrpolicy",4]],[[["regularizationmethod",4]],["regularizationmethod",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["solverconfig",3],["layer",3],["usize",0]]],null,[[],["solverconfig",3]],[[["isolver",8],["formatter",3]],["result",6]],[[["solver",3,[["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["solverconfig",3],["formatter",3]],["result",6]],[[["solverkind",4],["formatter",3]],["result",6]],[[["sgdkind",4],["formatter",3]],["result",6]],[[["lrpolicy",4],["formatter",3]],["result",6]],[[["regularizationmethod",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rc",3],["rc",3],["solverconfig",3]],["solver",3]],null,[[["solverconfig",3],["usize",0]],["f32",0]],[[["",0],["layer",3]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["solver",3]],["layer",3]],null,[[["solver",3]],["layer",3]],null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["solver",3],["arclock",6,[["sharedtensor",3,[["f32",0]]]]],["arclock",6,[["sharedtensor",3,[["f32",0]]]]]],["arclock",6,[["sharedtensor",3,[["f32",0]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["solverkind",4],["rc",3,[["",26,[["ibackend",8],["solverops",8,[["f32",0]]]]]]],["solverconfig",3]],["box",3,[["isolver",8]]]],[[["sgdkind",4],["rc",3,[["",26,[["ibackend",8],["solverops",8,[["f32",0]]]]]]],["solverconfig",3]],["box",3,[["isolver",8]]]],null,null,null,null,null,[[["confusionmatrix",3]],["accuracy",3]],[[["confusionmatrix",3],["usize",0],["usize",0]]],[[["confusionmatrix",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["sample",3]],["sample",3]],[[["accuracy",3]],["accuracy",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["sample",3]],["bool",0]],[[["confusionmatrix",3],["formatter",3]],["result",6]],[[["sample",3],["formatter",3]],["result",6]],[[["sample",3],["formatter",3]],["result",6]],[[["accuracy",3],["formatter",3]],["result",6]],[[["accuracy",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["confusionmatrix",3],["sharedtensor",3]],["vec",3,[["usize",0]]]],[[]],[[]],[[]],[[["usize",0]],["confusionmatrix",3]],[[["confusionmatrix",3]],["vecdeque",3]],[[["confusionmatrix",3],["option",4,[["usize",0]]]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,null,null,[[["regressionevaluator",3]],["regressionloss",8]],[[["regressionevaluator",3],["f32",0],["f32",0]]],[[["regressionevaluator",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["sample",3]],["sample",3]],[[["meansquarederroraccuracy",3]],["meansquarederroraccuracy",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["regressionloss",8],["formatter",3]],["result",6]],[[["regressionevaluator",3],["formatter",3]],["result",6]],[[["sample",3],["formatter",3]],["result",6]],[[["sample",3],["formatter",3]],["result",6]],[[["meansquarederroraccuracy",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["regressionevaluator",3],["sharedtensor",3]],["vec",3,[["f32",0]]]],[[]],[[]],[[]],[[["",0]],["f32",0]],[[["meansquarederroraccuracy",3]],["f32",0]],[[["option",4,[["string",3]]]],["regressionevaluator",3]],[[["regressionevaluator",3]],["vecdeque",3]],[[["regressionevaluator",3],["option",4,[["usize",0]]]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,[[["momentum",3,[["",26,[["ibackend",8],["solverops",8,[["f32",0]]]]]]]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["momentum",3,[["",26,[["ibackend",8],["solverops",8,[["f32",0]]]]]]],["solverconfig",3],["layer",3],["usize",0]]],[[["momentum",3,[["",26,[["debug",8],["ibackend",8],["solverops",8,[["f32",0]]]]]]],["formatter",3]],["result",6]],[[]],[[["momentum",3,[["",26,[["ibackend",8],["solverops",8,[["f32",0]]]]]]],["layer",3]]],[[]],[[["rc",3,[["",26,[["ibackend",8],["solverops",8,[["f32",0]]]]]]]],["momentum",3,[["",26,[["ibackend",8],["solverops",8,[["f32",0]]]]]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,[[["",0],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],["result",4,[["error",4]]]],[[["vec",3,[["usize",0]]]],["vec",3,[["i32",0]]]],[[],["backend",3,[["native",3]]]],[[["",26,[["numcast",8],["copy",8]]]],["sharedtensor",3,[["",26,[["numcast",8],["copy",8]]]]]],[[["sharedtensor",3],["usize",0]]],[[["flatbox",3]]],[[["flatbox",3],["usize",0]]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["weightconfig",3],["sharedtensor",3],["sharedtensor",3],["string",3],["string",3],["string",3]],["result",4,[["string",3]]]],[[["weightconfig",3]],["weightconfig",3]],[[["dimcheckmode",4]],["dimcheckmode",4]],[[["fillertype",4]],["fillertype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["weightconfig",3]],["f32",0]],null,[[],["weightconfig",3]],[[["fillertype",4],["sharedtensor",3]]],[[["sharedtensor",3],["f32",0]]],[[["sharedtensor",3],["usize",0],["usize",0]]],null,[[["weightconfig",3],["formatter",3]],["result",6]],[[["dimcheckmode",4],["formatter",3]],["result",6]],[[["fillertype",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["weightconfig",3]],["f32",0]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,null],"p":[[4,"LayerType"],[3,"LayerConfig"],[8,"ILayer"],[3,"Layer"],[8,"ComputeInputGradient"],[8,"ComputeOutput"],[8,"ComputeParametersGradient"],[13,"Convolution"],[13,"Rnn"],[13,"Linear"],[13,"Pooling"],[13,"Sequential"],[13,"Dropout"],[13,"NegativeLogLikelihood"],[13,"Reshape"],[3,"ReLU"],[3,"Sigmoid"],[3,"TanH"],[8,"FilterLayer"],[3,"Convolution"],[3,"ConvolutionConfig"],[3,"Dropout"],[3,"DropoutConfig"],[3,"Linear"],[3,"LinearConfig"],[3,"LogSoftmax"],[4,"PoolingMode"],[3,"Pooling"],[3,"PoolingConfig"],[3,"Rnn"],[3,"RnnConfig"],[3,"Softmax"],[3,"SequentialConfig"],[3,"Sequential"],[3,"MeanSquaredError"],[3,"NegativeLogLikelihood"],[3,"NegativeLogLikelihoodConfig"],[3,"Flatten"],[3,"Reshape"],[3,"ReshapeConfig"],[4,"LRPolicy"],[4,"RegularizationMethod"],[4,"SGDKind"],[4,"SolverKind"],[8,"ISolver"],[3,"SolverConfig"],[3,"Solver"],[13,"SGD"],[3,"ConfusionMatrix"],[3,"Sample"],[3,"Accuracy"],[3,"RegressionEvaluator"],[3,"Sample"],[3,"MeanSquaredErrorAccuracy"],[8,"RegressionLoss"],[3,"Momentum"],[8,"Axpby"],[4,"FillerType"],[4,"DimCheckMode"],[3,"WeightConfig"],[13,"Glorot"],[13,"Constant"]]},\
"juice_utils":{"doc":"","t":[5,5],"n":["download_datasets","unzip_datasets"],"q":["juice_utils",""],"d":["",""],"i":[0,0],"f":[[[["str",0],["str",0]],["result",4,[["box",3,[["error",8]]]]]],[[["str",0]],["result",6]]],"p":[]},\
"rcublas":{"doc":"","t":[3,3,2,0,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,13,13,13,4,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,13,13,13,13,13,13,13,6,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["API","Context","Error","api","asum","axpy","borrow","borrow_mut","clone","clone_into","copy","create","destroy","dot","error","fmt","from","gemm","get_pointer_mode","get_version","into","nrm2","scal","set_pointer_mode","swap","to_owned","try_from","try_into","type_id","ConjTrans","Context","Device","Host","NoTrans","Operation","PointerMode","Trans","as_c","as_c","asum","axpy","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","copy","dot","drop","eq","eq","fmt","fmt","fmt","from","from","from","from_c","from_c","from_c","gemm","get_version","id_c","into","into","into","new","nrm2","pointer_mode","scal","set_pointer_mode","swap","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","AllocFailed","ArchMismatch","Error","ExecutionFailed","InternalError","InvalidValue","LicenseError","MappingError","NotInitialized","NotSupported","Result","Unknown","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","into","to_owned","to_string","try_from","try_into","type_id","0","0","0","0","1"],"q":["rcublas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rcublas::api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rcublas::error","","","","","","","","","","","","","","","","","","","","","","","","","rcublas::error::Error","","","",""],"d":["Defines the cuBLAS API.","Provides a the low-level cuBLAS context.","","","Compute the sum of magnitudes of the provided vector …","Computes a vector-scalar product and adds the result to a …","","","","","Copies a vector into another vector.","Create a new cuBLAS context, allocating resources on the …","Destroys the cuBLAS context, freeing its resources.","TODO: DOC","Provides Rust Errors for every cuBLAS status.","","Returns the argument unchanged.","Performs a general matrix-matrix multiplication.","Retrieve the pointer mode for a given cuBLAS context.","Get CUBLAS Version","Calls <code>U::from(self)</code>.","TODO: DOC","TODO: DOC","Set the pointer mode for a given cuBLAS context.","TODO: DOC","","","","","","Provides a the low-level cuBLAS context.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new cuBLAS Context from its C type.","","","","","Returns the cuBLAS Context as its C type.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new cuBLAS Context by calling the low-level API.","","","","","","","","","","","","","","","","","","Failure with allocation.","Failure with the hardware architecture.","Defines cuBLAS errors.","Failure with Kernel execution.","Failure with cuDNN.","Failure with provided value.","Failure CUDA License.","Failure with memory access or internal error/bug.","Failure with cuBLAS initialization.","Failure with an unsupported request.","","Failure","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,3,3,2,0,0,2,3,2,4,4,4,3,2,4,3,2,4,3,2,4,3,2,4,4,4,3,2,4,3,2,4,3,2,4,3,2,4,4,4,4,3,2,4,4,4,4,4,4,4,3,2,4,3,2,4,3,2,4,3,2,5,5,0,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,7,8,9,9],"f":[null,null,null,null,[[["context",3],["f32",0],["f32",0],["i32",0],["option",4,[["i32",0]]]],["result",4,[["error",4]]]],[[["context",3],["f32",0],["f32",0],["f32",0],["i32",0],["option",4,[["i32",0]]],["option",4,[["i32",0]]]],["result",4,[["error",4]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["api",3]],["api",3]],[[["",0],["",0]]],[[["context",3],["f32",0],["f32",0],["i32",0],["option",4,[["i32",0]]],["option",4,[["i32",0]]]],["result",4,[["error",4]]]],[[],["result",4,[["context",3],["error",4]]]],[[["context",3]],["result",4,[["error",4]]]],[[["context",3],["f32",0],["f32",0],["f32",0],["i32",0],["option",4,[["i32",0]]],["option",4,[["i32",0]]]],["result",4,[["error",4]]]],null,[[["api",3],["formatter",3]],["result",6]],[[]],[[["context",3],["operation",4],["operation",4],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["i32",0],["f32",0],["i32",0],["f32",0],["f32",0],["i32",0]],["result",4,[["error",4]]]],[[["context",3]],["result",4,[["pointermode",4],["error",4]]]],[[["context",3]],["result",4,[["i32",0],["error",4]]]],[[]],[[["context",3],["f32",0],["f32",0],["i32",0],["option",4,[["i32",0]]]],["result",4,[["error",4]]]],[[["context",3],["f32",0],["f32",0],["i32",0],["option",4,[["i32",0]]]],["result",4,[["error",4]]]],[[["context",3],["pointermode",4]],["result",4,[["error",4]]]],[[["context",3],["f32",0],["f32",0],["i32",0],["option",4,[["i32",0]]],["option",4,[["i32",0]]]],["result",4,[["error",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["pointermode",4]],["cublaspointermode_t",4]],[[["operation",4]],["cublasoperation_t",4]],[[["context",3],["f32",0],["f32",0],["i32",0],["option",4,[["i32",0]]]],["result",4,[["error",4]]]],[[["context",3],["f32",0],["f32",0],["f32",0],["i32",0],["option",4,[["i32",0]]],["option",4,[["i32",0]]]],["result",4,[["error",4]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["context",3]],["context",3]],[[["pointermode",4]],["pointermode",4]],[[["operation",4]],["operation",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["context",3],["f32",0],["f32",0],["i32",0],["option",4,[["i32",0]]],["option",4,[["i32",0]]]],["result",4,[["error",4]]]],[[["context",3],["f32",0],["f32",0],["f32",0],["i32",0],["option",4,[["i32",0]]],["option",4,[["i32",0]]]],["result",4,[["error",4]]]],[[["context",3]]],[[["pointermode",4],["pointermode",4]],["bool",0]],[[["operation",4],["operation",4]],["bool",0]],[[["context",3],["formatter",3]],["result",6]],[[["pointermode",4],["formatter",3]],["result",6]],[[["operation",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["cublashandle_t",6]],["context",3]],[[["cublaspointermode_t",4]],["pointermode",4]],[[["cublasoperation_t",4]],["operation",4]],[[["context",3],["operation",4],["operation",4],["i32",0],["i32",0],["i32",0],["f32",0],["f32",0],["i32",0],["f32",0],["i32",0],["f32",0],["f32",0],["i32",0]],["result",4,[["error",4]]]],[[["context",3]],["i32",0]],[[["context",3]],["cublashandle_t",6]],[[]],[[]],[[]],[[],["result",4,[["context",3],["error",4]]]],[[["context",3],["f32",0],["f32",0],["i32",0],["option",4,[["i32",0]]]],["result",4,[["error",4]]]],[[["context",3]],["result",4,[["pointermode",4],["error",4]]]],[[["context",3],["f32",0],["f32",0],["i32",0],["option",4,[["i32",0]]]],["result",4,[["error",4]]]],[[["context",3],["pointermode",4]],["result",4,[["error",4]]]],[[["context",3],["f32",0],["f32",0],["i32",0],["option",4,[["i32",0]]],["option",4,[["i32",0]]]],["result",4,[["error",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["error",4]],["error",4]],[[["",0],["",0]]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[]],[[]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null],"p":[[3,"API"],[4,"Operation"],[4,"PointerMode"],[3,"Context"],[4,"Error"],[13,"InternalError"],[13,"InvalidValue"],[13,"NotSupported"],[13,"Unknown"]]},\
"rcublas_sys":{"doc":"","t":[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,18,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,17,17,17,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,3,3,3,3,3,3,3,3,6,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,6,6,6,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,6,5,4,5,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,4,13,13,13,3,3,3,6,6,4,13,13,13,13,13,3,4,13,13,13,13,13,4,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,3,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,6,3,3,3,19,3,4,13,13,13,13,13,13,13,13,3,6,3,19,3,4,13,13,13,13,13,13,13,13,13,13,3,3,3,3,19,3,3,3,3,3,19,3,6,13,13,4,4,4,13,13,13,4,13,13,13,3,4,13,13,13,13,6,4,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,6,13,4,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,6,4,13,13,13,13,13,13,4,13,13,13,4,13,13,13,13,13,3,6,6,3,3,6,3,6,4,19,13,13,3,13,13,3,4,13,13,13,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,3,4,4,13,13,13,13,13,13,13,3,4,13,13,4,13,13,13,13,13,3,3,13,13,13,6,4,13,13,13,13,3,3,13,13,13,13,13,4,4,4,13,13,13,13,3,3,6,6,4,4,3,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,19,3,3,3,3,4,13,13,13,13,3,4,4,13,13,13,4,13,13,13,13,4,19,13,13,4,13,13,13,4,13,13,13,13,4,6,13,13,13,13,13,13,4,6,4,13,4,6,12,12,12,12,12,12,12,12,12,12,3,12,3,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,6,6,17,17,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["CUBLAS_ATOMICS_ALLOWED","CUBLAS_ATOMICS_NOT_ALLOWED","CUBLAS_COMPUTE_16F","CUBLAS_COMPUTE_16F_PEDANTIC","CUBLAS_COMPUTE_32F","CUBLAS_COMPUTE_32F_FAST_16BF","CUBLAS_COMPUTE_32F_FAST_16F","CUBLAS_COMPUTE_32F_FAST_TF32","CUBLAS_COMPUTE_32F_PEDANTIC","CUBLAS_COMPUTE_32I","CUBLAS_COMPUTE_32I_PEDANTIC","CUBLAS_COMPUTE_64F","CUBLAS_COMPUTE_64F_PEDANTIC","CUBLAS_DEFAULT_MATH","CUBLAS_DIAG_NON_UNIT","CUBLAS_DIAG_UNIT","CUBLAS_FILL_MODE_FULL","CUBLAS_FILL_MODE_LOWER","CUBLAS_FILL_MODE_UPPER","CUBLAS_GEMM_ALGO0","CUBLAS_GEMM_ALGO0_TENSOR_OP","CUBLAS_GEMM_ALGO1","CUBLAS_GEMM_ALGO10","CUBLAS_GEMM_ALGO10_TENSOR_OP","CUBLAS_GEMM_ALGO11","CUBLAS_GEMM_ALGO11_TENSOR_OP","CUBLAS_GEMM_ALGO12","CUBLAS_GEMM_ALGO12_TENSOR_OP","CUBLAS_GEMM_ALGO13","CUBLAS_GEMM_ALGO13_TENSOR_OP","CUBLAS_GEMM_ALGO14","CUBLAS_GEMM_ALGO14_TENSOR_OP","CUBLAS_GEMM_ALGO15","CUBLAS_GEMM_ALGO15_TENSOR_OP","CUBLAS_GEMM_ALGO16","CUBLAS_GEMM_ALGO17","CUBLAS_GEMM_ALGO18","CUBLAS_GEMM_ALGO19","CUBLAS_GEMM_ALGO1_TENSOR_OP","CUBLAS_GEMM_ALGO2","CUBLAS_GEMM_ALGO20","CUBLAS_GEMM_ALGO21","CUBLAS_GEMM_ALGO22","CUBLAS_GEMM_ALGO23","CUBLAS_GEMM_ALGO2_TENSOR_OP","CUBLAS_GEMM_ALGO3","CUBLAS_GEMM_ALGO3_TENSOR_OP","CUBLAS_GEMM_ALGO4","CUBLAS_GEMM_ALGO4_TENSOR_OP","CUBLAS_GEMM_ALGO5","CUBLAS_GEMM_ALGO5_TENSOR_OP","CUBLAS_GEMM_ALGO6","CUBLAS_GEMM_ALGO6_TENSOR_OP","CUBLAS_GEMM_ALGO7","CUBLAS_GEMM_ALGO7_TENSOR_OP","CUBLAS_GEMM_ALGO8","CUBLAS_GEMM_ALGO8_TENSOR_OP","CUBLAS_GEMM_ALGO9","CUBLAS_GEMM_ALGO9_TENSOR_OP","CUBLAS_GEMM_DEFAULT","CUBLAS_GEMM_DEFAULT_TENSOR_OP","CUBLAS_GEMM_DFALT","CUBLAS_GEMM_DFALT_TENSOR_OP","CUBLAS_MATH_DISALLOW_REDUCED_PRECISION_REDUCTION","CUBLAS_OP_C","CUBLAS_OP_CONJG","CUBLAS_OP_HERMITAN","CUBLAS_OP_N","CUBLAS_OP_T","CUBLAS_PEDANTIC_MATH","CUBLAS_POINTER_MODE_DEVICE","CUBLAS_POINTER_MODE_HOST","CUBLAS_SIDE_LEFT","CUBLAS_SIDE_RIGHT","CUBLAS_STATUS_ALLOC_FAILED","CUBLAS_STATUS_ARCH_MISMATCH","CUBLAS_STATUS_EXECUTION_FAILED","CUBLAS_STATUS_INTERNAL_ERROR","CUBLAS_STATUS_INVALID_VALUE","CUBLAS_STATUS_LICENSE_ERROR","CUBLAS_STATUS_MAPPING_ERROR","CUBLAS_STATUS_NOT_INITIALIZED","CUBLAS_STATUS_NOT_SUPPORTED","CUBLAS_STATUS_SUCCESS","CUBLAS_TENSOR_OP_MATH","CUBLAS_TF32_TENSOR_OP_MATH","CUBLAS_VERSION","CUBLAS_VER_BUILD","CUBLAS_VER_MAJOR","CUBLAS_VER_MINOR","CUBLAS_VER_PATCH","CUDA_C_16BF","CUDA_C_16BF","CUDA_C_16BF","CUDA_C_16F","CUDA_C_16F","CUDA_C_16F","CUDA_C_16I","CUDA_C_16I","CUDA_C_16I","CUDA_C_16U","CUDA_C_16U","CUDA_C_16U","CUDA_C_32F","CUDA_C_32F","CUDA_C_32F","CUDA_C_32I","CUDA_C_32I","CUDA_C_32I","CUDA_C_32U","CUDA_C_32U","CUDA_C_32U","CUDA_C_4I","CUDA_C_4I","CUDA_C_4I","CUDA_C_4U","CUDA_C_4U","CUDA_C_4U","CUDA_C_64F","CUDA_C_64F","CUDA_C_64F","CUDA_C_64I","CUDA_C_64I","CUDA_C_64I","CUDA_C_64U","CUDA_C_64U","CUDA_C_64U","CUDA_C_8I","CUDA_C_8I","CUDA_C_8I","CUDA_C_8U","CUDA_C_8U","CUDA_C_8U","CUDA_R_16BF","CUDA_R_16BF","CUDA_R_16BF","CUDA_R_16F","CUDA_R_16F","CUDA_R_16F","CUDA_R_16I","CUDA_R_16I","CUDA_R_16I","CUDA_R_16U","CUDA_R_16U","CUDA_R_16U","CUDA_R_32F","CUDA_R_32F","CUDA_R_32F","CUDA_R_32I","CUDA_R_32I","CUDA_R_32I","CUDA_R_32U","CUDA_R_32U","CUDA_R_32U","CUDA_R_4I","CUDA_R_4I","CUDA_R_4I","CUDA_R_4U","CUDA_R_4U","CUDA_R_4U","CUDA_R_64F","CUDA_R_64F","CUDA_R_64F","CUDA_R_64I","CUDA_R_64I","CUDA_R_64I","CUDA_R_64U","CUDA_R_64U","CUDA_R_64U","CUDA_R_8I","CUDA_R_8I","CUDA_R_8I","CUDA_R_8U","CUDA_R_8U","CUDA_R_8U","CUevent_st","CUexternalMemory_st","CUexternalSemaphore_st","CUfunc_st","CUgraphExec_st","CUgraphNode_st","CUgraph_st","CUmemPoolHandle_st","CUstream_st","CUuserObject_st","CUuuid","CUuuid_st","ECCEnabled","accessDescCount","accessDescs","accessPolicyMaxWindowSize","accessPolicyWindow","accessPolicyWindow","allocType","args","array","array","asyncEngineCount","base_ptr","binaryVersion","blockDim","blockDim","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytesize","cacheModeCA","canMapHostMemory","canUseHostPointerForRegisteredMem","clockRate","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","computeMode","computePreemptionSupported","concurrentKernels","concurrentManagedAccess","constSizeBytes","cooperative","cooperativeLaunch","cooperativeMultiDeviceLaunch","cuComplex","cuDoubleComplex","cuFloatComplex","cublasAsumEx","cublasAtomicsMode_t","cublasAxpyEx","cublasCaxpy_v2","cublasCcopy_v2","cublasCdgmm","cublasCdotc_v2","cublasCdotu_v2","cublasCgbmv_v2","cublasCgeam","cublasCgelsBatched","cublasCgemm3m","cublasCgemm3mBatched","cublasCgemm3mEx","cublasCgemm3mStridedBatched","cublasCgemmBatched","cublasCgemmEx","cublasCgemmStridedBatched","cublasCgemm_v2","cublasCgemv_v2","cublasCgeqrfBatched","cublasCgerc_v2","cublasCgeru_v2","cublasCgetrfBatched","cublasCgetriBatched","cublasCgetrsBatched","cublasChbmv_v2","cublasChemm_v2","cublasChemv_v2","cublasCher2_v2","cublasCher2k_v2","cublasCher_v2","cublasCherk3mEx","cublasCherkEx","cublasCherk_v2","cublasCherkx","cublasChpmv_v2","cublasChpr2_v2","cublasChpr_v2","cublasCmatinvBatched","cublasComputeType_t","cublasContext","cublasCopyEx","cublasCreate_v2","cublasCrot_v2","cublasCrotg_v2","cublasCscal_v2","cublasCsrot_v2","cublasCsscal_v2","cublasCswap_v2","cublasCsymm_v2","cublasCsymv_v2","cublasCsyr2_v2","cublasCsyr2k_v2","cublasCsyr_v2","cublasCsyrk3mEx","cublasCsyrkEx","cublasCsyrk_v2","cublasCsyrkx","cublasCtbmv_v2","cublasCtbsv_v2","cublasCtpmv_v2","cublasCtpsv_v2","cublasCtpttr","cublasCtrmm_v2","cublasCtrmv_v2","cublasCtrsmBatched","cublasCtrsm_v2","cublasCtrsv_v2","cublasCtrttp","cublasDasum_v2","cublasDataType_t","cublasDaxpy_v2","cublasDcopy_v2","cublasDdgmm","cublasDdot_v2","cublasDestroy_v2","cublasDgbmv_v2","cublasDgeam","cublasDgelsBatched","cublasDgemmBatched","cublasDgemmStridedBatched","cublasDgemm_v2","cublasDgemv_v2","cublasDgeqrfBatched","cublasDger_v2","cublasDgetrfBatched","cublasDgetriBatched","cublasDgetrsBatched","cublasDiagType_t","cublasDmatinvBatched","cublasDnrm2_v2","cublasDotEx","cublasDotcEx","cublasDrot_v2","cublasDrotg_v2","cublasDrotm_v2","cublasDrotmg_v2","cublasDsbmv_v2","cublasDscal_v2","cublasDspmv_v2","cublasDspr2_v2","cublasDspr_v2","cublasDswap_v2","cublasDsymm_v2","cublasDsymv_v2","cublasDsyr2_v2","cublasDsyr2k_v2","cublasDsyr_v2","cublasDsyrk_v2","cublasDsyrkx","cublasDtbmv_v2","cublasDtbsv_v2","cublasDtpmv_v2","cublasDtpsv_v2","cublasDtpttr","cublasDtrmm_v2","cublasDtrmv_v2","cublasDtrsmBatched","cublasDtrsm_v2","cublasDtrsv_v2","cublasDtrttp","cublasDzasum_v2","cublasDznrm2_v2","cublasFillMode_t","cublasGemmAlgo_t","cublasGemmBatchedEx","cublasGemmEx","cublasGemmStridedBatchedEx","cublasGetAtomicsMode","cublasGetCudartVersion","cublasGetLoggerCallback","cublasGetMathMode","cublasGetMatrix","cublasGetMatrixAsync","cublasGetPointerMode_v2","cublasGetProperty","cublasGetSmCountTarget","cublasGetStream_v2","cublasGetVector","cublasGetVectorAsync","cublasGetVersion_v2","cublasHandle_t","cublasIamaxEx","cublasIaminEx","cublasIcamax_v2","cublasIcamin_v2","cublasIdamax_v2","cublasIdamin_v2","cublasIsamax_v2","cublasIsamin_v2","cublasIzamax_v2","cublasIzamin_v2","cublasLogCallback","cublasLoggerConfigure","cublasMath_t","cublasNrm2Ex","cublasOperation_t","cublasPointerMode_t","cublasRotEx","cublasRotgEx","cublasRotmEx","cublasRotmgEx","cublasSasum_v2","cublasSaxpy_v2","cublasScalEx","cublasScasum_v2","cublasScnrm2_v2","cublasScopy_v2","cublasSdgmm","cublasSdot_v2","cublasSetAtomicsMode","cublasSetLoggerCallback","cublasSetMathMode","cublasSetMatrix","cublasSetMatrixAsync","cublasSetPointerMode_v2","cublasSetSmCountTarget","cublasSetStream_v2","cublasSetVector","cublasSetVectorAsync","cublasSetWorkspace_v2","cublasSgbmv_v2","cublasSgeam","cublasSgelsBatched","cublasSgemmBatched","cublasSgemmEx","cublasSgemmStridedBatched","cublasSgemm_v2","cublasSgemv_v2","cublasSgeqrfBatched","cublasSger_v2","cublasSgetrfBatched","cublasSgetriBatched","cublasSgetrsBatched","cublasSideMode_t","cublasSmatinvBatched","cublasSnrm2_v2","cublasSrot_v2","cublasSrotg_v2","cublasSrotm_v2","cublasSrotmg_v2","cublasSsbmv_v2","cublasSscal_v2","cublasSspmv_v2","cublasSspr2_v2","cublasSspr_v2","cublasSswap_v2","cublasSsymm_v2","cublasSsymv_v2","cublasSsyr2_v2","cublasSsyr2k_v2","cublasSsyr_v2","cublasSsyrk_v2","cublasSsyrkx","cublasStatus_t","cublasStbmv_v2","cublasStbsv_v2","cublasStpmv_v2","cublasStpsv_v2","cublasStpttr","cublasStrmm_v2","cublasStrmv_v2","cublasStrsmBatched","cublasStrsm_v2","cublasStrsv_v2","cublasStrttp","cublasSwapEx","cublasUint8gemmBias","cublasXerbla","cublasZaxpy_v2","cublasZcopy_v2","cublasZdgmm","cublasZdotc_v2","cublasZdotu_v2","cublasZdrot_v2","cublasZdscal_v2","cublasZgbmv_v2","cublasZgeam","cublasZgelsBatched","cublasZgemm3m","cublasZgemmBatched","cublasZgemmStridedBatched","cublasZgemm_v2","cublasZgemv_v2","cublasZgeqrfBatched","cublasZgerc_v2","cublasZgeru_v2","cublasZgetrfBatched","cublasZgetriBatched","cublasZgetrsBatched","cublasZhbmv_v2","cublasZhemm_v2","cublasZhemv_v2","cublasZher2_v2","cublasZher2k_v2","cublasZher_v2","cublasZherk_v2","cublasZherkx","cublasZhpmv_v2","cublasZhpr2_v2","cublasZhpr_v2","cublasZmatinvBatched","cublasZrot_v2","cublasZrotg_v2","cublasZscal_v2","cublasZswap_v2","cublasZsymm_v2","cublasZsymv_v2","cublasZsyr2_v2","cublasZsyr2k_v2","cublasZsyr_v2","cublasZsyrk_v2","cublasZsyrkx","cublasZtbmv_v2","cublasZtbsv_v2","cublasZtpmv_v2","cublasZtpsv_v2","cublasZtpttr","cublasZtrmm_v2","cublasZtrmv_v2","cublasZtrsmBatched","cublasZtrsm_v2","cublasZtrsv_v2","cublasZtrttp","cudaAccessPolicyWindow","cudaAccessProperty","cudaAccessPropertyNormal","cudaAccessPropertyPersisting","cudaAccessPropertyStreaming","cudaArray","cudaArraySparseProperties","cudaArraySparseProperties__bindgen_ty_1","cudaArray_const_t","cudaArray_t","cudaCGScope","cudaCGScopeGrid","cudaCGScopeInvalid","cudaCGScopeMultiGrid","cudaCSV","cudaCSV","cudaChannelFormatDesc","cudaChannelFormatKind","cudaChannelFormatKindFloat","cudaChannelFormatKindNV12","cudaChannelFormatKindNone","cudaChannelFormatKindSigned","cudaChannelFormatKindUnsigned","cudaComputeMode","cudaComputeModeDefault","cudaComputeModeExclusive","cudaComputeModeExclusiveProcess","cudaComputeModeProhibited","cudaDataType","cudaDataType_t","cudaDevAttrAsyncEngineCount","cudaDevAttrCanFlushRemoteWrites","cudaDevAttrCanMapHostMemory","cudaDevAttrCanUseHostPointerForRegisteredMem","cudaDevAttrClockRate","cudaDevAttrComputeCapabilityMajor","cudaDevAttrComputeCapabilityMinor","cudaDevAttrComputeMode","cudaDevAttrComputePreemptionSupported","cudaDevAttrConcurrentKernels","cudaDevAttrConcurrentManagedAccess","cudaDevAttrCooperativeLaunch","cudaDevAttrCooperativeMultiDeviceLaunch","cudaDevAttrDirectManagedMemAccessFromHost","cudaDevAttrEccEnabled","cudaDevAttrGPUDirectRDMAFlushWritesOptions","cudaDevAttrGPUDirectRDMASupported","cudaDevAttrGPUDirectRDMAWritesOrdering","cudaDevAttrGlobalL1CacheSupported","cudaDevAttrGlobalMemoryBusWidth","cudaDevAttrGpuOverlap","cudaDevAttrHostNativeAtomicSupported","cudaDevAttrHostRegisterReadOnlySupported","cudaDevAttrHostRegisterSupported","cudaDevAttrIntegrated","cudaDevAttrIsMultiGpuBoard","cudaDevAttrKernelExecTimeout","cudaDevAttrL2CacheSize","cudaDevAttrLocalL1CacheSupported","cudaDevAttrManagedMemory","cudaDevAttrMax","cudaDevAttrMaxAccessPolicyWindowSize","cudaDevAttrMaxBlockDimX","cudaDevAttrMaxBlockDimY","cudaDevAttrMaxBlockDimZ","cudaDevAttrMaxBlocksPerMultiprocessor","cudaDevAttrMaxGridDimX","cudaDevAttrMaxGridDimY","cudaDevAttrMaxGridDimZ","cudaDevAttrMaxPersistingL2CacheSize","cudaDevAttrMaxPitch","cudaDevAttrMaxRegistersPerBlock","cudaDevAttrMaxRegistersPerMultiprocessor","cudaDevAttrMaxSharedMemoryPerBlock","cudaDevAttrMaxSharedMemoryPerBlockOptin","cudaDevAttrMaxSharedMemoryPerMultiprocessor","cudaDevAttrMaxSurface1DLayeredLayers","cudaDevAttrMaxSurface1DLayeredWidth","cudaDevAttrMaxSurface1DWidth","cudaDevAttrMaxSurface2DHeight","cudaDevAttrMaxSurface2DLayeredHeight","cudaDevAttrMaxSurface2DLayeredLayers","cudaDevAttrMaxSurface2DLayeredWidth","cudaDevAttrMaxSurface2DWidth","cudaDevAttrMaxSurface3DDepth","cudaDevAttrMaxSurface3DHeight","cudaDevAttrMaxSurface3DWidth","cudaDevAttrMaxSurfaceCubemapLayeredLayers","cudaDevAttrMaxSurfaceCubemapLayeredWidth","cudaDevAttrMaxSurfaceCubemapWidth","cudaDevAttrMaxTexture1DLayeredLayers","cudaDevAttrMaxTexture1DLayeredWidth","cudaDevAttrMaxTexture1DLinearWidth","cudaDevAttrMaxTexture1DMipmappedWidth","cudaDevAttrMaxTexture1DWidth","cudaDevAttrMaxTexture2DGatherHeight","cudaDevAttrMaxTexture2DGatherWidth","cudaDevAttrMaxTexture2DHeight","cudaDevAttrMaxTexture2DLayeredHeight","cudaDevAttrMaxTexture2DLayeredLayers","cudaDevAttrMaxTexture2DLayeredWidth","cudaDevAttrMaxTexture2DLinearHeight","cudaDevAttrMaxTexture2DLinearPitch","cudaDevAttrMaxTexture2DLinearWidth","cudaDevAttrMaxTexture2DMipmappedHeight","cudaDevAttrMaxTexture2DMipmappedWidth","cudaDevAttrMaxTexture2DWidth","cudaDevAttrMaxTexture3DDepth","cudaDevAttrMaxTexture3DDepthAlt","cudaDevAttrMaxTexture3DHeight","cudaDevAttrMaxTexture3DHeightAlt","cudaDevAttrMaxTexture3DWidth","cudaDevAttrMaxTexture3DWidthAlt","cudaDevAttrMaxTextureCubemapLayeredLayers","cudaDevAttrMaxTextureCubemapLayeredWidth","cudaDevAttrMaxTextureCubemapWidth","cudaDevAttrMaxThreadsPerBlock","cudaDevAttrMaxThreadsPerMultiProcessor","cudaDevAttrMaxTimelineSemaphoreInteropSupported","cudaDevAttrMemoryClockRate","cudaDevAttrMemoryPoolSupportedHandleTypes","cudaDevAttrMemoryPoolsSupported","cudaDevAttrMultiGpuBoardGroupID","cudaDevAttrMultiProcessorCount","cudaDevAttrPageableMemoryAccess","cudaDevAttrPageableMemoryAccessUsesHostPageTables","cudaDevAttrPciBusId","cudaDevAttrPciDeviceId","cudaDevAttrPciDomainId","cudaDevAttrReserved92","cudaDevAttrReserved93","cudaDevAttrReserved94","cudaDevAttrReservedSharedMemoryPerBlock","cudaDevAttrSingleToDoublePrecisionPerfRatio","cudaDevAttrSparseCudaArraySupported","cudaDevAttrStreamPrioritiesSupported","cudaDevAttrSurfaceAlignment","cudaDevAttrTccDriver","cudaDevAttrTextureAlignment","cudaDevAttrTexturePitchAlignment","cudaDevAttrTotalConstantMemory","cudaDevAttrUnifiedAddressing","cudaDevAttrWarpSize","cudaDevP2PAttrAccessSupported","cudaDevP2PAttrCudaArrayAccessSupported","cudaDevP2PAttrNativeAtomicSupported","cudaDevP2PAttrPerformanceRank","cudaDeviceAttr","cudaDeviceP2PAttr","cudaDeviceProp","cudaEnableDefault","cudaEnableLegacyStream","cudaEnablePerThreadDefaultStream","cudaError","cudaErrorAddressOfConstant","cudaErrorAddressOfConstant","cudaErrorAlreadyAcquired","cudaErrorAlreadyAcquired","cudaErrorAlreadyMapped","cudaErrorAlreadyMapped","cudaErrorApiFailureBase","cudaErrorApiFailureBase","cudaErrorArrayIsMapped","cudaErrorArrayIsMapped","cudaErrorAssert","cudaErrorAssert","cudaErrorCallRequiresNewerDriver","cudaErrorCallRequiresNewerDriver","cudaErrorCapturedEvent","cudaErrorCapturedEvent","cudaErrorCompatNotSupportedOnDevice","cudaErrorCompatNotSupportedOnDevice","cudaErrorContextIsDestroyed","cudaErrorContextIsDestroyed","cudaErrorCooperativeLaunchTooLarge","cudaErrorCooperativeLaunchTooLarge","cudaErrorCudartUnloading","cudaErrorCudartUnloading","cudaErrorDeviceAlreadyInUse","cudaErrorDeviceAlreadyInUse","cudaErrorDeviceNotLicensed","cudaErrorDeviceNotLicensed","cudaErrorDeviceUninitialized","cudaErrorDeviceUninitialized","cudaErrorDevicesUnavailable","cudaErrorDevicesUnavailable","cudaErrorDuplicateSurfaceName","cudaErrorDuplicateSurfaceName","cudaErrorDuplicateTextureName","cudaErrorDuplicateTextureName","cudaErrorDuplicateVariableName","cudaErrorDuplicateVariableName","cudaErrorECCUncorrectable","cudaErrorECCUncorrectable","cudaErrorFileNotFound","cudaErrorFileNotFound","cudaErrorGraphExecUpdateFailure","cudaErrorGraphExecUpdateFailure","cudaErrorHardwareStackError","cudaErrorHardwareStackError","cudaErrorHostMemoryAlreadyRegistered","cudaErrorHostMemoryAlreadyRegistered","cudaErrorHostMemoryNotRegistered","cudaErrorHostMemoryNotRegistered","cudaErrorIllegalAddress","cudaErrorIllegalAddress","cudaErrorIllegalInstruction","cudaErrorIllegalInstruction","cudaErrorIllegalState","cudaErrorIllegalState","cudaErrorIncompatibleDriverContext","cudaErrorIncompatibleDriverContext","cudaErrorInitializationError","cudaErrorInitializationError","cudaErrorInsufficientDriver","cudaErrorInsufficientDriver","cudaErrorInvalidAddressSpace","cudaErrorInvalidAddressSpace","cudaErrorInvalidChannelDescriptor","cudaErrorInvalidChannelDescriptor","cudaErrorInvalidConfiguration","cudaErrorInvalidConfiguration","cudaErrorInvalidDevice","cudaErrorInvalidDevice","cudaErrorInvalidDeviceFunction","cudaErrorInvalidDeviceFunction","cudaErrorInvalidDevicePointer","cudaErrorInvalidDevicePointer","cudaErrorInvalidFilterSetting","cudaErrorInvalidFilterSetting","cudaErrorInvalidGraphicsContext","cudaErrorInvalidGraphicsContext","cudaErrorInvalidHostPointer","cudaErrorInvalidHostPointer","cudaErrorInvalidKernelImage","cudaErrorInvalidKernelImage","cudaErrorInvalidMemcpyDirection","cudaErrorInvalidMemcpyDirection","cudaErrorInvalidNormSetting","cudaErrorInvalidNormSetting","cudaErrorInvalidPc","cudaErrorInvalidPc","cudaErrorInvalidPitchValue","cudaErrorInvalidPitchValue","cudaErrorInvalidPtx","cudaErrorInvalidPtx","cudaErrorInvalidResourceHandle","cudaErrorInvalidResourceHandle","cudaErrorInvalidSource","cudaErrorInvalidSource","cudaErrorInvalidSurface","cudaErrorInvalidSurface","cudaErrorInvalidSymbol","cudaErrorInvalidSymbol","cudaErrorInvalidTexture","cudaErrorInvalidTexture","cudaErrorInvalidTextureBinding","cudaErrorInvalidTextureBinding","cudaErrorInvalidValue","cudaErrorInvalidValue","cudaErrorJitCompilationDisabled","cudaErrorJitCompilationDisabled","cudaErrorJitCompilerNotFound","cudaErrorJitCompilerNotFound","cudaErrorLaunchFailure","cudaErrorLaunchFailure","cudaErrorLaunchFileScopedSurf","cudaErrorLaunchFileScopedSurf","cudaErrorLaunchFileScopedTex","cudaErrorLaunchFileScopedTex","cudaErrorLaunchIncompatibleTexturing","cudaErrorLaunchIncompatibleTexturing","cudaErrorLaunchMaxDepthExceeded","cudaErrorLaunchMaxDepthExceeded","cudaErrorLaunchOutOfResources","cudaErrorLaunchOutOfResources","cudaErrorLaunchPendingCountExceeded","cudaErrorLaunchPendingCountExceeded","cudaErrorLaunchTimeout","cudaErrorLaunchTimeout","cudaErrorMapBufferObjectFailed","cudaErrorMapBufferObjectFailed","cudaErrorMemoryAllocation","cudaErrorMemoryAllocation","cudaErrorMemoryValueTooLarge","cudaErrorMemoryValueTooLarge","cudaErrorMisalignedAddress","cudaErrorMisalignedAddress","cudaErrorMissingConfiguration","cudaErrorMissingConfiguration","cudaErrorMixedDeviceExecution","cudaErrorMixedDeviceExecution","cudaErrorMpsConnectionFailed","cudaErrorMpsConnectionFailed","cudaErrorMpsMaxClientsReached","cudaErrorMpsMaxClientsReached","cudaErrorMpsMaxConnectionsReached","cudaErrorMpsMaxConnectionsReached","cudaErrorMpsRpcFailure","cudaErrorMpsRpcFailure","cudaErrorMpsServerNotReady","cudaErrorMpsServerNotReady","cudaErrorNoDevice","cudaErrorNoDevice","cudaErrorNoKernelImageForDevice","cudaErrorNoKernelImageForDevice","cudaErrorNotMapped","cudaErrorNotMapped","cudaErrorNotMappedAsArray","cudaErrorNotMappedAsArray","cudaErrorNotMappedAsPointer","cudaErrorNotMappedAsPointer","cudaErrorNotPermitted","cudaErrorNotPermitted","cudaErrorNotReady","cudaErrorNotReady","cudaErrorNotSupported","cudaErrorNotSupported","cudaErrorNotYetImplemented","cudaErrorNotYetImplemented","cudaErrorNvlinkUncorrectable","cudaErrorNvlinkUncorrectable","cudaErrorOperatingSystem","cudaErrorOperatingSystem","cudaErrorPeerAccessAlreadyEnabled","cudaErrorPeerAccessAlreadyEnabled","cudaErrorPeerAccessNotEnabled","cudaErrorPeerAccessNotEnabled","cudaErrorPeerAccessUnsupported","cudaErrorPeerAccessUnsupported","cudaErrorPriorLaunchFailure","cudaErrorPriorLaunchFailure","cudaErrorProfilerAlreadyStarted","cudaErrorProfilerAlreadyStarted","cudaErrorProfilerAlreadyStopped","cudaErrorProfilerAlreadyStopped","cudaErrorProfilerDisabled","cudaErrorProfilerDisabled","cudaErrorProfilerNotInitialized","cudaErrorProfilerNotInitialized","cudaErrorSetOnActiveProcess","cudaErrorSetOnActiveProcess","cudaErrorSharedObjectInitFailed","cudaErrorSharedObjectInitFailed","cudaErrorSharedObjectSymbolNotFound","cudaErrorSharedObjectSymbolNotFound","cudaErrorSoftwareValidityNotEstablished","cudaErrorSoftwareValidityNotEstablished","cudaErrorStartupFailure","cudaErrorStartupFailure","cudaErrorStreamCaptureImplicit","cudaErrorStreamCaptureImplicit","cudaErrorStreamCaptureInvalidated","cudaErrorStreamCaptureInvalidated","cudaErrorStreamCaptureIsolation","cudaErrorStreamCaptureIsolation","cudaErrorStreamCaptureMerge","cudaErrorStreamCaptureMerge","cudaErrorStreamCaptureUnjoined","cudaErrorStreamCaptureUnjoined","cudaErrorStreamCaptureUnmatched","cudaErrorStreamCaptureUnmatched","cudaErrorStreamCaptureUnsupported","cudaErrorStreamCaptureUnsupported","cudaErrorStreamCaptureWrongThread","cudaErrorStreamCaptureWrongThread","cudaErrorStubLibrary","cudaErrorStubLibrary","cudaErrorSymbolNotFound","cudaErrorSymbolNotFound","cudaErrorSyncDepthExceeded","cudaErrorSyncDepthExceeded","cudaErrorSynchronizationError","cudaErrorSynchronizationError","cudaErrorSystemDriverMismatch","cudaErrorSystemDriverMismatch","cudaErrorSystemNotReady","cudaErrorSystemNotReady","cudaErrorTextureFetchFailed","cudaErrorTextureFetchFailed","cudaErrorTextureNotBound","cudaErrorTextureNotBound","cudaErrorTimeout","cudaErrorTimeout","cudaErrorTooManyPeers","cudaErrorTooManyPeers","cudaErrorUnknown","cudaErrorUnknown","cudaErrorUnmapBufferObjectFailed","cudaErrorUnmapBufferObjectFailed","cudaErrorUnsupportedExecAffinity","cudaErrorUnsupportedExecAffinity","cudaErrorUnsupportedLimit","cudaErrorUnsupportedLimit","cudaErrorUnsupportedPtxVersion","cudaErrorUnsupportedPtxVersion","cudaError_t","cudaEvent_t","cudaExtent","cudaExternalMemoryBufferDesc","cudaExternalMemoryHandleDesc","cudaExternalMemoryHandleDesc__bindgen_ty_1","cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1","cudaExternalMemoryHandleType","cudaExternalMemoryHandleTypeD3D11Resource","cudaExternalMemoryHandleTypeD3D11ResourceKmt","cudaExternalMemoryHandleTypeD3D12Heap","cudaExternalMemoryHandleTypeD3D12Resource","cudaExternalMemoryHandleTypeNvSciBuf","cudaExternalMemoryHandleTypeOpaqueFd","cudaExternalMemoryHandleTypeOpaqueWin32","cudaExternalMemoryHandleTypeOpaqueWin32Kmt","cudaExternalMemoryMipmappedArrayDesc","cudaExternalMemory_t","cudaExternalSemaphoreHandleDesc","cudaExternalSemaphoreHandleDesc__bindgen_ty_1","cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreHandleType","cudaExternalSemaphoreHandleTypeD3D11Fence","cudaExternalSemaphoreHandleTypeD3D12Fence","cudaExternalSemaphoreHandleTypeKeyedMutex","cudaExternalSemaphoreHandleTypeKeyedMutexKmt","cudaExternalSemaphoreHandleTypeNvSciSync","cudaExternalSemaphoreHandleTypeOpaqueFd","cudaExternalSemaphoreHandleTypeOpaqueWin32","cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt","cudaExternalSemaphoreHandleTypeTimelineSemaphoreFd","cudaExternalSemaphoreHandleTypeTimelineSemaphoreWin32","cudaExternalSemaphoreSignalNodeParams","cudaExternalSemaphoreSignalParams","cudaExternalSemaphoreSignalParams__bindgen_ty_1","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphoreWaitNodeParams","cudaExternalSemaphoreWaitParams","cudaExternalSemaphoreWaitParams__bindgen_ty_1","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphore_t","cudaFlushGPUDirectRDMAWritesOptionHost","cudaFlushGPUDirectRDMAWritesOptionMemOps","cudaFlushGPUDirectRDMAWritesOptions","cudaFlushGPUDirectRDMAWritesScope","cudaFlushGPUDirectRDMAWritesTarget","cudaFlushGPUDirectRDMAWritesTargetCurrentDevice","cudaFlushGPUDirectRDMAWritesToAllDevices","cudaFlushGPUDirectRDMAWritesToOwner","cudaFuncAttribute","cudaFuncAttributeMax","cudaFuncAttributeMaxDynamicSharedMemorySize","cudaFuncAttributePreferredSharedMemoryCarveout","cudaFuncAttributes","cudaFuncCache","cudaFuncCachePreferEqual","cudaFuncCachePreferL1","cudaFuncCachePreferNone","cudaFuncCachePreferShared","cudaFunction_t","cudaGPUDirectRDMAWritesOrdering","cudaGPUDirectRDMAWritesOrderingAllDevices","cudaGPUDirectRDMAWritesOrderingNone","cudaGPUDirectRDMAWritesOrderingOwner","cudaGetDriverEntryPointFlags","cudaGraphDebugDotFlags","cudaGraphDebugDotFlagsEventNodeParams","cudaGraphDebugDotFlagsExtSemasSignalNodeParams","cudaGraphDebugDotFlagsExtSemasWaitNodeParams","cudaGraphDebugDotFlagsHandles","cudaGraphDebugDotFlagsHostNodeParams","cudaGraphDebugDotFlagsKernelNodeAttributes","cudaGraphDebugDotFlagsKernelNodeParams","cudaGraphDebugDotFlagsMemcpyNodeParams","cudaGraphDebugDotFlagsMemsetNodeParams","cudaGraphDebugDotFlagsVerbose","cudaGraphExecUpdateError","cudaGraphExecUpdateErrorFunctionChanged","cudaGraphExecUpdateErrorNodeTypeChanged","cudaGraphExecUpdateErrorNotSupported","cudaGraphExecUpdateErrorParametersChanged","cudaGraphExecUpdateErrorTopologyChanged","cudaGraphExecUpdateErrorUnsupportedFunctionChange","cudaGraphExecUpdateResult","cudaGraphExecUpdateSuccess","cudaGraphExec_t","cudaGraphInstantiateFlagAutoFreeOnLaunch","cudaGraphInstantiateFlags","cudaGraphMemAttrReservedMemCurrent","cudaGraphMemAttrReservedMemHigh","cudaGraphMemAttrUsedMemCurrent","cudaGraphMemAttrUsedMemHigh","cudaGraphMemAttributeType","cudaGraphNodeType","cudaGraphNodeTypeCount","cudaGraphNodeTypeEmpty","cudaGraphNodeTypeEventRecord","cudaGraphNodeTypeExtSemaphoreSignal","cudaGraphNodeTypeExtSemaphoreWait","cudaGraphNodeTypeGraph","cudaGraphNodeTypeHost","cudaGraphNodeTypeKernel","cudaGraphNodeTypeMemAlloc","cudaGraphNodeTypeMemFree","cudaGraphNodeTypeMemcpy","cudaGraphNodeTypeMemset","cudaGraphNodeTypeWaitEvent","cudaGraphNode_t","cudaGraphUserObjectMove","cudaGraph_t","cudaGraphicsCubeFace","cudaGraphicsCubeFaceNegativeX","cudaGraphicsCubeFaceNegativeY","cudaGraphicsCubeFaceNegativeZ","cudaGraphicsCubeFacePositiveX","cudaGraphicsCubeFacePositiveY","cudaGraphicsCubeFacePositiveZ","cudaGraphicsMapFlags","cudaGraphicsMapFlagsNone","cudaGraphicsMapFlagsReadOnly","cudaGraphicsMapFlagsWriteDiscard","cudaGraphicsRegisterFlags","cudaGraphicsRegisterFlagsNone","cudaGraphicsRegisterFlagsReadOnly","cudaGraphicsRegisterFlagsSurfaceLoadStore","cudaGraphicsRegisterFlagsTextureGather","cudaGraphicsRegisterFlagsWriteDiscard","cudaGraphicsResource","cudaGraphicsResource_t","cudaHostFn_t","cudaHostNodeParams","cudaIpcEventHandle_st","cudaIpcEventHandle_t","cudaIpcMemHandle_st","cudaIpcMemHandle_t","cudaKernelNodeAttrID","cudaKernelNodeAttrValue","cudaKernelNodeAttributeAccessPolicyWindow","cudaKernelNodeAttributeCooperative","cudaKernelNodeParams","cudaKeyValuePair","cudaKeyValuePair","cudaLaunchParams","cudaLimit","cudaLimitDevRuntimePendingLaunchCount","cudaLimitDevRuntimeSyncDepth","cudaLimitMallocHeapSize","cudaLimitMaxL2FetchGranularity","cudaLimitPersistingL2CacheSize","cudaLimitPrintfFifoSize","cudaLimitStackSize","cudaMemAccessDesc","cudaMemAccessFlags","cudaMemAccessFlagsProtNone","cudaMemAccessFlagsProtRead","cudaMemAccessFlagsProtReadWrite","cudaMemAdviseSetAccessedBy","cudaMemAdviseSetPreferredLocation","cudaMemAdviseSetReadMostly","cudaMemAdviseUnsetAccessedBy","cudaMemAdviseUnsetPreferredLocation","cudaMemAdviseUnsetReadMostly","cudaMemAllocNodeParams","cudaMemAllocationHandleType","cudaMemAllocationType","cudaMemAllocationTypeInvalid","cudaMemAllocationTypeMax","cudaMemAllocationTypePinned","cudaMemHandleTypeNone","cudaMemHandleTypePosixFileDescriptor","cudaMemHandleTypeWin32","cudaMemHandleTypeWin32Kmt","cudaMemLocation","cudaMemLocationType","cudaMemLocationTypeDevice","cudaMemLocationTypeInvalid","cudaMemPoolAttr","cudaMemPoolAttrReleaseThreshold","cudaMemPoolAttrReservedMemCurrent","cudaMemPoolAttrReservedMemHigh","cudaMemPoolAttrUsedMemCurrent","cudaMemPoolAttrUsedMemHigh","cudaMemPoolProps","cudaMemPoolPtrExportData","cudaMemPoolReuseAllowInternalDependencies","cudaMemPoolReuseAllowOpportunistic","cudaMemPoolReuseFollowEventDependencies","cudaMemPool_t","cudaMemRangeAttribute","cudaMemRangeAttributeAccessedBy","cudaMemRangeAttributeLastPrefetchLocation","cudaMemRangeAttributePreferredLocation","cudaMemRangeAttributeReadMostly","cudaMemcpy3DParms","cudaMemcpy3DPeerParms","cudaMemcpyDefault","cudaMemcpyDeviceToDevice","cudaMemcpyDeviceToHost","cudaMemcpyHostToDevice","cudaMemcpyHostToHost","cudaMemcpyKind","cudaMemoryAdvise","cudaMemoryType","cudaMemoryTypeDevice","cudaMemoryTypeHost","cudaMemoryTypeManaged","cudaMemoryTypeUnregistered","cudaMemsetParams","cudaMipmappedArray","cudaMipmappedArray_const_t","cudaMipmappedArray_t","cudaOutputMode","cudaOutputMode_t","cudaPitchedPtr","cudaPointerAttributes","cudaPos","cudaResViewFormatFloat1","cudaResViewFormatFloat2","cudaResViewFormatFloat4","cudaResViewFormatHalf1","cudaResViewFormatHalf2","cudaResViewFormatHalf4","cudaResViewFormatNone","cudaResViewFormatSignedBlockCompressed4","cudaResViewFormatSignedBlockCompressed5","cudaResViewFormatSignedBlockCompressed6H","cudaResViewFormatSignedChar1","cudaResViewFormatSignedChar2","cudaResViewFormatSignedChar4","cudaResViewFormatSignedInt1","cudaResViewFormatSignedInt2","cudaResViewFormatSignedInt4","cudaResViewFormatSignedShort1","cudaResViewFormatSignedShort2","cudaResViewFormatSignedShort4","cudaResViewFormatUnsignedBlockCompressed1","cudaResViewFormatUnsignedBlockCompressed2","cudaResViewFormatUnsignedBlockCompressed3","cudaResViewFormatUnsignedBlockCompressed4","cudaResViewFormatUnsignedBlockCompressed5","cudaResViewFormatUnsignedBlockCompressed6H","cudaResViewFormatUnsignedBlockCompressed7","cudaResViewFormatUnsignedChar1","cudaResViewFormatUnsignedChar2","cudaResViewFormatUnsignedChar4","cudaResViewFormatUnsignedInt1","cudaResViewFormatUnsignedInt2","cudaResViewFormatUnsignedInt4","cudaResViewFormatUnsignedShort1","cudaResViewFormatUnsignedShort2","cudaResViewFormatUnsignedShort4","cudaResourceDesc","cudaResourceDesc__bindgen_ty_1","cudaResourceDesc__bindgen_ty_1__bindgen_ty_1","cudaResourceDesc__bindgen_ty_1__bindgen_ty_2","cudaResourceDesc__bindgen_ty_1__bindgen_ty_3","cudaResourceDesc__bindgen_ty_1__bindgen_ty_4","cudaResourceType","cudaResourceTypeArray","cudaResourceTypeLinear","cudaResourceTypeMipmappedArray","cudaResourceTypePitch2D","cudaResourceViewDesc","cudaResourceViewFormat","cudaSharedCarveout","cudaSharedMemBankSizeDefault","cudaSharedMemBankSizeEightByte","cudaSharedMemBankSizeFourByte","cudaSharedMemConfig","cudaSharedmemCarveoutDefault","cudaSharedmemCarveoutMaxL1","cudaSharedmemCarveoutMaxShared","cudaStreamAddCaptureDependencies","cudaStreamAttrID","cudaStreamAttrValue","cudaStreamAttributeAccessPolicyWindow","cudaStreamAttributeSynchronizationPolicy","cudaStreamCaptureMode","cudaStreamCaptureModeGlobal","cudaStreamCaptureModeRelaxed","cudaStreamCaptureModeThreadLocal","cudaStreamCaptureStatus","cudaStreamCaptureStatusActive","cudaStreamCaptureStatusInvalidated","cudaStreamCaptureStatusNone","cudaStreamSetCaptureDependencies","cudaStreamUpdateCaptureDependenciesFlags","cudaStream_t","cudaSuccess","cudaSuccess","cudaSyncPolicyAuto","cudaSyncPolicyBlockingSync","cudaSyncPolicySpin","cudaSyncPolicyYield","cudaSynchronizationPolicy","cudaUUID_t","cudaUserObjectFlags","cudaUserObjectNoDestructorSync","cudaUserObjectRetainFlags","cudaUserObject_t","depth","depth","depth","desc","desc","devPtr","devPtr","device","deviceOverlap","devicePointer","dim3","directManagedMemAccessFromHost","double2","dptr","dst","dstArray","dstArray","dstDevice","dstPos","dstPos","dstPtr","dstPtr","elementSize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extSemArray","extSemArray","extent","extent","extent","extra","f","fd","fd","fence","fence","fence","fence","firstLayer","firstMipmapLevel","flags","flags","flags","flags","flags","flags","flags","flags","float2","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_","format","formatDesc","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","func","globalL1CacheSupported","gridDim","gridDim","handle","handle","handle","handle","handleTypes","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","height","hitProp","hitRatio","hostNativeAtomicSupported","hostPointer","id","integrated","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","isMultiGpuBoard","kernelExecTimeoutEnabled","kernelParams","key","key","keyedMutex","keyedMutex","kind","l2CacheSize","lastLayer","lastMipmapLevel","libraryPropertyType","libraryPropertyType_t","libraryPropertyType_t_MAJOR_VERSION","libraryPropertyType_t_MINOR_VERSION","libraryPropertyType_t_PATCH_LEVEL","linear","localL1CacheSupported","localSizeBytes","location","location","luid","luidDeviceNodeMask","major","managedMemory","maxBlocksPerMultiProcessor","maxDynamicSharedSizeBytes","maxGridSize","maxSurface1D","maxSurface1DLayered","maxSurface2D","maxSurface2DLayered","maxSurface3D","maxSurfaceCubemap","maxSurfaceCubemapLayered","maxTexture1D","maxTexture1DLayered","maxTexture1DLinear","maxTexture1DMipmap","maxTexture2D","maxTexture2DGather","maxTexture2DLayered","maxTexture2DLinear","maxTexture2DMipmap","maxTexture3D","maxTexture3DAlt","maxTextureCubemap","maxTextureCubemapLayered","maxThreadsDim","maxThreadsPerBlock","maxThreadsPerBlock","maxThreadsPerMultiProcessor","memPitch","memoryBusWidth","memoryClockRate","minor","mipmap","mipmap","miptailFirstLevel","miptailSize","missProp","multiGpuBoardGroupID","multiProcessorCount","name","name","name","numExtSems","numExtSems","numLevels","numRegs","num_bytes","nvSciBufObject","nvSciSync","nvSciSync","nvSciSyncObj","offset","offset","pageableMemoryAccess","pageableMemoryAccessUsesHostPageTables","params","params","paramsArray","paramsArray","pciBusID","pciDeviceID","pciDomainID","persistingL2CacheMaxSize","pitch","pitch","pitch2D","pitchInBytes","poolProps","preferredShmemCarveout","ptr","ptxVersion","regsPerBlock","regsPerMultiprocessor","res","resType","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reservedSharedMemPerBlock","sharedMem","sharedMemBytes","sharedMemPerBlock","sharedMemPerBlockOptin","sharedMemPerMultiprocessor","sharedSizeBytes","singleToDoublePrecisionPerfRatio","size","size","sizeInBytes","srcArray","srcArray","srcDevice","srcPos","srcPos","srcPtr","srcPtr","stream","streamPrioritiesSupported","surfaceAlignment","syncPolicy","tccDriver","textureAlignment","texturePitchAlignment","tileExtent","timeoutMs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","totalConstMem","totalGlobalMem","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unifiedAddressing","userData","uuid","value","value","value","w","warpSize","width","width","width","width","width","win32","win32","win32SecurityAttributes","x","x","x","x","x","xsize","y","y","y","y","y","ysize","z","z","z"],"q":["rcublas_sysdlt; Device has ECC support enabled","&lt; in: Number of <code>accessDescs</code>s","&lt; in: number of memory access descriptors.  Must not …","&lt; The maximum value of ::cudaAccessPolicyWindow::num_bytes.","","&lt; Attribute ::CUaccessPolicyWindow.","&lt; Allocation type. Currently must be specified as …","&lt; Arguments","","&lt; CUDA array","&lt; Number of asynchronous engines","&lt; Starting address of the access policy window. CUDA …","The binary architecture version for which the function was …","&lt; Block dimentions","&lt; Block dimensionslt; in: size in bytes of the requested allocation","The attribute to indicate whether the function has been …","&lt; Device can map host memory with …","&lt; Device can access host registered memory at the same …","&lt; Clock frequency in kilohertz","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Compute mode (See ::cudaComputeMode)","&lt; Device supports Compute Preemption","&lt; Device can possibly execute multiple kernels concurrently","&lt; Device can coherently access managed memory concurrently …","The size in bytes of user-allocated constant memory …","","&lt; Device supports launching cooperative kernels via …","&lt; Deprecated, cudaLaunchCooperativeKernelMultiDevice is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies an access policy for a window, a contiguous …","Specifies performance hint with ::cudaAccessPolicyWindow …","&lt; Normal cache persistence.","&lt; Persisting access is more likely to persist in cache.","&lt; Streaming access is less likely to persit from cache.","","Sparse CUDA array and CUDA mipmapped array properties","","CUDA array (as source copy argument)","CUDA array","CUDA cooperative group scope","&lt; Scope represented by a grid_group","&lt; Invalid cooperative group scope","&lt; Scope represented by a multi_grid_group","&lt; Output mode Comma separated values format.","&lt; Output mode Comma separated values format.","CUDA Channel format descriptor","Channel format kind","&lt; Float channel format","","&lt; No channel format","&lt; Signed channel format","&lt; Unsigned channel format","CUDA device compute modes","&lt; Default compute mode (Multiple threads can use …","&lt; Compute-exclusive-thread mode (Only one thread in one …","&lt; Compute-exclusive-process mode (Many threads in one …","&lt; Compute-prohibited mode (No threads can use …","","","&lt; Number of asynchronous engines","&lt; Device supports flushing of outstanding remote writes.","&lt; Device can map host memory into CUDA address space","&lt; Device can access host registered memory at the same …","&lt; Peak clock frequency in kilohertz","&lt; Major compute capability version number","&lt; Minor compute capability version number","&lt; Compute mode (See ::cudaComputeMode for details)","&lt; Device supports Compute Preemption","&lt; Device can possibly execute multiple kernels concurrently","&lt; Device can coherently access managed memory concurrently …","&lt; Device supports launching cooperative kernels via …","&lt; Deprecated, cudaLaunchCooperativeKernelMultiDevice is …","&lt; Host can directly access managed memory on the device …","&lt; Device has ECC support enabled","&lt; The returned attribute shall be interpreted as a …","&lt; Device supports GPUDirect RDMA APIs, like …","&lt; GPUDirect RDMA writes to the device do not need to be …","&lt; Device supports caching globals in L1","&lt; Global memory bus width in bits","&lt; Device can possibly copy memory and execute a kernel …","&lt; Link between the device and the host supports native …","&lt; Device supports using the ::cudaHostRegister flag …","&lt; Device supports host memory registration via …","&lt; Device is integrated with host memory","&lt; Device is on a multi-GPU board","&lt; Specifies whether there is a run time limit on kernels","&lt; Size of L2 cache in bytes","&lt; Device supports caching locals in L1","&lt; Device can allocate managed memory on this system","","&lt; Maximum value of cudaAccessPolicyWindow::num_bytes.","&lt; Maximum block dimension X","&lt; Maximum block dimension Y","&lt; Maximum block dimension Z","&lt; Maximum number of blocks per multiprocessor","&lt; Maximum grid dimension X","&lt; Maximum grid dimension Y","&lt; Maximum grid dimension Z","&lt; Maximum L2 persisting lines capacity setting in bytes.","&lt; Maximum pitch in bytes allowed by memory copies","&lt; Maximum number of 32-bit registers available per block","&lt; Maximum number of 32-bit registers available per …","&lt; Maximum shared memory available per block in bytes","&lt; The maximum optin shared memory per block. This value …","&lt; Maximum shared memory available per multiprocessor in …","&lt; Maximum layers in a 1D layered surface","&lt; Maximum 1D layered surface width","&lt; Maximum 1D surface width","&lt; Maximum 2D surface height","&lt; Maximum 2D layered surface height","&lt; Maximum layers in a 2D layered surface","&lt; Maximum 2D layered surface width","&lt; Maximum 2D surface width","&lt; Maximum 3D surface depth","&lt; Maximum 3D surface height","&lt; Maximum 3D surface width","&lt; Maximum layers in a cubemap layered surface","&lt; Maximum cubemap layered surface width","&lt; Maximum cubemap surface width","&lt; Maximum layers in a 1D layered texture","&lt; Maximum 1D layered texture width","&lt; Maximum 1D linear texture width","&lt; Maximum mipmapped 1D texture width","&lt; Maximum 1D texture width","&lt; Maximum 2D texture height if cudaArrayTextureGather is …","&lt; Maximum 2D texture width if cudaArrayTextureGather is set","&lt; Maximum 2D texture height","&lt; Maximum 2D layered texture height","&lt; Maximum layers in a 2D layered texture","&lt; Maximum 2D layered texture width","&lt; Maximum 2D linear texture height","&lt; Maximum 2D linear texture pitch in bytes","&lt; Maximum 2D linear texture width","&lt; Maximum mipmapped 2D texture height","&lt; Maximum mipmapped 2D texture width","&lt; Maximum 2D texture width","&lt; Maximum 3D texture depth","&lt; Alternate maximum 3D texture depth","&lt; Maximum 3D texture height","&lt; Alternate maximum 3D texture height","&lt; Maximum 3D texture width","&lt; Alternate maximum 3D texture width","&lt; Maximum layers in a cubemap layered texture","&lt; Maximum cubemap layered texture width/height","&lt; Maximum cubemap texture width/height","&lt; Maximum number of threads per block","&lt; Maximum resident threads per multiprocessor","&lt; External timeline semaphore interop is supported on the …","&lt; Peak memory clock frequency in kilohertz","&lt; Handle types supported with mempool based IPC","&lt; Device supports using the ::cudaMallocAsync and …","&lt; Unique identifier for a group of devices on the same …","&lt; Number of multiprocessors on device","&lt; Device supports coherently accessing pageable memory …","&lt; Device accesses pageable memory via the host’s page …","&lt; PCI bus ID of the device","&lt; PCI device ID of the device","&lt; PCI domain ID of the device","","","","&lt; Shared memory reserved by CUDA driver per block in bytes","&lt; Ratio of single precision performance (in floating-point …","&lt; Device supports sparse CUDA arrays and sparse CUDA …","&lt; Device supports stream priorities","&lt; Alignment requirement for surfaces","&lt; Device is using TCC driver model","&lt; Alignment requirement for textures","&lt; Pitch alignment requirement for textures","&lt; Memory available on device for <strong>constant</strong> variables in a …","&lt; Device shares a unified address space with the host","&lt; Warp size in threads","&lt; Peer access is enabled","&lt; Accessing CUDA arrays over the link supported","&lt; Native atomic operation over the link supported","&lt; A relative value indicating the performance of the link …","CUDA device attributes","CUDA device P2P attributes","CUDA device properties","&lt; Default search mode for driver symbols.","&lt; Search for legacy versions of driver symbols.","&lt; Search for per-thread versions of driver symbols.","CUDA error types","This indicated that the user has taken the address of a …","This indicated that the user has taken the address of a …","This indicates that a resource has already been acquired.","This indicates that a resource has already been acquired.","This indicates that the resource is already mapped.","This indicates that the resource is already mapped.","Any unhandled CUDA driver error is added to this value and …","Any unhandled CUDA driver error is added to this value and …","This indicates that the specified array is currently …","This indicates that the specified array is currently …","An assert triggered in device code during kernel …","An assert triggered in device code during kernel …","This indicates that the API call requires a newer CUDA …","This indicates that the API call requires a newer CUDA …","The operation is not permitted on an event which was last …","The operation is not permitted on an event which was last …","This error indicates that the system was upgraded to run …","This error indicates that the system was upgraded to run …","This error indicates that the context current to the …","This error indicates that the context current to the …","This error indicates that the number of blocks launched …","This error indicates that the number of blocks launched …","This indicates that a CUDA Runtime API call cannot be …","This indicates that a CUDA Runtime API call cannot be …","This indicates that a call tried to access an …","This indicates that a call tried to access an …","This indicates that the device doesn’t have a valid Grid …","This indicates that the device doesn’t have a valid Grid …","This most frequently indicates that there is no context …","This most frequently indicates that there is no context …","This indicates that all CUDA devices are busy or …","This indicates that all CUDA devices are busy or …","This indicates that multiple surfaces (across separate …","This indicates that multiple surfaces (across separate …","This indicates that multiple textures (across separate …","This indicates that multiple textures (across separate …","This indicates that multiple global or constant variables …","This indicates that multiple global or constant variables …","This indicates that an uncorrectable ECC error was …","This indicates that an uncorrectable ECC error was …","This indicates that the file specified was not found.","This indicates that the file specified was not found.","This error indicates that the graph update was not …","This error indicates that the graph update was not …","Device encountered an error in the call stack during …","Device encountered an error in the call stack during …","This error indicates that the memory range passed to …","This error indicates that the memory range passed to …","This error indicates that the pointer passed to …","This error indicates that the pointer passed to …","The device encountered a load or store instruction on an …","The device encountered a load or store instruction on an …","The device encountered an illegal instruction during …","The device encountered an illegal instruction during …","This indicates that a resource required by the API call is …","This indicates that a resource required by the API call is …","This indicates that the current context is not compatible …","This indicates that the current context is not compatible …","The API call failed because the CUDA driver and runtime …","The API call failed because the CUDA driver and runtime …","This indicates that the installed NVIDIA CUDA driver is …","This indicates that the installed NVIDIA CUDA driver is …","While executing a kernel, the device encountered an …","While executing a kernel, the device encountered an …","This indicates that the channel descriptor passed to the …","This indicates that the channel descriptor passed to the …","This indicates that a kernel launch is requesting …","This indicates that a kernel launch is requesting …","This indicates that the device ordinal supplied by the …","This indicates that the device ordinal supplied by the …","The requested device function does not exist or is not …","The requested device function does not exist or is not …","This indicates that at least one device pointer passed to …","This indicates that at least one device pointer passed to …","This indicates that a non-float texture was being accessed …","This indicates that a non-float texture was being accessed …","This indicates an error with the OpenGL or DirectX context.","This indicates an error with the OpenGL or DirectX context.","This indicates that at least one host pointer passed to …","This indicates that at least one host pointer passed to …","This indicates that the device kernel image is invalid.","This indicates that the device kernel image is invalid.","This indicates that the direction of the memcpy passed to …","This indicates that the direction of the memcpy passed to …","This indicates that an attempt was made to read a …","This indicates that an attempt was made to read a …","The device encountered an invalid program counter. This …","The device encountered an invalid program counter. This …","This indicates that one or more of the pitch-related …","This indicates that one or more of the pitch-related …","A PTX compilation failed. The runtime may fall back to …","A PTX compilation failed. The runtime may fall back to …","This indicates that a resource handle passed to the API …","This indicates that a resource handle passed to the API …","This indicates that the device kernel source is invalid.","This indicates that the device kernel source is invalid.","This indicates that the surface passed to the API call is …","This indicates that the surface passed to the API call is …","This indicates that the symbol name/identifier passed to …","This indicates that the symbol name/identifier passed to …","This indicates that the texture passed to the API call is …","This indicates that the texture passed to the API call is …","This indicates that the texture binding is not valid. This …","This indicates that the texture binding is not valid. This …","This indicates that one or more of the parameters passed …","This indicates that one or more of the parameters passed …","This indicates that the JIT compilation was disabled. The …","This indicates that the JIT compilation was disabled. The …","This indicates that the PTX JIT compiler library was not …","This indicates that the PTX JIT compiler library was not …","An exception occurred on the device while executing a …","An exception occurred on the device while executing a …","This error indicates that a grid launch did not occur …","This error indicates that a grid launch did not occur …","This error indicates that a grid launch did not occur …","This error indicates that a grid launch did not occur …","This error indicates a kernel launch that uses an …","This error indicates a kernel launch that uses an …","This error indicates that a device runtime grid launch did …","This error indicates that a device runtime grid launch did …","This indicates that a launch did not occur because it did …","This indicates that a launch did not occur because it did …","This error indicates that a device runtime grid launch …","This error indicates that a device runtime grid launch …","This indicates that the device kernel took too long to …","This indicates that the device kernel took too long to …","This indicates that the buffer object could not be mapped.","This indicates that the buffer object could not be mapped.","The API call failed because it was unable to allocate …","The API call failed because it was unable to allocate …","This indicated that an emulated device pointer exceeded …","This indicated that an emulated device pointer exceeded …","The device encountered a load or store instruction on a …","The device encountered a load or store instruction on a …","The device function being invoked (usually via …","The device function being invoked (usually via …","Mixing of device and device emulation code was not allowed.","Mixing of device and device emulation code was not allowed.","This error indicates that the MPS client failed to connect …","This error indicates that the MPS client failed to connect …","This error indicates that the hardware resources required …","This error indicates that the hardware resources required …","This error indicates the the hardware resources required …","This error indicates the the hardware resources required …","This error indicates that the remote procedural call …","This error indicates that the remote procedural call …","This error indicates that the MPS server is not ready to …","This error indicates that the MPS server is not ready to …","This indicates that no CUDA-capable devices were detected …","This indicates that no CUDA-capable devices were detected …","This indicates that there is no kernel image available …","This indicates that there is no kernel image available …","This indicates that a resource is not mapped.","This indicates that a resource is not mapped.","This indicates that a mapped resource is not available for …","This indicates that a mapped resource is not available for …","This indicates that a mapped resource is not available for …","This indicates that a mapped resource is not available for …","This error indicates the attempted operation is not …","This error indicates the attempted operation is not …","This indicates that asynchronous operations issued …","This indicates that asynchronous operations issued …","This error indicates the attempted operation is not …","This error indicates the attempted operation is not …","This indicates that the API call is not yet implemented. …","This indicates that the API call is not yet implemented. …","This indicates that an uncorrectable NVLink error was …","This indicates that an uncorrectable NVLink error was …","This error indicates that an OS call failed.","This error indicates that an OS call failed.","This error indicates that a call to …","This error indicates that a call to …","This error indicates that ::cudaDeviceDisablePeerAccess() …","This error indicates that ::cudaDeviceDisablePeerAccess() …","This error indicates that P2P access is not supported …","This error indicates that P2P access is not supported …","This indicated that a previous kernel launch failed. This …","This indicated that a previous kernel launch failed. This …","\\\\deprecated This error return is deprecated as of CUDA …","\\\\deprecated This error return is deprecated as of CUDA …","\\\\deprecated This error return is deprecated as of CUDA …","\\\\deprecated This error return is deprecated as of CUDA …","This indicates profiler is not initialized for this run. …","This indicates profiler is not initialized for this run. …","\\\\deprecated This error return is deprecated as of CUDA …","\\\\deprecated This error return is deprecated as of CUDA …","This indicates that the user has called …","This indicates that the user has called …","This indicates that initialization of a shared object …","This indicates that initialization of a shared object …","This indicates that a link to a shared object failed to …","This indicates that a link to a shared object failed to …","By default, the CUDA runtime may perform a minimal set of …","By default, the CUDA runtime may perform a minimal set of …","This indicates an internal startup failure in the CUDA …","This indicates an internal startup failure in the CUDA …","The operation would have resulted in a disallowed implicit …","The operation would have resulted in a disallowed implicit …","The current capture sequence on the stream has been …","The current capture sequence on the stream has been …","A dependency would have been created which crosses the …","A dependency would have been created which crosses the …","The operation would have resulted in a merge of two …","The operation would have resulted in a merge of two …","The capture sequence contains a fork that was not joined …","The capture sequence contains a fork that was not joined …","The capture was not initiated in this stream.","The capture was not initiated in this stream.","The operation is not permitted when the stream is …","The operation is not permitted when the stream is …","A stream capture sequence not initiated with the …","A stream capture sequence not initiated with the …","This indicates that the CUDA driver that the application …","This indicates that the CUDA driver that the application …","This indicates that a named symbol was not found. Examples …","This indicates that a named symbol was not found. Examples …","This error indicates that a call to …","This error indicates that a call to …","This indicated that a synchronization operation had failed.","This indicated that a synchronization operation had failed.","This error indicates that there is a mismatch between the …","This error indicates that there is a mismatch between the …","This error indicates that the system is not yet ready to …","This error indicates that the system is not yet ready to …","This indicated that a texture fetch was not able to be …","This indicated that a texture fetch was not able to be …","This indicated that a texture was not bound for access. …","This indicated that a texture was not bound for access. …","This indicates that the wait operation has timed out.","This indicates that the wait operation has timed out.","This error indicates that the hardware resources required …","This error indicates that the hardware resources required …","This indicates that an unknown internal error has occurred.","This indicates that an unknown internal error has occurred.","This indicates that the buffer object could not be …","This indicates that the buffer object could not be …","This indicates that the provided execution affinity is not …","This indicates that the provided execution affinity is not …","This indicates that the ::cudaLimit passed to the API call …","This indicates that the ::cudaLimit passed to the API call …","This indicates that the provided PTX was compiled with an …","This indicates that the provided PTX was compiled with an …","CUDA error types","CUDA event types","CUDA extent","External memory buffer descriptor","External memory handle descriptor","","Win32 handle referencing the semaphore object. Valid when …","External memory handle types","Handle is a shared NT handle to a D3D11 resource","Handle is a globally shared handle to a D3D11 resource","Handle is a D3D12 heap object","Handle is a D3D12 committed resource","Handle is an NvSciBuf object","Handle is an opaque file descriptor","Handle is an opaque shared NT handle","Handle is an opaque, globally shared handle","External memory mipmap descriptor","CUDA external memory","External semaphore handle descriptor","","Win32 handle referencing the semaphore object. Valid when …","External semaphore handle types","Handle is a shared NT handle referencing a D3D11 fence …","Handle is a shared NT handle referencing a D3D12 fence …","Handle is a shared NT handle referencing a D3D11 keyed …","Handle is a shared KMT handle referencing a D3D11 keyed …","Opaque handle to NvSciSync Object","Handle is an opaque file descriptor","Handle is an opaque shared NT handle","Handle is an opaque, globally shared handle","Handle is an opaque handle file descriptor referencing a …","Handle is an opaque handle file descriptor referencing a …","External semaphore signal node parameters","External semaphore signal parameters, compatible with …","","Parameters for fence objects","","Parameters for keyed mutex objects","External semaphore wait node parameters","External semaphore wait parameters, compatible with driver …","","Parameters for fence objects","","Parameters for keyed mutex objects","CUDA external semaphore","&lt; ::cudaDeviceFlushGPUDirectRDMAWrites() and its CUDA …","&lt; The ::CU_STREAM_WAIT_VALUE_FLUSH flag and the …","CUDA GPUDirect RDMA flush writes APIs supported on the …","CUDA GPUDirect RDMA flush writes scopes","CUDA GPUDirect RDMA flush writes targets","&lt; Sets the target for …","&lt; Blocks until remote writes are visible to all CUDA …","&lt; Blocks until remote writes are visible to the CUDA …","CUDA function attributes that can be set using …","","&lt; Maximum dynamic shared memory size","&lt; Preferred shared memory-L1 cache split","CUDA function attributes","CUDA function cache configurations","&lt; Prefer equal size L1 cache and shared memory","&lt; Prefer larger L1 cache and smaller shared memory","&lt; Default function cache configuration, no preference","&lt; Prefer larger shared memory and smaller L1 cache","CUDA function","CUDA GPUDirect RDMA flush writes ordering features of the …","&lt; Any CUDA device in the system can consistently consume …","&lt; The device does not natively support ordering of …","&lt; Natively, the device can consistently consume GPUDirect …","Flags to specify search options to be used with …","CUDA Graph debug write options","Adds cudaHostNodeParams to output","Adds cudaEvent_t handle from record and wait nodes to …","Adds cudaExternalSemaphoreSignalNodeParams values to output","Adds cudaKernelNodeAttrID values to output","Adds cudaMemsetParams to output","Adds cudaExternalSemaphoreWaitNodeParams to output","Output all debug data as if every debug flag is enabled","Adds cudaKernelNodeParams to output","Adds cudaMemcpy3DParms to output","","&lt; The update failed for an unexpected reason which is …","&lt; The update failed because the function of a kernel node …","&lt; The update failed because a node type changed","&lt; The update failed because something about the node is …","&lt; The update failed because the parameters changed in a …","&lt; The update failed because the topology changed","&lt; The update failed because the function of a kernel node …","CUDA Graph Update error types","&lt; The update succeeded","CUDA executable (launchable) graph","&lt; Automatically free memory allocated in a graph before …","Flags for instantiating a graph","(value type = cuuint64_t) Amount of memory, in bytes, …","(value type = cuuint64_t) High watermark of memory, in …","(value type = cuuint64_t) Amount of memory, in bytes, …","(value type = cuuint64_t) High watermark of memory, in …","Graph memory attributes","CUDA Graph node types","","&lt; Empty (no-op) node","&lt; External event record node","&lt; External semaphore signal node","&lt; External semaphore wait node","&lt; Node which executes an embedded graph","&lt; Host (executable) node","&lt; GPU kernel node","&lt; Memory allocation node","&lt; Memory free node","&lt; Memcpy node","&lt; Memset node","&lt; External event wait node","CUDA graph node.","&lt; Transfer references from the caller rather than creating …","CUDA graph","CUDA graphics interop array indices for cube maps","&lt; Negative X face of cubemap","&lt; Negative Y face of cubemap","&lt; Negative Z face of cubemap","&lt; Positive X face of cubemap","&lt; Positive Y face of cubemap","&lt; Positive Z face of cubemap","CUDA graphics interop map flags","&lt; Default; Assume resource can be read/written","&lt; CUDA will not write to this resource","&lt; CUDA will only write to and will not read from this …","CUDA graphics interop register flags","&lt; Default","&lt; CUDA will not write to this resource","&lt; CUDA will bind this resource to a surface reference","&lt; CUDA will perform texture gather operations on this …","&lt; CUDA will only write to and will not read from this …","CUDA graphics interop resource","CUDA graphics resource types","CUDA host function \\\\param userData Argument value passed …","CUDA host node parameters","CUDA IPC event handle","CUDA IPC event handle","CUDA IPC memory handle","CUDA IPC memory handle","Graph kernel node Attributes","Graph kernel node attributes union, used with …","&lt; Identifier for …","&lt; Allows a kernel node to be cooperative (see …","CUDA GPU kernel node parameters","&lt; Output mode Key-Value pair format.","&lt; Output mode Key-Value pair format.","CUDA launch parameters","CUDA Limits","&lt; GPU device runtime pending launch count","&lt; GPU device runtime synchronize depth","&lt; GPU malloc heap size","&lt; A value between 0 and 128 that indicates the maximum …","&lt; A size in bytes for L2 persisting lines cache size","&lt; GPU printf FIFO size","&lt; GPU thread stack size","Memory access descriptor","Specifies the memory protection flags for mapping.","&lt; Default, make the address range not accessible","&lt; Make the address range read accessible","&lt; Make the address range read-write accessible","&lt; Data will be accessed by the specified device, so …","&lt; Set the preferred location for the data as the specified …","&lt; Data will mostly be read and only occassionally be …","&lt; Let the Unified Memory subsystem decide on the page …","&lt; Clear the preferred location for the data","&lt; Undo the effect of ::cudaMemAdviseSetReadMostly","Memory allocation node parameters","Flags for specifying particular handle types","Defines the allocation types available","","This allocation type is ‘pinned’, i.e. cannot migrate …","This allocation type is ‘pinned’, i.e. cannot migrate …","&lt; Does not allow any export mechanism. &gt;","&lt; Allows a file descriptor to be used for exporting. …","&lt; Allows a Win32 NT handle to be used for exporting. …","&lt; Allows a Win32 KMT handle to be used for exporting. …","Specifies a memory location.","Specifies the type of location","&lt; Location is a device location, thus id is a device …","","CUDA memory pool attributes","(value type = cuuint64_t) Amount of reserved memory in …","(value type = cuuint64_t) Amount of backing memory …","(value type = cuuint64_t) High watermark of backing memory …","(value type = cuuint64_t) Amount of memory from the pool …","(value type = cuuint64_t) High watermark of the amount of …","Specifies the properties of allocations made from the pool.","Opaque data for exporting a pool allocation","(value type = int) Allow cuMemAllocAsync to insert new …","(value type = int) Allow reuse of already completed frees …","(value type = int) Allow cuMemAllocAsync to use memory …","CUDA memory pool","CUDA range attributes","&lt; Memory range has ::cudaMemAdviseSetAccessedBy set for …","&lt; The last location to which the range was prefetched","&lt; The preferred location of the range","&lt; Whether the range will mostly be read and only …","CUDA 3D memory copying parameters","CUDA 3D cross-device memory copying parameters","&lt; Direction of the transfer is inferred from the pointer …","&lt; Device -&gt; Device","&lt; Device -&gt; Host","&lt; Host   -&gt; Device","&lt; Host   -&gt; Host","CUDA memory copy types","CUDA Memory Advise values","CUDA memory types","&lt; Device memory","&lt; Host memory","&lt; Managed memory","&lt; Unregistered memory","CUDA Memset node parameters","","CUDA mipmapped array (as source argument)","CUDA mipmapped array","CUDA Profiler Output modes","CUDA Profiler Output modes","CUDA Pitched memory pointer","CUDA pointer attributes","CUDA 3D position","&lt; 1 channel 32-bit floating point","&lt; 2 channel 32-bit floating point","&lt; 4 channel 32-bit floating point","&lt; 1 channel 16-bit floating point","&lt; 2 channel 16-bit floating point","&lt; 4 channel 16-bit floating point","&lt; No resource view format (use underlying resource format)","&lt; Block compressed 4 signed","&lt; Block compressed 5 signed","&lt; Block compressed 6 signed half-float","&lt; 1 channel signed 8-bit integers","&lt; 2 channel signed 8-bit integers","&lt; 4 channel signed 8-bit integers","&lt; 1 channel signed 32-bit integers","&lt; 2 channel signed 32-bit integers","&lt; 4 channel signed 32-bit integers","&lt; 1 channel signed 16-bit integers","&lt; 2 channel signed 16-bit integers","&lt; 4 channel signed 16-bit integers","&lt; Block compressed 1","&lt; Block compressed 2","&lt; Block compressed 3","&lt; Block compressed 4 unsigned","&lt; Block compressed 5 unsigned","&lt; Block compressed 6 unsigned half-float","&lt; Block compressed 7","&lt; 1 channel unsigned 8-bit integers","&lt; 2 channel unsigned 8-bit integers","&lt; 4 channel unsigned 8-bit integers","&lt; 1 channel unsigned 32-bit integers","&lt; 2 channel unsigned 32-bit integers","&lt; 4 channel unsigned 32-bit integers","&lt; 1 channel unsigned 16-bit integers","&lt; 2 channel unsigned 16-bit integers","&lt; 4 channel unsigned 16-bit integers","CUDA resource descriptor","","","","","","CUDA resource types","&lt; Array resource","&lt; Linear resource","&lt; Mipmapped array resource","&lt; Pitch 2D resource","CUDA resource view descriptor","CUDA texture resource view formats","Shared memory carveout configurations. These may be passed …","","","","CUDA shared memory configuration","&lt; No preference for shared memory or L1 (default)","&lt; Prefer maximum available L1 cache, minimum shared memory","&lt; Prefer maximum available shared memory, minimum L1 cache","&lt; Add new nodes to the dependency set","Stream Attributes","Stream attributes union used with …","&lt; Identifier for ::cudaStreamAttrValue::accessPolicyWindow.","&lt; ::cudaSynchronizationPolicy for work queued up in this …","Possible modes for stream capture thread interactions. For …","","","","Possible stream capture statuses returned by …","&lt; Stream is actively capturing","&lt; Stream is part of a capture sequence that has been …","&lt; Stream is not capturing","&lt; Replace the dependency set with the new nodes","Flags for ::cudaStreamUpdateCaptureDependencies","CUDA stream","The API call returned with no errors. In the case of query …","The API call returned with no errors. In the case of query …","","","","","","","Flags for user objects for graphs","&lt; Indicates the destructor execution is not synchronized …","Flags for retaining user object references for graphs","CUDA user object for graphs","&lt; Tile depth in elements","&lt; Depth in elements","&lt; Depth of the resource view","&lt; Channel descriptor","&lt; Channel descriptor","&lt; Device pointer","&lt; Device pointer","The device against which the memory was allocated or …","&lt; Device can concurrently copy memory and execute a …","The address which may be dereferenced on the current …","","&lt; Host can directly access managed memory on the device …","","&lt; out: address of the allocation returned by CUDA","&lt; Destination device pointer","&lt; Destination memory address","&lt; Destination memory address","&lt; Destination device","&lt; Destination position offset","&lt; Destination position offset","&lt; Pitched destination memory address","&lt; Pitched destination memory address","&lt; Size of each element in bytes. Must be 1, 2, or 4.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Array of external semaphore handles.","&lt; Array of external semaphore handles.","&lt; Requested memory copy size","&lt; Requested memory copy size","Dimensions of base level of the mipmap chain","&lt; Pointer to kernel arguments in the “extra” format","&lt; Channel format kind","File descriptor referencing the memory object. Valid when …","File descriptor referencing the semaphore object. Valid …","","Pointer to NvSciSyncFence. Valid if …","","Pointer to NvSciSyncFence. Valid if …","&lt; First layer index","&lt; First defined mipmap level","&lt; Flags will either be zero or …","&lt; ::CUmemProt accessibility flags to set on the request","Flags must either be zero or ::cudaExternalMemoryDedicated","Flags reserved for future use. Must be zero.","Flags associated with CUDA mipmapped arrays. See …","Flags reserved for the future. Must be zero.","Only when ::cudaExternalSemaphoreSignalParams is used to …","Only when ::cudaExternalSemaphoreSignalParams is used to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; The function to call when the node executes","&lt; Resource view format","Format of base level of the mipmap chain","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","&lt; Device function symbol","&lt; Kernel to launch","&lt; Device supports caching globals in L1","&lt; Grid dimentions","&lt; Grid dimensions","","Valid NT handle. Must be NULL if ‘name’ is non-NULL","","Valid NT handle. Must be NULL if ‘name’ is non-NULL","&lt; Handle types that will be supported by allocations from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Tile height in elements","&lt; Height in elements","&lt; Number of rows","&lt; Height of the array in elements","&lt; Height of the resource view","&lt; ::CUaccessProperty set for hit.","&lt; hitRatio specifies percentage of lines assigned hitProp, …","&lt; Link between the device and the host supports native …","The address which may be dereferenced on the host to …","&lt; identifier for a given this location’s …","&lt; Device is integrated as opposed to discrete","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","&lt; Device is on a multi-GPU board","&lt; Specified whether there is a run time limit on kernels","&lt; Array of pointers to individual kernel arguments","","Value of key to acquire the mutex with","","","&lt; Type of transfer","&lt; Size of L2 cache in bytes","&lt; Last layer index","&lt; Last defined mipmap level","","","","","","","&lt; Device supports caching locals in L1","The size in bytes of local memory used by each thread of …","&lt; Location on which the request is to change it’s …","&lt; Location allocations should reside.","&lt; 8-byte locally unique identifier. Value is undefined on …","&lt; LUID device node mask. Value is undefined on TCC and …","&lt; Major compute capability","&lt; Device supports allocating managed memory on this system","&lt; Maximum number of resident blocks per multiprocessor","The maximum size in bytes of dynamic shared memory per …","&lt; Maximum size of each dimension of a grid","&lt; Maximum 1D surface size","&lt; Maximum 1D layered surface dimensions","&lt; Maximum 2D surface dimensions","&lt; Maximum 2D layered surface dimensions","&lt; Maximum 3D surface dimensions","&lt; Maximum Cubemap surface dimensions","&lt; Maximum Cubemap layered surface dimensions","&lt; Maximum 1D texture size","&lt; Maximum 1D layered texture dimensions","&lt; Deprecated, do not use. Use …","&lt; Maximum 1D mipmapped texture size","&lt; Maximum 2D texture dimensions","&lt; Maximum 2D texture dimensions if texture gather …","&lt; Maximum 2D layered texture dimensions","&lt; Maximum dimensions (width, height, pitch) for 2D …","&lt; Maximum 2D mipmapped texture dimensions","&lt; Maximum 3D texture dimensions","&lt; Maximum alternate 3D texture dimensions","&lt; Maximum Cubemap texture dimensions","&lt; Maximum Cubemap layered texture dimensions","&lt; Maximum size of each dimension of a block","The maximum number of threads per block, beyond which a …","&lt; Maximum number of threads per block","&lt; Maximum resident threads per multiprocessor","&lt; Maximum pitch in bytes allowed by memory copies","&lt; Global memory bus width in bits","&lt; Peak memory clock frequency in kilohertz","&lt; Minor compute capability","","&lt; CUDA mipmapped array","&lt; First mip level at which the mip tail begins","&lt; Total size of the mip tail.","&lt; ::CUaccessProperty set for miss. Must be either NORMAL …","&lt; Unique identifier for a group of devices on the same …","&lt; Number of multiprocessors on device","&lt; ASCII string identifying device","Name of a valid memory object. Must be NULL if ‘handle’…","Name of a valid synchronization primitive. Must be NULL if …","&lt; Number of handles and parameters supplied in extSemArray …","&lt; Number of handles and parameters supplied in extSemArray …","Total number of levels in the mipmap chain","The number of registers used by each thread of this …","&lt; Size in bytes of the window policy. CUDA driver may …","A handle representing NvSciBuf Object. Valid when type is …","","","Valid NvSciSyncObj. Must be non NULL","Offset into the memory object where the buffer’s base is","Offset into the memory object where the base level of the …","&lt; Device supports coherently accessing pageable memory …","&lt; Device accesses pageable memory via the host’s page …","","","&lt; Array of external semaphore signal parameters.","&lt; Array of external semaphore wait parameters.","&lt; PCI bus ID of the device","&lt; PCI device ID of the device","&lt; PCI domain ID of the device","&lt; Device’s maximum l2 persisting lines capacity setting …","&lt; Pitch of allocated memory in bytes","&lt; Pitch of destination device pointer. Unused if height is …","","&lt; Pitch between two rows in bytes","&lt; in: array of memory access descriptors. Used to describe …","On devices where the L1 cache and shared memory use the …","&lt; Pointer to allocated memory","The PTX virtual architecture version for which the …","&lt; 32-bit registers available per block","&lt; 32-bit registers available per multiprocessor","","&lt; Resource type","","&lt; reserved for future use, must be 0","","","","","","","","","","&lt; Shared memory reserved by CUDA driver per block in bytes","&lt; Shared memory","&lt; Dynamic shared-memory size per thread block in bytes","&lt; Shared memory available per block in bytes","&lt; Per device maximum shared memory per block usable by …","&lt; Shared memory available per multiprocessor in bytes","The size in bytes of statically-allocated shared memory …","&lt; Ratio of single precision performance (in floating-point …","Size of the memory allocation","Size of the buffer","&lt; Size in bytes","&lt; Source memory address","&lt; Source memory address","&lt; Source device","&lt; Source position offset","&lt; Source position offset","&lt; Pitched source memory address","&lt; Pitched source memory address","&lt; Stream identifier","&lt; Device supports stream priorities","&lt; Alignment requirements for surfaces","","&lt; 1 if device is a Tesla device using TCC driver, 0 …","&lt; Alignment requirement for textures","&lt; Pitch alignment requirement for texture references bound …","","Timeout in milliseconds to wait to acquire the mutex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Constant memory available on device in bytes","&lt; Global memory available on device in byteshe type of memory - ::cudaMemoryTypeUnregistered, …","&lt; Specifies the location type, which modifies the meaning …","Type of the handle","Type of the handle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Device shares a unified address space with the host","&lt; Argument to pass to the function","&lt; 16-byte unique identifier","&lt; Value to be set","Value of fence to be signaled","Value of fence to be waited on","&lt; w","&lt; Warp size in threads","&lt; Tile width in elements","&lt; Width in elements when referring to array memory, in …","&lt; Width of the row in elements","&lt; Width of the array in elements","&lt; Width of the resource view","","","Windows-specific LPSECURITYATTRIBUTES required when …","","","","&lt; x","&lt; x","&lt; Logical width of allocation in elements","","","","&lt; y","&lt; y","&lt; Logical height of allocation in elements","","&lt; z","&lt; z"],"i":[1,1,2,2,2,2,2,2,2,2,2,2,2,3,4,4,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,7,7,7,7,7,3,8,8,9,9,10,10,10,10,10,10,10,10,10,10,3,3,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,12,13,13,12,14,15,16,17,18,19,12,20,21,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,20,42,43,44,45,46,14,47,48,49,50,51,52,53,54,15,55,56,57,18,19,58,59,60,61,62,21,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,16,84,13,85,86,87,12,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,17,22,120,121,122,123,124,125,126,127,11,10,5,4,9,7,8,1,6,3,2,128,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,20,42,43,44,45,46,14,47,48,49,50,51,52,53,54,15,55,56,57,18,19,58,59,60,61,62,21,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,16,84,13,85,86,87,12,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,17,22,120,121,122,123,124,125,126,127,11,10,5,4,9,7,8,1,6,3,2,128,87,13,21,12,12,12,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,20,42,43,44,45,46,14,47,48,49,50,51,52,53,54,15,55,56,57,18,19,58,59,60,61,62,21,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,16,84,13,85,86,87,12,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,17,22,120,121,122,123,124,125,126,127,11,10,5,4,9,7,8,1,6,3,2,128,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,20,42,43,44,45,46,14,47,48,49,50,51,52,53,54,15,55,56,57,18,19,58,59,60,61,62,21,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,16,84,13,85,86,87,12,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,17,22,120,121,122,123,124,125,126,127,11,10,5,4,9,7,8,1,6,3,2,128,12,12,12,12,21,15,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,41,0,0,0,0,0,0,119,119,119,71,71,0,0,27,27,27,27,27,0,67,67,67,67,0,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,86,86,86,86,0,0,0,125,125,125,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,0,0,90,90,90,90,90,90,90,90,0,0,0,0,0,0,96,96,96,96,96,96,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,72,72,0,0,0,75,74,74,0,63,63,63,0,0,64,64,64,64,0,0,73,73,73,0,0,126,126,126,126,126,126,126,126,126,126,124,124,124,124,124,124,124,0,124,0,127,0,85,85,85,85,0,0,122,122,122,122,122,122,122,122,122,122,122,122,122,0,49,0,0,53,53,53,53,53,53,0,52,52,52,0,51,51,51,51,51,0,0,0,0,0,0,0,0,0,0,54,54,0,71,71,0,0,68,68,68,68,68,68,68,0,0,80,80,80,69,69,69,69,69,69,0,0,0,82,82,82,83,83,83,83,0,0,78,78,0,77,77,77,77,77,0,0,77,77,77,0,0,70,70,70,70,0,0,34,34,34,34,34,0,0,0,33,33,33,33,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,0,0,0,55,55,55,55,0,0,0,65,65,65,0,66,66,66,47,0,0,46,46,0,44,44,44,0,43,43,43,47,0,0,26,26,45,45,45,45,0,0,0,48,0,0,32,36,61,59,60,59,60,62,12,62,0,12,0,13,40,38,39,39,38,39,38,39,40,26,27,33,34,41,43,44,45,46,47,48,49,51,52,53,54,55,56,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,85,86,90,96,119,122,124,125,126,127,11,10,5,4,9,7,8,1,6,3,2,120,121,38,39,95,22,28,92,98,101,103,106,108,61,61,31,81,91,94,95,97,100,105,0,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,20,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,19,58,59,60,61,62,21,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,90,93,94,95,96,99,102,104,107,109,110,111,112,113,114,115,116,117,118,119,17,22,120,121,122,123,124,125,126,127,11,10,5,4,9,7,8,1,6,3,2,128,42,61,95,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,20,42,43,44,45,46,14,47,48,49,50,51,52,53,54,15,55,56,57,18,19,58,59,60,61,62,21,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,16,84,13,85,86,87,12,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,17,22,120,121,122,123,124,125,126,127,11,10,5,4,9,7,8,1,6,3,2,128,17,22,12,17,22,91,93,97,99,16,26,27,33,34,41,43,44,45,46,47,48,49,51,52,53,54,55,56,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,85,86,90,96,119,122,124,125,126,127,11,10,5,4,9,7,8,1,6,3,2,32,36,40,60,61,20,20,12,62,79,12,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,20,42,43,44,45,46,14,47,48,49,50,51,52,53,54,15,55,56,57,18,19,58,59,60,61,62,21,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,16,84,13,85,86,87,12,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,17,22,120,121,122,123,124,125,126,127,11,10,5,4,9,7,8,1,6,3,2,128,12,12,22,104,109,101,106,38,12,61,61,0,0,0,0,0,18,12,21,81,16,12,12,12,12,12,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,12,12,12,12,12,12,18,58,31,31,20,12,12,12,93,99,120,121,95,21,20,92,101,106,98,94,95,12,12,100,105,120,121,12,12,12,12,35,40,18,60,13,21,35,21,12,12,57,57,31,16,84,88,89,100,101,103,105,106,108,12,17,22,12,12,12,21,12,91,94,59,38,39,39,38,39,38,39,17,12,12,14,12,12,12,31,109,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,20,42,43,44,45,46,14,47,48,49,50,51,52,53,54,15,55,56,57,18,19,58,59,60,61,62,21,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,16,84,13,85,86,87,12,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,17,22,120,121,122,123,124,125,126,127,11,10,5,4,9,7,8,1,6,3,2,128,12,12,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,20,42,43,44,45,46,14,47,48,49,50,51,52,53,54,15,55,56,57,18,19,58,59,60,61,62,21,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,16,84,13,85,86,87,12,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,17,22,120,121,122,123,124,125,126,127,11,10,5,4,9,7,8,1,6,3,2,128,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,20,42,43,44,45,46,14,47,48,49,50,51,52,53,54,15,55,56,57,18,19,58,59,60,61,62,21,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,16,84,13,85,86,87,12,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,17,22,120,121,122,123,124,125,126,127,11,10,5,4,9,7,8,1,6,3,2,128,62,79,91,97,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,20,42,43,44,45,46,14,47,48,49,50,51,52,53,54,15,55,56,57,18,19,58,59,60,61,62,21,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,16,84,13,85,86,87,12,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,17,22,120,121,122,123,124,125,126,127,11,10,5,4,9,7,8,1,6,3,2,128,12,42,12,40,102,107,28,12,32,36,40,60,61,92,98,16,23,24,25,28,37,35,23,24,25,28,37,35,25,28,37],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,[[["float2",3]],["float2",3]],[[["double2",3]],["double2",3]],[[["dim3",3]],["dim3",3]],[[["cudaerror",4]],["cudaerror",4]],[[["cudachannelformatkind",4]],["cudachannelformatkind",4]],[[["cudachannelformatdesc",3]],["cudachannelformatdesc",3]],[[["cudaarray",3]],["cudaarray",3]],[[["cudamipmappedarray",3]],["cudamipmappedarray",3]],[[["cudaarraysparseproperties",3]],["cudaarraysparseproperties",3]],[[["cudaarraysparseproperties__bindgen_ty_1",3]],["cudaarraysparseproperties__bindgen_ty_1",3]],[[["cudamemorytype",4]],["cudamemorytype",4]],[[["cudamemcpykind",4]],["cudamemcpykind",4]],[[["cudapitchedptr",3]],["cudapitchedptr",3]],[[["cudaextent",3]],["cudaextent",3]],[[["cudapos",3]],["cudapos",3]],[[["cudamemcpy3dparms",3]],["cudamemcpy3dparms",3]],[[["cudamemcpy3dpeerparms",3]],["cudamemcpy3dpeerparms",3]],[[["cudamemsetparams",3]],["cudamemsetparams",3]],[[["cudaaccessproperty",4]],["cudaaccessproperty",4]],[[["cudaaccesspolicywindow",3]],["cudaaccesspolicywindow",3]],[[["cudahostnodeparams",3]],["cudahostnodeparams",3]],[[["cudastreamcapturestatus",4]],["cudastreamcapturestatus",4]],[[["cudastreamcapturemode",4]],["cudastreamcapturemode",4]],[[["cudasynchronizationpolicy",4]],["cudasynchronizationpolicy",4]],[[["cudastreamattrid",4]],["cudastreamattrid",4]],[[["cudastreamattrvalue",19]],["cudastreamattrvalue",19]],[[["cudastreamupdatecapturedependenciesflags",4]],["cudastreamupdatecapturedependenciesflags",4]],[[["cudauserobjectflags",4]],["cudauserobjectflags",4]],[[["cudauserobjectretainflags",4]],["cudauserobjectretainflags",4]],[[["cudagraphicsresource",3]],["cudagraphicsresource",3]],[[["cudagraphicsregisterflags",4]],["cudagraphicsregisterflags",4]],[[["cudagraphicsmapflags",4]],["cudagraphicsmapflags",4]],[[["cudagraphicscubeface",4]],["cudagraphicscubeface",4]],[[["cudakernelnodeattrid",4]],["cudakernelnodeattrid",4]],[[["cudakernelnodeattrvalue",19]],["cudakernelnodeattrvalue",19]],[[["cudaresourcetype",4]],["cudaresourcetype",4]],[[["cudaresourceviewformat",4]],["cudaresourceviewformat",4]],[[["cudaresourcedesc",3]],["cudaresourcedesc",3]],[[["cudaresourcedesc__bindgen_ty_1",19]],["cudaresourcedesc__bindgen_ty_1",19]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1",3]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1",3]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2",3]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2",3]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3",3]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3",3]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4",3]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4",3]],[[["cudaresourceviewdesc",3]],["cudaresourceviewdesc",3]],[[["cudapointerattributes",3]],["cudapointerattributes",3]],[[["cudafuncattributes",3]],["cudafuncattributes",3]],[[["cudafuncattribute",4]],["cudafuncattribute",4]],[[["cudafunccache",4]],["cudafunccache",4]],[[["cudasharedmemconfig",4]],["cudasharedmemconfig",4]],[[["cudasharedcarveout",4]],["cudasharedcarveout",4]],[[["cudacomputemode",4]],["cudacomputemode",4]],[[["cudalimit",4]],["cudalimit",4]],[[["cudamemoryadvise",4]],["cudamemoryadvise",4]],[[["cudamemrangeattribute",4]],["cudamemrangeattribute",4]],[[["cudaoutputmode",4]],["cudaoutputmode",4]],[[["cudaflushgpudirectrdmawritesoptions",4]],["cudaflushgpudirectrdmawritesoptions",4]],[[["cudagpudirectrdmawritesordering",4]],["cudagpudirectrdmawritesordering",4]],[[["cudaflushgpudirectrdmawritesscope",4]],["cudaflushgpudirectrdmawritesscope",4]],[[["cudaflushgpudirectrdmawritestarget",4]],["cudaflushgpudirectrdmawritestarget",4]],[[["cudadeviceattr",4]],["cudadeviceattr",4]],[[["cudamempoolattr",4]],["cudamempoolattr",4]],[[["cudamemlocationtype",4]],["cudamemlocationtype",4]],[[["cudamemlocation",3]],["cudamemlocation",3]],[[["cudamemaccessflags",4]],["cudamemaccessflags",4]],[[["cudamemaccessdesc",3]],["cudamemaccessdesc",3]],[[["cudamemallocationtype",4]],["cudamemallocationtype",4]],[[["cudamemallocationhandletype",4]],["cudamemallocationhandletype",4]],[[["cudamempoolprops",3]],["cudamempoolprops",3]],[[["cudamempoolptrexportdata",3]],["cudamempoolptrexportdata",3]],[[["cudamemallocnodeparams",3]],["cudamemallocnodeparams",3]],[[["cudagraphmemattributetype",4]],["cudagraphmemattributetype",4]],[[["cudadevicep2pattr",4]],["cudadevicep2pattr",4]],[[["cuuuid_st",3]],["cuuuid_st",3]],[[["cudadeviceprop",3]],["cudadeviceprop",3]],[[["cudaipceventhandle_st",3]],["cudaipceventhandle_st",3]],[[["cudaipcmemhandle_st",3]],["cudaipcmemhandle_st",3]],[[["cudaexternalmemoryhandletype",4]],["cudaexternalmemoryhandletype",4]],[[["cudaexternalmemoryhandledesc",3]],["cudaexternalmemoryhandledesc",3]],[[["cudaexternalmemoryhandledesc__bindgen_ty_1",19]],["cudaexternalmemoryhandledesc__bindgen_ty_1",19]],[[["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1",3]],["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1",3]],[[["cudaexternalmemorybufferdesc",3]],["cudaexternalmemorybufferdesc",3]],[[["cudaexternalmemorymipmappedarraydesc",3]],["cudaexternalmemorymipmappedarraydesc",3]],[[["cudaexternalsemaphorehandletype",4]],["cudaexternalsemaphorehandletype",4]],[[["cudaexternalsemaphorehandledesc",3]],["cudaexternalsemaphorehandledesc",3]],[[["cudaexternalsemaphorehandledesc__bindgen_ty_1",19]],["cudaexternalsemaphorehandledesc__bindgen_ty_1",19]],[[["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1",3]],["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1",3]],[[["cudaexternalsemaphoresignalparams",3]],["cudaexternalsemaphoresignalparams",3]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1",3]],["cudaexternalsemaphoresignalparams__bindgen_ty_1",3]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1",3]],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1",3]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_2",19]],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_2",19]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3",3]],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3",3]],[[["cudaexternalsemaphorewaitparams",3]],["cudaexternalsemaphorewaitparams",3]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1",3]],["cudaexternalsemaphorewaitparams__bindgen_ty_1",3]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1",3]],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1",3]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_2",19]],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_2",19]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3",3]],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3",3]],[[["custream_st",3]],["custream_st",3]],[[["cuevent_st",3]],["cuevent_st",3]],[[["cuexternalmemory_st",3]],["cuexternalmemory_st",3]],[[["cuexternalsemaphore_st",3]],["cuexternalsemaphore_st",3]],[[["cugraph_st",3]],["cugraph_st",3]],[[["cugraphnode_st",3]],["cugraphnode_st",3]],[[["cuuserobject_st",3]],["cuuserobject_st",3]],[[["cufunc_st",3]],["cufunc_st",3]],[[["cumempoolhandle_st",3]],["cumempoolhandle_st",3]],[[["cudacgscope",4]],["cudacgscope",4]],[[["cudalaunchparams",3]],["cudalaunchparams",3]],[[["cudakernelnodeparams",3]],["cudakernelnodeparams",3]],[[["cudaexternalsemaphoresignalnodeparams",3]],["cudaexternalsemaphoresignalnodeparams",3]],[[["cudaexternalsemaphorewaitnodeparams",3]],["cudaexternalsemaphorewaitnodeparams",3]],[[["cudagraphnodetype",4]],["cudagraphnodetype",4]],[[["cugraphexec_st",3]],["cugraphexec_st",3]],[[["cudagraphexecupdateresult",4]],["cudagraphexecupdateresult",4]],[[["cudagetdriverentrypointflags",4]],["cudagetdriverentrypointflags",4]],[[["cudagraphdebugdotflags",4]],["cudagraphdebugdotflags",4]],[[["cudagraphinstantiateflags",4]],["cudagraphinstantiateflags",4]],[[["cudadatatype_t",4]],["cudadatatype_t",4]],[[["cublasstatus_t",4]],["cublasstatus_t",4]],[[["cublasfillmode_t",4]],["cublasfillmode_t",4]],[[["cublasdiagtype_t",4]],["cublasdiagtype_t",4]],[[["cublassidemode_t",4]],["cublassidemode_t",4]],[[["cublasoperation_t",4]],["cublasoperation_t",4]],[[["cublaspointermode_t",4]],["cublaspointermode_t",4]],[[["cublasatomicsmode_t",4]],["cublasatomicsmode_t",4]],[[["cublasgemmalgo_t",4]],["cublasgemmalgo_t",4]],[[["cublasmath_t",4]],["cublasmath_t",4]],[[["cublascomputetype_t",4]],["cublascomputetype_t",4]],[[["cublascontext",3]],["cublascontextnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cudaerror",4],["cudaerror",4]],["bool",0]],[[["cudachannelformatkind",4],["cudachannelformatkind",4]],["bool",0]],[[["cudamemorytype",4],["cudamemorytype",4]],["bool",0]],[[["cudamemcpykind",4],["cudamemcpykind",4]],["bool",0]],[[["cudaaccessproperty",4],["cudaaccessproperty",4]],["bool",0]],[[["cudastreamcapturestatus",4],["cudastreamcapturestatus",4]],["bool",0]],[[["cudastreamcapturemode",4],["cudastreamcapturemode",4]],["bool",0]],[[["cudasynchronizationpolicy",4],["cudasynchronizationpolicy",4]],["bool",0]],[[["cudastreamattrid",4],["cudastreamattrid",4]],["bool",0]],[[["cudastreamupdatecapturedependenciesflags",4],["cudastreamupdatecapturedependenciesflags",4]],["bool",0]],[[["cudauserobjectflags",4],["cudauserobjectflags",4]],["bool",0]],[[["cudauserobjectretainflags",4],["cudauserobjectretainflags",4]],["bool",0]],[[["cudagraphicsregisterflags",4],["cudagraphicsregisterflags",4]],["bool",0]],[[["cudagraphicsmapflags",4],["cudagraphicsmapflags",4]],["bool",0]],[[["cudagraphicscubeface",4],["cudagraphicscubeface",4]],["bool",0]],[[["cudakernelnodeattrid",4],["cudakernelnodeattrid",4]],["bool",0]],[[["cudaresourcetype",4],["cudaresourcetype",4]],["bool",0]],[[["cudaresourceviewformat",4],["cudaresourceviewformat",4]],["bool",0]],[[["cudafuncattribute",4],["cudafuncattribute",4]],["bool",0]],[[["cudafunccache",4],["cudafunccache",4]],["bool",0]],[[["cudasharedmemconfig",4],["cudasharedmemconfig",4]],["bool",0]],[[["cudasharedcarveout",4],["cudasharedcarveout",4]],["bool",0]],[[["cudacomputemode",4],["cudacomputemode",4]],["bool",0]],[[["cudalimit",4],["cudalimit",4]],["bool",0]],[[["cudamemoryadvise",4],["cudamemoryadvise",4]],["bool",0]],[[["cudamemrangeattribute",4],["cudamemrangeattribute",4]],["bool",0]],[[["cudaoutputmode",4],["cudaoutputmode",4]],["bool",0]],[[["cudaflushgpudirectrdmawritesoptions",4],["cudaflushgpudirectrdmawritesoptions",4]],["bool",0]],[[["cudagpudirectrdmawritesordering",4],["cudagpudirectrdmawritesordering",4]],["bool",0]],[[["cudaflushgpudirectrdmawritesscope",4],["cudaflushgpudirectrdmawritesscope",4]],["bool",0]],[[["cudaflushgpudirectrdmawritestarget",4],["cudaflushgpudirectrdmawritestarget",4]],["bool",0]],[[["cudadeviceattr",4],["cudadeviceattr",4]],["bool",0]],[[["cudamempoolattr",4],["cudamempoolattr",4]],["bool",0]],[[["cudamemlocationtype",4],["cudamemlocationtype",4]],["bool",0]],[[["cudamemaccessflags",4],["cudamemaccessflags",4]],["bool",0]],[[["cudamemallocationtype",4],["cudamemallocationtype",4]],["bool",0]],[[["cudamemallocationhandletype",4],["cudamemallocationhandletype",4]],["bool",0]],[[["cudagraphmemattributetype",4],["cudagraphmemattributetype",4]],["bool",0]],[[["cudadevicep2pattr",4],["cudadevicep2pattr",4]],["bool",0]],[[["cudaexternalmemoryhandletype",4],["cudaexternalmemoryhandletype",4]],["bool",0]],[[["cudaexternalsemaphorehandletype",4],["cudaexternalsemaphorehandletype",4]],["bool",0]],[[["cudacgscope",4],["cudacgscope",4]],["bool",0]],[[["cudagraphnodetype",4],["cudagraphnodetype",4]],["bool",0]],[[["cudagraphexecupdateresult",4],["cudagraphexecupdateresult",4]],["bool",0]],[[["cudagetdriverentrypointflags",4],["cudagetdriverentrypointflags",4]],["bool",0]],[[["cudagraphdebugdotflags",4],["cudagraphdebugdotflags",4]],["bool",0]],[[["cudagraphinstantiateflags",4],["cudagraphinstantiateflags",4]],["bool",0]],[[["cudadatatype_t",4],["cudadatatype_t",4]],["bool",0]],[[["cublasstatus_t",4],["cublasstatus_t",4]],["bool",0]],[[["cublasfillmode_t",4],["cublasfillmode_t",4]],["bool",0]],[[["cublasdiagtype_t",4],["cublasdiagtype_t",4]],["bool",0]],[[["cublassidemode_t",4],["cublassidemode_t",4]],["bool",0]],[[["cublasoperation_t",4],["cublasoperation_t",4]],["bool",0]],[[["cublaspointermode_t",4],["cublaspointermode_t",4]],["bool",0]],[[["cublasatomicsmode_t",4],["cublasatomicsmode_t",4]],["bool",0]],[[["cublasgemmalgo_t",4],["cublasgemmalgo_t",4]],["bool",0]],[[["cublasmath_t",4],["cublasmath_t",4]],["bool",0]],[[["cublascomputetype_t",4],["cublascomputetype_t",4]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["float2",3],["formatter",3]],["result",6]],[[["double2",3],["formatter",3]],["result",6]],[[["dim3",3],["formatter",3]],["result",6]],[[["cudaerror",4],["formatter",3]],["result",6]],[[["cudachannelformatkind",4],["formatter",3]],["result",6]],[[["cudachannelformatdesc",3],["formatter",3]],["result",6]],[[["cudaarray",3],["formatter",3]],["result",6]],[[["cudamipmappedarray",3],["formatter",3]],["result",6]],[[["cudaarraysparseproperties",3],["formatter",3]],["result",6]],[[["cudaarraysparseproperties__bindgen_ty_1",3],["formatter",3]],["result",6]],[[["cudamemorytype",4],["formatter",3]],["result",6]],[[["cudamemcpykind",4],["formatter",3]],["result",6]],[[["cudapitchedptr",3],["formatter",3]],["result",6]],[[["cudaextent",3],["formatter",3]],["result",6]],[[["cudapos",3],["formatter",3]],["result",6]],[[["cudamemcpy3dparms",3],["formatter",3]],["result",6]],[[["cudamemcpy3dpeerparms",3],["formatter",3]],["result",6]],[[["cudamemsetparams",3],["formatter",3]],["result",6]],[[["cudaaccessproperty",4],["formatter",3]],["result",6]],[[["cudaaccesspolicywindow",3],["formatter",3]],["result",6]],[[["cudahostnodeparams",3],["formatter",3]],["result",6]],[[["cudastreamcapturestatus",4],["formatter",3]],["result",6]],[[["cudastreamcapturemode",4],["formatter",3]],["result",6]],[[["cudasynchronizationpolicy",4],["formatter",3]],["result",6]],[[["cudastreamattrid",4],["formatter",3]],["result",6]],[[["cudastreamupdatecapturedependenciesflags",4],["formatter",3]],["result",6]],[[["cudauserobjectflags",4],["formatter",3]],["result",6]],[[["cudauserobjectretainflags",4],["formatter",3]],["result",6]],[[["cudagraphicsresource",3],["formatter",3]],["result",6]],[[["cudagraphicsregisterflags",4],["formatter",3]],["result",6]],[[["cudagraphicsmapflags",4],["formatter",3]],["result",6]],[[["cudagraphicscubeface",4],["formatter",3]],["result",6]],[[["cudakernelnodeattrid",4],["formatter",3]],["result",6]],[[["cudaresourcetype",4],["formatter",3]],["result",6]],[[["cudaresourceviewformat",4],["formatter",3]],["result",6]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",6]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2",3],["formatter",3]],["result",6]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3",3],["formatter",3]],["result",6]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4",3],["formatter",3]],["result",6]],[[["cudaresourceviewdesc",3],["formatter",3]],["result",6]],[[["cudapointerattributes",3],["formatter",3]],["result",6]],[[["cudafuncattributes",3],["formatter",3]],["result",6]],[[["cudafuncattribute",4],["formatter",3]],["result",6]],[[["cudafunccache",4],["formatter",3]],["result",6]],[[["cudasharedmemconfig",4],["formatter",3]],["result",6]],[[["cudasharedcarveout",4],["formatter",3]],["result",6]],[[["cudacomputemode",4],["formatter",3]],["result",6]],[[["cudalimit",4],["formatter",3]],["result",6]],[[["cudamemoryadvise",4],["formatter",3]],["result",6]],[[["cudamemrangeattribute",4],["formatter",3]],["result",6]],[[["cudaoutputmode",4],["formatter",3]],["result",6]],[[["cudaflushgpudirectrdmawritesoptions",4],["formatter",3]],["result",6]],[[["cudagpudirectrdmawritesordering",4],["formatter",3]],["result",6]],[[["cudaflushgpudirectrdmawritesscope",4],["formatter",3]],["result",6]],[[["cudaflushgpudirectrdmawritestarget",4],["formatter",3]],["result",6]],[[["cudadeviceattr",4],["formatter",3]],["result",6]],[[["cudamempoolattr",4],["formatter",3]],["result",6]],[[["cudamemlocationtype",4],["formatter",3]],["result",6]],[[["cudamemlocation",3],["formatter",3]],["result",6]],[[["cudamemaccessflags",4],["formatter",3]],["result",6]],[[["cudamemaccessdesc",3],["formatter",3]],["result",6]],[[["cudamemallocationtype",4],["formatter",3]],["result",6]],[[["cudamemallocationhandletype",4],["formatter",3]],["result",6]],[[["cudagraphmemattributetype",4],["formatter",3]],["result",6]],[[["cudadevicep2pattr",4],["formatter",3]],["result",6]],[[["cuuuid_st",3],["formatter",3]],["result",6]],[[["cudaexternalmemoryhandletype",4],["formatter",3]],["result",6]],[[["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",6]],[[["cudaexternalmemorybufferdesc",3],["formatter",3]],["result",6]],[[["cudaexternalmemorymipmappedarraydesc",3],["formatter",3]],["result",6]],[[["cudaexternalsemaphorehandletype",4],["formatter",3]],["result",6]],[[["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",6]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",6]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3",3],["formatter",3]],["result",6]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",6]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3",3],["formatter",3]],["result",6]],[[["custream_st",3],["formatter",3]],["result",6]],[[["cuevent_st",3],["formatter",3]],["result",6]],[[["cuexternalmemory_st",3],["formatter",3]],["result",6]],[[["cuexternalsemaphore_st",3],["formatter",3]],["result",6]],[[["cugraph_st",3],["formatter",3]],["result",6]],[[["cugraphnode_st",3],["formatter",3]],["result",6]],[[["cuuserobject_st",3],["formatter",3]],["result",6]],[[["cufunc_st",3],["formatter",3]],["result",6]],[[["cumempoolhandle_st",3],["formatter",3]],["result",6]],[[["cudacgscope",4],["formatter",3]],["result",6]],[[["cudalaunchparams",3],["formatter",3]],["result",6]],[[["cudakernelnodeparams",3],["formatter",3]],["result",6]],[[["cudaexternalsemaphoresignalnodeparams",3],["formatter",3]],["result",6]],[[["cudaexternalsemaphorewaitnodeparams",3],["formatter",3]],["result",6]],[[["cudagraphnodetype",4],["formatter",3]],["result",6]],[[["cugraphexec_st",3],["formatter",3]],["result",6]],[[["cudagraphexecupdateresult",4],["formatter",3]],["result",6]],[[["cudagetdriverentrypointflags",4],["formatter",3]],["result",6]],[[["cudagraphdebugdotflags",4],["formatter",3]],["result",6]],[[["cudagraphinstantiateflags",4],["formatter",3]],["result",6]],[[["cudadatatype_t",4],["formatter",3]],["result",6]],[[["cublasstatus_t",4],["formatter",3]],["result",6]],[[["cublasfillmode_t",4],["formatter",3]],["result",6]],[[["cublasdiagtype_t",4],["formatter",3]],["result",6]],[[["cublassidemode_t",4],["formatter",3]],["result",6]],[[["cublasoperation_t",4],["formatter",3]],["result",6]],[[["cublaspointermode_t",4],["formatter",3]],["result",6]],[[["cublasatomicsmode_t",4],["formatter",3]],["result",6]],[[["cublasgemmalgo_t",4],["formatter",3]],["result",6]],[[["cublasmath_t",4],["formatter",3]],["result",6]],[[["cublascomputetype_t",4],["formatter",3]],["result",6]],[[["cublascontext",3],["formatter",3]],["result",6]],null,null,nullnull,null,null,null,null,null,null,null,null,null,[[["cudaerror",4],["",0]]],[[["cudachannelformatkind",4],["",0]]],[[["cudamemorytype",4],["",0]]],[[["cudamemcpykind",4],["",0]]],[[["cudaaccessproperty",4],["",0]]],[[["cudastreamcapturestatus",4],["",0]]],[[["cudastreamcapturemode",4],["",0]]],[[["cudasynchronizationpolicy",4],["",0]]],[[["cudastreamattrid",4],["",0]]],[[["cudastreamupdatecapturedependenciesflags",4],["",0]]],[[["cudauserobjectflags",4],["",0]]],[[["cudauserobjectretainflags",4],["",0]]],[[["cudagraphicsregisterflags",4],["",0]]],[[["cudagraphicsmapflags",4],["",0]]],[[["cudagraphicscubeface",4],["",0]]],[[["cudakernelnodeattrid",4],["",0]]],[[["cudaresourcetype",4],["",0]]],[[["cudaresourceviewformat",4],["",0]]],[[["cudafuncattribute",4],["",0]]],[[["cudafunccache",4],["",0]]],[[["cudasharedmemconfig",4],["",0]]],[[["cudasharedcarveout",4],["",0]]],[[["cudacomputemode",4],["",0]]],[[["cudalimit",4],["",0]]],[[["cudamemoryadvise",4],["",0]]],[[["cudamemrangeattribute",4],["",0]]],[[["cudaoutputmode",4],["",0]]],[[["cudaflushgpudirectrdmawritesoptions",4],["",0]]],[[["cudagpudirectrdmawritesordering",4],["",0]]],[[["cudaflushgpudirectrdmawritesscope",4],["",0]]],[[["cudaflushgpudirectrdmawritestarget",4],["",0]]],[[["cudadeviceattr",4],["",0]]],[[["cudamempoolattr",4],["",0]]],[[["cudamemlocationtype",4],["",0]]],[[["cudamemaccessflags",4],["",0]]],[[["cudamemallocationtype",4],["",0]]],[[["cudamemallocationhandletype",4],["",0]]],[[["cudagraphmemattributetype",4],["",0]]],[[["cudadevicep2pattr",4],["",0]]],[[["cudaexternalmemoryhandletype",4],["",0]]],[[["cudaexternalsemaphorehandletype",4],["",0]]],[[["cudacgscope",4],["",0]]],[[["cudagraphnodetype",4],["",0]]],[[["cudagraphexecupdateresult",4],["",0]]],[[["cudagetdriverentrypointflags",4],["",0]]],[[["cudagraphdebugdotflags",4],["",0]]],[[["cudagraphinstantiateflags",4],["",0]]],[[["cudadatatype_t",4],["",0]]],[[["cublasstatus_t",4],["",0]]],[[["cublasfillmode_t",4],["",0]]],[[["cublasdiagtype_t",4],["",0]]],[[["cublassidemode_t",4],["",0]]],[[["cublasoperation_t",4],["",0]]],[[["cublaspointermode_t",4],["",0]]],[[["cublasatomicsmode_t",4],["",0]]],[[["cublasgemmalgo_t",4],["",0]]],[[["cublasmath_t",4],["",0]]],[[["cublascomputetype_t",4],["",0]]],null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"cublasAtomicsMode_t"],[4,"cublasComputeType_t"],[4,"cublasMath_t"],[4,"cublasDiagType_t"],[4,"cublasFillMode_t"],[4,"cublasGemmAlgo_t"],[4,"cublasOperation_t"],[4,"cublasPointerMode_t"],[4,"cublasSideMode_t"],[4,"cublasStatus_t"],[4,"cudaDataType_t"],[3,"cudaDeviceProp"],[3,"cudaMemAllocNodeParams"],[19,"cudaStreamAttrValue"],[19,"cudaKernelNodeAttrValue"],[3,"cudaMemPoolProps"],[3,"cudaLaunchParams"],[19,"cudaResourceDesc__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaAccessPolicyWindow"],[3,"cudaFuncAttributes"],[3,"cudaKernelNodeParams"],[3,"float2"],[3,"double2"],[3,"dim3"],[4,"cudaError"],[4,"cudaChannelFormatKind"],[3,"cudaChannelFormatDesc"],[3,"cudaArray"],[3,"cudaMipmappedArray"],[3,"cudaArraySparseProperties"],[3,"cudaArraySparseProperties__bindgen_ty_1"],[4,"cudaMemoryType"],[4,"cudaMemcpyKind"],[3,"cudaPitchedPtr"],[3,"cudaExtent"],[3,"cudaPos"],[3,"cudaMemcpy3DParms"],[3,"cudaMemcpy3DPeerParms"],[3,"cudaMemsetParams"],[4,"cudaAccessProperty"],[3,"cudaHostNodeParams"],[4,"cudaStreamCaptureStatus"],[4,"cudaStreamCaptureMode"],[4,"cudaSynchronizationPolicy"],[4,"cudaStreamAttrID"],[4,"cudaStreamUpdateCaptureDependenciesFlags"],[4,"cudaUserObjectFlags"],[4,"cudaUserObjectRetainFlags"],[3,"cudaGraphicsResource"],[4,"cudaGraphicsRegisterFlags"],[4,"cudaGraphicsMapFlags"],[4,"cudaGraphicsCubeFace"],[4,"cudaKernelNodeAttrID"],[4,"cudaResourceType"],[4,"cudaResourceViewFormat"],[3,"cudaResourceDesc"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4"],[3,"cudaResourceViewDesc"],[3,"cudaPointerAttributes"],[4,"cudaFuncAttribute"],[4,"cudaFuncCache"],[4,"cudaSharedMemConfig"],[4,"cudaSharedCarveout"],[4,"cudaComputeMode"],[4,"cudaLimit"],[4,"cudaMemoryAdvise"],[4,"cudaMemRangeAttribute"],[4,"cudaOutputMode"],[4,"cudaFlushGPUDirectRDMAWritesOptions"],[4,"cudaGPUDirectRDMAWritesOrdering"],[4,"cudaFlushGPUDirectRDMAWritesScope"],[4,"cudaFlushGPUDirectRDMAWritesTarget"],[4,"cudaDeviceAttr"],[4,"cudaMemPoolAttr"],[4,"cudaMemLocationType"],[3,"cudaMemLocation"],[4,"cudaMemAccessFlags"],[3,"cudaMemAccessDesc"],[4,"cudaMemAllocationType"],[4,"cudaMemAllocationHandleType"],[3,"cudaMemPoolPtrExportData"],[4,"cudaGraphMemAttributeType"],[4,"cudaDeviceP2PAttr"],[3,"CUuuid_st"],[3,"cudaIpcEventHandle_st"],[3,"cudaIpcMemHandle_st"],[4,"cudaExternalMemoryHandleType"],[3,"cudaExternalMemoryHandleDesc"],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1"],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalMemoryBufferDesc"],[3,"cudaExternalMemoryMipmappedArrayDesc"],[4,"cudaExternalSemaphoreHandleType"],[3,"cudaExternalSemaphoreHandleDesc"],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1"],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3"],[3,"cudaExternalSemaphoreWaitParams"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3"],[3,"CUstream_st"],[3,"CUevent_st"],[3,"CUexternalMemory_st"],[3,"CUexternalSemaphore_st"],[3,"CUgraph_st"],[3,"CUgraphNode_st"],[3,"CUuserObject_st"],[3,"CUfunc_st"],[3,"CUmemPoolHandle_st"],[4,"cudaCGScope"],[3,"cudaExternalSemaphoreSignalNodeParams"],[3,"cudaExternalSemaphoreWaitNodeParams"],[4,"cudaGraphNodeType"],[3,"CUgraphExec_st"],[4,"cudaGraphExecUpdateResult"],[4,"cudaGetDriverEntryPointFlags"],[4,"cudaGraphDebugDotFlags"],[4,"cudaGraphInstantiateFlags"],[3,"cublasContext"]]},\
"rcudnn":{"doc":"Provides a safe and convenient wrapper for the CUDA cuDNN …","tn":["API","ActivationDescriptor","AllocFailed","ArchMismatch","BadParam","CTCLossAlgo","CUDA_C_16BF","CUDA_C_16BF","CUDA_C_16F","CUDA_C_16F","CUDA_C_16I","CUDA_C_16I","CUDA_C_16U","CUDA_C_16U","CUDA_C_32F","CUDA_C_32F","CUDA_C_32I","CUDA_C_32I","CUDA_C_32U","CUDA_C_32U","CUDA_C_4I","CUDA_C_4I","CUDA_C_4U","CUDA_C_4U","CUDA_C_64F","CUDA_C_64F","CUDA_C_64I","CUDA_C_64I","CUDA_C_64U","CUDA_C_64U","CUDA_C_8I","CUDA_C_8I","CUDA_C_8U","CUDA_C_8U","CUDA_R_16BF","CUDA_R_16BF","CUDA_R_16F","CUDA_R_16F","CUDA_R_16I","CUDA_R_16I","CUDA_R_16U","CUDA_R_16U","CUDA_R_32F","CUDA_R_32F","CUDA_R_32I","CUDA_R_32I","CUDA_R_32U","CUDA_R_32U","CUDA_R_4I","CUDA_R_4I","CUDA_R_4U","CUDA_R_4U","CUDA_R_64F","CUDA_R_64F","CUDA_R_64I","CUDA_R_64I","CUDA_R_64U","CUDA_R_64U","CUDA_R_8I","CUDA_R_8I","CUDA_R_8U","CUDA_R_8U","CUDNN_16BIT_INDICES","CUDNN_32BIT_INDICES","CUDNN_64BIT_INDICES","CUDNN_8BIT_INDICES","CUDNN_ACTIVATION_CLIPPED_RELU","CUDNN_ACTIVATION_ELU","CUDNN_ACTIVATION_IDENTITY","CUDNN_ACTIVATION_RELU","CUDNN_ACTIVATION_SIGMOID","CUDNN_ACTIVATION_SWISH","CUDNN_ACTIVATION_TANH","CUDNN_ADV_INFER_MAJOR","CUDNN_ADV_INFER_MINOR","CUDNN_ADV_INFER_PATCH","CUDNN_ADV_TRAIN_MAJOR","CUDNN_ADV_TRAIN_MINOR","CUDNN_ADV_TRAIN_PATCH","CUDNN_ATTN_DISABLE_PROJ_BIASES","CUDNN_ATTN_ENABLE_PROJ_BIASES","CUDNN_ATTN_QUERYMAP_ALL_TO_ONE","CUDNN_ATTN_QUERYMAP_ONE_TO_ONE","CUDNN_ATTN_WKIND_COUNT","CUDNN_ATTR_CONVOLUTION_COMP_TYPE","CUDNN_ATTR_CONVOLUTION_CONV_MODE","CUDNN_ATTR_CONVOLUTION_DILATIONS","CUDNN_ATTR_CONVOLUTION_FILTER_STRIDES","CUDNN_ATTR_CONVOLUTION_POST_PADDINGS","CUDNN_ATTR_CONVOLUTION_PRE_PADDINGS","CUDNN_ATTR_CONVOLUTION_SPATIAL_DIMS","CUDNN_ATTR_ENGINECFG_ENGINE","CUDNN_ATTR_ENGINECFG_INTERMEDIATE_INFO","CUDNN_ATTR_ENGINECFG_KNOB_CHOICES","CUDNN_ATTR_ENGINEHEUR_MODE","CUDNN_ATTR_ENGINEHEUR_OPERATION_GRAPH","CUDNN_ATTR_ENGINEHEUR_RESULTS","CUDNN_ATTR_ENGINE_BEHAVIOR_NOTE","CUDNN_ATTR_ENGINE_GLOBAL_INDEX","CUDNN_ATTR_ENGINE_KNOB_INFO","CUDNN_ATTR_ENGINE_LAYOUT_INFO","CUDNN_ATTR_ENGINE_NUMERICAL_NOTE","CUDNN_ATTR_ENGINE_OPERATION_GRAPH","CUDNN_ATTR_EXECUTION_PLAN_COMPUTED_INTERMEDIATE_UIDS","CUDNN_ATTR_EXECUTION_PLAN_ENGINE_CONFIG","CUDNN_ATTR_EXECUTION_PLAN_HANDLE","CUDNN_ATTR_EXECUTION_PLAN_RUN_ONLY_INTERMEDIATE_UIDS","CUDNN_ATTR_EXECUTION_PLAN_WORKSPACE_SIZE","CUDNN_ATTR_INTERMEDIATE_INFO_DEPENDENT_ATTRIBUTES","CUDNN_ATTR_INTERMEDIATE_INFO_DEPENDENT_DATA_UIDS","CUDNN_ATTR_INTERMEDIATE_INFO_SIZE","CUDNN_ATTR_INTERMEDIATE_INFO_UNIQUE_ID","CUDNN_ATTR_KNOB_CHOICE_KNOB_TYPE","CUDNN_ATTR_KNOB_CHOICE_KNOB_VALUE","CUDNN_ATTR_KNOB_INFO_MAXIMUM_VALUE","CUDNN_ATTR_KNOB_INFO_MINIMUM_VALUE","CUDNN_ATTR_KNOB_INFO_STRIDE","CUDNN_ATTR_KNOB_INFO_TYPE","CUDNN_ATTR_LAYOUT_INFO_TENSOR_UID","CUDNN_ATTR_LAYOUT_INFO_TYPES","CUDNN_ATTR_MATMUL_COMP_TYPE","CUDNN_ATTR_OPERATIONGRAPH_ENGINE_GLOBAL_COUNT","CUDNN_ATTR_OPERATIONGRAPH_HANDLE","CUDNN_ATTR_OPERATIONGRAPH_OPS","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_BN_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_DBN_BIAS_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_DBN_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_DY_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_EQ_BIAS","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_EQ_DY_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_EQ_X_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_INVSTD_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_MATH_PREC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_X_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_ACCUM_COUNT_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_BIAS_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EPSILON_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EQ_BIAS_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EQ_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EXP_AVERATE_FACTOR_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_MATH_PREC","CUDNN_ATTR_OPERATION_BN_FINALIZE_PREV_RUNNING_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_PREV_RUNNING_VAR_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_SAVED_INV_STD_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_SAVED_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_STATS_MODE","CUDNN_ATTR_OPERATION_BN_FINALIZE_UPDATED_RUNNING_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_UPDATED_RUNNING_VAR_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_Y_SQ_SUM_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_Y_SUM_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_ALPHA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_BETA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_CONV_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_DX","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_DY","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_W","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_ALPHA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_BETA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_CONV_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_DW","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_DY","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_X","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_ALPHA","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_BETA","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_CONV_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_W","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_X","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_Y","CUDNN_ATTR_OPERATION_GENSTATS_MATH_PREC","CUDNN_ATTR_OPERATION_GENSTATS_MODE","CUDNN_ATTR_OPERATION_GENSTATS_SQSUMDESC","CUDNN_ATTR_OPERATION_GENSTATS_SUMDESC","CUDNN_ATTR_OPERATION_GENSTATS_XDESC","CUDNN_ATTR_OPERATION_MATMUL_ADESC","CUDNN_ATTR_OPERATION_MATMUL_BDESC","CUDNN_ATTR_OPERATION_MATMUL_CDESC","CUDNN_ATTR_OPERATION_MATMUL_DESC","CUDNN_ATTR_OPERATION_MATMUL_IRREGULARLY_STRIDED_BATCH_COUNT","CUDNN_ATTR_OPERATION_POINTWISE_ALPHA1","CUDNN_ATTR_OPERATION_POINTWISE_ALPHA2","CUDNN_ATTR_OPERATION_POINTWISE_BDESC","CUDNN_ATTR_OPERATION_POINTWISE_DXDESC","CUDNN_ATTR_OPERATION_POINTWISE_DYDESC","CUDNN_ATTR_OPERATION_POINTWISE_PW_DESCRIPTOR","CUDNN_ATTR_OPERATION_POINTWISE_XDESC","CUDNN_ATTR_OPERATION_POINTWISE_YDESC","CUDNN_ATTR_OPERATION_REDUCTION_DESC","CUDNN_ATTR_OPERATION_REDUCTION_XDESC","CUDNN_ATTR_OPERATION_REDUCTION_YDESC","CUDNN_ATTR_POINTWISE_ELU_ALPHA","CUDNN_ATTR_POINTWISE_MATH_PREC","CUDNN_ATTR_POINTWISE_MODE","CUDNN_ATTR_POINTWISE_NAN_PROPAGATION","CUDNN_ATTR_POINTWISE_RELU_LOWER_CLIP","CUDNN_ATTR_POINTWISE_RELU_LOWER_CLIP_SLOPE","CUDNN_ATTR_POINTWISE_RELU_UPPER_CLIP","CUDNN_ATTR_POINTWISE_SOFTPLUS_BETA","CUDNN_ATTR_POINTWISE_SWISH_BETA","CUDNN_ATTR_REDUCTION_COMP_TYPE","CUDNN_ATTR_REDUCTION_OPERATOR","CUDNN_ATTR_TENSOR_BYTE_ALIGNMENT","CUDNN_ATTR_TENSOR_DATA_TYPE","CUDNN_ATTR_TENSOR_DIMENSIONS","CUDNN_ATTR_TENSOR_IS_BY_VALUE","CUDNN_ATTR_TENSOR_IS_VIRTUAL","CUDNN_ATTR_TENSOR_STRIDES","CUDNN_ATTR_TENSOR_UNIQUE_ID","CUDNN_ATTR_TENSOR_VECTORIZED_DIMENSION","CUDNN_ATTR_TENSOR_VECTOR_COUNT","CUDNN_ATTR_VARIANT_PACK_DATA_POINTERS","CUDNN_ATTR_VARIANT_PACK_INTERMEDIATES","CUDNN_ATTR_VARIANT_PACK_UNIQUE_IDS","CUDNN_ATTR_VARIANT_PACK_WORKSPACE","CUDNN_BACKEND_CONVOLUTION_DESCRIPTOR","CUDNN_BACKEND_ENGINECFG_DESCRIPTOR","CUDNN_BACKEND_ENGINEHEUR_DESCRIPTOR","CUDNN_BACKEND_ENGINE_DESCRIPTOR","CUDNN_BACKEND_EXECUTION_PLAN_DESCRIPTOR","CUDNN_BACKEND_INTERMEDIATE_INFO_DESCRIPTOR","CUDNN_BACKEND_KNOB_CHOICE_DESCRIPTOR","CUDNN_BACKEND_KNOB_INFO_DESCRIPTOR","CUDNN_BACKEND_LAYOUT_INFO_DESCRIPTOR","CUDNN_BACKEND_MATMUL_DESCRIPTOR","CUDNN_BACKEND_OPERATIONGRAPH_DESCRIPTOR","CUDNN_BACKEND_OPERATION_BN_BWD_WEIGHTS_DESCRIPTOR","CUDNN_BACKEND_OPERATION_BN_FINALIZE_STATISTICS_DESCRIPTOR","CUDNN_BACKEND_OPERATION_CONVOLUTION_BACKWARD_DATA_DESCRIPTOR","CUDNN_BACKEND_OPERATION_CONVOLUTION_BACKWARD_FILTER_DESCRIPTOR","CUDNN_BACKEND_OPERATION_CONVOLUTION_FORWARD_DESCRIPTOR","CUDNN_BACKEND_OPERATION_GEN_STATS_DESCRIPTOR","CUDNN_BACKEND_OPERATION_MATMUL_DESCRIPTOR","CUDNN_BACKEND_OPERATION_POINTWISE_DESCRIPTOR","CUDNN_BACKEND_OPERATION_REDUCTION_DESCRIPTOR","CUDNN_BACKEND_POINTWISE_DESCRIPTOR","CUDNN_BACKEND_REDUCTION_DESCRIPTOR","CUDNN_BACKEND_TENSOR_DESCRIPTOR","CUDNN_BACKEND_VARIANT_PACK_DESCRIPTOR","CUDNN_BATCHNORM_OPS_BN","CUDNN_BATCHNORM_OPS_BN_ACTIVATION","CUDNN_BATCHNORM_OPS_BN_ADD_ACTIVATION","CUDNN_BATCHNORM_PER_ACTIVATION","CUDNN_BATCHNORM_SPATIAL","CUDNN_BATCHNORM_SPATIAL_PERSISTENT","CUDNN_BEHAVIOR_NOTE_RUNTIME_COMPILATION","CUDNN_BEHAVIOR_NOTE_TYPE_COUNT","CUDNN_BIDIRECTIONAL","CUDNN_BN_FINALIZE_STATISTICS_INFERENCE","CUDNN_BN_FINALIZE_STATISTICS_TRAINING","CUDNN_BN_MIN_EPSILON","CUDNN_CNN_INFER_MAJOR","CUDNN_CNN_INFER_MINOR","CUDNN_CNN_INFER_PATCH","CUDNN_CNN_TRAIN_MAJOR","CUDNN_CNN_TRAIN_MINOR","CUDNN_CNN_TRAIN_PATCH","CUDNN_CONVOLUTION","CUDNN_CONVOLUTION_BWD_DATA_ALGO_0","CUDNN_CONVOLUTION_BWD_DATA_ALGO_1","CUDNN_CONVOLUTION_BWD_DATA_ALGO_COUNT","CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT","CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT_TILING","CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD","CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD_NONFUSED","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_0","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_1","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_3","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_COUNT","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT_TILING","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD_NONFUSED","CUDNN_CONVOLUTION_FWD_ALGO_COUNT","CUDNN_CONVOLUTION_FWD_ALGO_DIRECT","CUDNN_CONVOLUTION_FWD_ALGO_FFT","CUDNN_CONVOLUTION_FWD_ALGO_FFT_TILING","CUDNN_CONVOLUTION_FWD_ALGO_GEMM","CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_GEMM","CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM","CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD","CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD_NONFUSED","CUDNN_CROSS_CORRELATION","CUDNN_CTC_LOSS_ALGO_DETERMINISTIC","CUDNN_CTC_LOSS_ALGO_NON_DETERMINISTIC","CUDNN_DATA_BFLOAT16","CUDNN_DATA_DOUBLE","CUDNN_DATA_FLOAT","CUDNN_DATA_HALF","CUDNN_DATA_INT32","CUDNN_DATA_INT64","CUDNN_DATA_INT8","CUDNN_DATA_INT8x32","CUDNN_DATA_INT8x4","CUDNN_DATA_UINT8","CUDNN_DATA_UINT8x4","CUDNN_DEFAULT_MATH","CUDNN_DEFAULT_REORDER","CUDNN_DETERMINISTIC","CUDNN_DIM_MAX","CUDNN_DIVNORM_PRECOMPUTED_MEANS","CUDNN_ERRQUERY_BLOCKING","CUDNN_ERRQUERY_NONBLOCKING","CUDNN_ERRQUERY_RAWCODE","CUDNN_FMA_MATH","CUDNN_FUSED_BN_FINALIZE_STATISTICS_INFERENCE","CUDNN_FUSED_BN_FINALIZE_STATISTICS_TRAINING","CUDNN_FUSED_CONV_SCALE_BIAS_ADD_ACTIVATION","CUDNN_FUSED_DACTIVATION_FORK_DBATCHNORM","CUDNN_FUSED_SCALE_BIAS_ACTIVATION_CONV_BNSTATS","CUDNN_FUSED_SCALE_BIAS_ACTIVATION_WGRAD","CUDNN_FUSED_SCALE_BIAS_ADD_ACTIVATION_GEN_BITMASK","CUDNN_FWD_MODE_INFERENCE","CUDNN_FWD_MODE_TRAINING","CUDNN_GENSTATS_SUM_SQSUM","CUDNN_GRU","CUDNN_HEUR_MODES_COUNT","CUDNN_HEUR_MODE_B","CUDNN_HEUR_MODE_INSTANT","CUDNN_KNOB_TYPE_CHUNK_K","CUDNN_KNOB_TYPE_COUNTS","CUDNN_KNOB_TYPE_CTA_SPLIT_K_MODE","CUDNN_KNOB_TYPE_EDGE","CUDNN_KNOB_TYPE_IDX_MODE","CUDNN_KNOB_TYPE_KBLOCK","CUDNN_KNOB_TYPE_KERNEL_CFG","CUDNN_KNOB_TYPE_LDGA","CUDNN_KNOB_TYPE_LDGB","CUDNN_KNOB_TYPE_LDGC","CUDNN_KNOB_TYPE_MULTIPLY","CUDNN_KNOB_TYPE_REDUCTION_MODE","CUDNN_KNOB_TYPE_SINGLEBUFFER","CUDNN_KNOB_TYPE_SLICED","CUDNN_KNOB_TYPE_SPECFILT","CUDNN_KNOB_TYPE_SPLIT_H","CUDNN_KNOB_TYPE_SPLIT_K","CUDNN_KNOB_TYPE_SPLIT_K_BUF","CUDNN_KNOB_TYPE_SPLIT_K_SLC","CUDNN_KNOB_TYPE_SPLIT_RS","CUDNN_KNOB_TYPE_STAGES","CUDNN_KNOB_TYPE_SWIZZLE","CUDNN_KNOB_TYPE_TILEK","CUDNN_KNOB_TYPE_TILE_SIZE","CUDNN_KNOB_TYPE_USE_TEX","CUDNN_KNOB_TYPE_WINO_TILE","CUDNN_LAYOUT_TYPE_COUNT","CUDNN_LAYOUT_TYPE_PREFERRED_NCHW","CUDNN_LAYOUT_TYPE_PREFERRED_NHWC","CUDNN_LAYOUT_TYPE_PREFERRED_PAD4CK","CUDNN_LAYOUT_TYPE_PREFERRED_PAD8CK","CUDNN_LINEAR_INPUT","CUDNN_LOSS_NORMALIZATION_NONE","CUDNN_LOSS_NORMALIZATION_SOFTMAX","CUDNN_LRN_CROSS_CHANNEL_DIM1","CUDNN_LRN_MAX_N","CUDNN_LRN_MIN_BETA","CUDNN_LRN_MIN_K","CUDNN_LRN_MIN_N","CUDNN_LSTM","CUDNN_MAJOR","CUDNN_MH_ATTN_K_BIASES","CUDNN_MH_ATTN_K_WEIGHTS","CUDNN_MH_ATTN_O_BIASES","CUDNN_MH_ATTN_O_WEIGHTS","CUDNN_MH_ATTN_Q_BIASES","CUDNN_MH_ATTN_Q_WEIGHTS","CUDNN_MH_ATTN_V_BIASES","CUDNN_MH_ATTN_V_WEIGHTS","CUDNN_MINOR","CUDNN_NON_DETERMINISTIC","CUDNN_NORM_ALGO_PERSIST","CUDNN_NORM_ALGO_STANDARD","CUDNN_NORM_OPS_NORM","CUDNN_NORM_OPS_NORM_ACTIVATION","CUDNN_NORM_OPS_NORM_ADD_ACTIVATION","CUDNN_NORM_PER_ACTIVATION","CUDNN_NORM_PER_CHANNEL","CUDNN_NOT_PROPAGATE_NAN","CUDNN_NO_REORDER","CUDNN_NUMERICAL_NOTE_DOWN_CONVERT_INPUTS","CUDNN_NUMERICAL_NOTE_FFT","CUDNN_NUMERICAL_NOTE_NONDETERMINISTIC","CUDNN_NUMERICAL_NOTE_REDUCED_PRECISION_REDUCTION","CUDNN_NUMERICAL_NOTE_TENSOR_CORE","CUDNN_NUMERICAL_NOTE_TYPE_COUNT","CUDNN_NUMERICAL_NOTE_WINOGRAD","CUDNN_OPS_INFER_MAJOR","CUDNN_OPS_INFER_MINOR","CUDNN_OPS_INFER_PATCH","CUDNN_OPS_TRAIN_MAJOR","CUDNN_OPS_TRAIN_MINOR","CUDNN_OPS_TRAIN_PATCH","CUDNN_OP_TENSOR_ADD","CUDNN_OP_TENSOR_MAX","CUDNN_OP_TENSOR_MIN","CUDNN_OP_TENSOR_MUL","CUDNN_OP_TENSOR_NOT","CUDNN_OP_TENSOR_SQRT","CUDNN_PARAM_ACTIVATION_BITMASK_DESC","CUDNN_PARAM_ACTIVATION_BITMASK_PLACEHOLDER","CUDNN_PARAM_ACTIVATION_DESC","CUDNN_PARAM_BN_BIAS_PLACEHOLDER","CUDNN_PARAM_BN_DBIAS_PLACEHOLDER","CUDNN_PARAM_BN_DSCALE_PLACEHOLDER","CUDNN_PARAM_BN_EQBIAS_PLACEHOLDER","CUDNN_PARAM_BN_EQSCALEBIAS_DESC","CUDNN_PARAM_BN_EQSCALE_PLACEHOLDER","CUDNN_PARAM_BN_MODE","CUDNN_PARAM_BN_RUNNING_MEAN_PLACEHOLDER","CUDNN_PARAM_BN_RUNNING_VAR_PLACEHOLDER","CUDNN_PARAM_BN_SAVED_INVSTD_PLACEHOLDER","CUDNN_PARAM_BN_SAVED_MEAN_PLACEHOLDER","CUDNN_PARAM_BN_SCALEBIAS_MEANVAR_DESC","CUDNN_PARAM_BN_SCALE_PLACEHOLDER","CUDNN_PARAM_BN_Z_EQBIAS_PLACEHOLDER","CUDNN_PARAM_BN_Z_EQSCALEBIAS_DESC","CUDNN_PARAM_BN_Z_EQSCALE_PLACEHOLDER","CUDNN_PARAM_CONV_DESC","CUDNN_PARAM_DWDATA_PLACEHOLDER","CUDNN_PARAM_DWDESC","CUDNN_PARAM_DXDATA_PLACEHOLDER","CUDNN_PARAM_DXDESC","CUDNN_PARAM_DYDATA_PLACEHOLDER","CUDNN_PARAM_DYDESC","CUDNN_PARAM_DZDATA_PLACEHOLDER","CUDNN_PARAM_DZDESC","CUDNN_PARAM_WDATA_PLACEHOLDER","CUDNN_PARAM_WDESC","CUDNN_PARAM_XDATA_PLACEHOLDER","CUDNN_PARAM_XDESC","CUDNN_PARAM_YDATA_PLACEHOLDER","CUDNN_PARAM_YDESC","CUDNN_PARAM_YSQSUM_PLACEHOLDER","CUDNN_PARAM_YSTATS_DESC","CUDNN_PARAM_YSUM_PLACEHOLDER","CUDNN_PARAM_ZDATA_PLACEHOLDER","CUDNN_PARAM_ZDESC","CUDNN_PATCHLEVEL","CUDNN_POINTWISE_ADD","CUDNN_POINTWISE_ELU_BWD","CUDNN_POINTWISE_ELU_FWD","CUDNN_POINTWISE_GELU_BWD","CUDNN_POINTWISE_GELU_FWD","CUDNN_POINTWISE_MAX","CUDNN_POINTWISE_MIN","CUDNN_POINTWISE_MUL","CUDNN_POINTWISE_RELU_BWD","CUDNN_POINTWISE_RELU_FWD","CUDNN_POINTWISE_SIGMOID_BWD","CUDNN_POINTWISE_SIGMOID_FWD","CUDNN_POINTWISE_SOFTPLUS_BWD","CUDNN_POINTWISE_SOFTPLUS_FWD","CUDNN_POINTWISE_SQRT","CUDNN_POINTWISE_SWISH_BWD","CUDNN_POINTWISE_SWISH_FWD","CUDNN_POINTWISE_TANH_BWD","CUDNN_POINTWISE_TANH_FWD","CUDNN_POOLING_AVERAGE_COUNT_EXCLUDE_PADDING","CUDNN_POOLING_AVERAGE_COUNT_INCLUDE_PADDING","CUDNN_POOLING_MAX","CUDNN_POOLING_MAX_DETERMINISTIC","CUDNN_PROPAGATE_NAN","CUDNN_PTR_16B_ALIGNED","CUDNN_PTR_ACTIVATION_BITMASK","CUDNN_PTR_BN_BIAS","CUDNN_PTR_BN_DBIAS","CUDNN_PTR_BN_DSCALE","CUDNN_PTR_BN_EQBIAS","CUDNN_PTR_BN_EQSCALE","CUDNN_PTR_BN_RUNNING_MEAN","CUDNN_PTR_BN_RUNNING_VAR","CUDNN_PTR_BN_SAVED_INVSTD","CUDNN_PTR_BN_SAVED_MEAN","CUDNN_PTR_BN_SCALE","CUDNN_PTR_BN_Z_EQBIAS","CUDNN_PTR_BN_Z_EQSCALE","CUDNN_PTR_DWDATA","CUDNN_PTR_DXDATA","CUDNN_PTR_DYDATA","CUDNN_PTR_DZDATA","CUDNN_PTR_ELEM_ALIGNED","CUDNN_PTR_NULL","CUDNN_PTR_WDATA","CUDNN_PTR_WORKSPACE","CUDNN_PTR_XDATA","CUDNN_PTR_YDATA","CUDNN_PTR_YSQSUM","CUDNN_PTR_YSUM","CUDNN_PTR_ZDATA","CUDNN_REDUCE_TENSOR_ADD","CUDNN_REDUCE_TENSOR_AMAX","CUDNN_REDUCE_TENSOR_AVG","CUDNN_REDUCE_TENSOR_FLATTENED_INDICES","CUDNN_REDUCE_TENSOR_MAX","CUDNN_REDUCE_TENSOR_MIN","CUDNN_REDUCE_TENSOR_MUL","CUDNN_REDUCE_TENSOR_MUL_NO_ZEROS","CUDNN_REDUCE_TENSOR_NORM1","CUDNN_REDUCE_TENSOR_NORM2","CUDNN_REDUCE_TENSOR_NO_INDICES","CUDNN_RNN_ALGO_COUNT","CUDNN_RNN_ALGO_PERSIST_DYNAMIC","CUDNN_RNN_ALGO_PERSIST_STATIC","CUDNN_RNN_ALGO_PERSIST_STATIC_SMALL_H","CUDNN_RNN_ALGO_STANDARD","CUDNN_RNN_CLIP_MINMAX","CUDNN_RNN_CLIP_NONE","CUDNN_RNN_DATA_LAYOUT_BATCH_MAJOR_UNPACKED","CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_PACKED","CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_UNPACKED","CUDNN_RNN_DOUBLE_BIAS","CUDNN_RNN_NO_BIAS","CUDNN_RNN_PADDED_IO_DISABLED","CUDNN_RNN_PADDED_IO_ENABLED","CUDNN_RNN_RELU","CUDNN_RNN_SINGLE_INP_BIAS","CUDNN_RNN_SINGLE_REC_BIAS","CUDNN_RNN_TANH","CUDNN_SAMPLER_BILINEAR","CUDNN_SCALAR_DOUBLE_BN_EPSILON","CUDNN_SCALAR_DOUBLE_BN_EXP_AVG_FACTOR","CUDNN_SCALAR_INT64_T_BN_ACCUMULATION_COUNT","CUDNN_SCALAR_SIZE_T_WORKSPACE_SIZE_IN_BYTES","CUDNN_SEQDATA_BATCH_DIM","CUDNN_SEQDATA_BEAM_DIM","CUDNN_SEQDATA_DIM_COUNT","CUDNN_SEQDATA_TIME_DIM","CUDNN_SEQDATA_VECT_DIM","CUDNN_SEV_ERROR","CUDNN_SEV_FATAL","CUDNN_SEV_INFO","CUDNN_SEV_WARNING","CUDNN_SKIP_INPUT","CUDNN_SOFTMAX_ACCURATE","CUDNN_SOFTMAX_FAST","CUDNN_SOFTMAX_LOG","CUDNN_SOFTMAX_MODE_CHANNEL","CUDNN_SOFTMAX_MODE_INSTANCE","CUDNN_STATUS_ALLOC_FAILED","CUDNN_STATUS_ARCH_MISMATCH","CUDNN_STATUS_BAD_PARAM","CUDNN_STATUS_EXECUTION_FAILED","CUDNN_STATUS_INTERNAL_ERROR","CUDNN_STATUS_INVALID_VALUE","CUDNN_STATUS_LICENSE_ERROR","CUDNN_STATUS_MAPPING_ERROR","CUDNN_STATUS_NOT_INITIALIZED","CUDNN_STATUS_NOT_SUPPORTED","CUDNN_STATUS_RUNTIME_FP_OVERFLOW","CUDNN_STATUS_RUNTIME_IN_PROGRESS","CUDNN_STATUS_RUNTIME_PREREQUISITE_MISSING","CUDNN_STATUS_SUCCESS","CUDNN_STATUS_VERSION_MISMATCH","CUDNN_TENSOR_NCHW","CUDNN_TENSOR_NCHW_VECT_C","CUDNN_TENSOR_NHWC","CUDNN_TENSOR_OP_MATH","CUDNN_TENSOR_OP_MATH_ALLOW_CONVERSION","CUDNN_TRANSFORM_FOLD","CUDNN_TRANSFORM_UNFOLD","CUDNN_TYPE_ATTRIB_NAME","CUDNN_TYPE_BACKEND_DESCRIPTOR","CUDNN_TYPE_BEHAVIOR_NOTE","CUDNN_TYPE_BN_FINALIZE_STATS_MODE","CUDNN_TYPE_BOOLEAN","CUDNN_TYPE_CONVOLUTION_MODE","CUDNN_TYPE_DATA_TYPE","CUDNN_TYPE_DOUBLE","CUDNN_TYPE_FLOAT","CUDNN_TYPE_GENSTATS_MODE","CUDNN_TYPE_HANDLE","CUDNN_TYPE_HEUR_MODE","CUDNN_TYPE_INT64","CUDNN_TYPE_KNOB_TYPE","CUDNN_TYPE_LAYOUT_TYPE","CUDNN_TYPE_NAN_PROPOGATION","CUDNN_TYPE_NUMERICAL_NOTE","CUDNN_TYPE_POINTWISE_MODE","CUDNN_TYPE_REDUCTION_OPERATOR_TYPE","CUDNN_TYPE_VOID_PTR","CUDNN_UNIDIRECTIONAL","CUDNN_VERSION","CUDNN_WGRAD_MODE_ADD","CUDNN_WGRAD_MODE_SET","CUevent_st","CUexternalMemory_st","CUexternalSemaphore_st","CUfunc_st","CUgraphExec_st","CUgraphNode_st","CUgraph_st","CUmemPoolHandle_st","CUstream_st","CUuserObject_st","CUuuid","CUuuid_st","ConvolutionDescriptor","Cudnn","DropoutDescriptor","ECCEnabled","Error","ExecutionFailed","FilterDescriptor","InternalError","InvalidValue","LicenseError","MappingError","NormalizationDescriptor","NotInitialized","NotSupported","PoolingDescriptor","RNNAlgo","RnnDescriptor","TensorDescriptor","Unknown","__cudaReserved","__int32_t","__int64_t","__uint32_t","accessDescCount","accessDescs","accessPolicyMaxWindowSize","accessPolicyWindow","accessPolicyWindow","activation_backward","activation_forward","add_tensor","addressMode","addressMode","algo","algo","algo","algo","allocType","args","array","array","asyncEngineCount","base_ptr","binaryVersion","blockDim","blockDim","borderColor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytesize","cacheModeCA","canMapHostMemory","canUseHostPointerForRegisteredMem","channelDesc","channelDesc","clockRate","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","computeMode","computePreemptionSupported","concurrentKernels","concurrentManagedAccess","constSizeBytes","convBwdDataAlgo","convBwdFilterAlgo","convFwdAlgo","convolution_backward_bias","convolution_backward_bias","convolution_backward_data","convolution_backward_data","convolution_backward_filter","convolution_backward_filter","convolution_forward","convolution_forward","cooperative","cooperativeLaunch","cooperativeMultiDeviceLaunch","create_activation_descriptor","create_convolution_descriptor","create_dropout_descriptor","create_filter_descriptor","create_lrn_descriptor","create_pooling_descriptor","create_rnn_data_descriptor","create_rnn_descriptor","create_tensor_descriptor","cuda","cudaAccessPolicyWindow","cudaAccessProperty","cudaAccessPropertyNormal","cudaAccessPropertyPersisting","cudaAccessPropertyStreaming","cudaAddressModeBorder","cudaAddressModeClamp","cudaAddressModeMirror","cudaAddressModeWrap","cudaArray","cudaArrayGetInfo","cudaArrayGetPlane","cudaArrayGetSparseProperties","cudaArraySparseProperties","cudaArraySparseProperties__bindgen_ty_1","cudaArray_const_t","cudaArray_t","cudaBindSurfaceToArray","cudaBindTexture","cudaBindTexture2D","cudaBindTextureToArray","cudaBindTextureToMipmappedArray","cudaBoundaryModeClamp","cudaBoundaryModeTrap","cudaBoundaryModeZero","cudaCGScope","cudaCGScopeGrid","cudaCGScopeInvalid","cudaCGScopeMultiGrid","cudaCSV","cudaCSV","cudaChannelFormatDesc","cudaChannelFormatKind","cudaChannelFormatKindFloat","cudaChannelFormatKindNV12","cudaChannelFormatKindNone","cudaChannelFormatKindSigned","cudaChannelFormatKindUnsigned","cudaChooseDevice","cudaComputeMode","cudaComputeModeDefault","cudaComputeModeExclusive","cudaComputeModeExclusiveProcess","cudaComputeModeProhibited","cudaCreateChannelDesc","cudaCreateSurfaceObject","cudaCreateTextureObject","cudaCtxResetPersistingL2Cache","cudaDataType","cudaDataType_t","cudaDestroyExternalMemory","cudaDestroyExternalSemaphore","cudaDestroySurfaceObject","cudaDestroyTextureObject","cudaDevAttrAsyncEngineCount","cudaDevAttrCanFlushRemoteWrites","cudaDevAttrCanMapHostMemory","cudaDevAttrCanUseHostPointerForRegisteredMem","cudaDevAttrClockRate","cudaDevAttrComputeCapabilityMajor","cudaDevAttrComputeCapabilityMinor","cudaDevAttrComputeMode","cudaDevAttrComputePreemptionSupported","cudaDevAttrConcurrentKernels","cudaDevAttrConcurrentManagedAccess","cudaDevAttrCooperativeLaunch","cudaDevAttrCooperativeMultiDeviceLaunch","cudaDevAttrDirectManagedMemAccessFromHost","cudaDevAttrEccEnabled","cudaDevAttrGPUDirectRDMAFlushWritesOptions","cudaDevAttrGPUDirectRDMASupported","cudaDevAttrGPUDirectRDMAWritesOrdering","cudaDevAttrGlobalL1CacheSupported","cudaDevAttrGlobalMemoryBusWidth","cudaDevAttrGpuOverlap","cudaDevAttrHostNativeAtomicSupported","cudaDevAttrHostRegisterReadOnlySupported","cudaDevAttrHostRegisterSupported","cudaDevAttrIntegrated","cudaDevAttrIsMultiGpuBoard","cudaDevAttrKernelExecTimeout","cudaDevAttrL2CacheSize","cudaDevAttrLocalL1CacheSupported","cudaDevAttrManagedMemory","cudaDevAttrMax","cudaDevAttrMaxAccessPolicyWindowSize","cudaDevAttrMaxBlockDimX","cudaDevAttrMaxBlockDimY","cudaDevAttrMaxBlockDimZ","cudaDevAttrMaxBlocksPerMultiprocessor","cudaDevAttrMaxGridDimX","cudaDevAttrMaxGridDimY","cudaDevAttrMaxGridDimZ","cudaDevAttrMaxPersistingL2CacheSize","cudaDevAttrMaxPitch","cudaDevAttrMaxRegistersPerBlock","cudaDevAttrMaxRegistersPerMultiprocessor","cudaDevAttrMaxSharedMemoryPerBlock","cudaDevAttrMaxSharedMemoryPerBlockOptin","cudaDevAttrMaxSharedMemoryPerMultiprocessor","cudaDevAttrMaxSurface1DLayeredLayers","cudaDevAttrMaxSurface1DLayeredWidth","cudaDevAttrMaxSurface1DWidth","cudaDevAttrMaxSurface2DHeight","cudaDevAttrMaxSurface2DLayeredHeight","cudaDevAttrMaxSurface2DLayeredLayers","cudaDevAttrMaxSurface2DLayeredWidth","cudaDevAttrMaxSurface2DWidth","cudaDevAttrMaxSurface3DDepth","cudaDevAttrMaxSurface3DHeight","cudaDevAttrMaxSurface3DWidth","cudaDevAttrMaxSurfaceCubemapLayeredLayers","cudaDevAttrMaxSurfaceCubemapLayeredWidth","cudaDevAttrMaxSurfaceCubemapWidth","cudaDevAttrMaxTexture1DLayeredLayers","cudaDevAttrMaxTexture1DLayeredWidth","cudaDevAttrMaxTexture1DLinearWidth","cudaDevAttrMaxTexture1DMipmappedWidth","cudaDevAttrMaxTexture1DWidth","cudaDevAttrMaxTexture2DGatherHeight","cudaDevAttrMaxTexture2DGatherWidth","cudaDevAttrMaxTexture2DHeight","cudaDevAttrMaxTexture2DLayeredHeight","cudaDevAttrMaxTexture2DLayeredLayers","cudaDevAttrMaxTexture2DLayeredWidth","cudaDevAttrMaxTexture2DLinearHeight","cudaDevAttrMaxTexture2DLinearPitch","cudaDevAttrMaxTexture2DLinearWidth","cudaDevAttrMaxTexture2DMipmappedHeight","cudaDevAttrMaxTexture2DMipmappedWidth","cudaDevAttrMaxTexture2DWidth","cudaDevAttrMaxTexture3DDepth","cudaDevAttrMaxTexture3DDepthAlt","cudaDevAttrMaxTexture3DHeight","cudaDevAttrMaxTexture3DHeightAlt","cudaDevAttrMaxTexture3DWidth","cudaDevAttrMaxTexture3DWidthAlt","cudaDevAttrMaxTextureCubemapLayeredLayers","cudaDevAttrMaxTextureCubemapLayeredWidth","cudaDevAttrMaxTextureCubemapWidth","cudaDevAttrMaxThreadsPerBlock","cudaDevAttrMaxThreadsPerMultiProcessor","cudaDevAttrMaxTimelineSemaphoreInteropSupported","cudaDevAttrMemoryClockRate","cudaDevAttrMemoryPoolSupportedHandleTypes","cudaDevAttrMemoryPoolsSupported","cudaDevAttrMultiGpuBoardGroupID","cudaDevAttrMultiProcessorCount","cudaDevAttrPageableMemoryAccess","cudaDevAttrPageableMemoryAccessUsesHostPageTables","cudaDevAttrPciBusId","cudaDevAttrPciDeviceId","cudaDevAttrPciDomainId","cudaDevAttrReserved92","cudaDevAttrReserved93","cudaDevAttrReserved94","cudaDevAttrReservedSharedMemoryPerBlock","cudaDevAttrSingleToDoublePrecisionPerfRatio","cudaDevAttrSparseCudaArraySupported","cudaDevAttrStreamPrioritiesSupported","cudaDevAttrSurfaceAlignment","cudaDevAttrTccDriver","cudaDevAttrTextureAlignment","cudaDevAttrTexturePitchAlignment","cudaDevAttrTotalConstantMemory","cudaDevAttrUnifiedAddressing","cudaDevAttrWarpSize","cudaDevP2PAttrAccessSupported","cudaDevP2PAttrCudaArrayAccessSupported","cudaDevP2PAttrNativeAtomicSupported","cudaDevP2PAttrPerformanceRank","cudaDeviceAttr","cudaDeviceCanAccessPeer","cudaDeviceDisablePeerAccess","cudaDeviceEnablePeerAccess","cudaDeviceFlushGPUDirectRDMAWrites","cudaDeviceGetAttribute","cudaDeviceGetByPCIBusId","cudaDeviceGetCacheConfig","cudaDeviceGetDefaultMemPool","cudaDeviceGetGraphMemAttribute","cudaDeviceGetLimit","cudaDeviceGetMemPool","cudaDeviceGetNvSciSyncAttributes","cudaDeviceGetP2PAttribute","cudaDeviceGetPCIBusId","cudaDeviceGetSharedMemConfig","cudaDeviceGetStreamPriorityRange","cudaDeviceGetTexture1DLinearMaxWidth","cudaDeviceGraphMemTrim","cudaDeviceId","cudaDeviceP2PAttr","cudaDeviceProp","cudaDeviceReset","cudaDeviceSetCacheConfig","cudaDeviceSetGraphMemAttribute","cudaDeviceSetLimit","cudaDeviceSetMemPool","cudaDeviceSetSharedMemConfig","cudaDeviceSynchronize","cudaDriverGetVersion","cudaEnableDefault","cudaEnableLegacyStream","cudaEnablePerThreadDefaultStream","cudaError","cudaErrorAddressOfConstant","cudaErrorAddressOfConstant","cudaErrorAlreadyAcquired","cudaErrorAlreadyAcquired","cudaErrorAlreadyMapped","cudaErrorAlreadyMapped","cudaErrorApiFailureBase","cudaErrorApiFailureBase","cudaErrorArrayIsMapped","cudaErrorArrayIsMapped","cudaErrorAssert","cudaErrorAssert","cudaErrorCallRequiresNewerDriver","cudaErrorCallRequiresNewerDriver","cudaErrorCapturedEvent","cudaErrorCapturedEvent","cudaErrorCompatNotSupportedOnDevice","cudaErrorCompatNotSupportedOnDevice","cudaErrorContextIsDestroyed","cudaErrorContextIsDestroyed","cudaErrorCooperativeLaunchTooLarge","cudaErrorCooperativeLaunchTooLarge","cudaErrorCudartUnloading","cudaErrorCudartUnloading","cudaErrorDeviceAlreadyInUse","cudaErrorDeviceAlreadyInUse","cudaErrorDeviceNotLicensed","cudaErrorDeviceNotLicensed","cudaErrorDeviceUninitialized","cudaErrorDeviceUninitialized","cudaErrorDevicesUnavailable","cudaErrorDevicesUnavailable","cudaErrorDuplicateSurfaceName","cudaErrorDuplicateSurfaceName","cudaErrorDuplicateTextureName","cudaErrorDuplicateTextureName","cudaErrorDuplicateVariableName","cudaErrorDuplicateVariableName","cudaErrorECCUncorrectable","cudaErrorECCUncorrectable","cudaErrorFileNotFound","cudaErrorFileNotFound","cudaErrorGraphExecUpdateFailure","cudaErrorGraphExecUpdateFailure","cudaErrorHardwareStackError","cudaErrorHardwareStackError","cudaErrorHostMemoryAlreadyRegistered","cudaErrorHostMemoryAlreadyRegistered","cudaErrorHostMemoryNotRegistered","cudaErrorHostMemoryNotRegistered","cudaErrorIllegalAddress","cudaErrorIllegalAddress","cudaErrorIllegalInstruction","cudaErrorIllegalInstruction","cudaErrorIllegalState","cudaErrorIllegalState","cudaErrorIncompatibleDriverContext","cudaErrorIncompatibleDriverContext","cudaErrorInitializationError","cudaErrorInitializationError","cudaErrorInsufficientDriver","cudaErrorInsufficientDriver","cudaErrorInvalidAddressSpace","cudaErrorInvalidAddressSpace","cudaErrorInvalidChannelDescriptor","cudaErrorInvalidChannelDescriptor","cudaErrorInvalidConfiguration","cudaErrorInvalidConfiguration","cudaErrorInvalidDevice","cudaErrorInvalidDevice","cudaErrorInvalidDeviceFunction","cudaErrorInvalidDeviceFunction","cudaErrorInvalidDevicePointer","cudaErrorInvalidDevicePointer","cudaErrorInvalidFilterSetting","cudaErrorInvalidFilterSetting","cudaErrorInvalidGraphicsContext","cudaErrorInvalidGraphicsContext","cudaErrorInvalidHostPointer","cudaErrorInvalidHostPointer","cudaErrorInvalidKernelImage","cudaErrorInvalidKernelImage","cudaErrorInvalidMemcpyDirection","cudaErrorInvalidMemcpyDirection","cudaErrorInvalidNormSetting","cudaErrorInvalidNormSetting","cudaErrorInvalidPc","cudaErrorInvalidPc","cudaErrorInvalidPitchValue","cudaErrorInvalidPitchValue","cudaErrorInvalidPtx","cudaErrorInvalidPtx","cudaErrorInvalidResourceHandle","cudaErrorInvalidResourceHandle","cudaErrorInvalidSource","cudaErrorInvalidSource","cudaErrorInvalidSurface","cudaErrorInvalidSurface","cudaErrorInvalidSymbol","cudaErrorInvalidSymbol","cudaErrorInvalidTexture","cudaErrorInvalidTexture","cudaErrorInvalidTextureBinding","cudaErrorInvalidTextureBinding","cudaErrorInvalidValue","cudaErrorInvalidValue","cudaErrorJitCompilationDisabled","cudaErrorJitCompilationDisabled","cudaErrorJitCompilerNotFound","cudaErrorJitCompilerNotFound","cudaErrorLaunchFailure","cudaErrorLaunchFailure","cudaErrorLaunchFileScopedSurf","cudaErrorLaunchFileScopedSurf","cudaErrorLaunchFileScopedTex","cudaErrorLaunchFileScopedTex","cudaErrorLaunchIncompatibleTexturing","cudaErrorLaunchIncompatibleTexturing","cudaErrorLaunchMaxDepthExceeded","cudaErrorLaunchMaxDepthExceeded","cudaErrorLaunchOutOfResources","cudaErrorLaunchOutOfResources","cudaErrorLaunchPendingCountExceeded","cudaErrorLaunchPendingCountExceeded","cudaErrorLaunchTimeout","cudaErrorLaunchTimeout","cudaErrorMapBufferObjectFailed","cudaErrorMapBufferObjectFailed","cudaErrorMemoryAllocation","cudaErrorMemoryAllocation","cudaErrorMemoryValueTooLarge","cudaErrorMemoryValueTooLarge","cudaErrorMisalignedAddress","cudaErrorMisalignedAddress","cudaErrorMissingConfiguration","cudaErrorMissingConfiguration","cudaErrorMixedDeviceExecution","cudaErrorMixedDeviceExecution","cudaErrorMpsConnectionFailed","cudaErrorMpsConnectionFailed","cudaErrorMpsMaxClientsReached","cudaErrorMpsMaxClientsReached","cudaErrorMpsMaxConnectionsReached","cudaErrorMpsMaxConnectionsReached","cudaErrorMpsRpcFailure","cudaErrorMpsRpcFailure","cudaErrorMpsServerNotReady","cudaErrorMpsServerNotReady","cudaErrorNoDevice","cudaErrorNoDevice","cudaErrorNoKernelImageForDevice","cudaErrorNoKernelImageForDevice","cudaErrorNotMapped","cudaErrorNotMapped","cudaErrorNotMappedAsArray","cudaErrorNotMappedAsArray","cudaErrorNotMappedAsPointer","cudaErrorNotMappedAsPointer","cudaErrorNotPermitted","cudaErrorNotPermitted","cudaErrorNotReady","cudaErrorNotReady","cudaErrorNotSupported","cudaErrorNotSupported","cudaErrorNotYetImplemented","cudaErrorNotYetImplemented","cudaErrorNvlinkUncorrectable","cudaErrorNvlinkUncorrectable","cudaErrorOperatingSystem","cudaErrorOperatingSystem","cudaErrorPeerAccessAlreadyEnabled","cudaErrorPeerAccessAlreadyEnabled","cudaErrorPeerAccessNotEnabled","cudaErrorPeerAccessNotEnabled","cudaErrorPeerAccessUnsupported","cudaErrorPeerAccessUnsupported","cudaErrorPriorLaunchFailure","cudaErrorPriorLaunchFailure","cudaErrorProfilerAlreadyStarted","cudaErrorProfilerAlreadyStarted","cudaErrorProfilerAlreadyStopped","cudaErrorProfilerAlreadyStopped","cudaErrorProfilerDisabled","cudaErrorProfilerDisabled","cudaErrorProfilerNotInitialized","cudaErrorProfilerNotInitialized","cudaErrorSetOnActiveProcess","cudaErrorSetOnActiveProcess","cudaErrorSharedObjectInitFailed","cudaErrorSharedObjectInitFailed","cudaErrorSharedObjectSymbolNotFound","cudaErrorSharedObjectSymbolNotFound","cudaErrorSoftwareValidityNotEstablished","cudaErrorSoftwareValidityNotEstablished","cudaErrorStartupFailure","cudaErrorStartupFailure","cudaErrorStreamCaptureImplicit","cudaErrorStreamCaptureImplicit","cudaErrorStreamCaptureInvalidated","cudaErrorStreamCaptureInvalidated","cudaErrorStreamCaptureIsolation","cudaErrorStreamCaptureIsolation","cudaErrorStreamCaptureMerge","cudaErrorStreamCaptureMerge","cudaErrorStreamCaptureUnjoined","cudaErrorStreamCaptureUnjoined","cudaErrorStreamCaptureUnmatched","cudaErrorStreamCaptureUnmatched","cudaErrorStreamCaptureUnsupported","cudaErrorStreamCaptureUnsupported","cudaErrorStreamCaptureWrongThread","cudaErrorStreamCaptureWrongThread","cudaErrorStubLibrary","cudaErrorStubLibrary","cudaErrorSymbolNotFound","cudaErrorSymbolNotFound","cudaErrorSyncDepthExceeded","cudaErrorSyncDepthExceeded","cudaErrorSynchronizationError","cudaErrorSynchronizationError","cudaErrorSystemDriverMismatch","cudaErrorSystemDriverMismatch","cudaErrorSystemNotReady","cudaErrorSystemNotReady","cudaErrorTextureFetchFailed","cudaErrorTextureFetchFailed","cudaErrorTextureNotBound","cudaErrorTextureNotBound","cudaErrorTimeout","cudaErrorTimeout","cudaErrorTooManyPeers","cudaErrorTooManyPeers","cudaErrorUnknown","cudaErrorUnknown","cudaErrorUnmapBufferObjectFailed","cudaErrorUnmapBufferObjectFailed","cudaErrorUnsupportedExecAffinity","cudaErrorUnsupportedExecAffinity","cudaErrorUnsupportedLimit","cudaErrorUnsupportedLimit","cudaErrorUnsupportedPtxVersion","cudaErrorUnsupportedPtxVersion","cudaError_t","cudaEventCreate","cudaEventCreateWithFlags","cudaEventDestroy","cudaEventElapsedTime","cudaEventQuery","cudaEventRecord","cudaEventRecordWithFlags","cudaEventSynchronize","cudaEvent_t","cudaExtent","cudaExternalMemoryBufferDesc","cudaExternalMemoryGetMappedBuffer","cudaExternalMemoryGetMappedMipmappedArray","cudaExternalMemoryHandleDesc","cudaExternalMemoryHandleDesc__bindgen_ty_1","cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1","cudaExternalMemoryHandleType","cudaExternalMemoryHandleTypeD3D11Resource","cudaExternalMemoryHandleTypeD3D11ResourceKmt","cudaExternalMemoryHandleTypeD3D12Heap","cudaExternalMemoryHandleTypeD3D12Resource","cudaExternalMemoryHandleTypeNvSciBuf","cudaExternalMemoryHandleTypeOpaqueFd","cudaExternalMemoryHandleTypeOpaqueWin32","cudaExternalMemoryHandleTypeOpaqueWin32Kmt","cudaExternalMemoryMipmappedArrayDesc","cudaExternalMemory_t","cudaExternalSemaphoreHandleDesc","cudaExternalSemaphoreHandleDesc__bindgen_ty_1","cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreHandleType","cudaExternalSemaphoreHandleTypeD3D11Fence","cudaExternalSemaphoreHandleTypeD3D12Fence","cudaExternalSemaphoreHandleTypeKeyedMutex","cudaExternalSemaphoreHandleTypeKeyedMutexKmt","cudaExternalSemaphoreHandleTypeNvSciSync","cudaExternalSemaphoreHandleTypeOpaqueFd","cudaExternalSemaphoreHandleTypeOpaqueWin32","cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt","cudaExternalSemaphoreHandleTypeTimelineSemaphoreFd","cudaExternalSemaphoreHandleTypeTimelineSemaphoreWin32","cudaExternalSemaphoreSignalNodeParams","cudaExternalSemaphoreSignalParams","cudaExternalSemaphoreSignalParams__bindgen_ty_1","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphoreWaitNodeParams","cudaExternalSemaphoreWaitParams","cudaExternalSemaphoreWaitParams__bindgen_ty_1","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphore_t","cudaFilterModeLinear","cudaFilterModePoint","cudaFlushGPUDirectRDMAWritesOptionHost","cudaFlushGPUDirectRDMAWritesOptionMemOps","cudaFlushGPUDirectRDMAWritesOptions","cudaFlushGPUDirectRDMAWritesScope","cudaFlushGPUDirectRDMAWritesTarget","cudaFlushGPUDirectRDMAWritesTargetCurrentDevice","cudaFlushGPUDirectRDMAWritesToAllDevices","cudaFlushGPUDirectRDMAWritesToOwner","cudaFormatModeAuto","cudaFormatModeForced","cudaFree","cudaFreeArray","cudaFreeAsync","cudaFreeHost","cudaFreeMipmappedArray","cudaFuncAttribute","cudaFuncAttributeMax","cudaFuncAttributeMaxDynamicSharedMemorySize","cudaFuncAttributePreferredSharedMemoryCarveout","cudaFuncAttributes","cudaFuncCache","cudaFuncCachePreferEqual","cudaFuncCachePreferL1","cudaFuncCachePreferNone","cudaFuncCachePreferShared","cudaFuncGetAttributes","cudaFuncSetAttribute","cudaFuncSetCacheConfig","cudaFuncSetSharedMemConfig","cudaFunction_t","cudaGPUDirectRDMAWritesOrdering","cudaGPUDirectRDMAWritesOrderingAllDevices","cudaGPUDirectRDMAWritesOrderingNone","cudaGPUDirectRDMAWritesOrderingOwner","cudaGetChannelDesc","cudaGetDevice","cudaGetDeviceCount","cudaGetDeviceFlags","cudaGetDeviceProperties","cudaGetDriverEntryPoint","cudaGetDriverEntryPointFlags","cudaGetErrorName","cudaGetErrorString","cudaGetExportTable","cudaGetFuncBySymbol","cudaGetLastError","cudaGetMipmappedArrayLevel","cudaGetSurfaceObjectResourceDesc","cudaGetSurfaceReference","cudaGetSymbolAddress","cudaGetSymbolSize","cudaGetTextureAlignmentOffset","cudaGetTextureObjectResourceDesc","cudaGetTextureObjectResourceViewDesc","cudaGetTextureObjectTextureDesc","cudaGetTextureReference","cudaGraphAddChildGraphNode","cudaGraphAddDependencies","cudaGraphAddEmptyNode","cudaGraphAddEventRecordNode","cudaGraphAddEventWaitNode","cudaGraphAddExternalSemaphoresSignalNode","cudaGraphAddExternalSemaphoresWaitNode","cudaGraphAddHostNode","cudaGraphAddKernelNode","cudaGraphAddMemAllocNode","cudaGraphAddMemFreeNode","cudaGraphAddMemcpyNode","cudaGraphAddMemcpyNode1D","cudaGraphAddMemcpyNodeFromSymbol","cudaGraphAddMemcpyNodeToSymbol","cudaGraphAddMemsetNode","cudaGraphChildGraphNodeGetGraph","cudaGraphClone","cudaGraphCreate","cudaGraphDebugDotFlags","cudaGraphDebugDotFlagsEventNodeParams","cudaGraphDebugDotFlagsExtSemasSignalNodeParams","cudaGraphDebugDotFlagsExtSemasWaitNodeParams","cudaGraphDebugDotFlagsHandles","cudaGraphDebugDotFlagsHostNodeParams","cudaGraphDebugDotFlagsKernelNodeAttributes","cudaGraphDebugDotFlagsKernelNodeParams","cudaGraphDebugDotFlagsMemcpyNodeParams","cudaGraphDebugDotFlagsMemsetNodeParams","cudaGraphDebugDotFlagsVerbose","cudaGraphDebugDotPrint","cudaGraphDestroy","cudaGraphDestroyNode","cudaGraphEventRecordNodeGetEvent","cudaGraphEventRecordNodeSetEvent","cudaGraphEventWaitNodeGetEvent","cudaGraphEventWaitNodeSetEvent","cudaGraphExecChildGraphNodeSetParams","cudaGraphExecDestroy","cudaGraphExecEventRecordNodeSetEvent","cudaGraphExecEventWaitNodeSetEvent","cudaGraphExecExternalSemaphoresSignalNodeSetParams","cudaGraphExecExternalSemaphoresWaitNodeSetParams","cudaGraphExecHostNodeSetParams","cudaGraphExecKernelNodeSetParams","cudaGraphExecMemcpyNodeSetParams","cudaGraphExecMemcpyNodeSetParams1D","cudaGraphExecMemcpyNodeSetParamsFromSymbol","cudaGraphExecMemcpyNodeSetParamsToSymbol","cudaGraphExecMemsetNodeSetParams","cudaGraphExecUpdate","cudaGraphExecUpdateError","cudaGraphExecUpdateErrorFunctionChanged","cudaGraphExecUpdateErrorNodeTypeChanged","cudaGraphExecUpdateErrorNotSupported","cudaGraphExecUpdateErrorParametersChanged","cudaGraphExecUpdateErrorTopologyChanged","cudaGraphExecUpdateErrorUnsupportedFunctionChange","cudaGraphExecUpdateResult","cudaGraphExecUpdateSuccess","cudaGraphExec_t","cudaGraphExternalSemaphoresSignalNodeGetParams","cudaGraphExternalSemaphoresSignalNodeSetParams","cudaGraphExternalSemaphoresWaitNodeGetParams","cudaGraphExternalSemaphoresWaitNodeSetParams","cudaGraphGetEdges","cudaGraphGetNodes","cudaGraphGetRootNodes","cudaGraphHostNodeGetParams","cudaGraphHostNodeSetParams","cudaGraphInstantiate","cudaGraphInstantiateFlagAutoFreeOnLaunch","cudaGraphInstantiateFlags","cudaGraphInstantiateWithFlags","cudaGraphKernelNodeCopyAttributes","cudaGraphKernelNodeGetAttribute","cudaGraphKernelNodeGetParams","cudaGraphKernelNodeSetAttribute","cudaGraphKernelNodeSetParams","cudaGraphLaunch","cudaGraphMemAllocNodeGetParams","cudaGraphMemAttrReservedMemCurrent","cudaGraphMemAttrReservedMemHigh","cudaGraphMemAttrUsedMemCurrent","cudaGraphMemAttrUsedMemHigh","cudaGraphMemAttributeType","cudaGraphMemFreeNodeGetParams","cudaGraphMemcpyNodeGetParams","cudaGraphMemcpyNodeSetParams","cudaGraphMemcpyNodeSetParams1D","cudaGraphMemcpyNodeSetParamsFromSymbol","cudaGraphMemcpyNodeSetParamsToSymbol","cudaGraphMemsetNodeGetParams","cudaGraphMemsetNodeSetParams","cudaGraphNodeFindInClone","cudaGraphNodeGetDependencies","cudaGraphNodeGetDependentNodes","cudaGraphNodeGetType","cudaGraphNodeType","cudaGraphNodeTypeCount","cudaGraphNodeTypeEmpty","cudaGraphNodeTypeEventRecord","cudaGraphNodeTypeExtSemaphoreSignal","cudaGraphNodeTypeExtSemaphoreWait","cudaGraphNodeTypeGraph","cudaGraphNodeTypeHost","cudaGraphNodeTypeKernel","cudaGraphNodeTypeMemAlloc","cudaGraphNodeTypeMemFree","cudaGraphNodeTypeMemcpy","cudaGraphNodeTypeMemset","cudaGraphNodeTypeWaitEvent","cudaGraphNode_t","cudaGraphReleaseUserObject","cudaGraphRemoveDependencies","cudaGraphRetainUserObject","cudaGraphUpload","cudaGraphUserObjectMove","cudaGraph_t","cudaGraphicsCubeFace","cudaGraphicsCubeFaceNegativeX","cudaGraphicsCubeFaceNegativeY","cudaGraphicsCubeFaceNegativeZ","cudaGraphicsCubeFacePositiveX","cudaGraphicsCubeFacePositiveY","cudaGraphicsCubeFacePositiveZ","cudaGraphicsMapFlags","cudaGraphicsMapFlagsNone","cudaGraphicsMapFlagsReadOnly","cudaGraphicsMapFlagsWriteDiscard","cudaGraphicsMapResources","cudaGraphicsRegisterFlags","cudaGraphicsRegisterFlagsNone","cudaGraphicsRegisterFlagsReadOnly","cudaGraphicsRegisterFlagsSurfaceLoadStore","cudaGraphicsRegisterFlagsTextureGather","cudaGraphicsRegisterFlagsWriteDiscard","cudaGraphicsResource","cudaGraphicsResourceGetMappedMipmappedArray","cudaGraphicsResourceGetMappedPointer","cudaGraphicsResourceSetMapFlags","cudaGraphicsResource_t","cudaGraphicsSubResourceGetMappedArray","cudaGraphicsUnmapResources","cudaGraphicsUnregisterResource","cudaHostAlloc","cudaHostFn_t","cudaHostGetDevicePointer","cudaHostGetFlags","cudaHostNodeParams","cudaHostRegister","cudaHostUnregister","cudaImportExternalMemory","cudaImportExternalSemaphore","cudaIpcCloseMemHandle","cudaIpcEventHandle_st","cudaIpcEventHandle_t","cudaIpcGetEventHandle","cudaIpcGetMemHandle","cudaIpcMemHandle_st","cudaIpcMemHandle_t","cudaIpcOpenEventHandle","cudaIpcOpenMemHandle","cudaKernelNodeAttrID","cudaKernelNodeAttrValue","cudaKernelNodeAttributeAccessPolicyWindow","cudaKernelNodeAttributeCooperative","cudaKernelNodeParams","cudaKeyValuePair","cudaKeyValuePair","cudaLaunchCooperativeKernel","cudaLaunchCooperativeKernelMultiDevice","cudaLaunchHostFunc","cudaLaunchKernel","cudaLaunchParams","cudaLimit","cudaLimitDevRuntimePendingLaunchCount","cudaLimitDevRuntimeSyncDepth","cudaLimitMallocHeapSize","cudaLimitMaxL2FetchGranularity","cudaLimitPersistingL2CacheSize","cudaLimitPrintfFifoSize","cudaLimitStackSize","cudaMalloc","cudaMalloc3D","cudaMalloc3DArray","cudaMallocArray","cudaMallocAsync","cudaMallocFromPoolAsync","cudaMallocHost","cudaMallocManaged","cudaMallocMipmappedArray","cudaMallocPitch","cudaMemAccessDesc","cudaMemAccessFlags","cudaMemAccessFlagsProtNone","cudaMemAccessFlagsProtRead","cudaMemAccessFlagsProtReadWrite","cudaMemAdvise","cudaMemAdviseSetAccessedBy","cudaMemAdviseSetPreferredLocation","cudaMemAdviseSetReadMostly","cudaMemAdviseUnsetAccessedBy","cudaMemAdviseUnsetPreferredLocation","cudaMemAdviseUnsetReadMostly","cudaMemAllocNodeParams","cudaMemAllocationHandleType","cudaMemAllocationType","cudaMemAllocationTypeInvalid","cudaMemAllocationTypeMax","cudaMemAllocationTypePinned","cudaMemGetInfo","cudaMemHandleTypeNone","cudaMemHandleTypePosixFileDescriptor","cudaMemHandleTypeWin32","cudaMemHandleTypeWin32Kmt","cudaMemLocation","cudaMemLocationType","cudaMemLocationTypeDevice","cudaMemLocationTypeInvalid","cudaMemPoolAttr","cudaMemPoolAttrReleaseThreshold","cudaMemPoolAttrReservedMemCurrent","cudaMemPoolAttrReservedMemHigh","cudaMemPoolAttrUsedMemCurrent","cudaMemPoolAttrUsedMemHigh","cudaMemPoolCreate","cudaMemPoolDestroy","cudaMemPoolExportPointer","cudaMemPoolExportToShareableHandle","cudaMemPoolGetAccess","cudaMemPoolGetAttribute","cudaMemPoolImportFromShareableHandle","cudaMemPoolImportPointer","cudaMemPoolProps","cudaMemPoolPtrExportData","cudaMemPoolReuseAllowInternalDependencies","cudaMemPoolReuseAllowOpportunistic","cudaMemPoolReuseFollowEventDependencies","cudaMemPoolSetAccess","cudaMemPoolSetAttribute","cudaMemPoolTrimTo","cudaMemPool_t","cudaMemPrefetchAsync","cudaMemRangeAttribute","cudaMemRangeAttributeAccessedBy","cudaMemRangeAttributeLastPrefetchLocation","cudaMemRangeAttributePreferredLocation","cudaMemRangeAttributeReadMostly","cudaMemRangeGetAttribute","cudaMemRangeGetAttributes","cudaMemcpy","cudaMemcpy2D","cudaMemcpy2DArrayToArray","cudaMemcpy2DAsync","cudaMemcpy2DFromArray","cudaMemcpy2DFromArrayAsync","cudaMemcpy2DToArray","cudaMemcpy2DToArrayAsync","cudaMemcpy3D","cudaMemcpy3DAsync","cudaMemcpy3DParms","cudaMemcpy3DPeer","cudaMemcpy3DPeerAsync","cudaMemcpy3DPeerParms","cudaMemcpyArrayToArray","cudaMemcpyAsync","cudaMemcpyDefault","cudaMemcpyDeviceToDevice","cudaMemcpyDeviceToHost","cudaMemcpyFromArray","cudaMemcpyFromArrayAsync","cudaMemcpyFromSymbol","cudaMemcpyFromSymbolAsync","cudaMemcpyHostToDevice","cudaMemcpyHostToHost","cudaMemcpyKind","cudaMemcpyPeer","cudaMemcpyPeerAsync","cudaMemcpyToArray","cudaMemcpyToArrayAsync","cudaMemcpyToSymbol","cudaMemcpyToSymbolAsync","cudaMemoryAdvise","cudaMemoryType","cudaMemoryTypeDevice","cudaMemoryTypeHost","cudaMemoryTypeManaged","cudaMemoryTypeUnregistered","cudaMemset","cudaMemset2D","cudaMemset2DAsync","cudaMemset3D","cudaMemset3DAsync","cudaMemsetAsync","cudaMemsetParams","cudaMipmappedArray","cudaMipmappedArrayGetSparseProperties","cudaMipmappedArray_const_t","cudaMipmappedArray_t","cudaOccupancyAvailableDynamicSMemPerBlock","cudaOccupancyMaxActiveBlocksPerMultiprocessor","cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","cudaOutputMode","cudaOutputMode_t","cudaPeekAtLastError","cudaPitchedPtr","cudaPointerAttributes","cudaPointerGetAttributes","cudaPos","cudaReadModeElementType","cudaReadModeNormalizedFloat","cudaResViewFormatFloat1","cudaResViewFormatFloat2","cudaResViewFormatFloat4","cudaResViewFormatHalf1","cudaResViewFormatHalf2","cudaResViewFormatHalf4","cudaResViewFormatNone","cudaResViewFormatSignedBlockCompressed4","cudaResViewFormatSignedBlockCompressed5","cudaResViewFormatSignedBlockCompressed6H","cudaResViewFormatSignedChar1","cudaResViewFormatSignedChar2","cudaResViewFormatSignedChar4","cudaResViewFormatSignedInt1","cudaResViewFormatSignedInt2","cudaResViewFormatSignedInt4","cudaResViewFormatSignedShort1","cudaResViewFormatSignedShort2","cudaResViewFormatSignedShort4","cudaResViewFormatUnsignedBlockCompressed1","cudaResViewFormatUnsignedBlockCompressed2","cudaResViewFormatUnsignedBlockCompressed3","cudaResViewFormatUnsignedBlockCompressed4","cudaResViewFormatUnsignedBlockCompressed5","cudaResViewFormatUnsignedBlockCompressed6H","cudaResViewFormatUnsignedBlockCompressed7","cudaResViewFormatUnsignedChar1","cudaResViewFormatUnsignedChar2","cudaResViewFormatUnsignedChar4","cudaResViewFormatUnsignedInt1","cudaResViewFormatUnsignedInt2","cudaResViewFormatUnsignedInt4","cudaResViewFormatUnsignedShort1","cudaResViewFormatUnsignedShort2","cudaResViewFormatUnsignedShort4","cudaResourceDesc","cudaResourceDesc__bindgen_ty_1","cudaResourceDesc__bindgen_ty_1__bindgen_ty_1","cudaResourceDesc__bindgen_ty_1__bindgen_ty_2","cudaResourceDesc__bindgen_ty_1__bindgen_ty_3","cudaResourceDesc__bindgen_ty_1__bindgen_ty_4","cudaResourceType","cudaResourceTypeArray","cudaResourceTypeLinear","cudaResourceTypeMipmappedArray","cudaResourceTypePitch2D","cudaResourceViewDesc","cudaResourceViewFormat","cudaRoundMinInf","cudaRoundMode","cudaRoundNearest","cudaRoundPosInf","cudaRoundZero","cudaRuntimeGetVersion","cudaSetDevice","cudaSetDeviceFlags","cudaSetDoubleForDevice","cudaSetDoubleForHost","cudaSetValidDevices","cudaSharedCarveout","cudaSharedMemBankSizeDefault","cudaSharedMemBankSizeEightByte","cudaSharedMemBankSizeFourByte","cudaSharedMemConfig","cudaSharedmemCarveoutDefault","cudaSharedmemCarveoutMaxL1","cudaSharedmemCarveoutMaxShared","cudaSignalExternalSemaphoresAsync_v2","cudaStreamAddCallback","cudaStreamAddCaptureDependencies","cudaStreamAttachMemAsync","cudaStreamAttrID","cudaStreamAttrValue","cudaStreamAttributeAccessPolicyWindow","cudaStreamAttributeSynchronizationPolicy","cudaStreamBeginCapture","cudaStreamCallback_t","cudaStreamCaptureMode","cudaStreamCaptureModeGlobal","cudaStreamCaptureModeRelaxed","cudaStreamCaptureModeThreadLocal","cudaStreamCaptureStatus","cudaStreamCaptureStatusActive","cudaStreamCaptureStatusInvalidated","cudaStreamCaptureStatusNone","cudaStreamCopyAttributes","cudaStreamCreate","cudaStreamCreateWithFlags","cudaStreamCreateWithPriority","cudaStreamDestroy","cudaStreamEndCapture","cudaStreamGetAttribute","cudaStreamGetCaptureInfo","cudaStreamGetCaptureInfo_v2","cudaStreamGetFlags","cudaStreamGetPriority","cudaStreamIsCapturing","cudaStreamQuery","cudaStreamSetAttribute","cudaStreamSetCaptureDependencies","cudaStreamSynchronize","cudaStreamUpdateCaptureDependencies","cudaStreamUpdateCaptureDependenciesFlags","cudaStreamWaitEvent","cudaStream_t","cudaSuccess","cudaSuccess","cudaSurfaceBoundaryMode","cudaSurfaceFormatMode","cudaSurfaceObject_t","cudaSyncPolicyAuto","cudaSyncPolicyBlockingSync","cudaSyncPolicySpin","cudaSyncPolicyYield","cudaSynchronizationPolicy","cudaTextureAddressMode","cudaTextureDesc","cudaTextureFilterMode","cudaTextureObject_t","cudaTextureReadMode","cudaThreadExchangeStreamCaptureMode","cudaThreadExit","cudaThreadGetCacheConfig","cudaThreadGetLimit","cudaThreadSetCacheConfig","cudaThreadSetLimit","cudaThreadSynchronize","cudaUUID_t","cudaUnbindTexture","cudaUserObjectCreate","cudaUserObjectFlags","cudaUserObjectNoDestructorSync","cudaUserObjectRelease","cudaUserObjectRetain","cudaUserObjectRetainFlags","cudaUserObject_t","cudaWaitExternalSemaphoresAsync_v2","cuda_allocate_device_memory","cuda_free_device_memory","cudnnActivationBackward","cudnnActivationDescriptor_t","cudnnActivationForward","cudnnActivationMode_t","cudnnActivationStruct","cudnnAddTensor","cudnnAdvInferVersionCheck","cudnnAdvTrainVersionCheck","cudnnAlgorithmDescriptor_t","cudnnAlgorithmPerformanceStruct","cudnnAlgorithmPerformance_t","cudnnAlgorithmStruct","cudnnAlgorithmUnionStruct","cudnnAlgorithmUnionStruct_Algorithm","cudnnAlgorithm_t","cudnnAttnDescriptor_t","cudnnAttnQueryMap_t","cudnnAttnStruct","cudnnBackendAttributeName_t","cudnnBackendAttributeType_t","cudnnBackendBehaviorNote_t","cudnnBackendCreateDescriptor","cudnnBackendDescriptorType_t","cudnnBackendDescriptor_t","cudnnBackendDestroyDescriptor","cudnnBackendExecute","cudnnBackendFinalize","cudnnBackendGetAttribute","cudnnBackendHeurMode_t","cudnnBackendInitialize","cudnnBackendKnobType_t","cudnnBackendLayoutType_t","cudnnBackendNumericalNote_t","cudnnBackendSetAttribute","cudnnBatchNormMode_t","cudnnBatchNormOps_t","cudnnBatchNormalizationBackward","cudnnBatchNormalizationBackwardEx","cudnnBatchNormalizationForwardInference","cudnnBatchNormalizationForwardTraining","cudnnBatchNormalizationForwardTrainingEx","cudnnBnFinalizeStatsMode_t","cudnnBuildRNNDynamic","cudnnCTCLoss","cudnnCTCLossAlgo_t","cudnnCTCLossDescriptor_t","cudnnCTCLossStruct","cudnnCTCLoss_v8","cudnnCallback_t","cudnnCnnInferVersionCheck","cudnnCnnTrainVersionCheck","cudnnContext","cudnnConvolutionBackwardBias","cudnnConvolutionBackwardData","cudnnConvolutionBackwardFilter","cudnnConvolutionBiasActivationForward","cudnnConvolutionBwdDataAlgoPerfStruct","cudnnConvolutionBwdDataAlgoPerf_t","cudnnConvolutionBwdDataAlgo_t","cudnnConvolutionBwdFilterAlgoPerfStruct","cudnnConvolutionBwdFilterAlgoPerf_t","cudnnConvolutionBwdFilterAlgo_t","cudnnConvolutionDescriptor_t","cudnnConvolutionForward","cudnnConvolutionFwdAlgoPerfStruct","cudnnConvolutionFwdAlgoPerf_t","cudnnConvolutionFwdAlgo_t","cudnnConvolutionMode_t","cudnnConvolutionStruct","cudnnCopyAlgorithmDescriptor","cudnnCreate","cudnnCreateActivationDescriptor","cudnnCreateAlgorithmDescriptor","cudnnCreateAlgorithmPerformance","cudnnCreateAttnDescriptor","cudnnCreateCTCLossDescriptor","cudnnCreateConvolutionDescriptor","cudnnCreateDropoutDescriptor","cudnnCreateFilterDescriptor","cudnnCreateFusedOpsConstParamPack","cudnnCreateFusedOpsPlan","cudnnCreateFusedOpsVariantParamPack","cudnnCreateLRNDescriptor","cudnnCreateOpTensorDescriptor","cudnnCreatePersistentRNNPlan","cudnnCreatePoolingDescriptor","cudnnCreateRNNDataDescriptor","cudnnCreateRNNDescriptor","cudnnCreateReduceTensorDescriptor","cudnnCreateSeqDataDescriptor","cudnnCreateSpatialTransformerDescriptor","cudnnCreateTensorDescriptor","cudnnCreateTensorTransformDescriptor","cudnnDataType_t","cudnnDebugStruct","cudnnDebug_t","cudnnDeriveBNTensorDescriptor","cudnnDeriveNormTensorDescriptor","cudnnDestroy","cudnnDestroyActivationDescriptor","cudnnDestroyAlgorithmDescriptor","cudnnDestroyAlgorithmPerformance","cudnnDestroyAttnDescriptor","cudnnDestroyCTCLossDescriptor","cudnnDestroyConvolutionDescriptor","cudnnDestroyDropoutDescriptor","cudnnDestroyFilterDescriptor","cudnnDestroyFusedOpsConstParamPack","cudnnDestroyFusedOpsPlan","cudnnDestroyFusedOpsVariantParamPack","cudnnDestroyLRNDescriptor","cudnnDestroyOpTensorDescriptor","cudnnDestroyPersistentRNNPlan","cudnnDestroyPoolingDescriptor","cudnnDestroyRNNDataDescriptor","cudnnDestroyRNNDescriptor","cudnnDestroyReduceTensorDescriptor","cudnnDestroySeqDataDescriptor","cudnnDestroySpatialTransformerDescriptor","cudnnDestroyTensorDescriptor","cudnnDestroyTensorTransformDescriptor","cudnnDeterminism_t","cudnnDirectionMode_t","cudnnDivNormMode_t","cudnnDivisiveNormalizationBackward","cudnnDivisiveNormalizationForward","cudnnDropoutBackward","cudnnDropoutDescriptor_t","cudnnDropoutForward","cudnnDropoutGetReserveSpaceSize","cudnnDropoutGetStatesSize","cudnnDropoutStruct","cudnnErrQueryMode_t","cudnnFilterDescriptor_t","cudnnFilterStruct","cudnnFindConvolutionBackwardDataAlgorithm","cudnnFindConvolutionBackwardDataAlgorithmEx","cudnnFindConvolutionBackwardFilterAlgorithm","cudnnFindConvolutionBackwardFilterAlgorithmEx","cudnnFindConvolutionForwardAlgorithm","cudnnFindConvolutionForwardAlgorithmEx","cudnnFindRNNBackwardDataAlgorithmEx","cudnnFindRNNBackwardWeightsAlgorithmEx","cudnnFindRNNForwardInferenceAlgorithmEx","cudnnFindRNNForwardTrainingAlgorithmEx","cudnnFoldingDirection_t","cudnnForwardMode_t","cudnnFusedOpsConstParamLabel_t","cudnnFusedOpsConstParamPack_t","cudnnFusedOpsConstParamStruct","cudnnFusedOpsExecute","cudnnFusedOpsPlanStruct","cudnnFusedOpsPlan_t","cudnnFusedOpsPointerPlaceHolder_t","cudnnFusedOpsVariantParamLabel_t","cudnnFusedOpsVariantParamPack_t","cudnnFusedOpsVariantParamStruct","cudnnFusedOps_t","cudnnGenStatsMode_t","cudnnGetActivationDescriptor","cudnnGetActivationDescriptorSwishBeta","cudnnGetAlgorithmDescriptor","cudnnGetAlgorithmPerformance","cudnnGetAlgorithmSpaceSize","cudnnGetAttnDescriptor","cudnnGetBatchNormalizationBackwardExWorkspaceSize","cudnnGetBatchNormalizationForwardTrainingExWorkspaceSize","cudnnGetBatchNormalizationTrainingExReserveSpaceSize","cudnnGetCTCLossDescriptor","cudnnGetCTCLossDescriptorEx","cudnnGetCTCLossDescriptor_v8","cudnnGetCTCLossWorkspaceSize","cudnnGetCTCLossWorkspaceSize_v8","cudnnGetCallback","cudnnGetConvolution2dDescriptor","cudnnGetConvolution2dForwardOutputDim","cudnnGetConvolutionBackwardDataAlgorithmMaxCount","cudnnGetConvolutionBackwardDataAlgorithm_v7","cudnnGetConvolutionBackwardDataWorkspaceSize","cudnnGetConvolutionBackwardFilterAlgorithmMaxCount","cudnnGetConvolutionBackwardFilterAlgorithm_v7","cudnnGetConvolutionBackwardFilterWorkspaceSize","cudnnGetConvolutionForwardAlgorithmMaxCount","cudnnGetConvolutionForwardAlgorithm_v7","cudnnGetConvolutionForwardWorkspaceSize","cudnnGetConvolutionGroupCount","cudnnGetConvolutionMathType","cudnnGetConvolutionNdDescriptor","cudnnGetConvolutionNdForwardOutputDim","cudnnGetConvolutionReorderType","cudnnGetCudartVersion","cudnnGetDropoutDescriptor","cudnnGetErrorString","cudnnGetFilter4dDescriptor","cudnnGetFilterNdDescriptor","cudnnGetFilterSizeInBytes","cudnnGetFoldedConvBackwardDataDescriptors","cudnnGetFusedOpsConstParamPackAttribute","cudnnGetFusedOpsVariantParamPackAttribute","cudnnGetLRNDescriptor","cudnnGetMultiHeadAttnBuffers","cudnnGetMultiHeadAttnWeights","cudnnGetNormalizationBackwardWorkspaceSize","cudnnGetNormalizationForwardTrainingWorkspaceSize","cudnnGetNormalizationTrainingReserveSpaceSize","cudnnGetOpTensorDescriptor","cudnnGetPooling2dDescriptor","cudnnGetPooling2dForwardOutputDim","cudnnGetPoolingNdDescriptor","cudnnGetPoolingNdForwardOutputDim","cudnnGetProperty","cudnnGetRNNBackwardDataAlgorithmMaxCount","cudnnGetRNNBackwardWeightsAlgorithmMaxCount","cudnnGetRNNBiasMode","cudnnGetRNNDataDescriptor","cudnnGetRNNDescriptor_v6","cudnnGetRNNDescriptor_v8","cudnnGetRNNForwardInferenceAlgorithmMaxCount","cudnnGetRNNForwardTrainingAlgorithmMaxCount","cudnnGetRNNLinLayerBiasParams","cudnnGetRNNLinLayerMatrixParams","cudnnGetRNNMatrixMathType","cudnnGetRNNPaddingMode","cudnnGetRNNParamsSize","cudnnGetRNNProjectionLayers","cudnnGetRNNTempSpaceSizes","cudnnGetRNNTrainingReserveSize","cudnnGetRNNWeightParams","cudnnGetRNNWeightSpaceSize","cudnnGetRNNWorkspaceSize","cudnnGetReduceTensorDescriptor","cudnnGetReductionIndicesSize","cudnnGetReductionWorkspaceSize","cudnnGetSeqDataDescriptor","cudnnGetStream","cudnnGetTensor4dDescriptor","cudnnGetTensorNdDescriptor","cudnnGetTensorSizeInBytes","cudnnGetTensorTransformDescriptor","cudnnGetVersion","cudnnHandle_t","cudnnIm2Col","cudnnIndicesType_t","cudnnInitTransformDest","cudnnLRNCrossChannelBackward","cudnnLRNCrossChannelForward","cudnnLRNDescriptor_t","cudnnLRNMode_t","cudnnLRNStruct","cudnnLossNormalizationMode_t","cudnnMakeFusedOpsPlan","cudnnMathType_t","cudnnMultiHeadAttnBackwardData","cudnnMultiHeadAttnBackwardWeights","cudnnMultiHeadAttnForward","cudnnMultiHeadAttnWeightKind_t","cudnnNanPropagation_t","cudnnNormAlgo_t","cudnnNormMode_t","cudnnNormOps_t","cudnnNormalizationBackward","cudnnNormalizationForwardInference","cudnnNormalizationForwardTraining","cudnnOpTensor","cudnnOpTensorDescriptor_t","cudnnOpTensorOp_t","cudnnOpTensorStruct","cudnnOpsInferVersionCheck","cudnnOpsTrainVersionCheck","cudnnPersistentRNNPlan","cudnnPersistentRNNPlan_t","cudnnPointwiseMode_t","cudnnPoolingBackward","cudnnPoolingDescriptor_t","cudnnPoolingForward","cudnnPoolingMode_t","cudnnPoolingStruct","cudnnQueryRuntimeError","cudnnRNNAlgo_t","cudnnRNNBackwardData","cudnnRNNBackwardDataEx","cudnnRNNBackwardData_v8","cudnnRNNBackwardWeights","cudnnRNNBackwardWeightsEx","cudnnRNNBackwardWeights_v8","cudnnRNNBiasMode_t","cudnnRNNClipMode_t","cudnnRNNDataDescriptor_t","cudnnRNNDataLayout_t","cudnnRNNDataStruct","cudnnRNNDescriptor_t","cudnnRNNForward","cudnnRNNForwardInference","cudnnRNNForwardInferenceEx","cudnnRNNForwardTraining","cudnnRNNForwardTrainingEx","cudnnRNNGetClip","cudnnRNNGetClip_v8","cudnnRNNInputMode_t","cudnnRNNMode_t","cudnnRNNPaddingMode_t","cudnnRNNSetClip","cudnnRNNSetClip_v8","cudnnRNNStruct","cudnnReduceTensor","cudnnReduceTensorDescriptor_t","cudnnReduceTensorIndices_t","cudnnReduceTensorOp_t","cudnnReduceTensorStruct","cudnnReorderFilterAndBias","cudnnReorderType_t","cudnnRestoreAlgorithm","cudnnRestoreDropoutDescriptor","cudnnRuntimeTag_t","cudnnSamplerType_t","cudnnSaveAlgorithm","cudnnScaleTensor","cudnnSeqDataAxis_t","cudnnSeqDataDescriptor_t","cudnnSeqDataStruct","cudnnSetActivationDescriptor","cudnnSetActivationDescriptorSwishBeta","cudnnSetAlgorithmDescriptor","cudnnSetAlgorithmPerformance","cudnnSetAttnDescriptor","cudnnSetCTCLossDescriptor","cudnnSetCTCLossDescriptorEx","cudnnSetCTCLossDescriptor_v8","cudnnSetCallback","cudnnSetConvolution2dDescriptor","cudnnSetConvolutionGroupCount","cudnnSetConvolutionMathType","cudnnSetConvolutionNdDescriptor","cudnnSetConvolutionReorderType","cudnnSetDropoutDescriptor","cudnnSetFilter4dDescriptor","cudnnSetFilterNdDescriptor","cudnnSetFusedOpsConstParamPackAttribute","cudnnSetFusedOpsVariantParamPackAttribute","cudnnSetLRNDescriptor","cudnnSetOpTensorDescriptor","cudnnSetPersistentRNNPlan","cudnnSetPooling2dDescriptor","cudnnSetPoolingNdDescriptor","cudnnSetRNNAlgorithmDescriptor","cudnnSetRNNBiasMode","cudnnSetRNNDataDescriptor","cudnnSetRNNDescriptor_v6","cudnnSetRNNDescriptor_v8","cudnnSetRNNMatrixMathType","cudnnSetRNNPaddingMode","cudnnSetRNNProjectionLayers","cudnnSetReduceTensorDescriptor","cudnnSetSeqDataDescriptor","cudnnSetSpatialTransformerNdDescriptor","cudnnSetStream","cudnnSetTensor","cudnnSetTensor4dDescriptor","cudnnSetTensor4dDescriptorEx","cudnnSetTensorNdDescriptor","cudnnSetTensorNdDescriptorEx","cudnnSetTensorTransformDescriptor","cudnnSeverity_t","cudnnSoftmaxAlgorithm_t","cudnnSoftmaxBackward","cudnnSoftmaxForward","cudnnSoftmaxMode_t","cudnnSpatialTfGridGeneratorBackward","cudnnSpatialTfGridGeneratorForward","cudnnSpatialTfSamplerBackward","cudnnSpatialTfSamplerForward","cudnnSpatialTransformerDescriptor_t","cudnnSpatialTransformerStruct","cudnnStatus","cudnnStatus_t","cudnnTensorDescriptor_t","cudnnTensorFormat_t","cudnnTensorStruct","cudnnTensorTransformDescriptor_t","cudnnTensorTransformStruct","cudnnTransformFilter","cudnnTransformTensor","cudnnTransformTensorEx","cudnnWgradMode_t","cudnn_data_type","cudnn_version","default","default","default","depth","depth","depth","desc","desc","destroy","destroy_activation_descriptor","destroy_convolution_descriptor","destroy_dropout_descriptor","destroy_filter_descriptor","destroy_lrn_descriptor","destroy_pooling_descriptor","destroy_rnn_descriptor","destroy_tensor_descriptor","determinism","determinism","determinism","devPtr","devPtr","device","deviceOverlap","devicePointer","dim3","directManagedMemAccessFromHost","disableTrilinearOptimization","disableTrilinearOptimization","divisive_normalization_backward","divisive_normalization_forward","dptr","drop","drop","drop","drop","drop","drop","drop","drop","drop","dropout_backward","dropout_backward","dropout_forward","dropout_forward","dropout_get_reserve_space_size","dropout_get_states_size","dst","dstArray","dstArray","dstDevice","dstPos","dstPos","dstPtr","dstPtr","elementSize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extSemArray","extSemArray","extent","extent","extent","extra","f","fd","fd","fence","fence","fence","fence","filterMode","filterMode","find_convolution_backward_data_algorithm","find_convolution_backward_filter_algorithm","find_convolution_forward_algorithm","firstLayer","firstMipmapLevel","flags","flags","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_","format","formatDesc","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_c","from_c","from_c","from_c","from_c","from_c","from_c","from_c","from_c","func","func","get_convolution_backward_data_workspace_size","get_convolution_backward_filter_workspace_size","get_convolution_forward_workspace_size","get_pooling_2d_descriptor","get_pooling_descriptor","get_pooling_forward_output_dim","get_required_size","get_rnn_params_size","get_rnn_temp_space_sizes","get_rnn_training_reserve_size","get_rnn_workspace_size","get_tensor_descriptor","get_version","globalL1CacheSupported","gridDim","gridDim","handle","handle","handle","handle","handle","handleTypes","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","height","hitProp","hitRatio","hostNativeAtomicSupported","hostPointer","id","id_c","id_c","id_c","id_c","id_c","id_c","id_c","id_c","id_c","init","init_activation","init_convolution","init_dropout","init_normalization","init_pooling","init_rnn","integrated","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","isMultiGpuBoard","kernelExecTimeoutEnabled","kernelParams","key","key","keyedMutex","keyedMutex","kind","l2CacheSize","lastLayer","lastMipmapLevel","libraryPropertyType","libraryPropertyType_t","libraryPropertyType_t_MAJOR_VERSION","libraryPropertyType_t_MINOR_VERSION","libraryPropertyType_t_PATCH_LEVEL","linear","localL1CacheSupported","localSizeBytes","location","location","log_softmax_backward","log_softmax_forward","lrn_backward","lrn_cross_channel_backward","lrn_cross_channel_forward","lrn_forward","luid","luidDeviceNodeMask","major","managedMemory","mathType","mathType","mathType","maxAnisotropy","maxAnisotropy","maxBlocksPerMultiProcessor","maxDynamicSharedSizeBytes","maxGridSize","maxMipmapLevelClamp","maxMipmapLevelClamp","maxSurface1D","maxSurface1DLayered","maxSurface2D","maxSurface2DLayered","maxSurface3D","maxSurfaceCubemap","maxSurfaceCubemapLayered","maxTexture1D","maxTexture1DLayered","maxTexture1DLinear","maxTexture1DMipmap","maxTexture2D","maxTexture2DGather","maxTexture2DLayered","maxTexture2DLinear","maxTexture2DMipmap","maxTexture3D","maxTexture3DAlt","maxTextureCubemap","maxTextureCubemapLayered","maxThreadsDim","maxThreadsPerBlock","maxThreadsPerBlock","maxThreadsPerMultiProcessor","memPitch","memory","memory","memory","memoryBusWidth","memoryClockRate","minMipmapLevelClamp","minMipmapLevelClamp","minor","mipmap","mipmap","mipmapFilterMode","mipmapFilterMode","mipmapLevelBias","mipmapLevelBias","miptailFirstLevel","miptailSize","missProp","multiGpuBoardGroupID","multiProcessorCount","name","name","name","new","new","new","new","new","new","new","new","new","normalized","normalizedCoords","numExtSems","numExtSems","numLevels","numRegs","num_bytes","nvSciBufObject","nvSciSync","nvSciSync","nvSciSyncObj","offset","offset","pageableMemoryAccess","pageableMemoryAccessUsesHostPageTables","params","params","paramsArray","paramsArray","pciBusID","pciDeviceID","pciDomainID","persistingL2CacheMaxSize","pid","pitch","pitch","pitch2D","pitchInBytes","poolProps","pooling_avg_backward","pooling_avg_forward","pooling_backward","pooling_forward","pooling_max_backward","pooling_max_forward","preferredShmemCarveout","ptr","ptxVersion","readMode","regsPerBlock","regsPerMultiprocessor","relu_backward","relu_forward","res","resType","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reservedSharedMemPerBlock","rnn_backward_data","rnn_backward_data","rnn_backward_weights","rnn_backward_weights","rnn_forward","rnn_forward_inference","rnn_forward_training","sRGB","sRGB","scale_tensor","set_activation_descriptor","set_convolution_descriptor","set_dropout_descriptor","set_filter_descriptor","set_lrn_descriptor","set_pooling_2d_descriptor","set_pooling_descriptor","set_rnn_data_descriptor","set_rnn_descriptor","set_rnn_matrix_math_type","set_rnn_padding_mode","set_tensor","set_tensor_descriptor","sharedMem","sharedMemBytes","sharedMemPerBlock","sharedMemPerBlockOptin","sharedMemPerMultiprocessor","sharedSizeBytes","sigmoid_backward","sigmoid_forward","singleToDoublePrecisionPerfRatio","size","size","sizeInBytes","softmax_backward","softmax_backward","softmax_forward","softmax_forward","srcArray","srcArray","srcDevice","srcPos","srcPos","srcPtr","srcPtr","status","status","status","stream","stream","streamPrioritiesSupported","surfaceAlignment","surfaceReference","syncPolicy","tanh_backward","tanh_forward","tccDriver","tensor_vec_id_c","textureAlignment","texturePitchAlignment","textureReference","tid","tileExtent","time","time","time","time_delta","time_sec","time_usec","timeoutMs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","totalConstMem","totalGlobalMem","transform_tensor","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unifiedAddressing","userData","utils","uuid","value","value","value","version","w","warpSize","width","width","width","width","width","win32","win32","win32SecurityAttributes","x","x","x","xsize","y","y","y","ysize","z","z","z","0","0","0","0","0","0","0","0","0","0","0","1","CudaDeviceMemory","borrow","borrow_mut","drop","fmt","from","from_c","id_c","into","new","size","try_from","try_into","type_id","ActivationConfig","ConvolutionConfig","DataType","DataTypeInfo","Double","DropoutConfig","Float","Half","NormalizationConfig","PoolingConfig","RnnConfig","ScalParams","a","activation_clipped_relu_desc","activation_relu_desc","activation_sigmoid_desc","activation_tanh_desc","b","backward_data_algo","backward_data_workspace_size","backward_filter_algo","backward_filter_workspace_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","conv_desc","cudnn_data_type","default","dropout_desc","filter_desc","fmt","fmt","forward_algo","forward_workspace_size","from","from","from","from","from","from","from","from","hidden_size","into","into","into","into","into","into","into","into","largest_workspace_size","largest_workspace_size","lrn_desc","new","new","new","new","new","new","num_layers","pooling_avg_desc","pooling_max_desc","reserved_space","rnn_desc","rnn_workspace_size","sequence_length","sequence_length","size","take_mem","to_owned","training_reserve","training_reserve_size","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["rcudnnrcudnn::Error","","","","","","","","","","","","rcudnn::cuda","","","","","","","","","","","","","","rcudnn::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Defines the Cuda cuDNN API.","Describes a ActivationDescriptor.","Failure with allocation.","Failure with the hardware architecture.","Failure with a provided parameterescribes a Convolution Descriptor.","Provides a the high-level interface to CUDA’s cuDNN.","Describes a DropoutDescriptor.","&lt; Device has ECC support enabled","Defines CUDA’s cuDNN errors.","Failure with Kernel execution.","Describes a Filter Descriptor.","Failure with cuDNN.","Failure with provided value.","Failure CUDA License.","Failure with memory access or internal error/bug.","Describes a LRN Descriptor.","Failure with CUDA cuDNN initialization.","Failure with an unsupported request.","Describes a Pooling Descriptor.","","Describes a Recurrent Descriptor.","Describes a TensorDescriptor.","Failure","","","","","&lt; in: Number of <code>accessDescs</code>s","&lt; in: number of memory access descriptors.  Must not …","&lt; The maximum value of ::cudaAccessPolicyWindow::num_bytes.","","&lt; Attribute ::CUaccessPolicyWindow.","Computes an activation backward function.","Computes an activation forward function.","Adds the scaled values from one a CUDA cuDNN Tensor to …","Texture address mode for up to 3 dimensions","Texture address mode for up to 3 dimensions","","","","","&lt; Allocation type. Currently must be specified as …","&lt; Arguments","","&lt; CUDA array","&lt; Number of asynchronous engines","&lt; Starting address of the access policy window. CUDA …","The binary architecture version for which the function was …","&lt; Block dimentions","&lt; Block dimensions","Texture Border Colorlt; in: size in bytes of the requested allocation","The attribute to indicate whether the function has been …","&lt; Device can map host memory with …","&lt; Device can access host registered memory at the same …","Channel descriptor for surface reference","Channel descriptor for the texture reference","&lt; Clock frequency in kilohertzlt; Compute mode (See ::cudaComputeMode)","&lt; Device supports Compute Preemption","&lt; Device can possibly execute multiple kernels concurrently","&lt; Device can coherently access managed memory concurrently …","The size in bytes of user-allocated constant memory …","","","","Computes a convolution backward function w.r.t the bias.","Computes the backward Convolution function w.r.t the bias.","Computes a convolution backward function w.r.t the output …","Computes the backward Convolution function w.r.t the data.","Computes a convolution backward function w.r.t filter …","Computes the backward Convolution function w.r.t the …","Computes a convolution forward function.","Computes the forward Convolution function.","","&lt; Device supports launching cooperative kernels via …","&lt; Deprecated, cudaLaunchCooperativeKernelMultiDevice is …","Create a generic CUDA cuDNN ActivationDescriptor.","Creates a generic CUDA cuDNN Convolution Descriptor.","Create a generic CUDA cuDNN DropoutDescriptor","Creates a generic CUDA cuDNN Filter Descriptor.","Creates a generic CUDA cuDNN LRN Descriptor.","Creates a generic CUDA cuDNN Pooling Descriptor.","cudnnCreateRNNDataDescriptor() …","Creates a generic CUDA cuDNN RNN Descriptor.","Creates a generic CUDA cuDNN Tensor Descriptor.","Defines Cuda Device Memory.","Specifies an access policy for a window, a contiguous …","Specifies performance hint with ::cudaAccessPolicyWindow …","&lt; Normal cache persistence.","&lt; Persisting access is more likely to persist in cache.","&lt; Streaming access is less likely to persit from cache.","&lt; Border address mode","&lt; Clamp to edge address mode","&lt; Mirror address mode","&lt; Wrapping address mode","","\\\\brief Gets info about the specified cudaArray","\\\\brief Gets a CUDA array plane from a CUDA array","","Sparse CUDA array and CUDA mipmapped array properties","","CUDA array (as source copy argument)","CUDA array","\\\\brief Binds an array to a surface","\\\\brief Binds a memory area to a texture","\\\\brief Binds a 2D memory area to a texture","\\\\brief Binds an array to a texture","\\\\brief Binds a mipmapped array to a texture","&lt; Clamp boundary mode","&lt; Trap boundary mode","&lt; Zero boundary mode","CUDA cooperative group scope","&lt; Scope represented by a grid_group","&lt; Invalid cooperative group scope","&lt; Scope represented by a multi_grid_group","&lt; Output mode Comma separated values format.","&lt; Output mode Comma separated values format.","CUDA Channel format descriptor","Channel format kind","&lt; Float channel format","","&lt; No channel format","&lt; Signed channel format","&lt; Unsigned channel format","\\\\brief Select compute-device which best matches criteria","CUDA device compute modes","&lt; Default compute mode (Multiple threads can use …","&lt; Compute-exclusive-thread mode (Only one thread in one …","&lt; Compute-exclusive-process mode (Many threads in one …","&lt; Compute-prohibited mode (No threads can use …","\\\\brief Returns a channel descriptor using the specified …","\\\\brief Creates a surface object","\\\\brief Creates a texture object","\\\\brief Resets all persisting lines in cache to normal …","","","\\\\brief Destroys an external memory object.","\\\\brief Destroys an external semaphore","\\\\brief Destroys a surface object","\\\\brief Destroys a texture object","&lt; Number of asynchronous engines","&lt; Device supports flushing of outstanding remote writes.","&lt; Device can map host memory into CUDA address space","&lt; Device can access host registered memory at the same …","&lt; Peak clock frequency in kilohertz","&lt; Major compute capability version number","&lt; Minor compute capability version number","&lt; Compute mode (See ::cudaComputeMode for details)","&lt; Device supports Compute Preemption","&lt; Device can possibly execute multiple kernels concurrently","&lt; Device can coherently access managed memory concurrently …","&lt; Device supports launching cooperative kernels via …","&lt; Deprecated, cudaLaunchCooperativeKernelMultiDevice is …","&lt; Host can directly access managed memory on the device …","&lt; Device has ECC support enabled","&lt; The returned attribute shall be interpreted as a …","&lt; Device supports GPUDirect RDMA APIs, like …","&lt; GPUDirect RDMA writes to the device do not need to be …","&lt; Device supports caching globals in L1","&lt; Global memory bus width in bits","&lt; Device can possibly copy memory and execute a kernel …","&lt; Link between the device and the host supports native …","&lt; Device supports using the ::cudaHostRegister flag …","&lt; Device supports host memory registration via …","&lt; Device is integrated with host memory","&lt; Device is on a multi-GPU board","&lt; Specifies whether there is a run time limit on kernels","&lt; Size of L2 cache in bytes","&lt; Device supports caching locals in L1","&lt; Device can allocate managed memory on this system","","&lt; Maximum value of cudaAccessPolicyWindow::num_bytes.","&lt; Maximum block dimension X","&lt; Maximum block dimension Y","&lt; Maximum block dimension Z","&lt; Maximum number of blocks per multiprocessor","&lt; Maximum grid dimension X","&lt; Maximum grid dimension Y","&lt; Maximum grid dimension Z","&lt; Maximum L2 persisting lines capacity setting in bytes.","&lt; Maximum pitch in bytes allowed by memory copies","&lt; Maximum number of 32-bit registers available per block","&lt; Maximum number of 32-bit registers available per …","&lt; Maximum shared memory available per block in bytes","&lt; The maximum optin shared memory per block. This value …","&lt; Maximum shared memory available per multiprocessor in …","&lt; Maximum layers in a 1D layered surface","&lt; Maximum 1D layered surface width","&lt; Maximum 1D surface width","&lt; Maximum 2D surface height","&lt; Maximum 2D layered surface height","&lt; Maximum layers in a 2D layered surface","&lt; Maximum 2D layered surface width","&lt; Maximum 2D surface width","&lt; Maximum 3D surface depth","&lt; Maximum 3D surface height","&lt; Maximum 3D surface width","&lt; Maximum layers in a cubemap layered surface","&lt; Maximum cubemap layered surface width","&lt; Maximum cubemap surface width","&lt; Maximum layers in a 1D layered texture","&lt; Maximum 1D layered texture width","&lt; Maximum 1D linear texture width","&lt; Maximum mipmapped 1D texture width","&lt; Maximum 1D texture width","&lt; Maximum 2D texture height if cudaArrayTextureGather is …","&lt; Maximum 2D texture width if cudaArrayTextureGather is set","&lt; Maximum 2D texture height","&lt; Maximum 2D layered texture height","&lt; Maximum layers in a 2D layered texture","&lt; Maximum 2D layered texture width","&lt; Maximum 2D linear texture height","&lt; Maximum 2D linear texture pitch in bytes","&lt; Maximum 2D linear texture width","&lt; Maximum mipmapped 2D texture height","&lt; Maximum mipmapped 2D texture width","&lt; Maximum 2D texture width","&lt; Maximum 3D texture depth","&lt; Alternate maximum 3D texture depth","&lt; Maximum 3D texture height","&lt; Alternate maximum 3D texture height","&lt; Maximum 3D texture width","&lt; Alternate maximum 3D texture width","&lt; Maximum layers in a cubemap layered texture","&lt; Maximum cubemap layered texture width/height","&lt; Maximum cubemap texture width/height","&lt; Maximum number of threads per block","&lt; Maximum resident threads per multiprocessor","&lt; External timeline semaphore interop is supported on the …","&lt; Peak memory clock frequency in kilohertz","&lt; Handle types supported with mempool based IPC","&lt; Device supports using the ::cudaMallocAsync and …","&lt; Unique identifier for a group of devices on the same …","&lt; Number of multiprocessors on device","&lt; Device supports coherently accessing pageable memory …","&lt; Device accesses pageable memory via the host’s page …","&lt; PCI bus ID of the device","&lt; PCI device ID of the device","&lt; PCI domain ID of the device","","","","&lt; Shared memory reserved by CUDA driver per block in bytes","&lt; Ratio of single precision performance (in floating-point …","&lt; Device supports sparse CUDA arrays and sparse CUDA …","&lt; Device supports stream priorities","&lt; Alignment requirement for surfaces","&lt; Device is using TCC driver model","&lt; Alignment requirement for textures","&lt; Pitch alignment requirement for textures","&lt; Memory available on device for <strong>constant</strong> variables in a …","&lt; Device shares a unified address space with the host","&lt; Warp size in threads","&lt; Peer access is enabled","&lt; Accessing CUDA arrays over the link supported","&lt; Native atomic operation over the link supported","&lt; A relative value indicating the performance of the link …","CUDA device attributes","\\\\brief Queries if a device may directly access a peer …","\\\\brief Disables direct access to memory allocations on a …","\\\\brief Enables direct access to memory allocations on a …","","\\\\brief Returns information about the device","\\\\brief Returns a handle to a compute device","\\\\brief Returns the preferred cache configuration for the …","\\\\brief Returns the default mempool of a device","","\\\\brief Returns resource limits","\\\\brief Gets the current mempool for a device","\\\\brief Return NvSciSync attributes that this device can …","\\\\brief Queries attributes of the link between two devices.","\\\\brief Returns a PCI Bus Id string for the device","\\\\brief Returns the shared memory configuration for the …","\\\\brief Returns numerical values that correspond to the …","","","","CUDA device P2P attributes","CUDA device properties","\\\\brief Destroy all allocations and reset all state on the …","\\\\brief Sets the preferred cache configuration for the …","","\\\\brief Set resource limits","\\\\brief Sets the current memory pool of a device","\\\\brief Sets the shared memory configuration for the …","\\\\brief Wait for compute device to finish","\\\\brief Returns the latest version of CUDA supported by the …","&lt; Default search mode for driver symbols.","&lt; Search for legacy versions of driver symbols.","&lt; Search for per-thread versions of driver symbols.","CUDA error types","This indicated that the user has taken the address of a …","This indicated that the user has taken the address of a …","This indicates that a resource has already been acquired.","This indicates that a resource has already been acquired.","This indicates that the resource is already mapped.","This indicates that the resource is already mapped.","Any unhandled CUDA driver error is added to this value and …","Any unhandled CUDA driver error is added to this value and …","This indicates that the specified array is currently …","This indicates that the specified array is currently …","An assert triggered in device code during kernel …","An assert triggered in device code during kernel …","This indicates that the API call requires a newer CUDA …","This indicates that the API call requires a newer CUDA …","The operation is not permitted on an event which was last …","The operation is not permitted on an event which was last …","This error indicates that the system was upgraded to run …","This error indicates that the system was upgraded to run …","This error indicates that the context current to the …","This error indicates that the context current to the …","This error indicates that the number of blocks launched …","This error indicates that the number of blocks launched …","This indicates that a CUDA Runtime API call cannot be …","This indicates that a CUDA Runtime API call cannot be …","This indicates that a call tried to access an …","This indicates that a call tried to access an …","This indicates that the device doesn’t have a valid Grid …","This indicates that the device doesn’t have a valid Grid …","This most frequently indicates that there is no context …","This most frequently indicates that there is no context …","This indicates that all CUDA devices are busy or …","This indicates that all CUDA devices are busy or …","This indicates that multiple surfaces (across separate …","This indicates that multiple surfaces (across separate …","This indicates that multiple textures (across separate …","This indicates that multiple textures (across separate …","This indicates that multiple global or constant variables …","This indicates that multiple global or constant variables …","This indicates that an uncorrectable ECC error was …","This indicates that an uncorrectable ECC error was …","This indicates that the file specified was not found.","This indicates that the file specified was not found.","This error indicates that the graph update was not …","This error indicates that the graph update was not …","Device encountered an error in the call stack during …","Device encountered an error in the call stack during …","This error indicates that the memory range passed to …","This error indicates that the memory range passed to …","This error indicates that the pointer passed to …","This error indicates that the pointer passed to …","The device encountered a load or store instruction on an …","The device encountered a load or store instruction on an …","The device encountered an illegal instruction during …","The device encountered an illegal instruction during …","This indicates that a resource required by the API call is …","This indicates that a resource required by the API call is …","This indicates that the current context is not compatible …","This indicates that the current context is not compatible …","The API call failed because the CUDA driver and runtime …","The API call failed because the CUDA driver and runtime …","This indicates that the installed NVIDIA CUDA driver is …","This indicates that the installed NVIDIA CUDA driver is …","While executing a kernel, the device encountered an …","While executing a kernel, the device encountered an …","This indicates that the channel descriptor passed to the …","This indicates that the channel descriptor passed to the …","This indicates that a kernel launch is requesting …","This indicates that a kernel launch is requesting …","This indicates that the device ordinal supplied by the …","This indicates that the device ordinal supplied by the …","The requested device function does not exist or is not …","The requested device function does not exist or is not …","This indicates that at least one device pointer passed to …","This indicates that at least one device pointer passed to …","This indicates that a non-float texture was being accessed …","This indicates that a non-float texture was being accessed …","This indicates an error with the OpenGL or DirectX context.","This indicates an error with the OpenGL or DirectX context.","This indicates that at least one host pointer passed to …","This indicates that at least one host pointer passed to …","This indicates that the device kernel image is invalid.","This indicates that the device kernel image is invalid.","This indicates that the direction of the memcpy passed to …","This indicates that the direction of the memcpy passed to …","This indicates that an attempt was made to read a …","This indicates that an attempt was made to read a …","The device encountered an invalid program counter. This …","The device encountered an invalid program counter. This …","This indicates that one or more of the pitch-related …","This indicates that one or more of the pitch-related …","A PTX compilation failed. The runtime may fall back to …","A PTX compilation failed. The runtime may fall back to …","This indicates that a resource handle passed to the API …","This indicates that a resource handle passed to the API …","This indicates that the device kernel source is invalid.","This indicates that the device kernel source is invalid.","This indicates that the surface passed to the API call is …","This indicates that the surface passed to the API call is …","This indicates that the symbol name/identifier passed to …","This indicates that the symbol name/identifier passed to …","This indicates that the texture passed to the API call is …","This indicates that the texture passed to the API call is …","This indicates that the texture binding is not valid. This …","This indicates that the texture binding is not valid. This …","This indicates that one or more of the parameters passed …","This indicates that one or more of the parameters passed …","This indicates that the JIT compilation was disabled. The …","This indicates that the JIT compilation was disabled. The …","This indicates that the PTX JIT compiler library was not …","This indicates that the PTX JIT compiler library was not …","An exception occurred on the device while executing a …","An exception occurred on the device while executing a …","This error indicates that a grid launch did not occur …","This error indicates that a grid launch did not occur …","This error indicates that a grid launch did not occur …","This error indicates that a grid launch did not occur …","This error indicates a kernel launch that uses an …","This error indicates a kernel launch that uses an …","This error indicates that a device runtime grid launch did …","This error indicates that a device runtime grid launch did …","This indicates that a launch did not occur because it did …","This indicates that a launch did not occur because it did …","This error indicates that a device runtime grid launch …","This error indicates that a device runtime grid launch …","This indicates that the device kernel took too long to …","This indicates that the device kernel took too long to …","This indicates that the buffer object could not be mapped.","This indicates that the buffer object could not be mapped.","The API call failed because it was unable to allocate …","The API call failed because it was unable to allocate …","This indicated that an emulated device pointer exceeded …","This indicated that an emulated device pointer exceeded …","The device encountered a load or store instruction on a …","The device encountered a load or store instruction on a …","The device function being invoked (usually via …","The device function being invoked (usually via …","Mixing of device and device emulation code was not allowed.","Mixing of device and device emulation code was not allowed.","This error indicates that the MPS client failed to connect …","This error indicates that the MPS client failed to connect …","This error indicates that the hardware resources required …","This error indicates that the hardware resources required …","This error indicates the the hardware resources required …","This error indicates the the hardware resources required …","This error indicates that the remote procedural call …","This error indicates that the remote procedural call …","This error indicates that the MPS server is not ready to …","This error indicates that the MPS server is not ready to …","This indicates that no CUDA-capable devices were detected …","This indicates that no CUDA-capable devices were detected …","This indicates that there is no kernel image available …","This indicates that there is no kernel image available …","This indicates that a resource is not mapped.","This indicates that a resource is not mapped.","This indicates that a mapped resource is not available for …","This indicates that a mapped resource is not available for …","This indicates that a mapped resource is not available for …","This indicates that a mapped resource is not available for …","This error indicates the attempted operation is not …","This error indicates the attempted operation is not …","This indicates that asynchronous operations issued …","This indicates that asynchronous operations issued …","This error indicates the attempted operation is not …","This error indicates the attempted operation is not …","This indicates that the API call is not yet implemented. …","This indicates that the API call is not yet implemented. …","This indicates that an uncorrectable NVLink error was …","This indicates that an uncorrectable NVLink error was …","This error indicates that an OS call failed.","This error indicates that an OS call failed.","This error indicates that a call to …","This error indicates that a call to …","This error indicates that ::cudaDeviceDisablePeerAccess() …","This error indicates that ::cudaDeviceDisablePeerAccess() …","This error indicates that P2P access is not supported …","This error indicates that P2P access is not supported …","This indicated that a previous kernel launch failed. This …","This indicated that a previous kernel launch failed. This …","\\\\deprecated This error return is deprecated as of CUDA …","\\\\deprecated This error return is deprecated as of CUDA …","\\\\deprecated This error return is deprecated as of CUDA …","\\\\deprecated This error return is deprecated as of CUDA …","This indicates profiler is not initialized for this run. …","This indicates profiler is not initialized for this run. …","\\\\deprecated This error return is deprecated as of CUDA …","\\\\deprecated This error return is deprecated as of CUDA …","This indicates that the user has called …","This indicates that the user has called …","This indicates that initialization of a shared object …","This indicates that initialization of a shared object …","This indicates that a link to a shared object failed to …","This indicates that a link to a shared object failed to …","By default, the CUDA runtime may perform a minimal set of …","By default, the CUDA runtime may perform a minimal set of …","This indicates an internal startup failure in the CUDA …","This indicates an internal startup failure in the CUDA …","The operation would have resulted in a disallowed implicit …","The operation would have resulted in a disallowed implicit …","The current capture sequence on the stream has been …","The current capture sequence on the stream has been …","A dependency would have been created which crosses the …","A dependency would have been created which crosses the …","The operation would have resulted in a merge of two …","The operation would have resulted in a merge of two …","The capture sequence contains a fork that was not joined …","The capture sequence contains a fork that was not joined …","The capture was not initiated in this stream.","The capture was not initiated in this stream.","The operation is not permitted when the stream is …","The operation is not permitted when the stream is …","A stream capture sequence not initiated with the …","A stream capture sequence not initiated with the …","This indicates that the CUDA driver that the application …","This indicates that the CUDA driver that the application …","This indicates that a named symbol was not found. Examples …","This indicates that a named symbol was not found. Examples …","This error indicates that a call to …","This error indicates that a call to …","This indicated that a synchronization operation had failed.","This indicated that a synchronization operation had failed.","This error indicates that there is a mismatch between the …","This error indicates that there is a mismatch between the …","This error indicates that the system is not yet ready to …","This error indicates that the system is not yet ready to …","This indicated that a texture fetch was not able to be …","This indicated that a texture fetch was not able to be …","This indicated that a texture was not bound for access. …","This indicated that a texture was not bound for access. …","This indicates that the wait operation has timed out.","This indicates that the wait operation has timed out.","This error indicates that the hardware resources required …","This error indicates that the hardware resources required …","This indicates that an unknown internal error has occurred.","This indicates that an unknown internal error has occurred.","This indicates that the buffer object could not be …","This indicates that the buffer object could not be …","This indicates that the provided execution affinity is not …","This indicates that the provided execution affinity is not …","This indicates that the ::cudaLimit passed to the API call …","This indicates that the ::cudaLimit passed to the API call …","This indicates that the provided PTX was compiled with an …","This indicates that the provided PTX was compiled with an …","CUDA error types","\\\\brief Creates an event object","\\\\brief Creates an event object with the specified flags","\\\\brief Destroys an event object","\\\\brief Computes the elapsed time between events","\\\\brief Queries an event’s status","\\\\brief Records an event","","\\\\brief Waits for an event to complete","CUDA event types","CUDA extent","External memory buffer descriptor","\\\\brief Maps a buffer onto an imported memory object","\\\\brief Maps a CUDA mipmapped array onto an external memory …","External memory handle descriptor","","Win32 handle referencing the semaphore object. Valid when …","External memory handle types","Handle is a shared NT handle to a D3D11 resource","Handle is a globally shared handle to a D3D11 resource","Handle is a D3D12 heap object","Handle is a D3D12 committed resource","Handle is an NvSciBuf object","Handle is an opaque file descriptor","Handle is an opaque shared NT handle","Handle is an opaque, globally shared handle","External memory mipmap descriptor","CUDA external memory","External semaphore handle descriptor","","Win32 handle referencing the semaphore object. Valid when …","External semaphore handle types","Handle is a shared NT handle referencing a D3D11 fence …","Handle is a shared NT handle referencing a D3D12 fence …","Handle is a shared NT handle referencing a D3D11 keyed …","Handle is a shared KMT handle referencing a D3D11 keyed …","Opaque handle to NvSciSync Object","Handle is an opaque file descriptor","Handle is an opaque shared NT handle","Handle is an opaque, globally shared handle","Handle is an opaque handle file descriptor referencing a …","Handle is an opaque handle file descriptor referencing a …","External semaphore signal node parameters","External semaphore signal parameters, compatible with …","","Parameters for fence objects","","Parameters for keyed mutex objects","External semaphore wait node parameters","External semaphore wait parameters, compatible with driver …","","Parameters for fence objects","","Parameters for keyed mutex objects","CUDA external semaphore","&lt; Linear filter mode","&lt; Point filter mode","&lt; ::cudaDeviceFlushGPUDirectRDMAWrites() and its CUDA …","&lt; The ::CU_STREAM_WAIT_VALUE_FLUSH flag and the …","CUDA GPUDirect RDMA flush writes APIs supported on the …","CUDA GPUDirect RDMA flush writes scopes","CUDA GPUDirect RDMA flush writes targets","&lt; Sets the target for …","&lt; Blocks until remote writes are visible to all CUDA …","&lt; Blocks until remote writes are visible to the CUDA …","&lt; Auto format mode","&lt; Forced format mode","\\\\brief Frees memory on the device","\\\\brief Frees an array on the device","\\\\brief Frees memory with stream ordered semantics","\\\\brief Frees page-locked memory","\\\\brief Frees a mipmapped array on the device","CUDA function attributes that can be set using …","","&lt; Maximum dynamic shared memory size","&lt; Preferred shared memory-L1 cache split","CUDA function attributes","CUDA function cache configurations","&lt; Prefer equal size L1 cache and shared memory","&lt; Prefer larger L1 cache and smaller shared memory","&lt; Default function cache configuration, no preference","&lt; Prefer larger shared memory and smaller L1 cache","\\\\brief Find out attributes for a given function","\\\\brief Set attributes for a given function","\\\\brief Sets the preferred cache configuration for a device …","\\\\brief Sets the shared memory configuration for a device …","CUDA function","CUDA GPUDirect RDMA flush writes ordering features of the …","&lt; Any CUDA device in the system can consistently consume …","&lt; The device does not natively support ordering of …","&lt; Natively, the device can consistently consume GPUDirect …","\\\\brief Get the channel descriptor of an array","\\\\brief Returns which device is currently being used","\\\\brief Returns the number of compute-capable devices","\\\\brief Gets the flags for the current device","\\\\brief Returns information about the compute-device","\\\\brief Returns the requested driver API function pointer","Flags to specify search options to be used with …","\\\\brief Returns the string representation of an error code …","\\\\brief Returns the description string for an error code","\\\\cond impl_private","\\\\brief Get pointer to device entry function that matches …","\\\\brief Returns the last error from a runtime call","\\\\brief Gets a mipmap level of a CUDA mipmapped array","\\\\brief Returns a surface object’s resource descriptor …","\\\\brief Get the surface reference associated with a symbol","\\\\brief Finds the address associated with a CUDA symbol","\\\\brief Finds the size of the object associated with a CUDA …","\\\\brief Get the alignment offset of a texture","\\\\brief Returns a texture object’s resource descriptor","\\\\brief Returns a texture object’s resource view …","\\\\brief Returns a texture object’s texture descriptor","\\\\brief Get the texture reference associated with a symbol","\\\\brief Creates a child graph node and adds it to a graph","\\\\brief Adds dependency edges to a graph.","\\\\brief Creates an empty node and adds it to a graph","","","","","\\\\brief Creates a host execution node and adds it to a graph","\\\\brief Creates a kernel execution node and adds it to a …","","","\\\\brief Creates a memcpy node and adds it to a graph","","","","\\\\brief Creates a memset node and adds it to a graph","\\\\brief Gets a handle to the embedded graph of a child …","\\\\brief Clones a graph","\\\\brief Creates a graph","CUDA Graph debug write options","Adds cudaHostNodeParams to output","Adds cudaEvent_t handle from record and wait nodes to …","Adds cudaExternalSemaphoreSignalNodeParams values to output","Adds cudaKernelNodeAttrID values to output","Adds cudaMemsetParams to output","Adds cudaExternalSemaphoreWaitNodeParams to output","Output all debug data as if every debug flag is enabled","Adds cudaKernelNodeParams to output","Adds cudaMemcpy3DParms to output","","\\\\brief Write a DOT file describing graph structure","\\\\brief Destroys a graph","\\\\brief Remove a node from the graph","","","","","","\\\\brief Destroys an executable graph","","","","","\\\\brief Sets the parameters for a host node in the given …","\\\\brief Sets the parameters for a kernel node in the given …","\\\\brief Sets the parameters for a memcpy node in the given …","","","","\\\\brief Sets the parameters for a memset node in the given …","\\\\brief Check whether an executable graph can be updated …","&lt; The update failed for an unexpected reason which is …","&lt; The update failed because the function of a kernel node …","&lt; The update failed because a node type changed","&lt; The update failed because something about the node is …","&lt; The update failed because the parameters changed in a …","&lt; The update failed because the topology changed","&lt; The update failed because the function of a kernel node …","CUDA Graph Update error types","&lt; The update succeeded","CUDA executable (launchable) graph","","","","","\\\\brief Returns a graph’s dependency edges","\\\\brief Returns a graph’s nodes","\\\\brief Returns a graph’s root nodes","\\\\brief Returns a host node’s parameters","\\\\brief Sets a host node’s parameters","\\\\brief Creates an executable graph from a graph","&lt; Automatically free memory allocated in a graph before …","Flags for instantiating a graph","","\\\\brief Copies attributes from source node to destination …","\\\\brief Queries node attribute.","\\\\brief Returns a kernel node’s parameters","\\\\brief Sets node attribute.","\\\\brief Sets a kernel node’s parameters","\\\\brief Launches an executable graph in a stream","","(value type = cuuint64_t) Amount of memory, in bytes, …","(value type = cuuint64_t) High watermark of memory, in …","(value type = cuuint64_t) Amount of memory, in bytes, …","(value type = cuuint64_t) High watermark of memory, in …","Graph memory attributes","","\\\\brief Returns a memcpy node’s parameters","\\\\brief Sets a memcpy node’s parameters","","","","\\\\brief Returns a memset node’s parameters","\\\\brief Sets a memset node’s parameters","\\\\brief Finds a cloned version of a node","\\\\brief Returns a node’s dependencies","\\\\brief Returns a node’s dependent nodes","\\\\brief Returns a node’s type","CUDA Graph node types","","&lt; Empty (no-op) node","&lt; External event record node","&lt; External semaphore signal node","&lt; External semaphore wait node","&lt; Node which executes an embedded graph","&lt; Host (executable) node","&lt; GPU kernel node","&lt; Memory allocation node","&lt; Memory free node","&lt; Memcpy node","&lt; Memset node","&lt; External event wait node","CUDA graph node.","\\\\brief Release a user object reference from a graph","\\\\brief Removes dependency edges from a graph.","\\\\brief Retain a reference to a user object from a graph","","&lt; Transfer references from the caller rather than creating …","CUDA graph","CUDA graphics interop array indices for cube maps","&lt; Negative X face of cubemap","&lt; Negative Y face of cubemap","&lt; Negative Z face of cubemap","&lt; Positive X face of cubemap","&lt; Positive Y face of cubemap","&lt; Positive Z face of cubemap","CUDA graphics interop map flags","&lt; Default; Assume resource can be read/written","&lt; CUDA will not write to this resource","&lt; CUDA will only write to and will not read from this …","\\\\brief Map graphics resources for access by CUDA","CUDA graphics interop register flags","&lt; Default","&lt; CUDA will not write to this resource","&lt; CUDA will bind this resource to a surface reference","&lt; CUDA will perform texture gather operations on this …","&lt; CUDA will only write to and will not read from this …","CUDA graphics interop resource","\\\\brief Get a mipmapped array through which to access a …","\\\\brief Get an device pointer through which to access a …","\\\\brief Set usage flags for mapping a graphics resource","CUDA graphics resource types","\\\\brief Get an array through which to access a subresource …","\\\\brief Unmap graphics resources.","\\\\brief Unregisters a graphics resource for access by CUDA","\\\\brief Allocates page-locked memory on the host","CUDA host function \\\\param userData Argument value passed …","\\\\brief Passes back device pointer of mapped host memory …","\\\\brief Passes back flags used to allocate pinned host …","CUDA host node parameters","\\\\brief Registers an existing host memory range for use by …","\\\\brief Unregisters a memory range that was registered with …","\\\\brief Imports an external memory object","\\\\brief Imports an external semaphore","\\\\brief Attempts to close memory mapped with …","CUDA IPC event handle","CUDA IPC event handle","\\\\brief Gets an interprocess handle for a previously …","\\\\brief Gets an interprocess memory handle for an existing …","CUDA IPC memory handle","CUDA IPC memory handle","\\\\brief Opens an interprocess event handle for use in the …","\\\\brief Opens an interprocess memory handle exported from …","Graph kernel node Attributes","Graph kernel node attributes union, used with …","&lt; Identifier for …","&lt; Allows a kernel node to be cooperative (see …","CUDA GPU kernel node parameters","&lt; Output mode Key-Value pair format.","&lt; Output mode Key-Value pair format.","\\\\brief Launches a device function where thread blocks can …","\\\\brief Launches device functions on multiple devices where …","\\\\brief Enqueues a host function call in a stream","\\\\brief Launches a device function","CUDA launch parameters","CUDA Limits","&lt; GPU device runtime pending launch count","&lt; GPU device runtime synchronize depth","&lt; GPU malloc heap size","&lt; A value between 0 and 128 that indicates the maximum …","&lt; A size in bytes for L2 persisting lines cache size","&lt; GPU printf FIFO size","&lt; GPU thread stack size","\\\\brief Allocate memory on the device","\\\\brief Allocates logical 1D, 2D, or 3D memory objects on …","\\\\brief Allocate an array on the device","\\\\brief Allocate an array on the device","\\\\brief Allocates memory with stream ordered semantics","\\\\brief Allocates memory from a specified pool with stream …","\\\\brief Allocates page-locked memory on the host","","\\\\brief Allocate a mipmapped array on the device","\\\\brief Allocates pitched memory on the device","Memory access descriptor","Specifies the memory protection flags for mapping.","&lt; Default, make the address range not accessible","&lt; Make the address range read accessible","&lt; Make the address range read-write accessible","\\\\brief Advise about the usage of a given memory range","&lt; Data will be accessed by the specified device, so …","&lt; Set the preferred location for the data as the specified …","&lt; Data will mostly be read and only occassionally be …","&lt; Let the Unified Memory subsystem decide on the page …","&lt; Clear the preferred location for the data","&lt; Undo the effect of ::cudaMemAdviseSetReadMostly","Memory allocation node parameters","Flags for specifying particular handle types","Defines the allocation types available","","This allocation type is ‘pinned’, i.e. cannot migrate …","This allocation type is ‘pinned’, i.e. cannot migrate …","\\\\brief Gets free and total device memory","&lt; Does not allow any export mechanism. &gt;","&lt; Allows a file descriptor to be used for exporting. …","&lt; Allows a Win32 NT handle to be used for exporting. …","&lt; Allows a Win32 KMT handle to be used for exporting. …","Specifies a memory location.","Specifies the type of location","&lt; Location is a device location, thus id is a device …","","CUDA memory pool attributes","(value type = cuuint64_t) Amount of reserved memory in …","(value type = cuuint64_t) Amount of backing memory …","(value type = cuuint64_t) High watermark of backing memory …","(value type = cuuint64_t) Amount of memory from the pool …","(value type = cuuint64_t) High watermark of the amount of …","\\\\brief Creates a memory pool","\\\\brief Destroys the specified memory pool","\\\\brief Export data to share a memory pool allocation …","\\\\brief Exports a memory pool to the requested handle type.","\\\\brief Returns the accessibility of a pool from a device","\\\\brief Gets attributes of a memory pool","\\\\brief imports a memory pool from a shared handle.","\\\\brief Import a memory pool allocation from another …","Specifies the properties of allocations made from the pool.","Opaque data for exporting a pool allocation","(value type = int) Allow cuMemAllocAsync to insert new …","(value type = int) Allow reuse of already completed frees …","(value type = int) Allow cuMemAllocAsync to use memory …","\\\\brief Controls visibility of pools between devices","\\\\brief Sets attributes of a memory pool","\\\\brief Tries to release memory back to the OS","CUDA memory pool","\\\\brief Prefetches memory to the specified destination …","CUDA range attributes","&lt; Memory range has ::cudaMemAdviseSetAccessedBy set for …","&lt; The last location to which the range was prefetched","&lt; The preferred location of the range","&lt; Whether the range will mostly be read and only …","\\\\brief Query an attribute of a given memory range","\\\\brief Query attributes of a given memory range.","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data between 3D objects","\\\\brief Copies data between 3D objects","CUDA 3D memory copying parameters","\\\\brief Copies memory between devices","\\\\brief Copies memory between devices asynchronously.","CUDA 3D cross-device memory copying parameters","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","&lt; Direction of the transfer is inferred from the pointer …","&lt; Device -&gt; Device","&lt; Device -&gt; Host","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data from the given symbol on the device","\\\\brief Copies data from the given symbol on the device","&lt; Host   -&gt; Device","&lt; Host   -&gt; Host","CUDA memory copy types","\\\\brief Copies memory between two devices","\\\\brief Copies memory between two devices asynchronously.","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data to the given symbol on the device","\\\\brief Copies data to the given symbol on the device","CUDA Memory Advise values","CUDA memory types","&lt; Device memory","&lt; Host memory","&lt; Managed memory","&lt; Unregistered memory","\\\\brief Initializes or sets device memory to a value","\\\\brief Initializes or sets device memory to a value","\\\\brief Initializes or sets device memory to a value","\\\\brief Initializes or sets device memory to a value","\\\\brief Initializes or sets device memory to a value","\\\\brief Initializes or sets device memory to a value","CUDA Memset node parameters","","","CUDA mipmapped array (as source argument)","CUDA mipmapped array","\\\\brief Returns dynamic shared memory available per block …","\\\\brief Returns occupancy for a device function","\\\\brief Returns occupancy for a device function with the …","CUDA Profiler Output modes","CUDA Profiler Output modes","\\\\brief Returns the last error from a runtime call","CUDA Pitched memory pointer","CUDA pointer attributes","\\\\brief Returns attributes about a specified pointer","CUDA 3D position","&lt; Read texture as specified element type","&lt; Read texture as normalized float","&lt; 1 channel 32-bit floating point","&lt; 2 channel 32-bit floating point","&lt; 4 channel 32-bit floating point","&lt; 1 channel 16-bit floating point","&lt; 2 channel 16-bit floating point","&lt; 4 channel 16-bit floating point","&lt; No resource view format (use underlying resource format)","&lt; Block compressed 4 signed","&lt; Block compressed 5 signed","&lt; Block compressed 6 signed half-float","&lt; 1 channel signed 8-bit integers","&lt; 2 channel signed 8-bit integers","&lt; 4 channel signed 8-bit integers","&lt; 1 channel signed 32-bit integers","&lt; 2 channel signed 32-bit integers","&lt; 4 channel signed 32-bit integers","&lt; 1 channel signed 16-bit integers","&lt; 2 channel signed 16-bit integers","&lt; 4 channel signed 16-bit integers","&lt; Block compressed 1","&lt; Block compressed 2","&lt; Block compressed 3","&lt; Block compressed 4 unsigned","&lt; Block compressed 5 unsigned","&lt; Block compressed 6 unsigned half-float","&lt; Block compressed 7","&lt; 1 channel unsigned 8-bit integers","&lt; 2 channel unsigned 8-bit integers","&lt; 4 channel unsigned 8-bit integers","&lt; 1 channel unsigned 32-bit integers","&lt; 2 channel unsigned 32-bit integers","&lt; 4 channel unsigned 32-bit integers","&lt; 1 channel unsigned 16-bit integers","&lt; 2 channel unsigned 16-bit integers","&lt; 4 channel unsigned 16-bit integers","CUDA resource descriptor","","","","","","CUDA resource types","&lt; Array resource","&lt; Linear resource","&lt; Mipmapped array resource","&lt; Pitch 2D resource","CUDA resource view descriptor","CUDA texture resource view formats","","","","","","\\\\brief Returns the CUDA Runtime version","\\\\brief Set device to be used for GPU executions","\\\\brief Sets flags to be used for device executions","\\\\brief Converts a double argument to be executed on a …","\\\\brief Converts a double argument after execution on a …","\\\\brief Set a list of devices that can be used for CUDA","Shared memory carveout configurations. These may be passed …","","","","CUDA shared memory configuration","&lt; No preference for shared memory or L1 (default)","&lt; Prefer maximum available L1 cache, minimum shared memory","&lt; Prefer maximum available shared memory, minimum L1 cache","","\\\\brief Add a callback to a compute stream","&lt; Add new nodes to the dependency set","","Stream Attributes","Stream attributes union used with …","&lt; Identifier for ::cudaStreamAttrValue::accessPolicyWindow.","&lt; ::cudaSynchronizationPolicy for work queued up in this …","\\\\brief Begins graph capture on a stream","Type of stream callback functions. \\\\param stream The …","Possible modes for stream capture thread interactions. For …","","","","Possible stream capture statuses returned by …","&lt; Stream is actively capturing","&lt; Stream is part of a capture sequence that has been …","&lt; Stream is not capturing","\\\\brief Copies attributes from source stream to destination …","\\\\brief Create an asynchronous stream","\\\\brief Create an asynchronous stream","\\\\brief Create an asynchronous stream with the specified …","\\\\brief Destroys and cleans up an asynchronous stream","\\\\brief Ends capture on a stream, returning the captured …","\\\\brief Queries stream attribute.","\\\\brief Query capture status of a stream","\\\\brief Query a stream’s capture state (11.3+)","\\\\brief Query the flags of a stream","\\\\brief Query the priority of a stream","\\\\brief Returns a stream’s capture status","\\\\brief Queries an asynchronous stream for completion status","\\\\brief Sets stream attribute.","&lt; Replace the dependency set with the new nodes","\\\\brief Waits for stream tasks to complete","\\\\brief Update the set of dependencies in a capturing …","Flags for ::cudaStreamUpdateCaptureDependencies","\\\\brief Make a compute stream wait on an event","CUDA stream","The API call returned with no errors. In the case of query …","The API call returned with no errors. In the case of query …","CUDA Surface boundary modes","CUDA Surface format modes","An opaque value that represents a CUDA Surface object","","","","","","CUDA texture address modes","CUDA texture descriptor","CUDA texture filter modes","An opaque value that represents a CUDA texture object","CUDA texture read modes","\\\\brief Swaps the stream capture interaction mode for a …","\\\\brief Exit and clean up from CUDA launches","\\\\brief Returns the preferred cache configuration for the …","\\\\brief Returns resource limits","\\\\brief Sets the preferred cache configuration for the …","\\\\brief Set resource limits","\\\\brief Wait for compute device to finish","","\\\\brief Unbinds a texture","\\\\brief Create a user object","Flags for user objects for graphs","&lt; Indicates the destructor execution is not synchronized …","\\\\brief Release a reference to a user object","\\\\brief Retain a reference to a user object","Flags for retaining user object references for graphs","CUDA user object for graphs","","Initialize the CUDA cuDNN API with needed context and …","Destroys the CUDA cuDNN context and resources associated …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an empty tensor transform descriptor","","","","","","","","","","","","","","","","","","","","","","","","","","","","Destroys a previously created tensor transform descriptor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the values stored in a previously initialized …","","","","","Create a destination descriptor for cudnnTransformTensor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize a previously created tensor transform …","","","","","","","","","","","","","","","","","","","","","","","Convert to CUDNN Data Type","","","","","&lt; Tile depth in elements","&lt; Depth in elements","&lt; Depth of the resource view","&lt; Channel descriptor","&lt; Channel descriptor","Destroys the CUDA cuDNN context and resources associated …","Destroys a CUDA cuDNN Activation Descriptor.","Destroys a CUDA cuDNN Convolution Descriptor.","Destroys a CUDA cuDNN Dropout Descriptor.","Destroys a CUDA cuDNN Filter Descriptor.","Destroys a CUDA cuDNN LRN Descriptor.","Destroys a CUDA cuDNN Pooling Descriptor.","Destroys a CUDA cuDNN RNN Descriptor.","Destroys a CUDA cuDNN Tensor Descriptor.","","","","&lt; Device pointer","&lt; Device pointer","The device against which the memory was allocated or …","&lt; Device can concurrently copy memory and execute a …","The address which may be dereferenced on the current …","","&lt; Host can directly access managed memory on the device …","Disable any trilinear filtering optimizations.","Disable any trilinear filtering optimizations.","Computes an devisive normalization backward function.","Computes an devisive normalization forward function.","&lt; out: address of the allocation returned by CUDA","","","","","","","","","","Computes the dropout backward function.","Computes probability and applies it to Dropout","Computes the dropout forward function.","Computes probability and applies it to Dropout","Get the reserve space size.","Get the states size (GPU memory).","&lt; Destination device pointer","&lt; Destination memory address","&lt; Destination memory address","&lt; Destination device","&lt; Destination position offset","&lt; Destination position offset","&lt; Pitched destination memory address","&lt; Pitched destination memory address","&lt; Size of each element in bytes. Must be 1, 2, or 4.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Array of external semaphore handles.","&lt; Array of external semaphore handles.","&lt; Requested memory copy size","&lt; Requested memory copy size","Dimensions of base level of the mipmap chain","&lt; Pointer to kernel arguments in the “extra” format","&lt; Channel format kind","File descriptor referencing the memory object. Valid when …","File descriptor referencing the semaphore object. Valid …","","Pointer to NvSciSyncFence. Valid if …","","Pointer to NvSciSyncFence. Valid if …","Texture filter mode","Texture filter mode","Returns the most performant convolutional backward data …","Returns the most performant convolutional backward data …","cuDNN Convolution Configuration","&lt; First layer index","&lt; First defined mipmap level","&lt; Flags will either be zero or …","&lt; ::CUmemProt accessibility flags to set on the request","Flags must either be zero or ::cudaExternalMemoryDedicated","Flags reserved for future use. Must be zero.","Flags associated with CUDA mipmapped arrays. See …","Flags reserved for the future. Must be zero.","Only when ::cudaExternalSemaphoreSignalParams is used to …","Only when ::cudaExternalSemaphoreSignalParams is used to …lt; The function to call when the node executes","&lt; Resource view format","Format of base level of the mipmap chain","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Initializes a new CUDA cuDNN Activation Descriptor from …","Initializes a new CUDA cuDNN ConvolutionDescriptor from …","Initializes a new CUDA cuDNN Context from its C type.","Initializes a new CUDA cuDNN Tensor Descriptor from its C …","Initializes a new CUDA cuDNN FilterDescriptor from its C …","Initializes a new CUDA cuDNN NormalizationDescriptor from …","Initializes a new CUDA cuDNN PoolingDescriptor from its C …","Initializes a new CUDA cuDNN RnnDescriptor from its C type.","Initializes a new CUDA cuDNN Tensor Descriptor from its C …","&lt; Device function symbol","&lt; Kernel to launch","Returns the workspace size in byte, which are needed for …","Returns the workspace size in byte, which are needed for …","Returns the workspace size in byte, which are needed for …","Return information about a generic CUDA cuDNN Pooling …","Return information about a generic CUDA cuDNN Pooling …","Initializes a generic CUDA cuDNN Pooling Descriptor with …","Get the size for a tensor","cudnnGetRNNParamsSize[1] Query the amount of parameter …","This function computes the work and reserve space buffer …","Size of Reserve Space for RNN Training […","Returns the workspace size in byte, which are needed for …","Returns informations about a generic CUDA cuDNN Tensor …","Returns the version of the CUDA cuDNN API.","&lt; Device supports caching globals in L1","&lt; Grid dimentions","&lt; Grid dimensions","","Valid NT handle. Must be NULL if ‘name’ is non-NULL","","Valid NT handle. Must be NULL if ‘name’ is non-NULL","","&lt; Handle types that will be supported by allocations from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Tile height in elements","&lt; Height in elements","&lt; Number of rows","&lt; Height of the array in elements","&lt; Height of the resource view","&lt; ::CUaccessProperty set for hit.","&lt; hitRatio specifies percentage of lines assigned hitProp, …","&lt; Link between the device and the host supports native …","The address which may be dereferenced on the host to …","&lt; identifier for a given this location’s …","Returns the CUDA cuDNN Activation Descriptor as its C type.","Returns the CUDA cuDNN ConvolutionDescriptor as its C type.","Returns the CUDA cuDNN Context as its C type.","Returns the CUDA cuDNN Tensor Descriptor as its C type.","Returns the CUDA cuDNN FilterDescriptor as its C type.","Returns the CUDA cuDNN NormalizationDescriptor as its C …","Returns the CUDA cuDNN Pooling Descriptor as its C type.","Returns the CUDA cuDNN RnnDescriptor as its C type.","Returns the CUDA cuDNN Tensor Descriptor as its C type.","Initialize the CUDA cuDNN API with needed context and …","Initializes the parameters and configurations for running …","Initializes the parameters and configurations for running …","Initializes the parameters and configurations for running …","Initializes the parameters and configurations for running …","Initializes the parameters and configurations for running …","Initialize RNN","&lt; Device is integrated as opposed to discrete","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","&lt; Device is on a multi-GPU board","&lt; Specified whether there is a run time limit on kernels","&lt; Array of pointers to individual kernel arguments","","Value of key to acquire the mutex with","","","&lt; Type of transfer","&lt; Size of L2 cache in bytes","&lt; Last layer index","&lt; Last defined mipmap level","","","","","","","&lt; Device supports caching locals in L1","The size in bytes of local memory used by each thread of …","&lt; Location on which the request is to change it’s …","&lt; Location allocations should reside.","Computes the backward logarithmic softmax function.","Computes the forward logarithmic softmax function.","Computes the backward local response normalization …","Computes an LRN cross channel backward function.","Computes an LRN cross channel forward function.","Computes the forward local response normalization function.","&lt; 8-byte locally unique identifier. Value is undefined on …","&lt; LUID device node mask. Value is undefined on TCC and …","&lt; Major compute capability","&lt; Device supports allocating managed memory on this system","","","","Limit to the anisotropy ratio","Limit to the anisotropy ratio","&lt; Maximum number of resident blocks per multiprocessor","The maximum size in bytes of dynamic shared memory per …","&lt; Maximum size of each dimension of a grid","Upper end of the mipmap level range to clamp access to","Upper end of the mipmap level range to clamp access to","&lt; Maximum 1D surface size","&lt; Maximum 1D layered surface dimensions","&lt; Maximum 2D surface dimensions","&lt; Maximum 2D layered surface dimensions","&lt; Maximum 3D surface dimensions","&lt; Maximum Cubemap surface dimensions","&lt; Maximum Cubemap layered surface dimensions","&lt; Maximum 1D texture size","&lt; Maximum 1D layered texture dimensions","&lt; Deprecated, do not use. Use …","&lt; Maximum 1D mipmapped texture size","&lt; Maximum 2D texture dimensions","&lt; Maximum 2D texture dimensions if texture gather …","&lt; Maximum 2D layered texture dimensions","&lt; Maximum dimensions (width, height, pitch) for 2D …","&lt; Maximum 2D mipmapped texture dimensions","&lt; Maximum 3D texture dimensions","&lt; Maximum alternate 3D texture dimensions","&lt; Maximum Cubemap texture dimensions","&lt; Maximum Cubemap layered texture dimensions","&lt; Maximum size of each dimension of a block","The maximum number of threads per block, beyond which a …","&lt; Maximum number of threads per block","&lt; Maximum resident threads per multiprocessor","&lt; Maximum pitch in bytes allowed by memory copies","","","","&lt; Global memory bus width in bits","&lt; Peak memory clock frequency in kilohertz","Lower end of the mipmap level range to clamp access to","Lower end of the mipmap level range to clamp access to","&lt; Minor compute capability","","&lt; CUDA mipmapped array","Mipmap filter mode","Mipmap filter mode","Offset applied to the supplied mipmap level","Offset applied to the supplied mipmap level","&lt; First mip level at which the mip tail begins","&lt; Total size of the mip tail.","&lt; ::CUaccessProperty set for miss. Must be either NORMAL …","&lt; Unique identifier for a group of devices on the same …","&lt; Number of multiprocessors on device","&lt; ASCII string identifying device","Name of a valid memory object. Must be NULL if ‘handle’…","Name of a valid synchronization primitive. Must be NULL if …","Initializes a new CUDA cuDNN Activation Descriptor.","Initializes a new CUDA cuDNN ConvolutionDescriptor.","Initializes a new CUDA cuDNN context.","Initializes a new CUDA cuDNN Dropout Descriptor.","Initializes a new CUDA cuDNN FilterDescriptor.","Initializes a new CUDA cuDNN LRNDescriptor.","Initializes a new CUDA cuDNN Pooling Descriptor.","Initializes a new CUDA cuDNN RnnDescriptor.","Initializes a new CUDA cuDNN Tensor Descriptor.","Indicates whether texture reads are normalized or not","Indicates whether texture reads are normalized or not","&lt; Number of handles and parameters supplied in extSemArray …","&lt; Number of handles and parameters supplied in extSemArray …","Total number of levels in the mipmap chain","The number of registers used by each thread of this …","&lt; Size in bytes of the window policy. CUDA driver may …","A handle representing NvSciBuf Object. Valid when type is …","","","Valid NvSciSyncObj. Must be non NULL","Offset into the memory object where the buffer’s base is","Offset into the memory object where the base level of the …","&lt; Device supports coherently accessing pageable memory …","&lt; Device accesses pageable memory via the host’s page …","","","&lt; Array of external semaphore signal parameters.","&lt; Array of external semaphore wait parameters.","&lt; PCI bus ID of the device","&lt; PCI device ID of the device","&lt; PCI domain ID of the device","&lt; Device’s maximum l2 persisting lines capacity setting …","","&lt; Pitch of allocated memory in bytes","&lt; Pitch of destination device pointer. Unused if height is …","","&lt; Pitch between two rows in bytes","&lt; in: array of memory access descriptors. Used to describe …","Computes the backward average pooling function.","Computes the forward average pooling function.","Computes a pooling backward function.","Computes a pooling forward function.","Computes the backward max pooling function.","Computes the forward max pooling function.","On devices where the L1 cache and shared memory use the …","&lt; Pointer to allocated memory","The PTX virtual architecture version for which the …","Texture read mode","&lt; 32-bit registers available per block","&lt; 32-bit registers available per multiprocessor","Computes the backward Rectified Linear Activation function.","Computes the forward Rectified Linear Activation function.","","&lt; Resource type","","&lt; reserved for future use, must be 0","","","","","","","","","","","","","","&lt; Shared memory reserved by CUDA driver per block in bytes","CUDNN Rnn Backward Data This routine executes the …","Train &amp; Return Results for RNN","CUDNN Rnn Backward Weights This routine accumulates weight …","Train &amp; Return Results for RNN","Train &amp; Return Results for RNN","Execute a RNN without Training This routine executes the …","Trains a RNN through the Forward Process","Perform sRGB-&gt;linear conversion during texture read","Perform sRGB-&gt;linear conversion during texture read","Scales all elements of a tensor by a given factor.","Initializes a generic CUDA cuDNN Activation Descriptor …","Initializes a generic CUDA cuDNN Convolution Descriptor …","Initializes a generic CUDA cuDNN Activation Descriptor …","Initializes a generic CUDA cuDNN Filter Descriptor with …","Initializes a generic CUDA cuDNN LRN Descriptor with …","Initializes a generic CUDA cuDNN Pooling Descriptor with …","Initializes a generic CUDA cuDNN Pooling Descriptor with …","","Initializes a generic CUDA cuDNN RNN Descriptor with …","Set RNN Matrix Math Type cudnnSetRNNMatrixMathType …","Set RNN Padding Model cudnnSetRNNPaddingMode This function …","Sets all elements of a tensor to a given value.","Initializes a generic CUDA cuDNN Tensor Descriptor with …","&lt; Shared memory","&lt; Dynamic shared-memory size per thread block in bytes","&lt; Shared memory available per block in bytes","&lt; Per device maximum shared memory per block usable by …","&lt; Shared memory available per multiprocessor in bytes","The size in bytes of statically-allocated shared memory …","Computes the backward Sigmoid Activation function.","Computes the forward Sigmoid Activation function.","&lt; Ratio of single precision performance (in floating-point …","Size of the memory allocation","Size of the buffer","&lt; Size in bytes","Computes an softmax backward function.","Computes the backward softmax function.","Computes an softmax forward function.","Computes the forward softmax function.","&lt; Source memory address","&lt; Source memory address","&lt; Source device","&lt; Source position offset","&lt; Source position offset","&lt; Pitched source memory address","&lt; Pitched source memory address","","","","&lt; Stream identifier","","&lt; Device supports stream priorities","&lt; Alignment requirements for surfaces","CUDA Surface reference","","Computes the backward Hyperbolic Tangent Activation …","Computes the forward Hyperbolic Tangent Activation …","&lt; 1 if device is a Tesla device using TCC driver, 0 …","Return C Handle for a Vector of Tensor Descriptors","&lt; Alignment requirement for textures","&lt; Pitch alignment requirement for texture references bound …","CUDA texture reference","","","","","","","","","Timeout in milliseconds to wait to acquire the mutexlt; Constant memory available on device in bytes","&lt; Global memory available on device in bytes","Transforms a CUDA cuDNN Tensor from to another Tensor with …he type of memory - ::cudaMemoryTypeUnregistered, …","&lt; Specifies the location type, which modifies the meaning …","Type of the handle","Type of the handlelt; Device shares a unified address space with the host","&lt; Argument to pass to the function","Describes utility functionality for CUDA cuDNN.","&lt; 16-byte unique identifier","&lt; Value to be set","Value of fence to be signaled","Value of fence to be waited on","Returns the version of the CUDA cuDNN library.","&lt; w","&lt; Warp size in threads","&lt; Tile width in elements","&lt; Width in elements when referring to array memory, in …","&lt; Width of the row in elements","&lt; Width of the array in elements","&lt; Width of the resource view","","","Windows-specific LPSECURITYATTRIBUTES required when …","","&lt; x","&lt; x","&lt; Logical width of allocation in elements","","&lt; y","&lt; y","&lt; Logical height of allocation in elements","","&lt; z","&lt; z","","","","","","","","","","","","","A pointer to memory existing on a nvidia GPU","","","","","Returns the argument unchanged.","Initializes a new CUDA Device Memory from its C type.","Returns the CUDA Device Memory ptr as its C type.","Calls <code>U::from(self)</code>.","Saw fun X Y Z","Returns the size of the CUDA Device Memory chunk.","","","","Provides a convenient interface to access cuDNN’s …","Provides a convenient interface to access cuDNN’s …","Defines the available data types for the CUDA cuDNN data …","CuDnn type info for generic use.","F64","Provides a convenient interface to access cuDNN’s …","F32","F16 (no native Rust support yet)","Provides a convenient interface to access cuDNN’s …","Provides a convenient interface to access cuDNN’s …","Provides an interfaces for CUDNN’s Rnn Descriptor","Provides a convenient interface for cuDNN’s scaling …","Alpha","Returns <code>activation_clipped_relu_desc</code>.","Returns <code>activation_relu_desc</code>.","Returns <code>activation_sigmoid_desc</code>.","Returns <code>activation_tanh_desc</code>.","Beta","Returns <code>backward_data_algo</code>.","Returns <code>backward_data_workspace_size</code>.","Returns <code>backward_filter_algo</code>.","Returns <code>backward_filter_workspace_size</code>.","","","","","","","","","","","","","","","","","","","Returns <code>conv_desc</code>.","Mostly internal.","Provides default values for ScalParams.","Returns <code>dropout_desc</code>.","Returns <code>filter_desc</code>.","","","Returns <code>forward_algo</code>.","Returns <code>forward_workspace_size</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Size of Hidden Layer","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the largest workspace size out of the three.","Largest Workspace Size for RNN","Returns <code>lrn_desc</code>.","Returns a new ConvolutionConfig","Returns a new LRN Config.","Returns a new PoolingConfig.","Returns a new ActivationConfig.","Initialise a RNN Config","Returns a new DropoutConfig.","Number of Hidden Layers","Returns <code>pooling_avg_desc</code>.","Returns <code>pooling_max_desc</code>.","Returns the reserved space.","Accessor function for Rnn Descriptor","Workspace Size required for RNN Operations","Accessor function for Sequence Length","Length of Sequence","","Take the Reserve Memory of the DropoutDescriptor","","Training Reserve Space on GPU for RNN","Training Reserve Size for RNN","","","","","","","","","","","","","","","","","","","","","","","",""],"if":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cudnnhandle_t",6],["cudnnactivationdescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnnactivationdescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0]],["result",4,[["error",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,[[["api",3]],["api",3]],[[["activationdescriptor",3]],["activationdescriptor",3]],[[["convolutiondescriptor",3]],["convolutiondescriptor",3]],[[["cudnn",3]],["cudnn",3]],[[["dropoutdescriptor",3]],["dropoutdescriptor",3]],[[["error",4]],["error",4]],[[["filterdescriptor",3]],["filterdescriptor",3]],[[["normalizationdescriptor",3]],["normalizationdescriptor",3]],[[["poolingdescriptor",3]],["poolingdescriptor",3]],[[["tensordescriptor",3]],["tensordescriptor",3]],[[["cudaroundmode",4]],["cudaroundmode",4]],[[["dim3",3]],["dim3",3]],[[["cudaerror",4]],["cudaerror",4]],[[["cudachannelformatkind",4]],["cudachannelformatkind",4]],[[["cudachannelformatdesc",3]],["cudachannelformatdesc",3]],[[["cudaarray",3]],["cudaarray",3]],[[["cudamipmappedarray",3]],["cudamipmappedarray",3]],[[["cudaarraysparseproperties",3]],["cudaarraysparseproperties",3]],[[["cudaarraysparseproperties__bindgen_ty_1",3]],["cudaarraysparseproperties__bindgen_ty_1",3]],[[["cudamemorytype",4]],["cudamemorytype",4]],[[["cudamemcpykind",4]],["cudamemcpykind",4]],[[["cudapitchedptr",3]],["cudapitchedptr",3]],[[["cudaextent",3]],["cudaextent",3]],[[["cudapos",3]],["cudapos",3]],[[["cudamemcpy3dparms",3]],["cudamemcpy3dparms",3]],[[["cudamemcpy3dpeerparms",3]],["cudamemcpy3dpeerparms",3]],[[["cudamemsetparams",3]],["cudamemsetparams",3]],[[["cudaaccessproperty",4]],["cudaaccessproperty",4]],[[["cudaaccesspolicywindow",3]],["cudaaccesspolicywindow",3]],[[["cudahostnodeparams",3]],["cudahostnodeparams",3]],[[["cudastreamcapturestatus",4]],["cudastreamcapturestatus",4]],[[["cudastreamcapturemode",4]],["cudastreamcapturemode",4]],[[["cudasynchronizationpolicy",4]],["cudasynchronizationpolicy",4]],[[["cudastreamattrid",4]],["cudastreamattrid",4]],[[["cudastreamattrvalue",19]],["cudastreamattrvalue",19]],[[["cudastreamupdatecapturedependenciesflags",4]],["cudastreamupdatecapturedependenciesflags",4]],[[["cudauserobjectflags",4]],["cudauserobjectflags",4]],[[["cudauserobjectretainflags",4]],["cudauserobjectretainflags",4]],[[["cudagraphicsresource",3]],["cudagraphicsresource",3]],[[["cudagraphicsregisterflags",4]],["cudagraphicsregisterflags",4]],[[["cudagraphicsmapflags",4]],["cudagraphicsmapflags",4]],[[["cudagraphicscubeface",4]],["cudagraphicscubeface",4]],[[["cudakernelnodeattrid",4]],["cudakernelnodeattrid",4]],[[["cudakernelnodeattrvalue",19]],["cudakernelnodeattrvalue",19]],[[["cudaresourcetype",4]],["cudaresourcetype",4]],[[["cudaresourceviewformat",4]],["cudaresourceviewformat",4]],[[["cudaresourcedesc",3]],["cudaresourcedesc",3]],[[["cudaresourcedesc__bindgen_ty_1",19]],["cudaresourcedesc__bindgen_ty_1",19]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1",3]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1",3]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2",3]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2",3]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3",3]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3",3]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4",3]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4",3]],[[["cudaresourceviewdesc",3]],["cudaresourceviewdesc",3]],[[["cudapointerattributes",3]],["cudapointerattributes",3]],[[["cudafuncattributes",3]],["cudafuncattributes",3]],[[["cudafuncattribute",4]],["cudafuncattribute",4]],[[["cudafunccache",4]],["cudafunccache",4]],[[["cudasharedmemconfig",4]],["cudasharedmemconfig",4]],[[["cudasharedcarveout",4]],["cudasharedcarveout",4]],[[["cudacomputemode",4]],["cudacomputemode",4]],[[["cudalimit",4]],["cudalimit",4]],[[["cudamemoryadvise",4]],["cudamemoryadvise",4]],[[["cudamemrangeattribute",4]],["cudamemrangeattribute",4]],[[["cudaoutputmode",4]],["cudaoutputmode",4]],[[["cudaflushgpudirectrdmawritesoptions",4]],["cudaflushgpudirectrdmawritesoptions",4]],[[["cudagpudirectrdmawritesordering",4]],["cudagpudirectrdmawritesordering",4]],[[["cudaflushgpudirectrdmawritesscope",4]],["cudaflushgpudirectrdmawritesscope",4]],[[["cudaflushgpudirectrdmawritestarget",4]],["cudaflushgpudirectrdmawritestarget",4]],[[["cudadeviceattr",4]],["cudadeviceattr",4]],[[["cudamempoolattr",4]],["cudamempoolattr",4]],[[["cudamemlocationtype",4]],["cudamemlocationtype",4]],[[["cudamemlocation",3]],["cudamemlocation",3]],[[["cudamemaccessflags",4]],["cudamemaccessflags",4]],[[["cudamemaccessdesc",3]],["cudamemaccessdesc",3]],[[["cudamemallocationtype",4]],["cudamemallocationtype",4]],[[["cudamemallocationhandletype",4]],["cudamemallocationhandletype",4]],[[["cudamempoolprops",3]],["cudamempoolprops",3]],[[["cudamempoolptrexportdata",3]],["cudamempoolptrexportdata",3]],[[["cudamemallocnodeparams",3]],["cudamemallocnodeparams",3]],[[["cudagraphmemattributetype",4]],["cudagraphmemattributetype",4]],[[["cudadevicep2pattr",4]],["cudadevicep2pattr",4]],[[["cuuuid_st",3]],["cuuuid_st",3]],[[["cudadeviceprop",3]],["cudadeviceprop",3]],[[["cudaipceventhandle_st",3]],["cudaipceventhandle_st",3]],[[["cudaipcmemhandle_st",3]],["cudaipcmemhandle_st",3]],[[["cudaexternalmemoryhandletype",4]],["cudaexternalmemoryhandletype",4]],[[["cudaexternalmemoryhandledesc",3]],["cudaexternalmemoryhandledesc",3]],[[["cudaexternalmemoryhandledesc__bindgen_ty_1",19]],["cudaexternalmemoryhandledesc__bindgen_ty_1",19]],[[["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1",3]],["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1",3]],[[["cudaexternalmemorybufferdesc",3]],["cudaexternalmemorybufferdesc",3]],[[["cudaexternalmemorymipmappedarraydesc",3]],["cudaexternalmemorymipmappedarraydesc",3]],[[["cudaexternalsemaphorehandletype",4]],["cudaexternalsemaphorehandletype",4]],[[["cudaexternalsemaphorehandledesc",3]],["cudaexternalsemaphorehandledesc",3]],[[["cudaexternalsemaphorehandledesc__bindgen_ty_1",19]],["cudaexternalsemaphorehandledesc__bindgen_ty_1",19]],[[["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1",3]],["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1",3]],[[["cudaexternalsemaphoresignalparams",3]],["cudaexternalsemaphoresignalparams",3]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1",3]],["cudaexternalsemaphoresignalparams__bindgen_ty_1",3]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1",3]],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1",3]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_2",19]],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_2",19]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3",3]],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3",3]],[[["cudaexternalsemaphorewaitparams",3]],["cudaexternalsemaphorewaitparams",3]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1",3]],["cudaexternalsemaphorewaitparams__bindgen_ty_1",3]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1",3]],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1",3]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_2",19]],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_2",19]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3",3]],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3",3]],[[["custream_st",3]],["custream_st",3]],[[["cuevent_st",3]],["cuevent_st",3]],[[["cuexternalmemory_st",3]],["cuexternalmemory_st",3]],[[["cuexternalsemaphore_st",3]],["cuexternalsemaphore_st",3]],[[["cugraph_st",3]],["cugraph_st",3]],[[["cugraphnode_st",3]],["cugraphnode_st",3]],[[["cuuserobject_st",3]],["cuuserobject_st",3]],[[["cufunc_st",3]],["cufunc_st",3]],[[["cumempoolhandle_st",3]],["cumempoolhandle_st",3]],[[["cudacgscope",4]],["cudacgscope",4]],[[["cudalaunchparams",3]],["cudalaunchparams",3]],[[["cudakernelnodeparams",3]],["cudakernelnodeparams",3]],[[["cudaexternalsemaphoresignalnodeparams",3]],["cudaexternalsemaphoresignalnodeparams",3]],[[["cudaexternalsemaphorewaitnodeparams",3]],["cudaexternalsemaphorewaitnodeparams",3]],[[["cudagraphnodetype",4]],["cudagraphnodetype",4]],[[["cugraphexec_st",3]],["cugraphexec_st",3]],[[["cudagraphexecupdateresult",4]],["cudagraphexecupdateresult",4]],[[["cudagetdriverentrypointflags",4]],["cudagetdriverentrypointflags",4]],[[["cudagraphdebugdotflags",4]],["cudagraphdebugdotflags",4]],[[["cudagraphinstantiateflags",4]],["cudagraphinstantiateflags",4]],[[["cudasurfaceboundarymode",4]],["cudasurfaceboundarymode",4]],[[["cudasurfaceformatmode",4]],["cudasurfaceformatmode",4]],[[["surfacereference",3]],["surfacereference",3]],[[["cudatextureaddressmode",4]],["cudatextureaddressmode",4]],[[["cudatexturefiltermode",4]],["cudatexturefiltermode",4]],[[["cudatexturereadmode",4]],["cudatexturereadmode",4]],[[["texturereference",3]],["texturereference",3]],[[["cudatexturedesc",3]],["cudatexturedesc",3]],[[["cudadatatype_t",4]],["cudadatatype_t",4]],[[["cudnncontext",3]],["cudnncontext",3]],[[["cudnnstatus_t",4]],["cudnnstatus_t",4]],[[["cudnnruntimetag_t",3]],["cudnnruntimetag_t",3]],[[["cudnnerrquerymode_t",4]],["cudnnerrquerymode_t",4]],[[["cudnntensorstruct",3]],["cudnntensorstruct",3]],[[["cudnnpoolingstruct",3]],["cudnnpoolingstruct",3]],[[["cudnnfilterstruct",3]],["cudnnfilterstruct",3]],[[["cudnnlrnstruct",3]],["cudnnlrnstruct",3]],[[["cudnnactivationstruct",3]],["cudnnactivationstruct",3]],[[["cudnnspatialtransformerstruct",3]],["cudnnspatialtransformerstruct",3]],[[["cudnnoptensorstruct",3]],["cudnnoptensorstruct",3]],[[["cudnnreducetensorstruct",3]],["cudnnreducetensorstruct",3]],[[["cudnnctclossstruct",3]],["cudnnctclossstruct",3]],[[["cudnntensortransformstruct",3]],["cudnntensortransformstruct",3]],[[["cudnndatatype_t",4]],["cudnndatatype_t",4]],[[["cudnnmathtype_t",4]],["cudnnmathtype_t",4]],[[["cudnnnanpropagation_t",4]],["cudnnnanpropagation_t",4]],[[["cudnndeterminism_t",4]],["cudnndeterminism_t",4]],[[["cudnntensorformat_t",4]],["cudnntensorformat_t",4]],[[["cudnnfoldingdirection_t",4]],["cudnnfoldingdirection_t",4]],[[["cudnnoptensorop_t",4]],["cudnnoptensorop_t",4]],[[["cudnnreducetensorop_t",4]],["cudnnreducetensorop_t",4]],[[["cudnnreducetensorindices_t",4]],["cudnnreducetensorindices_t",4]],[[["cudnnindicestype_t",4]],["cudnnindicestype_t",4]],[[["cudnnsoftmaxalgorithm_t",4]],["cudnnsoftmaxalgorithm_t",4]],[[["cudnnsoftmaxmode_t",4]],["cudnnsoftmaxmode_t",4]],[[["cudnnpoolingmode_t",4]],["cudnnpoolingmode_t",4]],[[["cudnnactivationmode_t",4]],["cudnnactivationmode_t",4]],[[["cudnnlrnmode_t",4]],["cudnnlrnmode_t",4]],[[["cudnndivnormmode_t",4]],["cudnndivnormmode_t",4]],[[["cudnnbatchnormmode_t",4]],["cudnnbatchnormmode_t",4]],[[["cudnnbatchnormops_t",4]],["cudnnbatchnormops_t",4]],[[["cudnnnormmode_t",4]],["cudnnnormmode_t",4]],[[["cudnnnormalgo_t",4]],["cudnnnormalgo_t",4]],[[["cudnnnormops_t",4]],["cudnnnormops_t",4]],[[["cudnnsamplertype_t",4]],["cudnnsamplertype_t",4]],[[["cudnndropoutstruct",3]],["cudnndropoutstruct",3]],[[["cudnnalgorithmstruct",3]],["cudnnalgorithmstruct",3]],[[["cudnnalgorithmperformancestruct",3]],["cudnnalgorithmperformancestruct",3]],[[["cudnnconvolutionfwdalgo_t",4]],["cudnnconvolutionfwdalgo_t",4]],[[["cudnnconvolutionbwdfilteralgo_t",4]],["cudnnconvolutionbwdfilteralgo_t",4]],[[["cudnnconvolutionbwddataalgo_t",4]],["cudnnconvolutionbwddataalgo_t",4]],[[["cudnnrnnalgo_t",4]],["cudnnrnnalgo_t",4]],[[["cudnnctclossalgo_t",4]],["cudnnctclossalgo_t",4]],[[["cudnnalgorithmunionstruct",3]],["cudnnalgorithmunionstruct",3]],[[["cudnnalgorithmunionstruct_algorithm",19]],["cudnnalgorithmunionstruct_algorithm",19]],[[["cudnnseverity_t",4]],["cudnnseverity_t",4]],[[["cudnndebugstruct",3]],["cudnndebugstruct",3]],[[["cudnnforwardmode_t",4]],["cudnnforwardmode_t",4]],[[["cudnnrnnmode_t",4]],["cudnnrnnmode_t",4]],[[["cudnnrnnbiasmode_t",4]],["cudnnrnnbiasmode_t",4]],[[["cudnndirectionmode_t",4]],["cudnndirectionmode_t",4]],[[["cudnnrnninputmode_t",4]],["cudnnrnninputmode_t",4]],[[["cudnnrnnclipmode_t",4]],["cudnnrnnclipmode_t",4]],[[["cudnnrnndatalayout_t",4]],["cudnnrnndatalayout_t",4]],[[["cudnnrnnstruct",3]],["cudnnrnnstruct",3]],[[["cudnnpersistentrnnplan",3]],["cudnnpersistentrnnplan",3]],[[["cudnnrnndatastruct",3]],["cudnnrnndatastruct",3]],[[["cudnnseqdataaxis_t",4]],["cudnnseqdataaxis_t",4]],[[["cudnnseqdatastruct",3]],["cudnnseqdatastruct",3]],[[["cudnnattnstruct",3]],["cudnnattnstruct",3]],[[["cudnnmultiheadattnweightkind_t",4]],["cudnnmultiheadattnweightkind_t",4]],[[["cudnnwgradmode_t",4]],["cudnnwgradmode_t",4]],[[["cudnnlossnormalizationmode_t",4]],["cudnnlossnormalizationmode_t",4]],[[["cudnnconvolutionstruct",3]],["cudnnconvolutionstruct",3]],[[["cudnnconvolutionmode_t",4]],["cudnnconvolutionmode_t",4]],[[["cudnnreordertype_t",4]],["cudnnreordertype_t",4]],[[["cudnnconvolutionfwdalgoperfstruct",3]],["cudnnconvolutionfwdalgoperfstruct",3]],[[["cudnnconvolutionbwddataalgoperfstruct",3]],["cudnnconvolutionbwddataalgoperfstruct",3]],[[["cudnnfusedopsconstparamstruct",3]],["cudnnfusedopsconstparamstruct",3]],[[["cudnnfusedopsvariantparamstruct",3]],["cudnnfusedopsvariantparamstruct",3]],[[["cudnnfusedopsplanstruct",3]],["cudnnfusedopsplanstruct",3]],[[["cudnnfusedops_t",4]],["cudnnfusedops_t",4]],[[["cudnnfusedopsconstparamlabel_t",4]],["cudnnfusedopsconstparamlabel_t",4]],[[["cudnnfusedopspointerplaceholder_t",4]],["cudnnfusedopspointerplaceholder_t",4]],[[["cudnnfusedopsvariantparamlabel_t",4]],["cudnnfusedopsvariantparamlabel_t",4]],[[["cudnnconvolutionbwdfilteralgoperfstruct",3]],["cudnnconvolutionbwdfilteralgoperfstruct",3]],[[["cudnnpointwisemode_t",4]],["cudnnpointwisemode_t",4]],[[["cudnngenstatsmode_t",4]],["cudnngenstatsmode_t",4]],[[["cudnnbnfinalizestatsmode_t",4]],["cudnnbnfinalizestatsmode_t",4]],[[["cudnnbackendattributename_t",4]],["cudnnbackendattributename_t",4]],[[["cudnnbackendattributetype_t",4]],["cudnnbackendattributetype_t",4]],[[["cudnnbackenddescriptortype_t",4]],["cudnnbackenddescriptortype_t",4]],[[["cudnnbackendnumericalnote_t",4]],["cudnnbackendnumericalnote_t",4]],[[["cudnnbackendbehaviornote_t",4]],["cudnnbackendbehaviornote_t",4]],[[["cudnnbackendknobtype_t",4]],["cudnnbackendknobtype_t",4]],[[["cudnnbackendlayouttype_t",4]],["cudnnbackendlayouttype_t",4]],[[["cudnnbackendheurmode_t",4]],["cudnnbackendheurmode_t",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,null,null,[[["cudnnhandle_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0]],["result",4,[["error",4]]]],[[["cudnn",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnnconvolutionbwddataalgo_t",4],["cudnnconvolutiondescriptor_t",6],["c_void",0],["size_t",6],["c_void",0],["cudnnfilterdescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0]],["result",4,[["error",4]]]],[[["cudnn",3],["convolutionconfig",3],["c_void",0],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnnconvolutionbwdfilteralgo_t",4],["cudnnconvolutiondescriptor_t",6],["c_void",0],["size_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["cudnnfilterdescriptor_t",6],["c_void",0]],["result",4,[["error",4]]]],[[["cudnn",3],["convolutionconfig",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnnconvolutionfwdalgo_t",4],["cudnnconvolutiondescriptor_t",6],["c_void",0],["size_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnnfilterdescriptor_t",6],["c_void",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0]],["result",4,[["error",4]]]],[[["cudnn",3],["convolutionconfig",3],["c_void",0],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],null,null,null,[[],["result",4,[["cudnnactivationdescriptor_t",6],["error",4]]]],[[],["result",4,[["cudnnconvolutiondescriptor_t",6],["error",4]]]],[[],["result",4,[["cudnndropoutdescriptor_t",6],["error",4]]]],[[],["result",4,[["cudnnfilterdescriptor_t",6],["error",4]]]],[[],["result",4,[["cudnnlrndescriptor_t",6],["error",4]]]],[[],["result",4,[["cudnnpoolingdescriptor_t",6],["error",4]]]],[[],["result",4,[["cudnnrnndatadescriptor_t",6],["error",4]]]],[[],["result",4,[["cudnnrnndescriptor_t",6],["error",4]]]],[[],["result",4,[["cudnntensordescriptor_t",6],["error",4]]]],null,null,null,null,null,null,null,null,null,null,null,[[["cudachannelformatdesc",0],["cudaextent",0],["u32",0],["cudaarray",0]],["cudaerror",4]],[[["cudaarray",0],["cudaarray",0],["u32",0]],["cudaerror",4]],[[["cudaarraysparseproperties",0],["cudaarray",0]],["cudaerror",4]],null,null,null,null,[[["surfacereference",0],["cudaarray",0],["cudachannelformatdesc",0]],["cudaerror",4]],[[["usize",0],["texturereference",0],["c_void",0],["cudachannelformatdesc",0],["usize",0]],["cudaerror",4]],[[["usize",0],["texturereference",0],["c_void",0],["cudachannelformatdesc",0],["usize",0],["usize",0],["usize",0]],["cudaerror",4]],[[["texturereference",0],["cudaarray",0],["cudachannelformatdesc",0]],["cudaerror",4]],[[["texturereference",0],["cudamipmappedarray",0],["cudachannelformatdesc",0]],["cudaerror",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",0],["cudadeviceprop",0]],["cudaerror",4]],null,null,null,null,null,[[["i32",0],["i32",0],["i32",0],["i32",0],["cudachannelformatkind",4]],["cudachannelformatdesc",3]],[[["u64",0],["cudaresourcedesc",0]],["cudaerror",4]],[[["u64",0],["cudaresourcedesc",0],["cudatexturedesc",0],["cudaresourceviewdesc",0]],["cudaerror",4]],[[],["cudaerror",4]],null,null,[[["cuexternalmemory_st",0]],["cudaerror",4]],[[["cuexternalsemaphore_st",0]],["cudaerror",4]],[[["u64",0]],["cudaerror",4]],[[["u64",0]],["cudaerror",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",0],["i32",0],["i32",0]],["cudaerror",4]],[[["i32",0]],["cudaerror",4]],[[["i32",0],["u32",0]],["cudaerror",4]],[[["cudaflushgpudirectrdmawritestarget",4],["cudaflushgpudirectrdmawritesscope",4]],["cudaerror",4]],[[["i32",0],["cudadeviceattr",4],["i32",0]],["cudaerror",4]],[[["i32",0],["i8",0]],["cudaerror",4]],[[["cudafunccache",0]],["cudaerror",4]],[[["cumempoolhandle_st",0],["i32",0]],["cudaerror",4]],[[["i32",0],["cudagraphmemattributetype",4],["c_void",0]],["cudaerror",4]],[[["usize",0],["cudalimit",4]],["cudaerror",4]],[[["cumempoolhandle_st",0],["i32",0]],["cudaerror",4]],[[["c_void",0],["i32",0],["i32",0]],["cudaerror",4]],[[["i32",0],["cudadevicep2pattr",4],["i32",0],["i32",0]],["cudaerror",4]],[[["i8",0],["i32",0],["i32",0]],["cudaerror",4]],[[["cudasharedmemconfig",0]],["cudaerror",4]],[[["i32",0],["i32",0]],["cudaerror",4]],[[["usize",0],["cudachannelformatdesc",0],["i32",0]],["cudaerror",4]],[[["i32",0]],["cudaerror",4]],null,null,null,[[],["cudaerror",4]],[[["cudafunccache",4]],["cudaerror",4]],[[["i32",0],["cudagraphmemattributetype",4],["c_void",0]],["cudaerror",4]],[[["cudalimit",4],["usize",0]],["cudaerror",4]],[[["i32",0],["cumempoolhandle_st",0]],["cudaerror",4]],[[["cudasharedmemconfig",4]],["cudaerror",4]],[[],["cudaerror",4]],[[["i32",0]],["cudaerror",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cuevent_st",0]],["cudaerror",4]],[[["cuevent_st",0],["u32",0]],["cudaerror",4]],[[["cuevent_st",0]],["cudaerror",4]],[[["f32",0],["cuevent_st",0],["cuevent_st",0]],["cudaerror",4]],[[["cuevent_st",0]],["cudaerror",4]],[[["cuevent_st",0],["custream_st",0]],["cudaerror",4]],[[["cuevent_st",0],["custream_st",0],["u32",0]],["cudaerror",4]],[[["cuevent_st",0]],["cudaerror",4]],null,null,null,[[["c_void",0],["cuexternalmemory_st",0],["cudaexternalmemorybufferdesc",0]],["cudaerror",4]],[[["cudamipmappedarray",0],["cuexternalmemory_st",0],["cudaexternalmemorymipmappedarraydesc",0]],["cudaerror",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_void",0]],["cudaerror",4]],[[["cudaarray",0]],["cudaerror",4]],[[["c_void",0],["custream_st",0]],["cudaerror",4]],[[["c_void",0]],["cudaerror",4]],[[["cudamipmappedarray",0]],["cudaerror",4]],null,null,null,null,null,null,null,null,null,null,[[["cudafuncattributes",0],["c_void",0]],["cudaerror",4]],[[["c_void",0],["cudafuncattribute",4],["i32",0]],["cudaerror",4]],[[["c_void",0],["cudafunccache",4]],["cudaerror",4]],[[["c_void",0],["cudasharedmemconfig",4]],["cudaerror",4]],null,null,null,null,null,[[["cudachannelformatdesc",0],["cudaarray",0]],["cudaerror",4]],[[["i32",0]],["cudaerror",4]],[[["i32",0]],["cudaerror",4]],[[["u32",0]],["cudaerror",4]],[[["cudadeviceprop",0],["i32",0]],["cudaerror",4]],[[["i8",0],["c_void",0],["u64",0]],["cudaerror",4]],null,[[["cudaerror",4]],["i8",0]],[[["cudaerror",4]],["i8",0]],[[["c_void",0],["cuuuid_st",0]],["cudaerror",4]],[[["cufunc_st",0],["c_void",0]],["cudaerror",4]],[[],["cudaerror",4]],[[["cudaarray",0],["cudamipmappedarray",0],["u32",0]],["cudaerror",4]],[[["cudaresourcedesc",0],["u64",0]],["cudaerror",4]],[[["surfacereference",0],["c_void",0]],["cudaerror",4]],[[["c_void",0],["c_void",0]],["cudaerror",4]],[[["usize",0],["c_void",0]],["cudaerror",4]],[[["usize",0],["texturereference",0]],["cudaerror",4]],[[["cudaresourcedesc",0],["u64",0]],["cudaerror",4]],[[["cudaresourceviewdesc",0],["u64",0]],["cudaerror",4]],[[["cudatexturedesc",0],["u64",0]],["cudaerror",4]],[[["texturereference",0],["c_void",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0],["cugraph_st",0]],["cudaerror",4]],[[["cugraph_st",0],["cugraphnode_st",0],["cugraphnode_st",0],["usize",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0],["cuevent_st",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0],["cuevent_st",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0],["cudaexternalsemaphoresignalnodeparams",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0],["cudaexternalsemaphorewaitnodeparams",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0],["cudahostnodeparams",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0],["cudakernelnodeparams",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0],["cudamemallocnodeparams",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0],["c_void",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0],["cudamemcpy3dparms",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0],["c_void",0],["c_void",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0],["c_void",0],["c_void",0],["usize",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0],["c_void",0],["c_void",0],["usize",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0],["cudamemsetparams",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraph_st",0]],["cudaerror",4]],[[["cugraph_st",0],["cugraph_st",0]],["cudaerror",4]],[[["cugraph_st",0],["u32",0]],["cudaerror",4]],null,null,null,null,null,null,null,null,null,null,null,[[["cugraph_st",0],["i8",0],["u32",0]],["cudaerror",4]],[[["cugraph_st",0]],["cudaerror",4]],[[["cugraphnode_st",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cuevent_st",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cuevent_st",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cuevent_st",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cuevent_st",0]],["cudaerror",4]],[[["cugraphexec_st",0],["cugraphnode_st",0],["cugraph_st",0]],["cudaerror",4]],[[["cugraphexec_st",0]],["cudaerror",4]],[[["cugraphexec_st",0],["cugraphnode_st",0],["cuevent_st",0]],["cudaerror",4]],[[["cugraphexec_st",0],["cugraphnode_st",0],["cuevent_st",0]],["cudaerror",4]],[[["cugraphexec_st",0],["cugraphnode_st",0],["cudaexternalsemaphoresignalnodeparams",0]],["cudaerror",4]],[[["cugraphexec_st",0],["cugraphnode_st",0],["cudaexternalsemaphorewaitnodeparams",0]],["cudaerror",4]],[[["cugraphexec_st",0],["cugraphnode_st",0],["cudahostnodeparams",0]],["cudaerror",4]],[[["cugraphexec_st",0],["cugraphnode_st",0],["cudakernelnodeparams",0]],["cudaerror",4]],[[["cugraphexec_st",0],["cugraphnode_st",0],["cudamemcpy3dparms",0]],["cudaerror",4]],[[["cugraphexec_st",0],["cugraphnode_st",0],["c_void",0],["c_void",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["cugraphexec_st",0],["cugraphnode_st",0],["c_void",0],["c_void",0],["usize",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["cugraphexec_st",0],["cugraphnode_st",0],["c_void",0],["c_void",0],["usize",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["cugraphexec_st",0],["cugraphnode_st",0],["cudamemsetparams",0]],["cudaerror",4]],[[["cugraphexec_st",0],["cugraph_st",0],["cugraphnode_st",0],["cudagraphexecupdateresult",0]],["cudaerror",4]],null,null,null,null,null,null,null,null,null,null,[[["cugraphnode_st",0],["cudaexternalsemaphoresignalnodeparams",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cudaexternalsemaphoresignalnodeparams",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cudaexternalsemaphorewaitnodeparams",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cudaexternalsemaphorewaitnodeparams",0]],["cudaerror",4]],[[["cugraph_st",0],["cugraphnode_st",0],["cugraphnode_st",0],["usize",0]],["cudaerror",4]],[[["cugraph_st",0],["cugraphnode_st",0],["usize",0]],["cudaerror",4]],[[["cugraph_st",0],["cugraphnode_st",0],["usize",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cudahostnodeparams",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cudahostnodeparams",0]],["cudaerror",4]],[[["cugraphexec_st",0],["cugraph_st",0],["cugraphnode_st",0],["i8",0],["usize",0]],["cudaerror",4]],null,null,[[["cugraphexec_st",0],["cugraph_st",0],["u64",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraphnode_st",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cudakernelnodeattrid",4],["cudakernelnodeattrvalue",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cudakernelnodeparams",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cudakernelnodeattrid",4],["cudakernelnodeattrvalue",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cudakernelnodeparams",0]],["cudaerror",4]],[[["cugraphexec_st",0],["custream_st",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cudamemallocnodeparams",0]],["cudaerror",4]],null,null,null,null,null,[[["cugraphnode_st",0],["c_void",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cudamemcpy3dparms",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cudamemcpy3dparms",0]],["cudaerror",4]],[[["cugraphnode_st",0],["c_void",0],["c_void",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["cugraphnode_st",0],["c_void",0],["c_void",0],["usize",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["cugraphnode_st",0],["c_void",0],["c_void",0],["usize",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["cugraphnode_st",0],["cudamemsetparams",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cudamemsetparams",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraphnode_st",0],["cugraph_st",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraphnode_st",0],["usize",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cugraphnode_st",0],["usize",0]],["cudaerror",4]],[[["cugraphnode_st",0],["cudagraphnodetype",0]],["cudaerror",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cugraph_st",0],["cuuserobject_st",0],["u32",0]],["cudaerror",4]],[[["cugraph_st",0],["cugraphnode_st",0],["cugraphnode_st",0],["usize",0]],["cudaerror",4]],[[["cugraph_st",0],["cuuserobject_st",0],["u32",0],["u32",0]],["cudaerror",4]],[[["cugraphexec_st",0],["custream_st",0]],["cudaerror",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",0],["cudagraphicsresource",0],["custream_st",0]],["cudaerror",4]],null,null,null,null,null,null,null,[[["cudamipmappedarray",0],["cudagraphicsresource",0]],["cudaerror",4]],[[["c_void",0],["usize",0],["cudagraphicsresource",0]],["cudaerror",4]],[[["cudagraphicsresource",0],["u32",0]],["cudaerror",4]],null,[[["cudaarray",0],["cudagraphicsresource",0],["u32",0],["u32",0]],["cudaerror",4]],[[["i32",0],["cudagraphicsresource",0],["custream_st",0]],["cudaerror",4]],[[["cudagraphicsresource",0]],["cudaerror",4]],[[["c_void",0],["usize",0],["u32",0]],["cudaerror",4]],null,[[["c_void",0],["c_void",0],["u32",0]],["cudaerror",4]],[[["u32",0],["c_void",0]],["cudaerror",4]],null,[[["c_void",0],["usize",0],["u32",0]],["cudaerror",4]],[[["c_void",0]],["cudaerror",4]],[[["cuexternalmemory_st",0],["cudaexternalmemoryhandledesc",0]],["cudaerror",4]],[[["cuexternalsemaphore_st",0],["cudaexternalsemaphorehandledesc",0]],["cudaerror",4]],[[["c_void",0]],["cudaerror",4]],null,null,[[["cudaipceventhandle_st",0],["cuevent_st",0]],["cudaerror",4]],[[["cudaipcmemhandle_st",0],["c_void",0]],["cudaerror",4]],null,null,[[["cuevent_st",0],["cudaipceventhandle_st",3]],["cudaerror",4]],[[["c_void",0],["cudaipcmemhandle_st",3],["u32",0]],["cudaerror",4]],null,null,null,null,null,null,null,[[["c_void",0],["dim3",3],["dim3",3],["c_void",0],["usize",0],["custream_st",0]],["cudaerror",4]],[[["cudalaunchparams",0],["u32",0],["u32",0]],["cudaerror",4]],[[["custream_st",0],["option",4],["c_void",0]],["cudaerror",4]],[[["c_void",0],["dim3",3],["dim3",3],["c_void",0],["usize",0],["custream_st",0]],["cudaerror",4]],null,null,null,null,null,null,null,null,null,[[["c_void",0],["usize",0]],["cudaerror",4]],[[["cudapitchedptr",0],["cudaextent",3]],["cudaerror",4]],[[["cudaarray",0],["cudachannelformatdesc",0],["cudaextent",3],["u32",0]],["cudaerror",4]],[[["cudaarray",0],["cudachannelformatdesc",0],["usize",0],["usize",0],["u32",0]],["cudaerror",4]],[[["c_void",0],["usize",0],["custream_st",0]],["cudaerror",4]],[[["c_void",0],["usize",0],["cumempoolhandle_st",0],["custream_st",0]],["cudaerror",4]],[[["c_void",0],["usize",0]],["cudaerror",4]],[[["c_void",0],["usize",0],["u32",0]],["cudaerror",4]],[[["cudamipmappedarray",0],["cudachannelformatdesc",0],["cudaextent",3],["u32",0],["u32",0]],["cudaerror",4]],[[["c_void",0],["usize",0],["usize",0],["usize",0]],["cudaerror",4]],null,null,null,null,null,[[["c_void",0],["usize",0],["cudamemoryadvise",4],["i32",0]],["cudaerror",4]],null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",0],["usize",0]],["cudaerror",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cumempoolhandle_st",0],["cudamempoolprops",0]],["cudaerror",4]],[[["cumempoolhandle_st",0]],["cudaerror",4]],[[["cudamempoolptrexportdata",0],["c_void",0]],["cudaerror",4]],[[["c_void",0],["cumempoolhandle_st",0],["cudamemallocationhandletype",4],["u32",0]],["cudaerror",4]],[[["cudamemaccessflags",0],["cumempoolhandle_st",0],["cudamemlocation",0]],["cudaerror",4]],[[["cumempoolhandle_st",0],["cudamempoolattr",4],["c_void",0]],["cudaerror",4]],[[["cumempoolhandle_st",0],["c_void",0],["cudamemallocationhandletype",4],["u32",0]],["cudaerror",4]],[[["c_void",0],["cumempoolhandle_st",0],["cudamempoolptrexportdata",0]],["cudaerror",4]],null,null,null,null,null,[[["cumempoolhandle_st",0],["cudamemaccessdesc",0],["usize",0]],["cudaerror",4]],[[["cumempoolhandle_st",0],["cudamempoolattr",4],["c_void",0]],["cudaerror",4]],[[["cumempoolhandle_st",0],["usize",0]],["cudaerror",4]],null,[[["c_void",0],["usize",0],["i32",0],["custream_st",0]],["cudaerror",4]],null,null,null,null,null,[[["c_void",0],["usize",0],["cudamemrangeattribute",4],["c_void",0],["usize",0]],["cudaerror",4]],[[["c_void",0],["usize",0],["cudamemrangeattribute",0],["usize",0],["c_void",0],["usize",0]],["cudaerror",4]],[[["c_void",0],["c_void",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["c_void",0],["usize",0],["c_void",0],["usize",0],["usize",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["cudaarray",0],["usize",0],["usize",0],["cudaarray",0],["usize",0],["usize",0],["usize",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["c_void",0],["usize",0],["c_void",0],["usize",0],["usize",0],["usize",0],["cudamemcpykind",4],["custream_st",0]],["cudaerror",4]],[[["c_void",0],["usize",0],["cudaarray",0],["usize",0],["usize",0],["usize",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["c_void",0],["usize",0],["cudaarray",0],["usize",0],["usize",0],["usize",0],["usize",0],["cudamemcpykind",4],["custream_st",0]],["cudaerror",4]],[[["cudaarray",0],["usize",0],["usize",0],["c_void",0],["usize",0],["usize",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["cudaarray",0],["usize",0],["usize",0],["c_void",0],["usize",0],["usize",0],["usize",0],["cudamemcpykind",4],["custream_st",0]],["cudaerror",4]],[[["cudamemcpy3dparms",0]],["cudaerror",4]],[[["cudamemcpy3dparms",0],["custream_st",0]],["cudaerror",4]],null,[[["cudamemcpy3dpeerparms",0]],["cudaerror",4]],[[["cudamemcpy3dpeerparms",0],["custream_st",0]],["cudaerror",4]],null,[[["cudaarray",0],["usize",0],["usize",0],["cudaarray",0],["usize",0],["usize",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["c_void",0],["c_void",0],["usize",0],["cudamemcpykind",4],["custream_st",0]],["cudaerror",4]],null,null,null,[[["c_void",0],["cudaarray",0],["usize",0],["usize",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["c_void",0],["cudaarray",0],["usize",0],["usize",0],["usize",0],["cudamemcpykind",4],["custream_st",0]],["cudaerror",4]],[[["c_void",0],["c_void",0],["usize",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["c_void",0],["c_void",0],["usize",0],["usize",0],["cudamemcpykind",4],["custream_st",0]],["cudaerror",4]],null,null,null,[[["c_void",0],["i32",0],["c_void",0],["i32",0],["usize",0]],["cudaerror",4]],[[["c_void",0],["i32",0],["c_void",0],["i32",0],["usize",0],["custream_st",0]],["cudaerror",4]],[[["cudaarray",0],["usize",0],["usize",0],["c_void",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["cudaarray",0],["usize",0],["usize",0],["c_void",0],["usize",0],["cudamemcpykind",4],["custream_st",0]],["cudaerror",4]],[[["c_void",0],["c_void",0],["usize",0],["usize",0],["cudamemcpykind",4]],["cudaerror",4]],[[["c_void",0],["c_void",0],["usize",0],["usize",0],["cudamemcpykind",4],["custream_st",0]],["cudaerror",4]],null,null,null,null,null,null,[[["c_void",0],["i32",0],["usize",0]],["cudaerror",4]],[[["c_void",0],["usize",0],["i32",0],["usize",0],["usize",0]],["cudaerror",4]],[[["c_void",0],["usize",0],["i32",0],["usize",0],["usize",0],["custream_st",0]],["cudaerror",4]],[[["cudapitchedptr",3],["i32",0],["cudaextent",3]],["cudaerror",4]],[[["cudapitchedptr",3],["i32",0],["cudaextent",3],["custream_st",0]],["cudaerror",4]],[[["c_void",0],["i32",0],["usize",0],["custream_st",0]],["cudaerror",4]],null,null,[[["cudaarraysparseproperties",0],["cudamipmappedarray",0]],["cudaerror",4]],null,null,[[["usize",0],["c_void",0],["i32",0],["i32",0]],["cudaerror",4]],[[["i32",0],["c_void",0],["i32",0],["usize",0]],["cudaerror",4]],[[["i32",0],["c_void",0],["i32",0],["usize",0],["u32",0]],["cudaerror",4]],null,null,[[],["cudaerror",4]],null,null,[[["cudapointerattributes",0],["c_void",0]],["cudaerror",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",0]],["cudaerror",4]],[[["i32",0]],["cudaerror",4]],[[["u32",0]],["cudaerror",4]],[[["f64",0]],["cudaerror",4]],[[["f64",0]],["cudaerror",4]],[[["i32",0],["i32",0]],["cudaerror",4]],null,null,null,null,null,null,null,null,[[["cuexternalsemaphore_st",0],["cudaexternalsemaphoresignalparams",0],["u32",0],["custream_st",0]],["cudaerror",4]],[[["custream_st",0],["option",4],["c_void",0],["u32",0]],["cudaerror",4]],null,[[["custream_st",0],["c_void",0],["usize",0],["u32",0]],["cudaerror",4]],null,null,null,null,[[["custream_st",0],["cudastreamcapturemode",4]],["cudaerror",4]],null,null,null,null,null,null,null,null,null,[[["custream_st",0],["custream_st",0]],["cudaerror",4]],[[["custream_st",0]],["cudaerror",4]],[[["custream_st",0],["u32",0]],["cudaerror",4]],[[["custream_st",0],["u32",0],["i32",0]],["cudaerror",4]],[[["custream_st",0]],["cudaerror",4]],[[["custream_st",0],["cugraph_st",0]],["cudaerror",4]],[[["custream_st",0],["cudastreamattrid",4],["cudastreamattrvalue",0]],["cudaerror",4]],[[["custream_st",0],["cudastreamcapturestatus",0],["u64",0]],["cudaerror",4]],[[["custream_st",0],["cudastreamcapturestatus",0],["u64",0],["cugraph_st",0],["cugraphnode_st",0],["usize",0]],["cudaerror",4]],[[["custream_st",0],["u32",0]],["cudaerror",4]],[[["custream_st",0],["i32",0]],["cudaerror",4]],[[["custream_st",0],["cudastreamcapturestatus",0]],["cudaerror",4]],[[["custream_st",0]],["cudaerror",4]],[[["custream_st",0],["cudastreamattrid",4],["cudastreamattrvalue",0]],["cudaerror",4]],null,[[["custream_st",0]],["cudaerror",4]],[[["custream_st",0],["cugraphnode_st",0],["usize",0],["u32",0]],["cudaerror",4]],null,[[["custream_st",0],["cuevent_st",0],["u32",0]],["cudaerror",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cudastreamcapturemode",0]],["cudaerror",4]],[[],["cudaerror",4]],[[["cudafunccache",0]],["cudaerror",4]],[[["usize",0],["cudalimit",4]],["cudaerror",4]],[[["cudafunccache",4]],["cudaerror",4]],[[["cudalimit",4],["usize",0]],["cudaerror",4]],[[],["cudaerror",4]],null,[[["texturereference",0]],["cudaerror",4]],[[["cuuserobject_st",0],["c_void",0],["option",4],["u32",0],["u32",0]],["cudaerror",4]],null,null,[[["cuuserobject_st",0],["u32",0]],["cudaerror",4]],[[["cuuserobject_st",0],["u32",0]],["cudaerror",4]],null,null,[[["cuexternalsemaphore_st",0],["cudaexternalsemaphorewaitparams",0],["u32",0],["custream_st",0]],["cudaerror",4]],[[["usize",0]],["result",4,[["c_void",0],["error",4]]]],[[["c_void",0]],["result",4,[["error",4]]]],[[["cudnncontext",0],["cudnnactivationstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],null,[[["cudnncontext",0],["cudnnactivationstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],null,null,[[["cudnncontext",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],[[],["cudnnstatus_t",4]],[[],["cudnnstatus_t",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cudnnbackenddescriptortype_t",4],["c_void",0]],["cudnnstatus_t",4]],null,null,[[["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["c_void",0],["c_void",0]],["cudnnstatus_t",4]],[[["c_void",0]],["cudnnstatus_t",4]],[[["c_void",0],["cudnnbackendattributename_t",4],["cudnnbackendattributetype_t",4],["i64",0],["i64",0],["c_void",0]],["cudnnstatus_t",4]],null,[[["c_void",0]],["cudnnstatus_t",4]],null,null,null,[[["c_void",0],["cudnnbackendattributename_t",4],["cudnnbackendattributetype_t",4],["i64",0],["c_void",0]],["cudnnstatus_t",4]],null,null,[[["cudnncontext",0],["cudnnbatchnormmode_t",4],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["c_void",0],["f64",0],["c_void",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnbatchnormmode_t",4],["cudnnbatchnormops_t",4],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["f64",0],["c_void",0],["c_void",0],["cudnnactivationstruct",0],["c_void",0],["usize",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnbatchnormmode_t",4],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["f64",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnbatchnormmode_t",4],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["f64",0],["c_void",0],["c_void",0],["f64",0],["c_void",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnbatchnormmode_t",4],["cudnnbatchnormops_t",4],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["f64",0],["c_void",0],["c_void",0],["f64",0],["c_void",0],["c_void",0],["cudnnactivationstruct",0],["c_void",0],["usize",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],null,[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnntensorstruct",0],["c_void",0],["i32",0],["i32",0],["i32",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnctclossalgo_t",4],["cudnnctclossstruct",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],null,null,null,[[["cudnncontext",0],["cudnnctclossalgo_t",4],["cudnnctclossstruct",0],["cudnntensorstruct",0],["c_void",0],["i32",0],["i32",0],["i32",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["usize",0],["c_void",0]],["cudnnstatus_t",4]],null,[[],["cudnnstatus_t",4]],[[],["cudnnstatus_t",4]],null,[[["cudnncontext",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnconvolutionstruct",0],["cudnnconvolutionbwddataalgo_t",4],["c_void",0],["usize",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnconvolutionstruct",0],["cudnnconvolutionbwdfilteralgo_t",4],["c_void",0],["usize",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0],["cudnnconvolutionstruct",0],["cudnnconvolutionfwdalgo_t",4],["c_void",0],["usize",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnactivationstruct",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],null,null,null,null,null,null,null,[[["cudnncontext",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0],["cudnnconvolutionstruct",0],["cudnnconvolutionfwdalgo_t",4],["c_void",0],["usize",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],null,null,null,null,null,[[["cudnnalgorithmstruct",0],["cudnnalgorithmstruct",0]],["cudnnstatus_t",4]],[[["cudnncontext",0]],["cudnnstatus_t",4]],[[["cudnnactivationstruct",0]],["cudnnstatus_t",4]],[[["cudnnalgorithmstruct",0]],["cudnnstatus_t",4]],[[["cudnnalgorithmperformancestruct",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnattnstruct",0]],["cudnnstatus_t",4]],[[["cudnnctclossstruct",0]],["cudnnstatus_t",4]],[[["cudnnconvolutionstruct",0]],["cudnnstatus_t",4]],[[["cudnndropoutstruct",0]],["cudnnstatus_t",4]],[[["cudnnfilterstruct",0]],["cudnnstatus_t",4]],[[["cudnnfusedopsconstparamstruct",0],["cudnnfusedops_t",4]],["cudnnstatus_t",4]],[[["cudnnfusedopsplanstruct",0],["cudnnfusedops_t",4]],["cudnnstatus_t",4]],[[["cudnnfusedopsvariantparamstruct",0],["cudnnfusedops_t",4]],["cudnnstatus_t",4]],[[["cudnnlrnstruct",0]],["cudnnstatus_t",4]],[[["cudnnoptensorstruct",0]],["cudnnstatus_t",4]],[[["cudnnrnnstruct",0],["i32",0],["cudnndatatype_t",4],["cudnnpersistentrnnplan",0]],["cudnnstatus_t",4]],[[["cudnnpoolingstruct",0]],["cudnnstatus_t",4]],[[["cudnnrnndatastruct",0]],["cudnnstatus_t",4]],[[["cudnnrnnstruct",0]],["cudnnstatus_t",4]],[[["cudnnreducetensorstruct",0]],["cudnnstatus_t",4]],[[["cudnnseqdatastruct",0]],["cudnnstatus_t",4]],[[["cudnnspatialtransformerstruct",0]],["cudnnstatus_t",4]],[[["cudnntensorstruct",0]],["cudnnstatus_t",4]],[[["cudnntensortransformstruct",0]],["cudnnstatus_t",4]],null,null,null,[[["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnnbatchnormmode_t",4]],["cudnnstatus_t",4]],[[["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnnnormmode_t",4],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0]],["cudnnstatus_t",4]],[[["cudnnactivationstruct",0]],["cudnnstatus_t",4]],[[["cudnnalgorithmstruct",0]],["cudnnstatus_t",4]],[[["cudnnalgorithmperformancestruct",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnattnstruct",0]],["cudnnstatus_t",4]],[[["cudnnctclossstruct",0]],["cudnnstatus_t",4]],[[["cudnnconvolutionstruct",0]],["cudnnstatus_t",4]],[[["cudnndropoutstruct",0]],["cudnnstatus_t",4]],[[["cudnnfilterstruct",0]],["cudnnstatus_t",4]],[[["cudnnfusedopsconstparamstruct",0]],["cudnnstatus_t",4]],[[["cudnnfusedopsplanstruct",0]],["cudnnstatus_t",4]],[[["cudnnfusedopsvariantparamstruct",0]],["cudnnstatus_t",4]],[[["cudnnlrnstruct",0]],["cudnnstatus_t",4]],[[["cudnnoptensorstruct",0]],["cudnnstatus_t",4]],[[["cudnnpersistentrnnplan",0]],["cudnnstatus_t",4]],[[["cudnnpoolingstruct",0]],["cudnnstatus_t",4]],[[["cudnnrnndatastruct",0]],["cudnnstatus_t",4]],[[["cudnnrnnstruct",0]],["cudnnstatus_t",4]],[[["cudnnreducetensorstruct",0]],["cudnnstatus_t",4]],[[["cudnnseqdatastruct",0]],["cudnnstatus_t",4]],[[["cudnnspatialtransformerstruct",0]],["cudnnstatus_t",4]],[[["cudnntensorstruct",0]],["cudnnstatus_t",4]],[[["cudnntensortransformstruct",0]],["cudnnstatus_t",4]],null,null,null,[[["cudnncontext",0],["cudnnlrnstruct",0],["cudnndivnormmode_t",4],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnlrnstruct",0],["cudnndivnormmode_t",4],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnndropoutstruct",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],null,[[["cudnncontext",0],["cudnndropoutstruct",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnntensorstruct",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["usize",0]],["cudnnstatus_t",4]],null,null,null,null,[[["cudnncontext",0],["cudnnfilterstruct",0],["cudnntensorstruct",0],["cudnnconvolutionstruct",0],["cudnntensorstruct",0],["i32",0],["i32",0],["cudnnconvolutionbwddataalgoperfstruct",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnfilterstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnconvolutionstruct",0],["cudnntensorstruct",0],["c_void",0],["i32",0],["i32",0],["cudnnconvolutionbwddataalgoperfstruct",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnnconvolutionstruct",0],["cudnnfilterstruct",0],["i32",0],["i32",0],["cudnnconvolutionbwdfilteralgoperfstruct",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnconvolutionstruct",0],["cudnnfilterstruct",0],["c_void",0],["i32",0],["i32",0],["cudnnconvolutionbwdfilteralgoperfstruct",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnntensorstruct",0],["cudnnfilterstruct",0],["cudnnconvolutionstruct",0],["cudnntensorstruct",0],["i32",0],["i32",0],["cudnnconvolutionfwdalgoperfstruct",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnntensorstruct",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0],["cudnnconvolutionstruct",0],["cudnntensorstruct",0],["c_void",0],["i32",0],["i32",0],["cudnnconvolutionfwdalgoperfstruct",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["f32",0],["i32",0],["i32",0],["cudnnalgorithmperformancestruct",0],["c_void",0],["usize",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["f32",0],["i32",0],["i32",0],["cudnnalgorithmperformancestruct",0],["c_void",0],["usize",0],["cudnnfilterstruct",0],["c_void",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["f32",0],["i32",0],["i32",0],["cudnnalgorithmperformancestruct",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["f32",0],["i32",0],["i32",0],["cudnnalgorithmperformancestruct",0],["c_void",0],["usize",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],null,null,null,null,null,[[["cudnncontext",0],["cudnnfusedopsplanstruct",0],["cudnnfusedopsvariantparamstruct",0]],["cudnnstatus_t",4]],null,null,null,null,null,null,null,null,[[["cudnnactivationstruct",0],["cudnnactivationmode_t",0],["cudnnnanpropagation_t",0],["f64",0]],["cudnnstatus_t",4]],[[["cudnnactivationstruct",0],["f64",0]],["cudnnstatus_t",4]],[[["cudnnalgorithmstruct",0],["cudnnalgorithmunionstruct",0]],["cudnnstatus_t",4]],[[["cudnnalgorithmperformancestruct",0],["cudnnalgorithmstruct",0],["cudnnstatus_t",0],["f32",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnalgorithmstruct",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnnattnstruct",0],["u32",0],["i32",0],["f64",0],["cudnndatatype_t",0],["cudnndatatype_t",0],["cudnnmathtype_t",0],["cudnndropoutstruct",0],["cudnndropoutstruct",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnbatchnormmode_t",4],["cudnnbatchnormops_t",4],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnnactivationstruct",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnbatchnormmode_t",4],["cudnnbatchnormops_t",4],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnnactivationstruct",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnbatchnormmode_t",4],["cudnnbatchnormops_t",4],["cudnnactivationstruct",0],["cudnntensorstruct",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnnctclossstruct",0],["cudnndatatype_t",0]],["cudnnstatus_t",4]],[[["cudnnctclossstruct",0],["cudnndatatype_t",0],["cudnnlossnormalizationmode_t",0],["cudnnnanpropagation_t",0]],["cudnnstatus_t",4]],[[["cudnnctclossstruct",0],["cudnndatatype_t",0],["cudnnlossnormalizationmode_t",0],["cudnnnanpropagation_t",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["i32",0],["i32",0],["i32",0],["cudnnctclossalgo_t",4],["cudnnctclossstruct",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnctclossalgo_t",4],["cudnnctclossstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["usize",0]],["cudnnstatus_t",4]],[[["u32",0],["c_void",0],["option",0]],["cudnnstatus_t",4]],[[["cudnnconvolutionstruct",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["cudnnconvolutionmode_t",0],["cudnndatatype_t",0]],["cudnnstatus_t",4]],[[["cudnnconvolutionstruct",0],["cudnntensorstruct",0],["cudnnfilterstruct",0],["i32",0],["i32",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnfilterstruct",0],["cudnntensorstruct",0],["cudnnconvolutionstruct",0],["cudnntensorstruct",0],["i32",0],["i32",0],["cudnnconvolutionbwddataalgoperfstruct",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnfilterstruct",0],["cudnntensorstruct",0],["cudnnconvolutionstruct",0],["cudnntensorstruct",0],["cudnnconvolutionbwddataalgo_t",4],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnnconvolutionstruct",0],["cudnnfilterstruct",0],["i32",0],["i32",0],["cudnnconvolutionbwdfilteralgoperfstruct",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnnconvolutionstruct",0],["cudnnfilterstruct",0],["cudnnconvolutionbwdfilteralgo_t",4],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnntensorstruct",0],["cudnnfilterstruct",0],["cudnnconvolutionstruct",0],["cudnntensorstruct",0],["i32",0],["i32",0],["cudnnconvolutionfwdalgoperfstruct",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnntensorstruct",0],["cudnnfilterstruct",0],["cudnnconvolutionstruct",0],["cudnntensorstruct",0],["cudnnconvolutionfwdalgo_t",4],["usize",0]],["cudnnstatus_t",4]],[[["cudnnconvolutionstruct",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnconvolutionstruct",0],["cudnnmathtype_t",0]],["cudnnstatus_t",4]],[[["cudnnconvolutionstruct",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["cudnnconvolutionmode_t",0],["cudnndatatype_t",0]],["cudnnstatus_t",4]],[[["cudnnconvolutionstruct",0],["cudnntensorstruct",0],["cudnnfilterstruct",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnconvolutionstruct",0],["cudnnreordertype_t",0]],["cudnnstatus_t",4]],[[],["usize",0]],[[["cudnndropoutstruct",0],["cudnncontext",0],["f32",0],["c_void",0],["u64",0]],["cudnnstatus_t",4]],[[["cudnnstatus_t",4]],["i8",0]],[[["cudnnfilterstruct",0],["cudnndatatype_t",0],["cudnntensorformat_t",0],["i32",0],["i32",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnfilterstruct",0],["i32",0],["cudnndatatype_t",0],["cudnntensorformat_t",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnfilterstruct",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnfilterstruct",0],["cudnntensorstruct",0],["cudnnconvolutionstruct",0],["cudnntensorstruct",0],["cudnntensorformat_t",4],["cudnnfilterstruct",0],["cudnntensorstruct",0],["cudnnconvolutionstruct",0],["cudnntensorstruct",0],["cudnntensortransformstruct",0],["cudnntensortransformstruct",0],["cudnntensortransformstruct",0],["cudnntensortransformstruct",0]],["cudnnstatus_t",4]],[[["cudnnfusedopsconstparamstruct",0],["cudnnfusedopsconstparamlabel_t",4],["c_void",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnfusedopsvariantparamstruct",0],["cudnnfusedopsvariantparamlabel_t",4],["c_void",0]],["cudnnstatus_t",4]],[[["cudnnlrnstruct",0],["u32",0],["f64",0],["f64",0],["f64",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnattnstruct",0],["usize",0],["usize",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnattnstruct",0],["cudnnmultiheadattnweightkind_t",4],["usize",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnnormmode_t",4],["cudnnnormops_t",4],["cudnnnormalgo_t",4],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnnactivationstruct",0],["cudnntensorstruct",0],["usize",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnnormmode_t",4],["cudnnnormops_t",4],["cudnnnormalgo_t",4],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["cudnnactivationstruct",0],["cudnntensorstruct",0],["usize",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnnormmode_t",4],["cudnnnormops_t",4],["cudnnnormalgo_t",4],["cudnnactivationstruct",0],["cudnntensorstruct",0],["usize",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnoptensorstruct",0],["cudnnoptensorop_t",0],["cudnndatatype_t",0],["cudnnnanpropagation_t",0]],["cudnnstatus_t",4]],[[["cudnnpoolingstruct",0],["cudnnpoolingmode_t",0],["cudnnnanpropagation_t",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnpoolingstruct",0],["cudnntensorstruct",0],["i32",0],["i32",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnpoolingstruct",0],["i32",0],["cudnnpoolingmode_t",0],["cudnnnanpropagation_t",0],["i32",0],["i32",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnpoolingstruct",0],["cudnntensorstruct",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["u32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnrnnstruct",0],["cudnnrnnbiasmode_t",0]],["cudnnstatus_t",4]],[[["cudnnrnndatastruct",0],["cudnndatatype_t",0],["cudnnrnndatalayout_t",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["i32",0],["cudnndropoutstruct",0],["cudnnrnninputmode_t",0],["cudnndirectionmode_t",0],["cudnnrnnmode_t",0],["cudnnrnnalgo_t",0],["cudnndatatype_t",0]],["cudnnstatus_t",4]],[[["cudnnrnnstruct",0],["cudnnrnnalgo_t",0],["cudnnrnnmode_t",0],["cudnnrnnbiasmode_t",0],["cudnndirectionmode_t",0],["cudnnrnninputmode_t",0],["cudnndatatype_t",0],["cudnndatatype_t",0],["cudnnmathtype_t",0],["i32",0],["i32",0],["i32",0],["i32",0],["cudnndropoutstruct",0],["u32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["cudnntensorstruct",0],["cudnnfilterstruct",0],["c_void",0],["i32",0],["cudnnfilterstruct",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["cudnntensorstruct",0],["cudnnfilterstruct",0],["c_void",0],["i32",0],["cudnnfilterstruct",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnnrnnstruct",0],["cudnnmathtype_t",0]],["cudnnstatus_t",4]],[[["cudnnrnnstruct",0],["u32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["cudnntensorstruct",0],["usize",0],["cudnndatatype_t",4]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["cudnnforwardmode_t",4],["cudnnrnndatastruct",0],["usize",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["cudnntensorstruct",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["usize",0],["c_void",0],["i32",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["cudnntensorstruct",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnnreducetensorstruct",0],["cudnnreducetensorop_t",0],["cudnndatatype_t",0],["cudnnnanpropagation_t",0],["cudnnreducetensorindices_t",0],["cudnnindicestype_t",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnreducetensorstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnreducetensorstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnnseqdatastruct",0],["cudnndatatype_t",0],["i32",0],["i32",0],["i32",0],["cudnnseqdataaxis_t",0],["usize",0],["usize",0],["i32",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["custream_st",0]],["cudnnstatus_t",4]],[[["cudnntensorstruct",0],["cudnndatatype_t",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnntensorstruct",0],["i32",0],["cudnndatatype_t",0],["i32",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnntensorstruct",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnntensortransformstruct",0],["u32",0],["cudnntensorformat_t",0],["i32",0],["i32",0],["u32",0],["cudnnfoldingdirection_t",0]],["cudnnstatus_t",4]],[[],["usize",0]],null,[[["cudnncontext",0],["cudnntensorstruct",0],["c_void",0],["cudnnfilterstruct",0],["cudnnconvolutionstruct",0],["c_void",0]],["cudnnstatus_t",4]],null,[[["cudnntensortransformstruct",0],["cudnntensorstruct",0],["cudnntensorstruct",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnlrnstruct",0],["cudnnlrnmode_t",4],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnlrnstruct",0],["cudnnlrnmode_t",4],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],null,null,null,null,[[["cudnncontext",0],["cudnnfusedopsplanstruct",0],["cudnnfusedopsconstparamstruct",0],["usize",0]],["cudnnstatus_t",4]],null,[[["cudnncontext",0],["cudnnattnstruct",0],["i32",0],["i32",0],["i32",0],["i32",0],["cudnnseqdatastruct",0],["c_void",0],["cudnnseqdatastruct",0],["c_void",0],["c_void",0],["cudnnseqdatastruct",0],["c_void",0],["c_void",0],["cudnnseqdatastruct",0],["c_void",0],["c_void",0],["usize",0],["c_void",0],["usize",0],["c_void",0],["usize",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnattnstruct",0],["cudnnwgradmode_t",4],["cudnnseqdatastruct",0],["c_void",0],["cudnnseqdatastruct",0],["c_void",0],["cudnnseqdatastruct",0],["c_void",0],["cudnnseqdatastruct",0],["c_void",0],["usize",0],["c_void",0],["c_void",0],["usize",0],["c_void",0],["usize",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnattnstruct",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["cudnnseqdatastruct",0],["c_void",0],["c_void",0],["cudnnseqdatastruct",0],["c_void",0],["cudnnseqdatastruct",0],["c_void",0],["cudnnseqdatastruct",0],["c_void",0],["usize",0],["c_void",0],["usize",0],["c_void",0],["usize",0],["c_void",0]],["cudnnstatus_t",4]],null,null,null,null,null,[[["cudnncontext",0],["cudnnnormmode_t",4],["cudnnnormops_t",4],["cudnnnormalgo_t",4],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["f64",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnnactivationstruct",0],["c_void",0],["usize",0],["c_void",0],["usize",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnnormmode_t",4],["cudnnnormops_t",4],["cudnnnormalgo_t",4],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnactivationstruct",0],["cudnntensorstruct",0],["c_void",0],["f64",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnnormmode_t",4],["cudnnnormops_t",4],["cudnnnormalgo_t",4],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["f64",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["f64",0],["c_void",0],["c_void",0],["cudnnactivationstruct",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["usize",0],["c_void",0],["usize",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnoptensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],null,null,null,[[],["cudnnstatus_t",4]],[[],["cudnnstatus_t",4]],null,null,null,[[["cudnncontext",0],["cudnnpoolingstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],null,[[["cudnncontext",0],["cudnnpoolingstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],null,null,[[["cudnncontext",0],["cudnnstatus_t",0],["cudnnerrquerymode_t",4],["cudnnruntimetag_t",0]],["cudnnstatus_t",4]],null,[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["usize",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["cudnnrnndatastruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["c_void",0],["usize",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["cudnnrnndatastruct",0],["c_void",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["c_void",0],["usize",0],["c_void",0],["usize",0],["c_void",0],["usize",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["usize",0],["cudnnfilterstruct",0],["c_void",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["cudnnrnndatastruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["c_void",0],["usize",0],["cudnnfilterstruct",0],["c_void",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["cudnnwgradmode_t",4],["i32",0],["cudnnrnndatastruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["usize",0],["c_void",0],["usize",0],["c_void",0],["usize",0],["c_void",0]],["cudnnstatus_t",4]],null,null,null,null,null,null,[[["cudnncontext",0],["cudnnrnnstruct",0],["cudnnforwardmode_t",4],["i32",0],["cudnnrnndatastruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["usize",0],["c_void",0],["usize",0],["c_void",0],["usize",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["cudnnrnndatastruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["usize",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["cudnnrnndatastruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["cudnnrnndatastruct",0],["c_void",0],["c_void",0],["usize",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["cudnnrnnclipmode_t",0],["cudnnnanpropagation_t",0],["f64",0],["f64",0]],["cudnnstatus_t",4]],[[["cudnnrnnstruct",0],["cudnnrnnclipmode_t",0],["cudnnnanpropagation_t",0],["f64",0],["f64",0]],["cudnnstatus_t",4]],null,null,null,[[["cudnncontext",0],["cudnnrnnstruct",0],["cudnnrnnclipmode_t",4],["cudnnnanpropagation_t",4],["f64",0],["f64",0]],["cudnnstatus_t",4]],[[["cudnnrnnstruct",0],["cudnnrnnclipmode_t",4],["cudnnnanpropagation_t",4],["f64",0],["f64",0]],["cudnnstatus_t",4]],null,[[["cudnncontext",0],["cudnnreducetensorstruct",0],["c_void",0],["usize",0],["c_void",0],["usize",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],null,null,null,null,[[["cudnncontext",0],["cudnnfilterstruct",0],["cudnnreordertype_t",4],["c_void",0],["c_void",0],["i32",0],["c_void",0],["c_void",0]],["cudnnstatus_t",4]],null,[[["cudnncontext",0],["c_void",0],["usize",0],["cudnnalgorithmstruct",0]],["cudnnstatus_t",4]],[[["cudnndropoutstruct",0],["cudnncontext",0],["f32",0],["c_void",0],["usize",0],["u64",0]],["cudnnstatus_t",4]],null,null,[[["cudnncontext",0],["cudnnalgorithmstruct",0],["c_void",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnntensorstruct",0],["c_void",0],["c_void",0]],["cudnnstatus_t",4]],null,null,null,[[["cudnnactivationstruct",0],["cudnnactivationmode_t",4],["cudnnnanpropagation_t",4],["f64",0]],["cudnnstatus_t",4]],[[["cudnnactivationstruct",0],["f64",0]],["cudnnstatus_t",4]],[[["cudnnalgorithmstruct",0],["cudnnalgorithmunionstruct",3]],["cudnnstatus_t",4]],[[["cudnnalgorithmperformancestruct",0],["cudnnalgorithmstruct",0],["cudnnstatus_t",4],["f32",0],["usize",0]],["cudnnstatus_t",4]],[[["cudnnattnstruct",0],["u32",0],["i32",0],["f64",0],["cudnndatatype_t",4],["cudnndatatype_t",4],["cudnnmathtype_t",4],["cudnndropoutstruct",0],["cudnndropoutstruct",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnctclossstruct",0],["cudnndatatype_t",4]],["cudnnstatus_t",4]],[[["cudnnctclossstruct",0],["cudnndatatype_t",4],["cudnnlossnormalizationmode_t",4],["cudnnnanpropagation_t",4]],["cudnnstatus_t",4]],[[["cudnnctclossstruct",0],["cudnndatatype_t",4],["cudnnlossnormalizationmode_t",4],["cudnnnanpropagation_t",4],["i32",0]],["cudnnstatus_t",4]],[[["u32",0],["c_void",0],["option",4]],["cudnnstatus_t",4]],[[["cudnnconvolutionstruct",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["cudnnconvolutionmode_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]],[[["cudnnconvolutionstruct",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnconvolutionstruct",0],["cudnnmathtype_t",4]],["cudnnstatus_t",4]],[[["cudnnconvolutionstruct",0],["i32",0],["i32",0],["i32",0],["i32",0],["cudnnconvolutionmode_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]],[[["cudnnconvolutionstruct",0],["cudnnreordertype_t",4]],["cudnnstatus_t",4]],[[["cudnndropoutstruct",0],["cudnncontext",0],["f32",0],["c_void",0],["usize",0],["u64",0]],["cudnnstatus_t",4]],[[["cudnnfilterstruct",0],["cudnndatatype_t",4],["cudnntensorformat_t",4],["i32",0],["i32",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnfilterstruct",0],["cudnndatatype_t",4],["cudnntensorformat_t",4],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnfusedopsconstparamstruct",0],["cudnnfusedopsconstparamlabel_t",4],["c_void",0]],["cudnnstatus_t",4]],[[["cudnnfusedopsvariantparamstruct",0],["cudnnfusedopsvariantparamlabel_t",4],["c_void",0]],["cudnnstatus_t",4]],[[["cudnnlrnstruct",0],["u32",0],["f64",0],["f64",0],["f64",0]],["cudnnstatus_t",4]],[[["cudnnoptensorstruct",0],["cudnnoptensorop_t",4],["cudnndatatype_t",4],["cudnnnanpropagation_t",4]],["cudnnstatus_t",4]],[[["cudnnrnnstruct",0],["cudnnpersistentrnnplan",0]],["cudnnstatus_t",4]],[[["cudnnpoolingstruct",0],["cudnnpoolingmode_t",4],["cudnnnanpropagation_t",4],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnpoolingstruct",0],["cudnnpoolingmode_t",4],["cudnnnanpropagation_t",4],["i32",0],["i32",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["cudnnalgorithmstruct",0]],["cudnnstatus_t",4]],[[["cudnnrnnstruct",0],["cudnnrnnbiasmode_t",4]],["cudnnstatus_t",4]],[[["cudnnrnndatastruct",0],["cudnndatatype_t",4],["cudnnrnndatalayout_t",4],["i32",0],["i32",0],["i32",0],["i32",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["i32",0],["cudnndropoutstruct",0],["cudnnrnninputmode_t",4],["cudnndirectionmode_t",4],["cudnnrnnmode_t",4],["cudnnrnnalgo_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]],[[["cudnnrnnstruct",0],["cudnnrnnalgo_t",4],["cudnnrnnmode_t",4],["cudnnrnnbiasmode_t",4],["cudnndirectionmode_t",4],["cudnnrnninputmode_t",4],["cudnndatatype_t",4],["cudnndatatype_t",4],["cudnnmathtype_t",4],["i32",0],["i32",0],["i32",0],["i32",0],["cudnndropoutstruct",0],["u32",0]],["cudnnstatus_t",4]],[[["cudnnrnnstruct",0],["cudnnmathtype_t",4]],["cudnnstatus_t",4]],[[["cudnnrnnstruct",0],["u32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnrnnstruct",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnnreducetensorstruct",0],["cudnnreducetensorop_t",4],["cudnndatatype_t",4],["cudnnnanpropagation_t",4],["cudnnreducetensorindices_t",4],["cudnnindicestype_t",4]],["cudnnstatus_t",4]],[[["cudnnseqdatastruct",0],["cudnndatatype_t",4],["i32",0],["i32",0],["cudnnseqdataaxis_t",0],["usize",0],["i32",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnnspatialtransformerstruct",0],["cudnnsamplertype_t",4],["cudnndatatype_t",4],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["custream_st",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnntensorstruct",0],["c_void",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnntensorstruct",0],["cudnntensorformat_t",4],["cudnndatatype_t",4],["i32",0],["i32",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnntensorstruct",0],["cudnndatatype_t",4],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnntensorstruct",0],["cudnndatatype_t",4],["i32",0],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnntensorstruct",0],["cudnntensorformat_t",4],["cudnndatatype_t",4],["i32",0],["i32",0]],["cudnnstatus_t",4]],[[["cudnntensortransformstruct",0],["u32",0],["cudnntensorformat_t",4],["i32",0],["i32",0],["u32",0],["cudnnfoldingdirection_t",4]],["cudnnstatus_t",4]],null,null,[[["cudnncontext",0],["cudnnsoftmaxalgorithm_t",4],["cudnnsoftmaxmode_t",4],["c_void",0],["cudnntensorstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnsoftmaxalgorithm_t",4],["cudnnsoftmaxmode_t",4],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],null,[[["cudnncontext",0],["cudnnspatialtransformerstruct",0],["c_void",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnspatialtransformerstruct",0],["c_void",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnspatialtransformerstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["c_void",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnnspatialtransformerstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],null,null,null,null,null,null,null,null,null,[[["cudnncontext",0],["cudnntensortransformstruct",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0],["c_void",0],["cudnnfilterstruct",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],[[["cudnncontext",0],["cudnntensortransformstruct",0],["c_void",0],["cudnntensorstruct",0],["c_void",0],["c_void",0],["cudnntensorstruct",0],["c_void",0]],["cudnnstatus_t",4]],null,[[["datatype",4]],["cudnndatatype_t",4]],null,[[],["cudnnconvolutionfwdalgoperfstruct",3]],[[],["cudnnconvolutionbwddataalgoperfstruct",3]],[[],["cudnnconvolutionbwdfilteralgoperfstruct",3]],null,null,null,null,null,[[["cudnnhandle_t",6]],["result",4,[["error",4]]]],[[["cudnnactivationdescriptor_t",6]],["result",4,[["error",4]]]],[[["cudnnconvolutiondescriptor_t",6]],["result",4,[["error",4]]]],[[["cudnndropoutdescriptor_t",6]],["result",4,[["error",4]]]],[[["cudnnfilterdescriptor_t",6]],["result",4,[["error",4]]]],[[["cudnnlrndescriptor_t",6]],["result",4,[["error",4]]]],[[["cudnnpoolingdescriptor_t",6]],["result",4,[["error",4]]]],[[["cudnnrnndescriptor_t",6]],["result",4,[["error",4]]]],[[["cudnntensordescriptor_t",6]],["result",4,[["error",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["cudnnhandle_t",6],["cudnnlrndescriptor_t",6],["cudnndivnormmode_t",4],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnnlrndescriptor_t",6],["cudnndivnormmode_t",4],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0]],["result",4,[["error",4]]]],null,[[["activationdescriptor",3]]],[[["convolutiondescriptor",3]]],[[["cudnn",3]]],[[["dropoutdescriptor",3]]],[[["filterdescriptor",3]]],[[["normalizationdescriptor",3]]],[[["poolingdescriptor",3]]],[[["rnndescriptor",3]]],[[["tensordescriptor",3]]],[[["cudnnhandle_t",6],["cudnndropoutdescriptor_t",6],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["usize",0]],["result",4,[["error",4]]]],[[["cudnn",3],["dropoutconfig",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnndropoutdescriptor_t",6],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["usize",0]],["result",4,[["error",4]]]],[[["cudnn",3],["dropoutconfig",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0]],["result",4,[["error",4]]]],[[["cudnntensordescriptor_t",6]],["result",4,[["usize",0],["error",4]]]],[[["cudnnhandle_t",6]],["result",4,[["usize",0],["error",4]]]],null,null,null,null,null,null,null,null,null,[[["cudaroundmode",4],["cudaroundmode",4]],["bool",0]],[[["cudaerror",4],["cudaerror",4]],["bool",0]],[[["cudachannelformatkind",4],["cudachannelformatkind",4]],["bool",0]],[[["cudamemorytype",4],["cudamemorytype",4]],["bool",0]],[[["cudamemcpykind",4],["cudamemcpykind",4]],["bool",0]],[[["cudaaccessproperty",4],["cudaaccessproperty",4]],["bool",0]],[[["cudastreamcapturestatus",4],["cudastreamcapturestatus",4]],["bool",0]],[[["cudastreamcapturemode",4],["cudastreamcapturemode",4]],["bool",0]],[[["cudasynchronizationpolicy",4],["cudasynchronizationpolicy",4]],["bool",0]],[[["cudastreamattrid",4],["cudastreamattrid",4]],["bool",0]],[[["cudastreamupdatecapturedependenciesflags",4],["cudastreamupdatecapturedependenciesflags",4]],["bool",0]],[[["cudauserobjectflags",4],["cudauserobjectflags",4]],["bool",0]],[[["cudauserobjectretainflags",4],["cudauserobjectretainflags",4]],["bool",0]],[[["cudagraphicsregisterflags",4],["cudagraphicsregisterflags",4]],["bool",0]],[[["cudagraphicsmapflags",4],["cudagraphicsmapflags",4]],["bool",0]],[[["cudagraphicscubeface",4],["cudagraphicscubeface",4]],["bool",0]],[[["cudakernelnodeattrid",4],["cudakernelnodeattrid",4]],["bool",0]],[[["cudaresourcetype",4],["cudaresourcetype",4]],["bool",0]],[[["cudaresourceviewformat",4],["cudaresourceviewformat",4]],["bool",0]],[[["cudafuncattribute",4],["cudafuncattribute",4]],["bool",0]],[[["cudafunccache",4],["cudafunccache",4]],["bool",0]],[[["cudasharedmemconfig",4],["cudasharedmemconfig",4]],["bool",0]],[[["cudasharedcarveout",4],["cudasharedcarveout",4]],["bool",0]],[[["cudacomputemode",4],["cudacomputemode",4]],["bool",0]],[[["cudalimit",4],["cudalimit",4]],["bool",0]],[[["cudamemoryadvise",4],["cudamemoryadvise",4]],["bool",0]],[[["cudamemrangeattribute",4],["cudamemrangeattribute",4]],["bool",0]],[[["cudaoutputmode",4],["cudaoutputmode",4]],["bool",0]],[[["cudaflushgpudirectrdmawritesoptions",4],["cudaflushgpudirectrdmawritesoptions",4]],["bool",0]],[[["cudagpudirectrdmawritesordering",4],["cudagpudirectrdmawritesordering",4]],["bool",0]],[[["cudaflushgpudirectrdmawritesscope",4],["cudaflushgpudirectrdmawritesscope",4]],["bool",0]],[[["cudaflushgpudirectrdmawritestarget",4],["cudaflushgpudirectrdmawritestarget",4]],["bool",0]],[[["cudadeviceattr",4],["cudadeviceattr",4]],["bool",0]],[[["cudamempoolattr",4],["cudamempoolattr",4]],["bool",0]],[[["cudamemlocationtype",4],["cudamemlocationtype",4]],["bool",0]],[[["cudamemaccessflags",4],["cudamemaccessflags",4]],["bool",0]],[[["cudamemallocationtype",4],["cudamemallocationtype",4]],["bool",0]],[[["cudamemallocationhandletype",4],["cudamemallocationhandletype",4]],["bool",0]],[[["cudagraphmemattributetype",4],["cudagraphmemattributetype",4]],["bool",0]],[[["cudadevicep2pattr",4],["cudadevicep2pattr",4]],["bool",0]],[[["cudaexternalmemoryhandletype",4],["cudaexternalmemoryhandletype",4]],["bool",0]],[[["cudaexternalsemaphorehandletype",4],["cudaexternalsemaphorehandletype",4]],["bool",0]],[[["cudacgscope",4],["cudacgscope",4]],["bool",0]],[[["cudagraphnodetype",4],["cudagraphnodetype",4]],["bool",0]],[[["cudagraphexecupdateresult",4],["cudagraphexecupdateresult",4]],["bool",0]],[[["cudagetdriverentrypointflags",4],["cudagetdriverentrypointflags",4]],["bool",0]],[[["cudagraphdebugdotflags",4],["cudagraphdebugdotflags",4]],["bool",0]],[[["cudagraphinstantiateflags",4],["cudagraphinstantiateflags",4]],["bool",0]],[[["cudasurfaceboundarymode",4],["cudasurfaceboundarymode",4]],["bool",0]],[[["cudasurfaceformatmode",4],["cudasurfaceformatmode",4]],["bool",0]],[[["cudatextureaddressmode",4],["cudatextureaddressmode",4]],["bool",0]],[[["cudatexturefiltermode",4],["cudatexturefiltermode",4]],["bool",0]],[[["cudatexturereadmode",4],["cudatexturereadmode",4]],["bool",0]],[[["cudadatatype_t",4],["cudadatatype_t",4]],["bool",0]],[[["cudnnstatus_t",4],["cudnnstatus_t",4]],["bool",0]],[[["cudnnerrquerymode_t",4],["cudnnerrquerymode_t",4]],["bool",0]],[[["cudnndatatype_t",4],["cudnndatatype_t",4]],["bool",0]],[[["cudnnmathtype_t",4],["cudnnmathtype_t",4]],["bool",0]],[[["cudnnnanpropagation_t",4],["cudnnnanpropagation_t",4]],["bool",0]],[[["cudnndeterminism_t",4],["cudnndeterminism_t",4]],["bool",0]],[[["cudnntensorformat_t",4],["cudnntensorformat_t",4]],["bool",0]],[[["cudnnfoldingdirection_t",4],["cudnnfoldingdirection_t",4]],["bool",0]],[[["cudnnoptensorop_t",4],["cudnnoptensorop_t",4]],["bool",0]],[[["cudnnreducetensorop_t",4],["cudnnreducetensorop_t",4]],["bool",0]],[[["cudnnreducetensorindices_t",4],["cudnnreducetensorindices_t",4]],["bool",0]],[[["cudnnindicestype_t",4],["cudnnindicestype_t",4]],["bool",0]],[[["cudnnsoftmaxalgorithm_t",4],["cudnnsoftmaxalgorithm_t",4]],["bool",0]],[[["cudnnsoftmaxmode_t",4],["cudnnsoftmaxmode_t",4]],["bool",0]],[[["cudnnpoolingmode_t",4],["cudnnpoolingmode_t",4]],["bool",0]],[[["cudnnactivationmode_t",4],["cudnnactivationmode_t",4]],["bool",0]],[[["cudnnlrnmode_t",4],["cudnnlrnmode_t",4]],["bool",0]],[[["cudnndivnormmode_t",4],["cudnndivnormmode_t",4]],["bool",0]],[[["cudnnbatchnormmode_t",4],["cudnnbatchnormmode_t",4]],["bool",0]],[[["cudnnbatchnormops_t",4],["cudnnbatchnormops_t",4]],["bool",0]],[[["cudnnnormmode_t",4],["cudnnnormmode_t",4]],["bool",0]],[[["cudnnnormalgo_t",4],["cudnnnormalgo_t",4]],["bool",0]],[[["cudnnnormops_t",4],["cudnnnormops_t",4]],["bool",0]],[[["cudnnsamplertype_t",4],["cudnnsamplertype_t",4]],["bool",0]],[[["cudnnconvolutionfwdalgo_t",4],["cudnnconvolutionfwdalgo_t",4]],["bool",0]],[[["cudnnconvolutionbwdfilteralgo_t",4],["cudnnconvolutionbwdfilteralgo_t",4]],["bool",0]],[[["cudnnconvolutionbwddataalgo_t",4],["cudnnconvolutionbwddataalgo_t",4]],["bool",0]],[[["cudnnrnnalgo_t",4],["cudnnrnnalgo_t",4]],["bool",0]],[[["cudnnctclossalgo_t",4],["cudnnctclossalgo_t",4]],["bool",0]],[[["cudnnseverity_t",4],["cudnnseverity_t",4]],["bool",0]],[[["cudnnforwardmode_t",4],["cudnnforwardmode_t",4]],["bool",0]],[[["cudnnrnnmode_t",4],["cudnnrnnmode_t",4]],["bool",0]],[[["cudnnrnnbiasmode_t",4],["cudnnrnnbiasmode_t",4]],["bool",0]],[[["cudnndirectionmode_t",4],["cudnndirectionmode_t",4]],["bool",0]],[[["cudnnrnninputmode_t",4],["cudnnrnninputmode_t",4]],["bool",0]],[[["cudnnrnnclipmode_t",4],["cudnnrnnclipmode_t",4]],["bool",0]],[[["cudnnrnndatalayout_t",4],["cudnnrnndatalayout_t",4]],["bool",0]],[[["cudnnseqdataaxis_t",4],["cudnnseqdataaxis_t",4]],["bool",0]],[[["cudnnmultiheadattnweightkind_t",4],["cudnnmultiheadattnweightkind_t",4]],["bool",0]],[[["cudnnwgradmode_t",4],["cudnnwgradmode_t",4]],["bool",0]],[[["cudnnlossnormalizationmode_t",4],["cudnnlossnormalizationmode_t",4]],["bool",0]],[[["cudnnconvolutionmode_t",4],["cudnnconvolutionmode_t",4]],["bool",0]],[[["cudnnreordertype_t",4],["cudnnreordertype_t",4]],["bool",0]],[[["cudnnfusedops_t",4],["cudnnfusedops_t",4]],["bool",0]],[[["cudnnfusedopsconstparamlabel_t",4],["cudnnfusedopsconstparamlabel_t",4]],["bool",0]],[[["cudnnfusedopspointerplaceholder_t",4],["cudnnfusedopspointerplaceholder_t",4]],["bool",0]],[[["cudnnfusedopsvariantparamlabel_t",4],["cudnnfusedopsvariantparamlabel_t",4]],["bool",0]],[[["cudnnpointwisemode_t",4],["cudnnpointwisemode_t",4]],["bool",0]],[[["cudnngenstatsmode_t",4],["cudnngenstatsmode_t",4]],["bool",0]],[[["cudnnbnfinalizestatsmode_t",4],["cudnnbnfinalizestatsmode_t",4]],["bool",0]],[[["cudnnbackendattributename_t",4],["cudnnbackendattributename_t",4]],["bool",0]],[[["cudnnbackendattributetype_t",4],["cudnnbackendattributetype_t",4]],["bool",0]],[[["cudnnbackenddescriptortype_t",4],["cudnnbackenddescriptortype_t",4]],["bool",0]],[[["cudnnbackendnumericalnote_t",4],["cudnnbackendnumericalnote_t",4]],["bool",0]],[[["cudnnbackendbehaviornote_t",4],["cudnnbackendbehaviornote_t",4]],["bool",0]],[[["cudnnbackendknobtype_t",4],["cudnnbackendknobtype_t",4]],["bool",0]],[[["cudnnbackendlayouttype_t",4],["cudnnbackendlayouttype_t",4]],["bool",0]],[[["cudnnbackendheurmode_t",4],["cudnnbackendheurmode_t",4]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cudnnhandle_t",6],["cudnnfilterdescriptor_t",6],["cudnnconvolutiondescriptor_t",6],["cudnntensordescriptor_t",6],["cudnntensordescriptor_t",6]],["result",4,[["vec",3,[["cudnnconvolutionbwddataalgoperf_t",6]]],["error",4]]]],[[["cudnnhandle_t",6],["cudnnfilterdescriptor_t",6],["cudnnconvolutiondescriptor_t",6],["cudnntensordescriptor_t",6],["cudnntensordescriptor_t",6]],["result",4,[["vec",3,[["cudnnconvolutionbwdfilteralgoperf_t",6]]],["error",4]]]],[[["cudnnhandle_t",6],["cudnnfilterdescriptor_t",6],["cudnnconvolutiondescriptor_t",6],["cudnntensordescriptor_t",6],["cudnntensordescriptor_t",6]],["result",4,[["vec",3,[["cudnnconvolutionfwdalgoperf_t",6]]],["error",4]]]],null,null,null,null,null,null,null,null,null,null,[[["api",3],["formatter",3]],["result",6]],[[["activationdescriptor",3],["formatter",3]],["result",6]],[[["convolutiondescriptor",3],["formatter",3]],["result",6]],[[["cudnn",3],["formatter",3]],["result",6]],[[["dropoutdescriptor",3],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["filterdescriptor",3],["formatter",3]],["result",6]],[[["normalizationdescriptor",3],["formatter",3]],["result",6]],[[["poolingdescriptor",3],["formatter",3]],["result",6]],[[["rnndescriptor",3],["formatter",3]],["result",6]],[[["tensordescriptor",3],["formatter",3]],["result",6]],[[["cudaroundmode",4],["formatter",3]],["result",4,[["error",3]]]],[[["dim3",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudachannelformatkind",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudachannelformatdesc",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaarray",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudamipmappedarray",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaarraysparseproperties",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaarraysparseproperties__bindgen_ty_1",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudamemorytype",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudamemcpykind",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudapitchedptr",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaextent",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudapos",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudamemcpy3dparms",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudamemcpy3dpeerparms",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudamemsetparams",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaaccessproperty",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudaaccesspolicywindow",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudahostnodeparams",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudastreamcapturestatus",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudastreamcapturemode",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudasynchronizationpolicy",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudastreamattrid",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudastreamupdatecapturedependenciesflags",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudauserobjectflags",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudauserobjectretainflags",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudagraphicsresource",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudagraphicsregisterflags",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudagraphicsmapflags",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudagraphicscubeface",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudakernelnodeattrid",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudaresourcetype",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudaresourceviewformat",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaresourceviewdesc",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudapointerattributes",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudafuncattributes",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudafuncattribute",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudafunccache",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudasharedmemconfig",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudasharedcarveout",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudacomputemode",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudalimit",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudamemoryadvise",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudamemrangeattribute",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudaoutputmode",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudaflushgpudirectrdmawritesoptions",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudagpudirectrdmawritesordering",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudaflushgpudirectrdmawritesscope",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudaflushgpudirectrdmawritestarget",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudadeviceattr",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudamempoolattr",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudamemlocationtype",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudamemlocation",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudamemaccessflags",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudamemaccessdesc",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudamemallocationtype",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudamemallocationhandletype",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudagraphmemattributetype",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudadevicep2pattr",4],["formatter",3]],["result",4,[["error",3]]]],[[["cuuuid_st",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaexternalmemoryhandletype",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaexternalmemorybufferdesc",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaexternalmemorymipmappedarraydesc",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaexternalsemaphorehandletype",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3",3],["formatter",3]],["result",4,[["error",3]]]],[[["custream_st",3],["formatter",3]],["result",4,[["error",3]]]],[[["cuevent_st",3],["formatter",3]],["result",4,[["error",3]]]],[[["cuexternalmemory_st",3],["formatter",3]],["result",4,[["error",3]]]],[[["cuexternalsemaphore_st",3],["formatter",3]],["result",4,[["error",3]]]],[[["cugraph_st",3],["formatter",3]],["result",4,[["error",3]]]],[[["cugraphnode_st",3],["formatter",3]],["result",4,[["error",3]]]],[[["cuuserobject_st",3],["formatter",3]],["result",4,[["error",3]]]],[[["cufunc_st",3],["formatter",3]],["result",4,[["error",3]]]],[[["cumempoolhandle_st",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudacgscope",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudalaunchparams",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudakernelnodeparams",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaexternalsemaphoresignalnodeparams",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudaexternalsemaphorewaitnodeparams",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudagraphnodetype",4],["formatter",3]],["result",4,[["error",3]]]],[[["cugraphexec_st",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudagraphexecupdateresult",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudagetdriverentrypointflags",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudagraphdebugdotflags",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudagraphinstantiateflags",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudasurfaceboundarymode",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudasurfaceformatmode",4],["formatter",3]],["result",4,[["error",3]]]],[[["surfacereference",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudatextureaddressmode",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudatexturefiltermode",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudatexturereadmode",4],["formatter",3]],["result",4,[["error",3]]]],[[["texturereference",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudatexturedesc",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudadatatype_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnncontext",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnstatus_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnruntimetag_t",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnerrquerymode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnntensorstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnpoolingstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnfilterstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnlrnstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnactivationstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnspatialtransformerstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnoptensorstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnreducetensorstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnctclossstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnntensortransformstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnndatatype_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnmathtype_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnnanpropagation_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnndeterminism_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnntensorformat_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnfoldingdirection_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnoptensorop_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnreducetensorop_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnreducetensorindices_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnindicestype_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnsoftmaxalgorithm_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnsoftmaxmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnpoolingmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnactivationmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnlrnmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnndivnormmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnbatchnormmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnbatchnormops_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnnormmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnnormalgo_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnnormops_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnsamplertype_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnndropoutstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnalgorithmstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnalgorithmperformancestruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnconvolutionfwdalgo_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnconvolutionbwdfilteralgo_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnconvolutionbwddataalgo_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnrnnalgo_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnctclossalgo_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnseverity_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnndebugstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnforwardmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnrnnmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnrnnbiasmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnndirectionmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnrnninputmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnrnnclipmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnrnndatalayout_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnrnnstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnpersistentrnnplan",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnrnndatastruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnseqdataaxis_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnseqdatastruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnattnstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnmultiheadattnweightkind_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnwgradmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnlossnormalizationmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnconvolutionstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnconvolutionmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnreordertype_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnconvolutionfwdalgoperfstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnconvolutionbwddataalgoperfstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnfusedopsconstparamstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnfusedopsvariantparamstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnfusedopsplanstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnfusedops_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnfusedopsconstparamlabel_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnfusedopspointerplaceholder_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnfusedopsvariantparamlabel_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnconvolutionbwdfilteralgoperfstruct",3],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnpointwisemode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnngenstatsmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnbnfinalizestatsmode_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnbackendattributename_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnbackendattributetype_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnbackenddescriptortype_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnbackendnumericalnote_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnbackendbehaviornote_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnbackendknobtype_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnbackendlayouttype_t",4],["formatter",3]],["result",4,[["error",3]]]],[[["cudnnbackendheurmode_t",4],["formatter",3]],["result",4,[["error",3]]]],null,null,nullcudnnactivationdescriptor_t",6]],["activationdescriptor",3]],[[["cudnnconvolutiondescriptor_t",6]],["convolutiondescriptor",3]],[[["cudnnhandle_t",6]],["cudnn",3]],[[["cudnndropoutdescriptor_t",6]],["dropoutdescriptor",3]],[[["cudnnfilterdescriptor_t",6]],["filterdescriptor",3]],[[["cudnnlrndescriptor_t",6]],["normalizationdescriptor",3]],[[["cudnnpoolingdescriptor_t",6]],["poolingdescriptor",3]],[[["cudnnrnndescriptor_t",6],["dropoutconfig",3]],["rnndescriptor",3]],[[["cudnntensordescriptor_t",6]],["tensordescriptor",3]],null,null,[[["cudnnhandle_t",6],["cudnnconvolutionbwddataalgo_t",4],["cudnnfilterdescriptor_t",6],["cudnnconvolutiondescriptor_t",6],["cudnntensordescriptor_t",6],["cudnntensordescriptor_t",6]],["result",4,[["usize",0],["error",4]]]],[[["cudnnhandle_t",6],["cudnnconvolutionbwdfilteralgo_t",4],["cudnnfilterdescriptor_t",6],["cudnnconvolutiondescriptor_t",6],["cudnntensordescriptor_t",6],["cudnntensordescriptor_t",6]],["result",4,[["usize",0],["error",4]]]],[[["cudnnhandle_t",6],["cudnnconvolutionfwdalgo_t",4],["cudnnfilterdescriptor_t",6],["cudnnconvolutiondescriptor_t",6],["cudnntensordescriptor_t",6],["cudnntensordescriptor_t",6]],["result",4,[["usize",0],["error",4]]]],[[["cudnnpoolingdescriptor_t",6],["cudnnpoolingmode_t",0],["cudnnnanpropagation_t",0],["c_int",0],["c_int",0],["c_int",0],["c_int",0],["c_int",0],["c_int",0]],["result",4,[["error",4]]]],[[["cudnnpoolingdescriptor_t",6],["c_int",6],["cudnnpoolingmode_t",0],["cudnnnanpropagation_t",0],["c_int",0],["c_int",0],["c_int",0],["c_int",0]],["result",4,[["error",4]]]],[[["cudnnpoolingdescriptor_t",6],["cudnntensordescriptor_t",6],["c_int",6],["c_int",0]],["result",4,[["error",4]]]],[[],["usize",0]],[[["cudnnhandle_t",6],["cudnnrnndescriptor_t",6],["cudnntensordescriptor_t",6],["datatype",4]],["result",4,[["usize",0],["error",4]]]],[[["cudnnhandle_t",6],["cudnnrnndescriptor_t",6],["cudnnforwardmode_t",4],["cudnnrnndatadescriptor_t",6]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnnrnndescriptor_t",6],["c_int",6],["vec",3,[["cudnntensordescriptor_t",6]]]],["result",4,[["usize",0],["error",4]]]],[[["cudnnhandle_t",6],["cudnnrnndescriptor_t",6],["i32",0],["vec",3,[["cudnntensordescriptor_t",6]]]],["result",4,[["usize",0],["error",4]]]],[[["cudnntensordescriptor_t",6],["c_int",6],["cudnndatatype_t",0],["c_int",0],["c_int",0],["c_int",0]],["result",4,[["error",4]]]],[[],["usize",0]],null,null,null,null,null,null,null,null,null,[[["cudaroundmode",4],["",0]]],[[["cudaerror",4],["",0]]],[[["cudachannelformatkind",4],["",0]]],[[["cudamemorytype",4],["",0]]],[[["cudamemcpykind",4],["",0]]],[[["cudaaccessproperty",4],["",0]]],[[["cudastreamcapturestatus",4],["",0]]],[[["cudastreamcapturemode",4],["",0]]],[[["cudasynchronizationpolicy",4],["",0]]],[[["cudastreamattrid",4],["",0]]],[[["cudastreamupdatecapturedependenciesflags",4],["",0]]],[[["cudauserobjectflags",4],["",0]]],[[["cudauserobjectretainflags",4],["",0]]],[[["cudagraphicsregisterflags",4],["",0]]],[[["cudagraphicsmapflags",4],["",0]]],[[["cudagraphicscubeface",4],["",0]]],[[["cudakernelnodeattrid",4],["",0]]],[[["cudaresourcetype",4],["",0]]],[[["cudaresourceviewformat",4],["",0]]],[[["cudafuncattribute",4],["",0]]],[[["cudafunccache",4],["",0]]],[[["cudasharedmemconfig",4],["",0]]],[[["cudasharedcarveout",4],["",0]]],[[["cudacomputemode",4],["",0]]],[[["cudalimit",4],["",0]]],[[["cudamemoryadvise",4],["",0]]],[[["cudamemrangeattribute",4],["",0]]],[[["cudaoutputmode",4],["",0]]],[[["cudaflushgpudirectrdmawritesoptions",4],["",0]]],[[["cudagpudirectrdmawritesordering",4],["",0]]],[[["cudaflushgpudirectrdmawritesscope",4],["",0]]],[[["cudaflushgpudirectrdmawritestarget",4],["",0]]],[[["cudadeviceattr",4],["",0]]],[[["cudamempoolattr",4],["",0]]],[[["cudamemlocationtype",4],["",0]]],[[["cudamemaccessflags",4],["",0]]],[[["cudamemallocationtype",4],["",0]]],[[["cudamemallocationhandletype",4],["",0]]],[[["cudagraphmemattributetype",4],["",0]]],[[["cudadevicep2pattr",4],["",0]]],[[["cudaexternalmemoryhandletype",4],["",0]]],[[["cudaexternalsemaphorehandletype",4],["",0]]],[[["cudacgscope",4],["",0]]],[[["cudagraphnodetype",4],["",0]]],[[["cudagraphexecupdateresult",4],["",0]]],[[["cudagetdriverentrypointflags",4],["",0]]],[[["cudagraphdebugdotflags",4],["",0]]],[[["cudagraphinstantiateflags",4],["",0]]],[[["cudasurfaceboundarymode",4],["",0]]],[[["cudasurfaceformatmode",4],["",0]]],[[["cudatextureaddressmode",4],["",0]]],[[["cudatexturefiltermode",4],["",0]]],[[["cudatexturereadmode",4],["",0]]],[[["cudadatatype_t",4],["",0]]],[[["cudnnstatus_t",4],["",0]]],[[["cudnnerrquerymode_t",4],["",0]]],[[["cudnndatatype_t",4],["",0]]],[[["cudnnmathtype_t",4],["",0]]],[[["cudnnnanpropagation_t",4],["",0]]],[[["cudnndeterminism_t",4],["",0]]],[[["cudnntensorformat_t",4],["",0]]],[[["cudnnfoldingdirection_t",4],["",0]]],[[["cudnnoptensorop_t",4],["",0]]],[[["cudnnreducetensorop_t",4],["",0]]],[[["cudnnreducetensorindices_t",4],["",0]]],[[["cudnnindicestype_t",4],["",0]]],[[["cudnnsoftmaxalgorithm_t",4],["",0]]],[[["cudnnsoftmaxmode_t",4],["",0]]],[[["cudnnpoolingmode_t",4],["",0]]],[[["cudnnactivationmode_t",4],["",0]]],[[["cudnnlrnmode_t",4],["",0]]],[[["cudnndivnormmode_t",4],["",0]]],[[["cudnnbatchnormmode_t",4],["",0]]],[[["cudnnbatchnormops_t",4],["",0]]],[[["cudnnnormmode_t",4],["",0]]],[[["cudnnnormalgo_t",4],["",0]]],[[["cudnnnormops_t",4],["",0]]],[[["cudnnsamplertype_t",4],["",0]]],[[["cudnnconvolutionfwdalgo_t",4],["",0]]],[[["cudnnconvolutionbwdfilteralgo_t",4],["",0]]],[[["cudnnconvolutionbwddataalgo_t",4],["",0]]],[[["cudnnrnnalgo_t",4],["",0]]],[[["cudnnctclossalgo_t",4],["",0]]],[[["cudnnseverity_t",4],["",0]]],[[["cudnnforwardmode_t",4],["",0]]],[[["cudnnrnnmode_t",4],["",0]]],[[["cudnnrnnbiasmode_t",4],["",0]]],[[["cudnndirectionmode_t",4],["",0]]],[[["cudnnrnninputmode_t",4],["",0]]],[[["cudnnrnnclipmode_t",4],["",0]]],[[["cudnnrnndatalayout_t",4],["",0]]],[[["cudnnseqdataaxis_t",4],["",0]]],[[["cudnnmultiheadattnweightkind_t",4],["",0]]],[[["cudnnwgradmode_t",4],["",0]]],[[["cudnnlossnormalizationmode_t",4],["",0]]],[[["cudnnconvolutionmode_t",4],["",0]]],[[["cudnnreordertype_t",4],["",0]]],[[["cudnnfusedops_t",4],["",0]]],[[["cudnnfusedopsconstparamlabel_t",4],["",0]]],[[["cudnnfusedopspointerplaceholder_t",4],["",0]]],[[["cudnnfusedopsvariantparamlabel_t",4],["",0]]],[[["cudnnpointwisemode_t",4],["",0]]],[[["cudnngenstatsmode_t",4],["",0]]],[[["cudnnbnfinalizestatsmode_t",4],["",0]]],[[["cudnnbackendattributename_t",4],["",0]]],[[["cudnnbackendattributetype_t",4],["",0]]],[[["cudnnbackenddescriptortype_t",4],["",0]]],[[["cudnnbackendnumericalnote_t",4],["",0]]],[[["cudnnbackendbehaviornote_t",4],["",0]]],[[["cudnnbackendknobtype_t",4],["",0]]],[[["cudnnbackendlayouttype_t",4],["",0]]],[[["cudnnbackendheurmode_t",4],["",0]]],null,null,null,null,null,null,null,null,null,null,[[["activationdescriptor",3]],["cudnnactivationdescriptor_t",6]],[[["convolutiondescriptor",3]],["cudnnconvolutiondescriptor_t",6]],[[["cudnn",3]],["cudnnhandle_t",6]],[[["dropoutdescriptor",3]],["cudnndropoutdescriptor_t",6]],[[["filterdescriptor",3]],["cudnnfilterdescriptor_t",6]],[[["normalizationdescriptor",3]],["cudnnlrndescriptor_t",6]],[[["poolingdescriptor",3]],["cudnnpoolingdescriptor_t",6]],[[["rnndescriptor",3]],["cudnnrnndescriptor_t",6]],[[["tensordescriptor",3]],["cudnntensordescriptor_t",6]],[[],["result",4,[["cudnnhandle_t",6],["error",4]]]],[[["cudnn",3]],["result",4,[["activationconfig",3],["error",4]]]],[[["cudnn",3],["tensordescriptor",3],["convolutiondescriptor",3],["filterdescriptor",3],["tensordescriptor",3]],["result",4,[["convolutionconfig",3],["error",4]]]],[[["cudnn",3],["f32",0],["u64",0]],["result",4,[["dropoutconfig",3],["error",4]]]],[[["cudnn",3],["u32",0],["f64",0],["f64",0],["f64",0]],["result",4,[["normalizationconfig",3],["error",4]]]],[[["cudnn",3]],["result",4,[["poolingconfig",3],["error",4]]]],[[["cudnn",3],["rnndescriptor",3],["i32",0],["i32",0],["i32",0],["cudnndropoutdescriptor_t",6],["cudnnrnninputmode_t",4],["cudnndirectionmode_t",4],["cudnnrnnmode_t",4],["cudnnrnnalgo_t",4],["datatype",4],["cudnnmathtype_t",4]],["result",4,[["rnnconfig",3],["error",4]]]],nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cudnn",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],[[["cudnn",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],[[["cudnn",3],["normalizationconfig",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnnlrndescriptor_t",6],["cudnnlrnmode_t",4],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnnlrndescriptor_t",6],["cudnnlrnmode_t",4],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0]],["result",4,[["error",4]]]],[[["cudnn",3],["normalizationconfig",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cudnnactivationmode_t",4]],["result",4,[["activationdescriptor",3],["error",4]]]],[[["datatype",4]],["result",4,[["convolutiondescriptor",3],["error",4]]]],[[],["result",4,[["cudnn",3],["error",4]]]],[[["cudnn",3],["f32",0],["u64",0],["c_void",0],["usize",0]],["result",4,[["dropoutdescriptor",3],["error",4]]]],[[["datatype",4]],["result",4,[["filterdescriptor",3],["error",4]]]],[[["u32",0],["f64",0],["f64",0],["f64",0]],["result",4,[["normalizationdescriptor",3],["error",4]]]],[[["cudnnpoolingmode_t",4]],["result",4,[["poolingdescriptor",3],["error",4]]]],[[["cudnn",3],["i32",0],["i32",0],["dropoutconfig",3],["cudnnrnninputmode_t",4],["cudnndirectionmode_t",4],["cudnnrnnmode_t",4],["cudnnrnnalgo_t",4],["datatype",4],["cudnnrnnpaddingmode_t",6]],["result",4,[["rnndescriptor",3],["error",4]]]],[[["datatype",4]],["result",4,[["tensordescriptor",3],["error",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cudnn",3],["poolingconfig",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],[[["cudnn",3],["poolingconfig",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnnpoolingdescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnnpoolingdescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0]],["result",4,[["error",4]]]],[[["cudnn",3],["poolingconfig",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],[[["cudnn",3],["poolingconfig",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],null,null,null,null,null,null,[[["cudnn",3],["activationconfig",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],[[["cudnn",3],["activationconfig",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cudnnhandle_t",6],["cudnnrnndescriptor_t",6],["c_int",6],["cudnntensordescriptor_t",0],["c_void",0],["cudnntensordescriptor_t",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnnfilterdescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["usize",0],["c_void",0],["usize",0]],["result",4,[["error",4]]]],[[["cudnn",3],["rnnconfig",3],["vec",3,[["tensordescriptor",3]]],["c_void",0],["vec",3,[["tensordescriptor",3]]],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["filterdescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["vec",3,[["tensordescriptor",3]]],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["c_void",0],["c_void",0]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnnrnndescriptor_t",6],["c_int",6],["cudnntensordescriptor_t",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",0],["c_void",0],["c_void",0],["usize",0],["cudnnfilterdescriptor_t",6],["c_void",0],["c_void",0],["usize",0]],["result",4,[["error",4]]]],[[["cudnn",3],["rnnconfig",3],["vec",3,[["tensordescriptor",3]]],["c_void",0],["tensordescriptor",3],["c_void",0],["vec",3,[["tensordescriptor",3]]],["c_void",0],["filterdescriptor",3],["c_void",0],["c_void",0],["c_void",0]],["result",4,[["error",4]]]],[[["cudnn",3],["rnnconfig",3],["vec",3,[["tensordescriptor",3]]],["c_void",0],["vec",3,[["tensordescriptor",3]]],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["filterdescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["c_void",0],["c_void",0]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnnrnndescriptor_t",6],["c_int",6],["cudnntensordescriptor_t",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnnfilterdescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["size_t",6]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnnrnndescriptor_t",6],["c_int",6],["vec",3,[["cudnntensordescriptor_t",6]]],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnnfilterdescriptor_t",6],["c_void",0],["vec",3,[["cudnntensordescriptor_t",6]]],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["usize",0],["c_void",0],["usize",0]],["result",4,[["error",4]]]],null,null,[[["cudnnhandle_t",6],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0]],["result",4,[["error",4]]]],[[["cudnnactivationdescriptor_t",6],["cudnnactivationmode_t",4],["cudnnnanpropagation_t",4],["f64",0]],["result",4,[["error",4]]]],[[["cudnnconvolutiondescriptor_t",6],["cudnndatatype_t",4],["cudnnconvolutionmode_t",4],["c_int",6],["c_int",0],["c_int",0],["c_int",0]],["result",4,[["error",4]]]],[[["cudnndropoutdescriptor_t",6],["cudnnhandle_t",6],["f32",0],["c_void",0],["usize",0],["c_ulonglong",6]],["result",4,[["error",4]]]],[[["cudnnfilterdescriptor_t",6],["cudnndatatype_t",4],["cudnntensorformat_t",4],["c_int",6],["c_int",0]],["result",4,[["error",4]]]],[[["cudnnlrndescriptor_t",6],["c_uint",6],["c_double",6],["c_double",6],["c_double",6]],["result",4,[["error",4]]]],[[["cudnnpoolingdescriptor_t",6],["cudnnpoolingmode_t",4],["cudnnnanpropagation_t",4],["c_int",6],["c_int",6],["c_int",6],["c_int",6],["c_int",6],["c_int",6]],["result",4,[["error",4]]]],[[["cudnnpoolingdescriptor_t",6],["cudnnpoolingmode_t",4],["cudnnnanpropagation_t",4],["c_int",6],["c_int",0],["c_int",0],["c_int",0]],["result",4,[["error",4]]]],[[["cudnnrnndatadescriptor_t",6],["cudnndatatype_t",4],["cudnnrnndatalayout_t",4],["i32",0],["i32",0],["i32",0],["c_void",0]],["result",4,[["cudnnrnndatadescriptor_t",6],["error",4]]]],[[["cudnnhandle_t",6],["cudnnrnndescriptor_t",6],["i32",0],["i32",0],["cudnndropoutdescriptor_t",6],["cudnnrnninputmode_t",4],["cudnndirectionmode_t",4],["cudnnrnnmode_t",4],["cudnnrnnalgo_t",4],["datatype",4]],["result",4,[["error",4]]]],[[["cudnnrnndescriptor_t",6],["cudnnmathtype_t",4]],["result",4,[["error",4]]]],[[["cudnnrnndescriptor_t",6],["cudnnrnnpaddingmode_t",6]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0]],["result",4,[["error",4]]]],[[["cudnntensordescriptor_t",6],["cudnndatatype_t",4],["c_int",6],["c_int",0],["c_int",0]],["result",4,[["error",4]]]],null,null,null,null,null,null,[[["cudnn",3],["activationconfig",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],[[["cudnn",3],["activationconfig",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],null,null,null,null,[[["cudnnhandle_t",6],["cudnnsoftmaxalgorithm_t",4],["cudnnsoftmaxmode_t",4],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0]],["result",4,[["error",4]]]],[[["cudnn",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],[[["cudnnhandle_t",6],["cudnnsoftmaxalgorithm_t",4],["cudnnsoftmaxmode_t",4],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0]],["result",4,[["error",4]]]],[[["cudnn",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cudnn",3],["activationconfig",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],[[["cudnn",3],["activationconfig",3],["tensordescriptor",3],["c_void",0],["tensordescriptor",3],["c_void",0],["scalparams",3]],["result",4,[["error",4]]]],null,[[],["vec",3,[["cudnntensordescriptor_t",6]]]],null,null,null,null,null,null,null,null,null,null,null,nullstring",3]],null,null,[[["cudnnhandle_t",6],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0],["c_void",0],["cudnntensordescriptor_t",6],["c_void",0]],["result",4,[["error",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,[[],["usize",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["cudadevicememory",3]]],[[["cudadevicememory",3],["formatter",3]],["result",6]],[[]],[[["c_void",0],["usize",0]],["cudadevicememory",3]],[[["cudadevicememory",3]],["c_void",0]],[[]],[[["usize",0]],["result",4,[["cudadevicememory",3],["error",4]]]],[[["cudadevicememory",3]],["usize",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["activationconfig",3]],["activationdescriptor",3]],[[["activationconfig",3]],["activationdescriptor",3]],[[["activationconfig",3]],["activationdescriptor",3]],[[["activationconfig",3]],["activationdescriptor",3]],null,[[["convolutionconfig",3]],["cudnnconvolutionbwddataalgo_t",4]],[[["convolutionconfig",3]],["usize",0]],[[["convolutionconfig",3]],["cudnnconvolutionbwdfilteralgo_t",4]],[[["convolutionconfig",3]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["datatype",4]],["datatype",4]],[[["",0],["",0]]],[[["convolutionconfig",3]],["convolutiondescriptor",3]],[[],["datatype",4]],[[],["scalparams",3]],[[["dropoutconfig",3]],["dropoutdescriptor",3]],[[["convolutionconfig",3]],["filterdescriptor",3]],[[["datatype",4],["formatter",3]],["result",6]],[[["dropoutconfig",3],["formatter",3]],["result",6]],[[["convolutionconfig",3]],["cudnnconvolutionfwdalgo_t",4]],[[["convolutionconfig",3]],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["convolutionconfig",3]],["usize",0]],[[["rnnconfig",3]],["usize",0]],[[["normalizationconfig",3]],["normalizationdescriptor",3]],[[["cudnnconvolutionfwdalgo_t",4],["usize",0],["cudnnconvolutionbwdfilteralgo_t",4],["usize",0],["cudnnconvolutionbwddataalgo_t",4],["usize",0],["convolutiondescriptor",3],["filterdescriptor",3]],["convolutionconfig",3]],[[["normalizationdescriptor",3]],["normalizationconfig",3]],[[["poolingdescriptor",3],["poolingdescriptor",3]],["poolingconfig",3]],[[["activationdescriptor",3],["activationdescriptor",3],["activationdescriptor",3],["activationdescriptor",3]],["activationconfig",3]],[[["rnndescriptor",3],["i32",0],["i32",0],["i32",0],["cudnndropoutdescriptor_t",6],["cudnnrnninputmode_t",4],["cudnndirectionmode_t",4],["cudnnrnnmode_t",4],["cudnnrnnalgo_t",4],["cudnndatatype_t",4],["usize",0],["usize",0],["cudadevicememory",3]],["rnnconfig",3]],[[["dropoutdescriptor",3],["cudadevicememory",3]],["dropoutconfig",3]],null,[[["poolingconfig",3]],["poolingdescriptor",3]],[[["poolingconfig",3]],["poolingdescriptor",3]],[[["dropoutconfig",3]],["cudadevicememory",3]],[[["rnnconfig",3]],["rnndescriptor",3]],[[["rnnconfig",3]],["usize",0]],[[["rnnconfig",3]],["i32",0]],null,[[],["usize",0]],[[["dropoutconfig",3]],["cudadevicememory",3]],[[["",0]]],[[["rnnconfig",3]],["cudadevicememory",3]],[[["rnnconfig",3]],["usize",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[4,"Error"],[19,"cudnnAlgorithmUnionStruct_Algorithm"],[4,"cudaDataType"],[4,"cudnnIndicesType_t"],[4,"cudnnActivationMode_t"],[4,"cudnnBackendAttributeName_t"],[4,"cudnnBackendDescriptorType_t"],[4,"cudnnBatchNormOps_t"],[4,"cudnnBatchNormMode_t"],[4,"cudnnBackendBehaviorNote_t"],[4,"cudnnDirectionMode_t"],[4,"cudnnBnFinalizeStatsMode_t"],[4,"cudnnConvolutionMode_t"],[4,"cudnnConvolutionBwdDataAlgo_t"],[4,"cudnnConvolutionBwdFilterAlgo_t"],[4,"cudnnConvolutionFwdAlgo_t"],[4,"cudnnCTCLossAlgo_t"],[4,"cudnnDataType_t"],[4,"cudnnMathType_t"],[4,"cudnnReorderType_t"],[4,"cudnnDeterminism_t"],[4,"cudnnDivNormMode_t"],[4,"cudnnErrQueryMode_t"],[4,"cudnnFusedOps_t"],[4,"cudnnForwardMode_t"],[4,"cudnnGenStatsMode_t"],[4,"cudnnRNNMode_t"],[4,"cudnnBackendHeurMode_t"],[4,"cudnnBackendKnobType_t"],[4,"cudnnBackendLayoutType_t"],[4,"cudnnRNNInputMode_t"],[4,"cudnnLossNormalizationMode_t"],[4,"cudnnLRNMode_t"],[4,"cudnnMultiHeadAttnWeightKind_t"],[4,"cudnnNormAlgo_t"],[4,"cudnnNormOps_t"],[4,"cudnnNormMode_t"],[4,"cudnnNanPropagation_t"],[4,"cudnnBackendNumericalNote_t"],[4,"cudnnOpTensorOp_t"],[4,"cudnnFusedOpsConstParamLabel_t"],[4,"cudnnPointwiseMode_t"],[4,"cudnnPoolingMode_t"],[4,"cudnnFusedOpsPointerPlaceHolder_t"],[4,"cudnnFusedOpsVariantParamLabel_t"],[4,"cudnnReduceTensorOp_t"],[4,"cudnnReduceTensorIndices_t"],[4,"cudnnRNNAlgo_t"],[4,"cudnnRNNClipMode_t"],[4,"cudnnRNNDataLayout_t"],[4,"cudnnRNNBiasMode_t"],[4,"cudnnSamplerType_t"],[4,"cudnnSeqDataAxis_t"],[4,"cudnnSeverity_t"],[4,"cudnnSoftmaxAlgorithm_t"],[4,"cudnnSoftmaxMode_t"],[4,"cudnnStatus_t"],[4,"cudnnTensorFormat_t"],[4,"cudnnFoldingDirection_t"],[4,"cudnnBackendAttributeType_t"],[4,"cudnnWgradMode_t"],[3,"cudaDeviceProp"],[3,"textureReference"],[3,"cudaMemAllocNodeParams"],[19,"cudaStreamAttrValue"],[19,"cudaKernelNodeAttrValue"],[3,"API"],[3,"cudaTextureDesc"],[3,"cudnnAlgorithmUnionStruct"],[3,"cudnnConvolutionFwdAlgoPerfStruct"],[3,"cudnnConvolutionBwdDataAlgoPerfStruct"],[3,"cudnnConvolutionBwdFilterAlgoPerfStruct"],[3,"cudaMemPoolProps"],[3,"cudaLaunchParams"],[19,"cudaResourceDesc__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaAccessPolicyWindow"],[3,"cudaFuncAttributes"],[3,"cudaKernelNodeParams"],[3,"ActivationDescriptor"],[3,"ConvolutionDescriptor"],[3,"Cudnn"],[3,"DropoutDescriptor"],[3,"FilterDescriptor"],[3,"NormalizationDescriptor"],[3,"PoolingDescriptor"],[3,"RnnDescriptor"],[3,"TensorDescriptor"],[4,"cudaRoundMode"],[3,"dim3"],[4,"cudaError_t"],[4,"cudaChannelFormatKind"],[3,"cudaChannelFormatDesc"],[3,"cudaArray"],[3,"cudaMipmappedArray"],[3,"cudaArraySparseProperties"],[3,"cudaArraySparseProperties__bindgen_ty_1"],[4,"cudaMemoryType"],[4,"cudaMemcpyKind"],[3,"cudaPitchedPtr"],[3,"cudaExtent"],[3,"cudaPos"],[3,"cudaMemcpy3DParms"],[3,"cudaMemcpy3DPeerParms"],[3,"cudaMemsetParams"],[4,"cudaAccessProperty"],[3,"cudaHostNodeParams"],[4,"cudaStreamCaptureStatus"],[4,"cudaStreamCaptureMode"],[4,"cudaSynchronizationPolicy"],[4,"cudaStreamAttrID"],[4,"cudaStreamUpdateCaptureDependenciesFlags"],[4,"cudaUserObjectFlags"],[4,"cudaUserObjectRetainFlags"],[3,"cudaGraphicsResource"],[4,"cudaGraphicsRegisterFlags"],[4,"cudaGraphicsMapFlags"],[4,"cudaGraphicsCubeFace"],[4,"cudaKernelNodeAttrID"],[4,"cudaResourceType"],[4,"cudaResourceViewFormat"],[3,"cudaResourceDesc"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4"],[3,"cudaResourceViewDesc"],[3,"cudaPointerAttributes"],[4,"cudaFuncAttribute"],[4,"cudaFuncCache"],[4,"cudaSharedMemConfig"],[4,"cudaSharedCarveout"],[4,"cudaComputeMode"],[4,"cudaLimit"],[4,"cudaMemoryAdvise"],[4,"cudaMemRangeAttribute"],[4,"cudaOutputMode_t"],[4,"cudaFlushGPUDirectRDMAWritesOptions"],[4,"cudaGPUDirectRDMAWritesOrdering"],[4,"cudaFlushGPUDirectRDMAWritesScope"],[4,"cudaFlushGPUDirectRDMAWritesTarget"],[4,"cudaDeviceAttr"],[4,"cudaMemPoolAttr"],[4,"cudaMemLocationType"],[3,"cudaMemLocation"],[4,"cudaMemAccessFlags"],[3,"cudaMemAccessDesc"],[4,"cudaMemAllocationType"],[4,"cudaMemAllocationHandleType"],[3,"cudaMemPoolPtrExportData"],[4,"cudaGraphMemAttributeType"],[4,"cudaDeviceP2PAttr"],[3,"CUuuid_st"],[3,"cudaIpcEventHandle_st"],[3,"cudaIpcMemHandle_st"],[4,"cudaExternalMemoryHandleType"],[3,"cudaExternalMemoryHandleDesc"],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1"],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalMemoryBufferDesc"],[3,"cudaExternalMemoryMipmappedArrayDesc"],[4,"cudaExternalSemaphoreHandleType"],[3,"cudaExternalSemaphoreHandleDesc"],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1"],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3"],[3,"cudaExternalSemaphoreWaitParams"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3"],[3,"CUstream_st"],[3,"CUevent_st"],[3,"CUexternalMemory_st"],[3,"CUexternalSemaphore_st"],[3,"CUgraph_st"],[3,"CUgraphNode_st"],[3,"CUuserObject_st"],[3,"CUfunc_st"],[3,"CUmemPoolHandle_st"],[4,"cudaCGScope"],[3,"cudaExternalSemaphoreSignalNodeParams"],[3,"cudaExternalSemaphoreWaitNodeParams"],[4,"cudaGraphNodeType"],[3,"CUgraphExec_st"],[4,"cudaGraphExecUpdateResult"],[4,"cudaGetDriverEntryPointFlags"],[4,"cudaGraphDebugDotFlags"],[4,"cudaGraphInstantiateFlags"],[4,"cudaSurfaceBoundaryMode"],[4,"cudaSurfaceFormatMode"],[3,"surfaceReference"],[4,"cudaTextureAddressMode"],[4,"cudaTextureFilterMode"],[4,"cudaTextureReadMode"],[3,"cudnnContext"],[3,"cudnnRuntimeTag_t"],[3,"cudnnTensorStruct"],[3,"cudnnPoolingStruct"],[3,"cudnnFilterStruct"],[3,"cudnnLRNStruct"],[3,"cudnnActivationStruct"],[3,"cudnnSpatialTransformerStruct"],[3,"cudnnOpTensorStruct"],[3,"cudnnReduceTensorStruct"],[3,"cudnnCTCLossStruct"],[3,"cudnnTensorTransformStruct"],[3,"cudnnDropoutStruct"],[3,"cudnnAlgorithmStruct"],[3,"cudnnAlgorithmPerformanceStruct"],[3,"cudnnDebugStruct"],[3,"cudnnRNNStruct"],[3,"cudnnPersistentRNNPlan"],[3,"cudnnRNNDataStruct"],[3,"cudnnSeqDataStruct"],[3,"cudnnAttnStruct"],[3,"cudnnConvolutionStruct"],[3,"cudnnFusedOpsConstParamStruct"],[3,"cudnnFusedOpsVariantParamStruct"],[3,"cudnnFusedOpsPlanStruct"],[13,"NotInitialized"],[13,"AllocFailed"],[13,"BadParam"],[13,"InternalError"],[13,"InvalidValue"],[13,"ArchMismatch"],[13,"MappingError"],[13,"ExecutionFailed"],[13,"NotSupported"],[13,"LicenseError"],[13,"Unknown"],[3,"CudaDeviceMemory"],[4,"DataType"],[3,"ScalParams"],[3,"ActivationConfig"],[3,"ConvolutionConfig"],[3,"NormalizationConfig"],[3,"PoolingConfig"],[3,"RnnConfig"],[3,"DropoutConfig"],[8,"DataTypeInfo"]]},\
"rcudnn_sys":{"doc":"","tn":["CTCLossAlgo","CUDA_C_16BF","CUDA_C_16BF","CUDA_C_16F","CUDA_C_16F","CUDA_C_16I","CUDA_C_16I","CUDA_C_16U","CUDA_C_16U","CUDA_C_32F","CUDA_C_32F","CUDA_C_32I","CUDA_C_32I","CUDA_C_32U","CUDA_C_32U","CUDA_C_4I","CUDA_C_4I","CUDA_C_4U","CUDA_C_4U","CUDA_C_64F","CUDA_C_64F","CUDA_C_64I","CUDA_C_64I","CUDA_C_64U","CUDA_C_64U","CUDA_C_8I","CUDA_C_8I","CUDA_C_8U","CUDA_C_8U","CUDA_R_16BF","CUDA_R_16BF","CUDA_R_16F","CUDA_R_16F","CUDA_R_16I","CUDA_R_16I","CUDA_R_16U","CUDA_R_16U","CUDA_R_32F","CUDA_R_32F","CUDA_R_32I","CUDA_R_32I","CUDA_R_32U","CUDA_R_32U","CUDA_R_4I","CUDA_R_4I","CUDA_R_4U","CUDA_R_4U","CUDA_R_64F","CUDA_R_64F","CUDA_R_64I","CUDA_R_64I","CUDA_R_64U","CUDA_R_64U","CUDA_R_8I","CUDA_R_8I","CUDA_R_8U","CUDA_R_8U","CUDNN_16BIT_INDICES","CUDNN_32BIT_INDICES","CUDNN_64BIT_INDICES","CUDNN_8BIT_INDICES","CUDNN_ACTIVATION_CLIPPED_RELU","CUDNN_ACTIVATION_ELU","CUDNN_ACTIVATION_IDENTITY","CUDNN_ACTIVATION_RELU","CUDNN_ACTIVATION_SIGMOID","CUDNN_ACTIVATION_SWISH","CUDNN_ACTIVATION_TANH","CUDNN_ADV_INFER_MAJOR","CUDNN_ADV_INFER_MINOR","CUDNN_ADV_INFER_PATCH","CUDNN_ADV_TRAIN_MAJOR","CUDNN_ADV_TRAIN_MINOR","CUDNN_ADV_TRAIN_PATCH","CUDNN_ATTN_DISABLE_PROJ_BIASES","CUDNN_ATTN_ENABLE_PROJ_BIASES","CUDNN_ATTN_QUERYMAP_ALL_TO_ONE","CUDNN_ATTN_QUERYMAP_ONE_TO_ONE","CUDNN_ATTN_WKIND_COUNT","CUDNN_ATTR_CONVOLUTION_COMP_TYPE","CUDNN_ATTR_CONVOLUTION_CONV_MODE","CUDNN_ATTR_CONVOLUTION_DILATIONS","CUDNN_ATTR_CONVOLUTION_FILTER_STRIDES","CUDNN_ATTR_CONVOLUTION_POST_PADDINGS","CUDNN_ATTR_CONVOLUTION_PRE_PADDINGS","CUDNN_ATTR_CONVOLUTION_SPATIAL_DIMS","CUDNN_ATTR_ENGINECFG_ENGINE","CUDNN_ATTR_ENGINECFG_INTERMEDIATE_INFO","CUDNN_ATTR_ENGINECFG_KNOB_CHOICES","CUDNN_ATTR_ENGINEHEUR_MODE","CUDNN_ATTR_ENGINEHEUR_OPERATION_GRAPH","CUDNN_ATTR_ENGINEHEUR_RESULTS","CUDNN_ATTR_ENGINE_BEHAVIOR_NOTE","CUDNN_ATTR_ENGINE_GLOBAL_INDEX","CUDNN_ATTR_ENGINE_KNOB_INFO","CUDNN_ATTR_ENGINE_LAYOUT_INFO","CUDNN_ATTR_ENGINE_NUMERICAL_NOTE","CUDNN_ATTR_ENGINE_OPERATION_GRAPH","CUDNN_ATTR_EXECUTION_PLAN_COMPUTED_INTERMEDIATE_UIDS","CUDNN_ATTR_EXECUTION_PLAN_ENGINE_CONFIG","CUDNN_ATTR_EXECUTION_PLAN_HANDLE","CUDNN_ATTR_EXECUTION_PLAN_RUN_ONLY_INTERMEDIATE_UIDS","CUDNN_ATTR_EXECUTION_PLAN_WORKSPACE_SIZE","CUDNN_ATTR_INTERMEDIATE_INFO_DEPENDENT_ATTRIBUTES","CUDNN_ATTR_INTERMEDIATE_INFO_DEPENDENT_DATA_UIDS","CUDNN_ATTR_INTERMEDIATE_INFO_SIZE","CUDNN_ATTR_INTERMEDIATE_INFO_UNIQUE_ID","CUDNN_ATTR_KNOB_CHOICE_KNOB_TYPE","CUDNN_ATTR_KNOB_CHOICE_KNOB_VALUE","CUDNN_ATTR_KNOB_INFO_MAXIMUM_VALUE","CUDNN_ATTR_KNOB_INFO_MINIMUM_VALUE","CUDNN_ATTR_KNOB_INFO_STRIDE","CUDNN_ATTR_KNOB_INFO_TYPE","CUDNN_ATTR_LAYOUT_INFO_TENSOR_UID","CUDNN_ATTR_LAYOUT_INFO_TYPES","CUDNN_ATTR_MATMUL_COMP_TYPE","CUDNN_ATTR_OPERATIONGRAPH_ENGINE_GLOBAL_COUNT","CUDNN_ATTR_OPERATIONGRAPH_HANDLE","CUDNN_ATTR_OPERATIONGRAPH_OPS","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_BN_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_DBN_BIAS_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_DBN_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_DY_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_EQ_BIAS","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_EQ_DY_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_EQ_X_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_INVSTD_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_MATH_PREC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_BWD_WEIGHTS_X_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_ACCUM_COUNT_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_BIAS_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EPSILON_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EQ_BIAS_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EQ_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_EXP_AVERATE_FACTOR_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_MATH_PREC","CUDNN_ATTR_OPERATION_BN_FINALIZE_PREV_RUNNING_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_PREV_RUNNING_VAR_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_SAVED_INV_STD_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_SAVED_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_SCALE_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_STATS_MODE","CUDNN_ATTR_OPERATION_BN_FINALIZE_UPDATED_RUNNING_MEAN_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_UPDATED_RUNNING_VAR_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_Y_SQ_SUM_DESC","CUDNN_ATTR_OPERATION_BN_FINALIZE_Y_SUM_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_ALPHA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_BETA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_CONV_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_DX","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_DY","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_W","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_ALPHA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_BETA","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_CONV_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_DW","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_DY","CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_X","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_ALPHA","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_BETA","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_CONV_DESC","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_W","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_X","CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_Y","CUDNN_ATTR_OPERATION_GENSTATS_MATH_PREC","CUDNN_ATTR_OPERATION_GENSTATS_MODE","CUDNN_ATTR_OPERATION_GENSTATS_SQSUMDESC","CUDNN_ATTR_OPERATION_GENSTATS_SUMDESC","CUDNN_ATTR_OPERATION_GENSTATS_XDESC","CUDNN_ATTR_OPERATION_MATMUL_ADESC","CUDNN_ATTR_OPERATION_MATMUL_BDESC","CUDNN_ATTR_OPERATION_MATMUL_CDESC","CUDNN_ATTR_OPERATION_MATMUL_DESC","CUDNN_ATTR_OPERATION_MATMUL_IRREGULARLY_STRIDED_BATCH_COUNT","CUDNN_ATTR_OPERATION_POINTWISE_ALPHA1","CUDNN_ATTR_OPERATION_POINTWISE_ALPHA2","CUDNN_ATTR_OPERATION_POINTWISE_BDESC","CUDNN_ATTR_OPERATION_POINTWISE_DXDESC","CUDNN_ATTR_OPERATION_POINTWISE_DYDESC","CUDNN_ATTR_OPERATION_POINTWISE_PW_DESCRIPTOR","CUDNN_ATTR_OPERATION_POINTWISE_XDESC","CUDNN_ATTR_OPERATION_POINTWISE_YDESC","CUDNN_ATTR_OPERATION_REDUCTION_DESC","CUDNN_ATTR_OPERATION_REDUCTION_XDESC","CUDNN_ATTR_OPERATION_REDUCTION_YDESC","CUDNN_ATTR_POINTWISE_ELU_ALPHA","CUDNN_ATTR_POINTWISE_MATH_PREC","CUDNN_ATTR_POINTWISE_MODE","CUDNN_ATTR_POINTWISE_NAN_PROPAGATION","CUDNN_ATTR_POINTWISE_RELU_LOWER_CLIP","CUDNN_ATTR_POINTWISE_RELU_LOWER_CLIP_SLOPE","CUDNN_ATTR_POINTWISE_RELU_UPPER_CLIP","CUDNN_ATTR_POINTWISE_SOFTPLUS_BETA","CUDNN_ATTR_POINTWISE_SWISH_BETA","CUDNN_ATTR_REDUCTION_COMP_TYPE","CUDNN_ATTR_REDUCTION_OPERATOR","CUDNN_ATTR_TENSOR_BYTE_ALIGNMENT","CUDNN_ATTR_TENSOR_DATA_TYPE","CUDNN_ATTR_TENSOR_DIMENSIONS","CUDNN_ATTR_TENSOR_IS_BY_VALUE","CUDNN_ATTR_TENSOR_IS_VIRTUAL","CUDNN_ATTR_TENSOR_STRIDES","CUDNN_ATTR_TENSOR_UNIQUE_ID","CUDNN_ATTR_TENSOR_VECTORIZED_DIMENSION","CUDNN_ATTR_TENSOR_VECTOR_COUNT","CUDNN_ATTR_VARIANT_PACK_DATA_POINTERS","CUDNN_ATTR_VARIANT_PACK_INTERMEDIATES","CUDNN_ATTR_VARIANT_PACK_UNIQUE_IDS","CUDNN_ATTR_VARIANT_PACK_WORKSPACE","CUDNN_BACKEND_CONVOLUTION_DESCRIPTOR","CUDNN_BACKEND_ENGINECFG_DESCRIPTOR","CUDNN_BACKEND_ENGINEHEUR_DESCRIPTOR","CUDNN_BACKEND_ENGINE_DESCRIPTOR","CUDNN_BACKEND_EXECUTION_PLAN_DESCRIPTOR","CUDNN_BACKEND_INTERMEDIATE_INFO_DESCRIPTOR","CUDNN_BACKEND_KNOB_CHOICE_DESCRIPTOR","CUDNN_BACKEND_KNOB_INFO_DESCRIPTOR","CUDNN_BACKEND_LAYOUT_INFO_DESCRIPTOR","CUDNN_BACKEND_MATMUL_DESCRIPTOR","CUDNN_BACKEND_OPERATIONGRAPH_DESCRIPTOR","CUDNN_BACKEND_OPERATION_BN_BWD_WEIGHTS_DESCRIPTOR","CUDNN_BACKEND_OPERATION_BN_FINALIZE_STATISTICS_DESCRIPTOR","CUDNN_BACKEND_OPERATION_CONVOLUTION_BACKWARD_DATA_DESCRIPTOR","CUDNN_BACKEND_OPERATION_CONVOLUTION_BACKWARD_FILTER_DESCRIPTOR","CUDNN_BACKEND_OPERATION_CONVOLUTION_FORWARD_DESCRIPTOR","CUDNN_BACKEND_OPERATION_GEN_STATS_DESCRIPTOR","CUDNN_BACKEND_OPERATION_MATMUL_DESCRIPTOR","CUDNN_BACKEND_OPERATION_POINTWISE_DESCRIPTOR","CUDNN_BACKEND_OPERATION_REDUCTION_DESCRIPTOR","CUDNN_BACKEND_POINTWISE_DESCRIPTOR","CUDNN_BACKEND_REDUCTION_DESCRIPTOR","CUDNN_BACKEND_TENSOR_DESCRIPTOR","CUDNN_BACKEND_VARIANT_PACK_DESCRIPTOR","CUDNN_BATCHNORM_OPS_BN","CUDNN_BATCHNORM_OPS_BN_ACTIVATION","CUDNN_BATCHNORM_OPS_BN_ADD_ACTIVATION","CUDNN_BATCHNORM_PER_ACTIVATION","CUDNN_BATCHNORM_SPATIAL","CUDNN_BATCHNORM_SPATIAL_PERSISTENT","CUDNN_BEHAVIOR_NOTE_RUNTIME_COMPILATION","CUDNN_BEHAVIOR_NOTE_TYPE_COUNT","CUDNN_BIDIRECTIONAL","CUDNN_BN_FINALIZE_STATISTICS_INFERENCE","CUDNN_BN_FINALIZE_STATISTICS_TRAINING","CUDNN_BN_MIN_EPSILON","CUDNN_CNN_INFER_MAJOR","CUDNN_CNN_INFER_MINOR","CUDNN_CNN_INFER_PATCH","CUDNN_CNN_TRAIN_MAJOR","CUDNN_CNN_TRAIN_MINOR","CUDNN_CNN_TRAIN_PATCH","CUDNN_CONVOLUTION","CUDNN_CONVOLUTION_BWD_DATA_ALGO_0","CUDNN_CONVOLUTION_BWD_DATA_ALGO_1","CUDNN_CONVOLUTION_BWD_DATA_ALGO_COUNT","CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT","CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT_TILING","CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD","CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD_NONFUSED","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_0","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_1","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_3","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_COUNT","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT_TILING","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD","CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD_NONFUSED","CUDNN_CONVOLUTION_FWD_ALGO_COUNT","CUDNN_CONVOLUTION_FWD_ALGO_DIRECT","CUDNN_CONVOLUTION_FWD_ALGO_FFT","CUDNN_CONVOLUTION_FWD_ALGO_FFT_TILING","CUDNN_CONVOLUTION_FWD_ALGO_GEMM","CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_GEMM","CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM","CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD","CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD_NONFUSED","CUDNN_CROSS_CORRELATION","CUDNN_CTC_LOSS_ALGO_DETERMINISTIC","CUDNN_CTC_LOSS_ALGO_NON_DETERMINISTIC","CUDNN_DATA_BFLOAT16","CUDNN_DATA_DOUBLE","CUDNN_DATA_FLOAT","CUDNN_DATA_HALF","CUDNN_DATA_INT32","CUDNN_DATA_INT64","CUDNN_DATA_INT8","CUDNN_DATA_INT8x32","CUDNN_DATA_INT8x4","CUDNN_DATA_UINT8","CUDNN_DATA_UINT8x4","CUDNN_DEFAULT_MATH","CUDNN_DEFAULT_REORDER","CUDNN_DETERMINISTIC","CUDNN_DIM_MAX","CUDNN_DIVNORM_PRECOMPUTED_MEANS","CUDNN_ERRQUERY_BLOCKING","CUDNN_ERRQUERY_NONBLOCKING","CUDNN_ERRQUERY_RAWCODE","CUDNN_FMA_MATH","CUDNN_FUSED_BN_FINALIZE_STATISTICS_INFERENCE","CUDNN_FUSED_BN_FINALIZE_STATISTICS_TRAINING","CUDNN_FUSED_CONV_SCALE_BIAS_ADD_ACTIVATION","CUDNN_FUSED_DACTIVATION_FORK_DBATCHNORM","CUDNN_FUSED_SCALE_BIAS_ACTIVATION_CONV_BNSTATS","CUDNN_FUSED_SCALE_BIAS_ACTIVATION_WGRAD","CUDNN_FUSED_SCALE_BIAS_ADD_ACTIVATION_GEN_BITMASK","CUDNN_FWD_MODE_INFERENCE","CUDNN_FWD_MODE_TRAINING","CUDNN_GENSTATS_SUM_SQSUM","CUDNN_GRU","CUDNN_HEUR_MODES_COUNT","CUDNN_HEUR_MODE_B","CUDNN_HEUR_MODE_INSTANT","CUDNN_KNOB_TYPE_CHUNK_K","CUDNN_KNOB_TYPE_COUNTS","CUDNN_KNOB_TYPE_CTA_SPLIT_K_MODE","CUDNN_KNOB_TYPE_EDGE","CUDNN_KNOB_TYPE_IDX_MODE","CUDNN_KNOB_TYPE_KBLOCK","CUDNN_KNOB_TYPE_KERNEL_CFG","CUDNN_KNOB_TYPE_LDGA","CUDNN_KNOB_TYPE_LDGB","CUDNN_KNOB_TYPE_LDGC","CUDNN_KNOB_TYPE_MULTIPLY","CUDNN_KNOB_TYPE_REDUCTION_MODE","CUDNN_KNOB_TYPE_SINGLEBUFFER","CUDNN_KNOB_TYPE_SLICED","CUDNN_KNOB_TYPE_SPECFILT","CUDNN_KNOB_TYPE_SPLIT_H","CUDNN_KNOB_TYPE_SPLIT_K","CUDNN_KNOB_TYPE_SPLIT_K_BUF","CUDNN_KNOB_TYPE_SPLIT_K_SLC","CUDNN_KNOB_TYPE_SPLIT_RS","CUDNN_KNOB_TYPE_STAGES","CUDNN_KNOB_TYPE_SWIZZLE","CUDNN_KNOB_TYPE_TILEK","CUDNN_KNOB_TYPE_TILE_SIZE","CUDNN_KNOB_TYPE_USE_TEX","CUDNN_KNOB_TYPE_WINO_TILE","CUDNN_LAYOUT_TYPE_COUNT","CUDNN_LAYOUT_TYPE_PREFERRED_NCHW","CUDNN_LAYOUT_TYPE_PREFERRED_NHWC","CUDNN_LAYOUT_TYPE_PREFERRED_PAD4CK","CUDNN_LAYOUT_TYPE_PREFERRED_PAD8CK","CUDNN_LINEAR_INPUT","CUDNN_LOSS_NORMALIZATION_NONE","CUDNN_LOSS_NORMALIZATION_SOFTMAX","CUDNN_LRN_CROSS_CHANNEL_DIM1","CUDNN_LRN_MAX_N","CUDNN_LRN_MIN_BETA","CUDNN_LRN_MIN_K","CUDNN_LRN_MIN_N","CUDNN_LSTM","CUDNN_MAJOR","CUDNN_MH_ATTN_K_BIASES","CUDNN_MH_ATTN_K_WEIGHTS","CUDNN_MH_ATTN_O_BIASES","CUDNN_MH_ATTN_O_WEIGHTS","CUDNN_MH_ATTN_Q_BIASES","CUDNN_MH_ATTN_Q_WEIGHTS","CUDNN_MH_ATTN_V_BIASES","CUDNN_MH_ATTN_V_WEIGHTS","CUDNN_MINOR","CUDNN_NON_DETERMINISTIC","CUDNN_NORM_ALGO_PERSIST","CUDNN_NORM_ALGO_STANDARD","CUDNN_NORM_OPS_NORM","CUDNN_NORM_OPS_NORM_ACTIVATION","CUDNN_NORM_OPS_NORM_ADD_ACTIVATION","CUDNN_NORM_PER_ACTIVATION","CUDNN_NORM_PER_CHANNEL","CUDNN_NOT_PROPAGATE_NAN","CUDNN_NO_REORDER","CUDNN_NUMERICAL_NOTE_DOWN_CONVERT_INPUTS","CUDNN_NUMERICAL_NOTE_FFT","CUDNN_NUMERICAL_NOTE_NONDETERMINISTIC","CUDNN_NUMERICAL_NOTE_REDUCED_PRECISION_REDUCTION","CUDNN_NUMERICAL_NOTE_TENSOR_CORE","CUDNN_NUMERICAL_NOTE_TYPE_COUNT","CUDNN_NUMERICAL_NOTE_WINOGRAD","CUDNN_OPS_INFER_MAJOR","CUDNN_OPS_INFER_MINOR","CUDNN_OPS_INFER_PATCH","CUDNN_OPS_TRAIN_MAJOR","CUDNN_OPS_TRAIN_MINOR","CUDNN_OPS_TRAIN_PATCH","CUDNN_OP_TENSOR_ADD","CUDNN_OP_TENSOR_MAX","CUDNN_OP_TENSOR_MIN","CUDNN_OP_TENSOR_MUL","CUDNN_OP_TENSOR_NOT","CUDNN_OP_TENSOR_SQRT","CUDNN_PARAM_ACTIVATION_BITMASK_DESC","CUDNN_PARAM_ACTIVATION_BITMASK_PLACEHOLDER","CUDNN_PARAM_ACTIVATION_DESC","CUDNN_PARAM_BN_BIAS_PLACEHOLDER","CUDNN_PARAM_BN_DBIAS_PLACEHOLDER","CUDNN_PARAM_BN_DSCALE_PLACEHOLDER","CUDNN_PARAM_BN_EQBIAS_PLACEHOLDER","CUDNN_PARAM_BN_EQSCALEBIAS_DESC","CUDNN_PARAM_BN_EQSCALE_PLACEHOLDER","CUDNN_PARAM_BN_MODE","CUDNN_PARAM_BN_RUNNING_MEAN_PLACEHOLDER","CUDNN_PARAM_BN_RUNNING_VAR_PLACEHOLDER","CUDNN_PARAM_BN_SAVED_INVSTD_PLACEHOLDER","CUDNN_PARAM_BN_SAVED_MEAN_PLACEHOLDER","CUDNN_PARAM_BN_SCALEBIAS_MEANVAR_DESC","CUDNN_PARAM_BN_SCALE_PLACEHOLDER","CUDNN_PARAM_BN_Z_EQBIAS_PLACEHOLDER","CUDNN_PARAM_BN_Z_EQSCALEBIAS_DESC","CUDNN_PARAM_BN_Z_EQSCALE_PLACEHOLDER","CUDNN_PARAM_CONV_DESC","CUDNN_PARAM_DWDATA_PLACEHOLDER","CUDNN_PARAM_DWDESC","CUDNN_PARAM_DXDATA_PLACEHOLDER","CUDNN_PARAM_DXDESC","CUDNN_PARAM_DYDATA_PLACEHOLDER","CUDNN_PARAM_DYDESC","CUDNN_PARAM_DZDATA_PLACEHOLDER","CUDNN_PARAM_DZDESC","CUDNN_PARAM_WDATA_PLACEHOLDER","CUDNN_PARAM_WDESC","CUDNN_PARAM_XDATA_PLACEHOLDER","CUDNN_PARAM_XDESC","CUDNN_PARAM_YDATA_PLACEHOLDER","CUDNN_PARAM_YDESC","CUDNN_PARAM_YSQSUM_PLACEHOLDER","CUDNN_PARAM_YSTATS_DESC","CUDNN_PARAM_YSUM_PLACEHOLDER","CUDNN_PARAM_ZDATA_PLACEHOLDER","CUDNN_PARAM_ZDESC","CUDNN_PATCHLEVEL","CUDNN_POINTWISE_ADD","CUDNN_POINTWISE_ELU_BWD","CUDNN_POINTWISE_ELU_FWD","CUDNN_POINTWISE_GELU_BWD","CUDNN_POINTWISE_GELU_FWD","CUDNN_POINTWISE_MAX","CUDNN_POINTWISE_MIN","CUDNN_POINTWISE_MUL","CUDNN_POINTWISE_RELU_BWD","CUDNN_POINTWISE_RELU_FWD","CUDNN_POINTWISE_SIGMOID_BWD","CUDNN_POINTWISE_SIGMOID_FWD","CUDNN_POINTWISE_SOFTPLUS_BWD","CUDNN_POINTWISE_SOFTPLUS_FWD","CUDNN_POINTWISE_SQRT","CUDNN_POINTWISE_SWISH_BWD","CUDNN_POINTWISE_SWISH_FWD","CUDNN_POINTWISE_TANH_BWD","CUDNN_POINTWISE_TANH_FWD","CUDNN_POOLING_AVERAGE_COUNT_EXCLUDE_PADDING","CUDNN_POOLING_AVERAGE_COUNT_INCLUDE_PADDING","CUDNN_POOLING_MAX","CUDNN_POOLING_MAX_DETERMINISTIC","CUDNN_PROPAGATE_NAN","CUDNN_PTR_16B_ALIGNED","CUDNN_PTR_ACTIVATION_BITMASK","CUDNN_PTR_BN_BIAS","CUDNN_PTR_BN_DBIAS","CUDNN_PTR_BN_DSCALE","CUDNN_PTR_BN_EQBIAS","CUDNN_PTR_BN_EQSCALE","CUDNN_PTR_BN_RUNNING_MEAN","CUDNN_PTR_BN_RUNNING_VAR","CUDNN_PTR_BN_SAVED_INVSTD","CUDNN_PTR_BN_SAVED_MEAN","CUDNN_PTR_BN_SCALE","CUDNN_PTR_BN_Z_EQBIAS","CUDNN_PTR_BN_Z_EQSCALE","CUDNN_PTR_DWDATA","CUDNN_PTR_DXDATA","CUDNN_PTR_DYDATA","CUDNN_PTR_DZDATA","CUDNN_PTR_ELEM_ALIGNED","CUDNN_PTR_NULL","CUDNN_PTR_WDATA","CUDNN_PTR_WORKSPACE","CUDNN_PTR_XDATA","CUDNN_PTR_YDATA","CUDNN_PTR_YSQSUM","CUDNN_PTR_YSUM","CUDNN_PTR_ZDATA","CUDNN_REDUCE_TENSOR_ADD","CUDNN_REDUCE_TENSOR_AMAX","CUDNN_REDUCE_TENSOR_AVG","CUDNN_REDUCE_TENSOR_FLATTENED_INDICES","CUDNN_REDUCE_TENSOR_MAX","CUDNN_REDUCE_TENSOR_MIN","CUDNN_REDUCE_TENSOR_MUL","CUDNN_REDUCE_TENSOR_MUL_NO_ZEROS","CUDNN_REDUCE_TENSOR_NORM1","CUDNN_REDUCE_TENSOR_NORM2","CUDNN_REDUCE_TENSOR_NO_INDICES","CUDNN_RNN_ALGO_COUNT","CUDNN_RNN_ALGO_PERSIST_DYNAMIC","CUDNN_RNN_ALGO_PERSIST_STATIC","CUDNN_RNN_ALGO_PERSIST_STATIC_SMALL_H","CUDNN_RNN_ALGO_STANDARD","CUDNN_RNN_CLIP_MINMAX","CUDNN_RNN_CLIP_NONE","CUDNN_RNN_DATA_LAYOUT_BATCH_MAJOR_UNPACKED","CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_PACKED","CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_UNPACKED","CUDNN_RNN_DOUBLE_BIAS","CUDNN_RNN_NO_BIAS","CUDNN_RNN_PADDED_IO_DISABLED","CUDNN_RNN_PADDED_IO_ENABLED","CUDNN_RNN_RELU","CUDNN_RNN_SINGLE_INP_BIAS","CUDNN_RNN_SINGLE_REC_BIAS","CUDNN_RNN_TANH","CUDNN_SAMPLER_BILINEAR","CUDNN_SCALAR_DOUBLE_BN_EPSILON","CUDNN_SCALAR_DOUBLE_BN_EXP_AVG_FACTOR","CUDNN_SCALAR_INT64_T_BN_ACCUMULATION_COUNT","CUDNN_SCALAR_SIZE_T_WORKSPACE_SIZE_IN_BYTES","CUDNN_SEQDATA_BATCH_DIM","CUDNN_SEQDATA_BEAM_DIM","CUDNN_SEQDATA_DIM_COUNT","CUDNN_SEQDATA_TIME_DIM","CUDNN_SEQDATA_VECT_DIM","CUDNN_SEV_ERROR","CUDNN_SEV_FATAL","CUDNN_SEV_INFO","CUDNN_SEV_WARNING","CUDNN_SKIP_INPUT","CUDNN_SOFTMAX_ACCURATE","CUDNN_SOFTMAX_FAST","CUDNN_SOFTMAX_LOG","CUDNN_SOFTMAX_MODE_CHANNEL","CUDNN_SOFTMAX_MODE_INSTANCE","CUDNN_STATUS_ALLOC_FAILED","CUDNN_STATUS_ARCH_MISMATCH","CUDNN_STATUS_BAD_PARAM","CUDNN_STATUS_EXECUTION_FAILED","CUDNN_STATUS_INTERNAL_ERROR","CUDNN_STATUS_INVALID_VALUE","CUDNN_STATUS_LICENSE_ERROR","CUDNN_STATUS_MAPPING_ERROR","CUDNN_STATUS_NOT_INITIALIZED","CUDNN_STATUS_NOT_SUPPORTED","CUDNN_STATUS_RUNTIME_FP_OVERFLOW","CUDNN_STATUS_RUNTIME_IN_PROGRESS","CUDNN_STATUS_RUNTIME_PREREQUISITE_MISSING","CUDNN_STATUS_SUCCESS","CUDNN_STATUS_VERSION_MISMATCH","CUDNN_TENSOR_NCHW","CUDNN_TENSOR_NCHW_VECT_C","CUDNN_TENSOR_NHWC","CUDNN_TENSOR_OP_MATH","CUDNN_TENSOR_OP_MATH_ALLOW_CONVERSION","CUDNN_TRANSFORM_FOLD","CUDNN_TRANSFORM_UNFOLD","CUDNN_TYPE_ATTRIB_NAME","CUDNN_TYPE_BACKEND_DESCRIPTOR","CUDNN_TYPE_BEHAVIOR_NOTE","CUDNN_TYPE_BN_FINALIZE_STATS_MODE","CUDNN_TYPE_BOOLEAN","CUDNN_TYPE_CONVOLUTION_MODE","CUDNN_TYPE_DATA_TYPE","CUDNN_TYPE_DOUBLE","CUDNN_TYPE_FLOAT","CUDNN_TYPE_GENSTATS_MODE","CUDNN_TYPE_HANDLE","CUDNN_TYPE_HEUR_MODE","CUDNN_TYPE_INT64","CUDNN_TYPE_KNOB_TYPE","CUDNN_TYPE_LAYOUT_TYPE","CUDNN_TYPE_NAN_PROPOGATION","CUDNN_TYPE_NUMERICAL_NOTE","CUDNN_TYPE_POINTWISE_MODE","CUDNN_TYPE_REDUCTION_OPERATOR_TYPE","CUDNN_TYPE_VOID_PTR","CUDNN_UNIDIRECTIONAL","CUDNN_VERSION","CUDNN_WGRAD_MODE_ADD","CUDNN_WGRAD_MODE_SET","CUevent_st","CUexternalMemory_st","CUexternalSemaphore_st","CUfunc_st","CUgraphExec_st","CUgraphNode_st","CUgraph_st","CUmemPoolHandle_st","CUstream_st","CUuserObject_st","CUuuid","CUuuid_st","ECCEnabled","RNNAlgo","__cudaReserved","__int32_t","__int64_t","__uint32_t","accessDescCount","accessDescs","accessPolicyMaxWindowSize","accessPolicyWindow","accessPolicyWindow","addressMode","addressMode","algo","algo","algo","algo","allocType","args","array","array","asyncEngineCount","base_ptr","binaryVersion","blockDim","blockDim","borderColor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytesize","cacheModeCA","canMapHostMemory","canUseHostPointerForRegisteredMem","channelDesc","channelDesc","clockRate","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","computeMode","computePreemptionSupported","concurrentKernels","concurrentManagedAccess","constSizeBytes","convBwdDataAlgo","convBwdFilterAlgo","convFwdAlgo","cooperative","cooperativeLaunch","cooperativeMultiDeviceLaunch","cudaAccessPolicyWindow","cudaAccessProperty","cudaAccessPropertyNormal","cudaAccessPropertyPersisting","cudaAccessPropertyStreaming","cudaAddressModeBorder","cudaAddressModeClamp","cudaAddressModeMirror","cudaAddressModeWrap","cudaArray","cudaArrayGetInfo","cudaArrayGetPlane","cudaArrayGetSparseProperties","cudaArraySparseProperties","cudaArraySparseProperties__bindgen_ty_1","cudaArray_const_t","cudaArray_t","cudaBindSurfaceToArray","cudaBindTexture","cudaBindTexture2D","cudaBindTextureToArray","cudaBindTextureToMipmappedArray","cudaBoundaryModeClamp","cudaBoundaryModeTrap","cudaBoundaryModeZero","cudaCGScope","cudaCGScopeGrid","cudaCGScopeInvalid","cudaCGScopeMultiGrid","cudaCSV","cudaCSV","cudaChannelFormatDesc","cudaChannelFormatKind","cudaChannelFormatKindFloat","cudaChannelFormatKindNV12","cudaChannelFormatKindNone","cudaChannelFormatKindSigned","cudaChannelFormatKindUnsigned","cudaChooseDevice","cudaComputeMode","cudaComputeModeDefault","cudaComputeModeExclusive","cudaComputeModeExclusiveProcess","cudaComputeModeProhibited","cudaCreateChannelDesc","cudaCreateSurfaceObject","cudaCreateTextureObject","cudaCtxResetPersistingL2Cache","cudaDataType","cudaDataType_t","cudaDestroyExternalMemory","cudaDestroyExternalSemaphore","cudaDestroySurfaceObject","cudaDestroyTextureObject","cudaDevAttrAsyncEngineCount","cudaDevAttrCanFlushRemoteWrites","cudaDevAttrCanMapHostMemory","cudaDevAttrCanUseHostPointerForRegisteredMem","cudaDevAttrClockRate","cudaDevAttrComputeCapabilityMajor","cudaDevAttrComputeCapabilityMinor","cudaDevAttrComputeMode","cudaDevAttrComputePreemptionSupported","cudaDevAttrConcurrentKernels","cudaDevAttrConcurrentManagedAccess","cudaDevAttrCooperativeLaunch","cudaDevAttrCooperativeMultiDeviceLaunch","cudaDevAttrDirectManagedMemAccessFromHost","cudaDevAttrEccEnabled","cudaDevAttrGPUDirectRDMAFlushWritesOptions","cudaDevAttrGPUDirectRDMASupported","cudaDevAttrGPUDirectRDMAWritesOrdering","cudaDevAttrGlobalL1CacheSupported","cudaDevAttrGlobalMemoryBusWidth","cudaDevAttrGpuOverlap","cudaDevAttrHostNativeAtomicSupported","cudaDevAttrHostRegisterReadOnlySupported","cudaDevAttrHostRegisterSupported","cudaDevAttrIntegrated","cudaDevAttrIsMultiGpuBoard","cudaDevAttrKernelExecTimeout","cudaDevAttrL2CacheSize","cudaDevAttrLocalL1CacheSupported","cudaDevAttrManagedMemory","cudaDevAttrMax","cudaDevAttrMaxAccessPolicyWindowSize","cudaDevAttrMaxBlockDimX","cudaDevAttrMaxBlockDimY","cudaDevAttrMaxBlockDimZ","cudaDevAttrMaxBlocksPerMultiprocessor","cudaDevAttrMaxGridDimX","cudaDevAttrMaxGridDimY","cudaDevAttrMaxGridDimZ","cudaDevAttrMaxPersistingL2CacheSize","cudaDevAttrMaxPitch","cudaDevAttrMaxRegistersPerBlock","cudaDevAttrMaxRegistersPerMultiprocessor","cudaDevAttrMaxSharedMemoryPerBlock","cudaDevAttrMaxSharedMemoryPerBlockOptin","cudaDevAttrMaxSharedMemoryPerMultiprocessor","cudaDevAttrMaxSurface1DLayeredLayers","cudaDevAttrMaxSurface1DLayeredWidth","cudaDevAttrMaxSurface1DWidth","cudaDevAttrMaxSurface2DHeight","cudaDevAttrMaxSurface2DLayeredHeight","cudaDevAttrMaxSurface2DLayeredLayers","cudaDevAttrMaxSurface2DLayeredWidth","cudaDevAttrMaxSurface2DWidth","cudaDevAttrMaxSurface3DDepth","cudaDevAttrMaxSurface3DHeight","cudaDevAttrMaxSurface3DWidth","cudaDevAttrMaxSurfaceCubemapLayeredLayers","cudaDevAttrMaxSurfaceCubemapLayeredWidth","cudaDevAttrMaxSurfaceCubemapWidth","cudaDevAttrMaxTexture1DLayeredLayers","cudaDevAttrMaxTexture1DLayeredWidth","cudaDevAttrMaxTexture1DLinearWidth","cudaDevAttrMaxTexture1DMipmappedWidth","cudaDevAttrMaxTexture1DWidth","cudaDevAttrMaxTexture2DGatherHeight","cudaDevAttrMaxTexture2DGatherWidth","cudaDevAttrMaxTexture2DHeight","cudaDevAttrMaxTexture2DLayeredHeight","cudaDevAttrMaxTexture2DLayeredLayers","cudaDevAttrMaxTexture2DLayeredWidth","cudaDevAttrMaxTexture2DLinearHeight","cudaDevAttrMaxTexture2DLinearPitch","cudaDevAttrMaxTexture2DLinearWidth","cudaDevAttrMaxTexture2DMipmappedHeight","cudaDevAttrMaxTexture2DMipmappedWidth","cudaDevAttrMaxTexture2DWidth","cudaDevAttrMaxTexture3DDepth","cudaDevAttrMaxTexture3DDepthAlt","cudaDevAttrMaxTexture3DHeight","cudaDevAttrMaxTexture3DHeightAlt","cudaDevAttrMaxTexture3DWidth","cudaDevAttrMaxTexture3DWidthAlt","cudaDevAttrMaxTextureCubemapLayeredLayers","cudaDevAttrMaxTextureCubemapLayeredWidth","cudaDevAttrMaxTextureCubemapWidth","cudaDevAttrMaxThreadsPerBlock","cudaDevAttrMaxThreadsPerMultiProcessor","cudaDevAttrMaxTimelineSemaphoreInteropSupported","cudaDevAttrMemoryClockRate","cudaDevAttrMemoryPoolSupportedHandleTypes","cudaDevAttrMemoryPoolsSupported","cudaDevAttrMultiGpuBoardGroupID","cudaDevAttrMultiProcessorCount","cudaDevAttrPageableMemoryAccess","cudaDevAttrPageableMemoryAccessUsesHostPageTables","cudaDevAttrPciBusId","cudaDevAttrPciDeviceId","cudaDevAttrPciDomainId","cudaDevAttrReserved92","cudaDevAttrReserved93","cudaDevAttrReserved94","cudaDevAttrReservedSharedMemoryPerBlock","cudaDevAttrSingleToDoublePrecisionPerfRatio","cudaDevAttrSparseCudaArraySupported","cudaDevAttrStreamPrioritiesSupported","cudaDevAttrSurfaceAlignment","cudaDevAttrTccDriver","cudaDevAttrTextureAlignment","cudaDevAttrTexturePitchAlignment","cudaDevAttrTotalConstantMemory","cudaDevAttrUnifiedAddressing","cudaDevAttrWarpSize","cudaDevP2PAttrAccessSupported","cudaDevP2PAttrCudaArrayAccessSupported","cudaDevP2PAttrNativeAtomicSupported","cudaDevP2PAttrPerformanceRank","cudaDeviceAttr","cudaDeviceCanAccessPeer","cudaDeviceDisablePeerAccess","cudaDeviceEnablePeerAccess","cudaDeviceFlushGPUDirectRDMAWrites","cudaDeviceGetAttribute","cudaDeviceGetByPCIBusId","cudaDeviceGetCacheConfig","cudaDeviceGetDefaultMemPool","cudaDeviceGetGraphMemAttribute","cudaDeviceGetLimit","cudaDeviceGetMemPool","cudaDeviceGetNvSciSyncAttributes","cudaDeviceGetP2PAttribute","cudaDeviceGetPCIBusId","cudaDeviceGetSharedMemConfig","cudaDeviceGetStreamPriorityRange","cudaDeviceGetTexture1DLinearMaxWidth","cudaDeviceGraphMemTrim","cudaDeviceId","cudaDeviceP2PAttr","cudaDeviceProp","cudaDeviceReset","cudaDeviceSetCacheConfig","cudaDeviceSetGraphMemAttribute","cudaDeviceSetLimit","cudaDeviceSetMemPool","cudaDeviceSetSharedMemConfig","cudaDeviceSynchronize","cudaDriverGetVersion","cudaEnableDefault","cudaEnableLegacyStream","cudaEnablePerThreadDefaultStream","cudaError","cudaErrorAddressOfConstant","cudaErrorAddressOfConstant","cudaErrorAlreadyAcquired","cudaErrorAlreadyAcquired","cudaErrorAlreadyMapped","cudaErrorAlreadyMapped","cudaErrorApiFailureBase","cudaErrorApiFailureBase","cudaErrorArrayIsMapped","cudaErrorArrayIsMapped","cudaErrorAssert","cudaErrorAssert","cudaErrorCallRequiresNewerDriver","cudaErrorCallRequiresNewerDriver","cudaErrorCapturedEvent","cudaErrorCapturedEvent","cudaErrorCompatNotSupportedOnDevice","cudaErrorCompatNotSupportedOnDevice","cudaErrorContextIsDestroyed","cudaErrorContextIsDestroyed","cudaErrorCooperativeLaunchTooLarge","cudaErrorCooperativeLaunchTooLarge","cudaErrorCudartUnloading","cudaErrorCudartUnloading","cudaErrorDeviceAlreadyInUse","cudaErrorDeviceAlreadyInUse","cudaErrorDeviceNotLicensed","cudaErrorDeviceNotLicensed","cudaErrorDeviceUninitialized","cudaErrorDeviceUninitialized","cudaErrorDevicesUnavailable","cudaErrorDevicesUnavailable","cudaErrorDuplicateSurfaceName","cudaErrorDuplicateSurfaceName","cudaErrorDuplicateTextureName","cudaErrorDuplicateTextureName","cudaErrorDuplicateVariableName","cudaErrorDuplicateVariableName","cudaErrorECCUncorrectable","cudaErrorECCUncorrectable","cudaErrorFileNotFound","cudaErrorFileNotFound","cudaErrorGraphExecUpdateFailure","cudaErrorGraphExecUpdateFailure","cudaErrorHardwareStackError","cudaErrorHardwareStackError","cudaErrorHostMemoryAlreadyRegistered","cudaErrorHostMemoryAlreadyRegistered","cudaErrorHostMemoryNotRegistered","cudaErrorHostMemoryNotRegistered","cudaErrorIllegalAddress","cudaErrorIllegalAddress","cudaErrorIllegalInstruction","cudaErrorIllegalInstruction","cudaErrorIllegalState","cudaErrorIllegalState","cudaErrorIncompatibleDriverContext","cudaErrorIncompatibleDriverContext","cudaErrorInitializationError","cudaErrorInitializationError","cudaErrorInsufficientDriver","cudaErrorInsufficientDriver","cudaErrorInvalidAddressSpace","cudaErrorInvalidAddressSpace","cudaErrorInvalidChannelDescriptor","cudaErrorInvalidChannelDescriptor","cudaErrorInvalidConfiguration","cudaErrorInvalidConfiguration","cudaErrorInvalidDevice","cudaErrorInvalidDevice","cudaErrorInvalidDeviceFunction","cudaErrorInvalidDeviceFunction","cudaErrorInvalidDevicePointer","cudaErrorInvalidDevicePointer","cudaErrorInvalidFilterSetting","cudaErrorInvalidFilterSetting","cudaErrorInvalidGraphicsContext","cudaErrorInvalidGraphicsContext","cudaErrorInvalidHostPointer","cudaErrorInvalidHostPointer","cudaErrorInvalidKernelImage","cudaErrorInvalidKernelImage","cudaErrorInvalidMemcpyDirection","cudaErrorInvalidMemcpyDirection","cudaErrorInvalidNormSetting","cudaErrorInvalidNormSetting","cudaErrorInvalidPc","cudaErrorInvalidPc","cudaErrorInvalidPitchValue","cudaErrorInvalidPitchValue","cudaErrorInvalidPtx","cudaErrorInvalidPtx","cudaErrorInvalidResourceHandle","cudaErrorInvalidResourceHandle","cudaErrorInvalidSource","cudaErrorInvalidSource","cudaErrorInvalidSurface","cudaErrorInvalidSurface","cudaErrorInvalidSymbol","cudaErrorInvalidSymbol","cudaErrorInvalidTexture","cudaErrorInvalidTexture","cudaErrorInvalidTextureBinding","cudaErrorInvalidTextureBinding","cudaErrorInvalidValue","cudaErrorInvalidValue","cudaErrorJitCompilationDisabled","cudaErrorJitCompilationDisabled","cudaErrorJitCompilerNotFound","cudaErrorJitCompilerNotFound","cudaErrorLaunchFailure","cudaErrorLaunchFailure","cudaErrorLaunchFileScopedSurf","cudaErrorLaunchFileScopedSurf","cudaErrorLaunchFileScopedTex","cudaErrorLaunchFileScopedTex","cudaErrorLaunchIncompatibleTexturing","cudaErrorLaunchIncompatibleTexturing","cudaErrorLaunchMaxDepthExceeded","cudaErrorLaunchMaxDepthExceeded","cudaErrorLaunchOutOfResources","cudaErrorLaunchOutOfResources","cudaErrorLaunchPendingCountExceeded","cudaErrorLaunchPendingCountExceeded","cudaErrorLaunchTimeout","cudaErrorLaunchTimeout","cudaErrorMapBufferObjectFailed","cudaErrorMapBufferObjectFailed","cudaErrorMemoryAllocation","cudaErrorMemoryAllocation","cudaErrorMemoryValueTooLarge","cudaErrorMemoryValueTooLarge","cudaErrorMisalignedAddress","cudaErrorMisalignedAddress","cudaErrorMissingConfiguration","cudaErrorMissingConfiguration","cudaErrorMixedDeviceExecution","cudaErrorMixedDeviceExecution","cudaErrorMpsConnectionFailed","cudaErrorMpsConnectionFailed","cudaErrorMpsMaxClientsReached","cudaErrorMpsMaxClientsReached","cudaErrorMpsMaxConnectionsReached","cudaErrorMpsMaxConnectionsReached","cudaErrorMpsRpcFailure","cudaErrorMpsRpcFailure","cudaErrorMpsServerNotReady","cudaErrorMpsServerNotReady","cudaErrorNoDevice","cudaErrorNoDevice","cudaErrorNoKernelImageForDevice","cudaErrorNoKernelImageForDevice","cudaErrorNotMapped","cudaErrorNotMapped","cudaErrorNotMappedAsArray","cudaErrorNotMappedAsArray","cudaErrorNotMappedAsPointer","cudaErrorNotMappedAsPointer","cudaErrorNotPermitted","cudaErrorNotPermitted","cudaErrorNotReady","cudaErrorNotReady","cudaErrorNotSupported","cudaErrorNotSupported","cudaErrorNotYetImplemented","cudaErrorNotYetImplemented","cudaErrorNvlinkUncorrectable","cudaErrorNvlinkUncorrectable","cudaErrorOperatingSystem","cudaErrorOperatingSystem","cudaErrorPeerAccessAlreadyEnabled","cudaErrorPeerAccessAlreadyEnabled","cudaErrorPeerAccessNotEnabled","cudaErrorPeerAccessNotEnabled","cudaErrorPeerAccessUnsupported","cudaErrorPeerAccessUnsupported","cudaErrorPriorLaunchFailure","cudaErrorPriorLaunchFailure","cudaErrorProfilerAlreadyStarted","cudaErrorProfilerAlreadyStarted","cudaErrorProfilerAlreadyStopped","cudaErrorProfilerAlreadyStopped","cudaErrorProfilerDisabled","cudaErrorProfilerDisabled","cudaErrorProfilerNotInitialized","cudaErrorProfilerNotInitialized","cudaErrorSetOnActiveProcess","cudaErrorSetOnActiveProcess","cudaErrorSharedObjectInitFailed","cudaErrorSharedObjectInitFailed","cudaErrorSharedObjectSymbolNotFound","cudaErrorSharedObjectSymbolNotFound","cudaErrorSoftwareValidityNotEstablished","cudaErrorSoftwareValidityNotEstablished","cudaErrorStartupFailure","cudaErrorStartupFailure","cudaErrorStreamCaptureImplicit","cudaErrorStreamCaptureImplicit","cudaErrorStreamCaptureInvalidated","cudaErrorStreamCaptureInvalidated","cudaErrorStreamCaptureIsolation","cudaErrorStreamCaptureIsolation","cudaErrorStreamCaptureMerge","cudaErrorStreamCaptureMerge","cudaErrorStreamCaptureUnjoined","cudaErrorStreamCaptureUnjoined","cudaErrorStreamCaptureUnmatched","cudaErrorStreamCaptureUnmatched","cudaErrorStreamCaptureUnsupported","cudaErrorStreamCaptureUnsupported","cudaErrorStreamCaptureWrongThread","cudaErrorStreamCaptureWrongThread","cudaErrorStubLibrary","cudaErrorStubLibrary","cudaErrorSymbolNotFound","cudaErrorSymbolNotFound","cudaErrorSyncDepthExceeded","cudaErrorSyncDepthExceeded","cudaErrorSynchronizationError","cudaErrorSynchronizationError","cudaErrorSystemDriverMismatch","cudaErrorSystemDriverMismatch","cudaErrorSystemNotReady","cudaErrorSystemNotReady","cudaErrorTextureFetchFailed","cudaErrorTextureFetchFailed","cudaErrorTextureNotBound","cudaErrorTextureNotBound","cudaErrorTimeout","cudaErrorTimeout","cudaErrorTooManyPeers","cudaErrorTooManyPeers","cudaErrorUnknown","cudaErrorUnknown","cudaErrorUnmapBufferObjectFailed","cudaErrorUnmapBufferObjectFailed","cudaErrorUnsupportedExecAffinity","cudaErrorUnsupportedExecAffinity","cudaErrorUnsupportedLimit","cudaErrorUnsupportedLimit","cudaErrorUnsupportedPtxVersion","cudaErrorUnsupportedPtxVersion","cudaError_t","cudaEventCreate","cudaEventCreateWithFlags","cudaEventDestroy","cudaEventElapsedTime","cudaEventQuery","cudaEventRecord","cudaEventRecordWithFlags","cudaEventSynchronize","cudaEvent_t","cudaExtent","cudaExternalMemoryBufferDesc","cudaExternalMemoryGetMappedBuffer","cudaExternalMemoryGetMappedMipmappedArray","cudaExternalMemoryHandleDesc","cudaExternalMemoryHandleDesc__bindgen_ty_1","cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1","cudaExternalMemoryHandleType","cudaExternalMemoryHandleTypeD3D11Resource","cudaExternalMemoryHandleTypeD3D11ResourceKmt","cudaExternalMemoryHandleTypeD3D12Heap","cudaExternalMemoryHandleTypeD3D12Resource","cudaExternalMemoryHandleTypeNvSciBuf","cudaExternalMemoryHandleTypeOpaqueFd","cudaExternalMemoryHandleTypeOpaqueWin32","cudaExternalMemoryHandleTypeOpaqueWin32Kmt","cudaExternalMemoryMipmappedArrayDesc","cudaExternalMemory_t","cudaExternalSemaphoreHandleDesc","cudaExternalSemaphoreHandleDesc__bindgen_ty_1","cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreHandleType","cudaExternalSemaphoreHandleTypeD3D11Fence","cudaExternalSemaphoreHandleTypeD3D12Fence","cudaExternalSemaphoreHandleTypeKeyedMutex","cudaExternalSemaphoreHandleTypeKeyedMutexKmt","cudaExternalSemaphoreHandleTypeNvSciSync","cudaExternalSemaphoreHandleTypeOpaqueFd","cudaExternalSemaphoreHandleTypeOpaqueWin32","cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt","cudaExternalSemaphoreHandleTypeTimelineSemaphoreFd","cudaExternalSemaphoreHandleTypeTimelineSemaphoreWin32","cudaExternalSemaphoreSignalNodeParams","cudaExternalSemaphoreSignalParams","cudaExternalSemaphoreSignalParams__bindgen_ty_1","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphoreWaitNodeParams","cudaExternalSemaphoreWaitParams","cudaExternalSemaphoreWaitParams__bindgen_ty_1","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2","cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3","cudaExternalSemaphore_t","cudaFilterModeLinear","cudaFilterModePoint","cudaFlushGPUDirectRDMAWritesOptionHost","cudaFlushGPUDirectRDMAWritesOptionMemOps","cudaFlushGPUDirectRDMAWritesOptions","cudaFlushGPUDirectRDMAWritesScope","cudaFlushGPUDirectRDMAWritesTarget","cudaFlushGPUDirectRDMAWritesTargetCurrentDevice","cudaFlushGPUDirectRDMAWritesToAllDevices","cudaFlushGPUDirectRDMAWritesToOwner","cudaFormatModeAuto","cudaFormatModeForced","cudaFree","cudaFreeArray","cudaFreeAsync","cudaFreeHost","cudaFreeMipmappedArray","cudaFuncAttribute","cudaFuncAttributeMax","cudaFuncAttributeMaxDynamicSharedMemorySize","cudaFuncAttributePreferredSharedMemoryCarveout","cudaFuncAttributes","cudaFuncCache","cudaFuncCachePreferEqual","cudaFuncCachePreferL1","cudaFuncCachePreferNone","cudaFuncCachePreferShared","cudaFuncGetAttributes","cudaFuncSetAttribute","cudaFuncSetCacheConfig","cudaFuncSetSharedMemConfig","cudaFunction_t","cudaGPUDirectRDMAWritesOrdering","cudaGPUDirectRDMAWritesOrderingAllDevices","cudaGPUDirectRDMAWritesOrderingNone","cudaGPUDirectRDMAWritesOrderingOwner","cudaGetChannelDesc","cudaGetDevice","cudaGetDeviceCount","cudaGetDeviceFlags","cudaGetDeviceProperties","cudaGetDriverEntryPoint","cudaGetDriverEntryPointFlags","cudaGetErrorName","cudaGetErrorString","cudaGetExportTable","cudaGetFuncBySymbol","cudaGetLastError","cudaGetMipmappedArrayLevel","cudaGetSurfaceObjectResourceDesc","cudaGetSurfaceReference","cudaGetSymbolAddress","cudaGetSymbolSize","cudaGetTextureAlignmentOffset","cudaGetTextureObjectResourceDesc","cudaGetTextureObjectResourceViewDesc","cudaGetTextureObjectTextureDesc","cudaGetTextureReference","cudaGraphAddChildGraphNode","cudaGraphAddDependencies","cudaGraphAddEmptyNode","cudaGraphAddEventRecordNode","cudaGraphAddEventWaitNode","cudaGraphAddExternalSemaphoresSignalNode","cudaGraphAddExternalSemaphoresWaitNode","cudaGraphAddHostNode","cudaGraphAddKernelNode","cudaGraphAddMemAllocNode","cudaGraphAddMemFreeNode","cudaGraphAddMemcpyNode","cudaGraphAddMemcpyNode1D","cudaGraphAddMemcpyNodeFromSymbol","cudaGraphAddMemcpyNodeToSymbol","cudaGraphAddMemsetNode","cudaGraphChildGraphNodeGetGraph","cudaGraphClone","cudaGraphCreate","cudaGraphDebugDotFlags","cudaGraphDebugDotFlagsEventNodeParams","cudaGraphDebugDotFlagsExtSemasSignalNodeParams","cudaGraphDebugDotFlagsExtSemasWaitNodeParams","cudaGraphDebugDotFlagsHandles","cudaGraphDebugDotFlagsHostNodeParams","cudaGraphDebugDotFlagsKernelNodeAttributes","cudaGraphDebugDotFlagsKernelNodeParams","cudaGraphDebugDotFlagsMemcpyNodeParams","cudaGraphDebugDotFlagsMemsetNodeParams","cudaGraphDebugDotFlagsVerbose","cudaGraphDebugDotPrint","cudaGraphDestroy","cudaGraphDestroyNode","cudaGraphEventRecordNodeGetEvent","cudaGraphEventRecordNodeSetEvent","cudaGraphEventWaitNodeGetEvent","cudaGraphEventWaitNodeSetEvent","cudaGraphExecChildGraphNodeSetParams","cudaGraphExecDestroy","cudaGraphExecEventRecordNodeSetEvent","cudaGraphExecEventWaitNodeSetEvent","cudaGraphExecExternalSemaphoresSignalNodeSetParams","cudaGraphExecExternalSemaphoresWaitNodeSetParams","cudaGraphExecHostNodeSetParams","cudaGraphExecKernelNodeSetParams","cudaGraphExecMemcpyNodeSetParams","cudaGraphExecMemcpyNodeSetParams1D","cudaGraphExecMemcpyNodeSetParamsFromSymbol","cudaGraphExecMemcpyNodeSetParamsToSymbol","cudaGraphExecMemsetNodeSetParams","cudaGraphExecUpdate","cudaGraphExecUpdateError","cudaGraphExecUpdateErrorFunctionChanged","cudaGraphExecUpdateErrorNodeTypeChanged","cudaGraphExecUpdateErrorNotSupported","cudaGraphExecUpdateErrorParametersChanged","cudaGraphExecUpdateErrorTopologyChanged","cudaGraphExecUpdateErrorUnsupportedFunctionChange","cudaGraphExecUpdateResult","cudaGraphExecUpdateSuccess","cudaGraphExec_t","cudaGraphExternalSemaphoresSignalNodeGetParams","cudaGraphExternalSemaphoresSignalNodeSetParams","cudaGraphExternalSemaphoresWaitNodeGetParams","cudaGraphExternalSemaphoresWaitNodeSetParams","cudaGraphGetEdges","cudaGraphGetNodes","cudaGraphGetRootNodes","cudaGraphHostNodeGetParams","cudaGraphHostNodeSetParams","cudaGraphInstantiate","cudaGraphInstantiateFlagAutoFreeOnLaunch","cudaGraphInstantiateFlags","cudaGraphInstantiateWithFlags","cudaGraphKernelNodeCopyAttributes","cudaGraphKernelNodeGetAttribute","cudaGraphKernelNodeGetParams","cudaGraphKernelNodeSetAttribute","cudaGraphKernelNodeSetParams","cudaGraphLaunch","cudaGraphMemAllocNodeGetParams","cudaGraphMemAttrReservedMemCurrent","cudaGraphMemAttrReservedMemHigh","cudaGraphMemAttrUsedMemCurrent","cudaGraphMemAttrUsedMemHigh","cudaGraphMemAttributeType","cudaGraphMemFreeNodeGetParams","cudaGraphMemcpyNodeGetParams","cudaGraphMemcpyNodeSetParams","cudaGraphMemcpyNodeSetParams1D","cudaGraphMemcpyNodeSetParamsFromSymbol","cudaGraphMemcpyNodeSetParamsToSymbol","cudaGraphMemsetNodeGetParams","cudaGraphMemsetNodeSetParams","cudaGraphNodeFindInClone","cudaGraphNodeGetDependencies","cudaGraphNodeGetDependentNodes","cudaGraphNodeGetType","cudaGraphNodeType","cudaGraphNodeTypeCount","cudaGraphNodeTypeEmpty","cudaGraphNodeTypeEventRecord","cudaGraphNodeTypeExtSemaphoreSignal","cudaGraphNodeTypeExtSemaphoreWait","cudaGraphNodeTypeGraph","cudaGraphNodeTypeHost","cudaGraphNodeTypeKernel","cudaGraphNodeTypeMemAlloc","cudaGraphNodeTypeMemFree","cudaGraphNodeTypeMemcpy","cudaGraphNodeTypeMemset","cudaGraphNodeTypeWaitEvent","cudaGraphNode_t","cudaGraphReleaseUserObject","cudaGraphRemoveDependencies","cudaGraphRetainUserObject","cudaGraphUpload","cudaGraphUserObjectMove","cudaGraph_t","cudaGraphicsCubeFace","cudaGraphicsCubeFaceNegativeX","cudaGraphicsCubeFaceNegativeY","cudaGraphicsCubeFaceNegativeZ","cudaGraphicsCubeFacePositiveX","cudaGraphicsCubeFacePositiveY","cudaGraphicsCubeFacePositiveZ","cudaGraphicsMapFlags","cudaGraphicsMapFlagsNone","cudaGraphicsMapFlagsReadOnly","cudaGraphicsMapFlagsWriteDiscard","cudaGraphicsMapResources","cudaGraphicsRegisterFlags","cudaGraphicsRegisterFlagsNone","cudaGraphicsRegisterFlagsReadOnly","cudaGraphicsRegisterFlagsSurfaceLoadStore","cudaGraphicsRegisterFlagsTextureGather","cudaGraphicsRegisterFlagsWriteDiscard","cudaGraphicsResource","cudaGraphicsResourceGetMappedMipmappedArray","cudaGraphicsResourceGetMappedPointer","cudaGraphicsResourceSetMapFlags","cudaGraphicsResource_t","cudaGraphicsSubResourceGetMappedArray","cudaGraphicsUnmapResources","cudaGraphicsUnregisterResource","cudaHostAlloc","cudaHostFn_t","cudaHostGetDevicePointer","cudaHostGetFlags","cudaHostNodeParams","cudaHostRegister","cudaHostUnregister","cudaImportExternalMemory","cudaImportExternalSemaphore","cudaIpcCloseMemHandle","cudaIpcEventHandle_st","cudaIpcEventHandle_t","cudaIpcGetEventHandle","cudaIpcGetMemHandle","cudaIpcMemHandle_st","cudaIpcMemHandle_t","cudaIpcOpenEventHandle","cudaIpcOpenMemHandle","cudaKernelNodeAttrID","cudaKernelNodeAttrValue","cudaKernelNodeAttributeAccessPolicyWindow","cudaKernelNodeAttributeCooperative","cudaKernelNodeParams","cudaKeyValuePair","cudaKeyValuePair","cudaLaunchCooperativeKernel","cudaLaunchCooperativeKernelMultiDevice","cudaLaunchHostFunc","cudaLaunchKernel","cudaLaunchParams","cudaLimit","cudaLimitDevRuntimePendingLaunchCount","cudaLimitDevRuntimeSyncDepth","cudaLimitMallocHeapSize","cudaLimitMaxL2FetchGranularity","cudaLimitPersistingL2CacheSize","cudaLimitPrintfFifoSize","cudaLimitStackSize","cudaMalloc","cudaMalloc3D","cudaMalloc3DArray","cudaMallocArray","cudaMallocAsync","cudaMallocFromPoolAsync","cudaMallocHost","cudaMallocManaged","cudaMallocMipmappedArray","cudaMallocPitch","cudaMemAccessDesc","cudaMemAccessFlags","cudaMemAccessFlagsProtNone","cudaMemAccessFlagsProtRead","cudaMemAccessFlagsProtReadWrite","cudaMemAdvise","cudaMemAdviseSetAccessedBy","cudaMemAdviseSetPreferredLocation","cudaMemAdviseSetReadMostly","cudaMemAdviseUnsetAccessedBy","cudaMemAdviseUnsetPreferredLocation","cudaMemAdviseUnsetReadMostly","cudaMemAllocNodeParams","cudaMemAllocationHandleType","cudaMemAllocationType","cudaMemAllocationTypeInvalid","cudaMemAllocationTypeMax","cudaMemAllocationTypePinned","cudaMemGetInfo","cudaMemHandleTypeNone","cudaMemHandleTypePosixFileDescriptor","cudaMemHandleTypeWin32","cudaMemHandleTypeWin32Kmt","cudaMemLocation","cudaMemLocationType","cudaMemLocationTypeDevice","cudaMemLocationTypeInvalid","cudaMemPoolAttr","cudaMemPoolAttrReleaseThreshold","cudaMemPoolAttrReservedMemCurrent","cudaMemPoolAttrReservedMemHigh","cudaMemPoolAttrUsedMemCurrent","cudaMemPoolAttrUsedMemHigh","cudaMemPoolCreate","cudaMemPoolDestroy","cudaMemPoolExportPointer","cudaMemPoolExportToShareableHandle","cudaMemPoolGetAccess","cudaMemPoolGetAttribute","cudaMemPoolImportFromShareableHandle","cudaMemPoolImportPointer","cudaMemPoolProps","cudaMemPoolPtrExportData","cudaMemPoolReuseAllowInternalDependencies","cudaMemPoolReuseAllowOpportunistic","cudaMemPoolReuseFollowEventDependencies","cudaMemPoolSetAccess","cudaMemPoolSetAttribute","cudaMemPoolTrimTo","cudaMemPool_t","cudaMemPrefetchAsync","cudaMemRangeAttribute","cudaMemRangeAttributeAccessedBy","cudaMemRangeAttributeLastPrefetchLocation","cudaMemRangeAttributePreferredLocation","cudaMemRangeAttributeReadMostly","cudaMemRangeGetAttribute","cudaMemRangeGetAttributes","cudaMemcpy","cudaMemcpy2D","cudaMemcpy2DArrayToArray","cudaMemcpy2DAsync","cudaMemcpy2DFromArray","cudaMemcpy2DFromArrayAsync","cudaMemcpy2DToArray","cudaMemcpy2DToArrayAsync","cudaMemcpy3D","cudaMemcpy3DAsync","cudaMemcpy3DParms","cudaMemcpy3DPeer","cudaMemcpy3DPeerAsync","cudaMemcpy3DPeerParms","cudaMemcpyArrayToArray","cudaMemcpyAsync","cudaMemcpyDefault","cudaMemcpyDeviceToDevice","cudaMemcpyDeviceToHost","cudaMemcpyFromArray","cudaMemcpyFromArrayAsync","cudaMemcpyFromSymbol","cudaMemcpyFromSymbolAsync","cudaMemcpyHostToDevice","cudaMemcpyHostToHost","cudaMemcpyKind","cudaMemcpyPeer","cudaMemcpyPeerAsync","cudaMemcpyToArray","cudaMemcpyToArrayAsync","cudaMemcpyToSymbol","cudaMemcpyToSymbolAsync","cudaMemoryAdvise","cudaMemoryType","cudaMemoryTypeDevice","cudaMemoryTypeHost","cudaMemoryTypeManaged","cudaMemoryTypeUnregistered","cudaMemset","cudaMemset2D","cudaMemset2DAsync","cudaMemset3D","cudaMemset3DAsync","cudaMemsetAsync","cudaMemsetParams","cudaMipmappedArray","cudaMipmappedArrayGetSparseProperties","cudaMipmappedArray_const_t","cudaMipmappedArray_t","cudaOccupancyAvailableDynamicSMemPerBlock","cudaOccupancyMaxActiveBlocksPerMultiprocessor","cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","cudaOutputMode","cudaOutputMode_t","cudaPeekAtLastError","cudaPitchedPtr","cudaPointerAttributes","cudaPointerGetAttributes","cudaPos","cudaReadModeElementType","cudaReadModeNormalizedFloat","cudaResViewFormatFloat1","cudaResViewFormatFloat2","cudaResViewFormatFloat4","cudaResViewFormatHalf1","cudaResViewFormatHalf2","cudaResViewFormatHalf4","cudaResViewFormatNone","cudaResViewFormatSignedBlockCompressed4","cudaResViewFormatSignedBlockCompressed5","cudaResViewFormatSignedBlockCompressed6H","cudaResViewFormatSignedChar1","cudaResViewFormatSignedChar2","cudaResViewFormatSignedChar4","cudaResViewFormatSignedInt1","cudaResViewFormatSignedInt2","cudaResViewFormatSignedInt4","cudaResViewFormatSignedShort1","cudaResViewFormatSignedShort2","cudaResViewFormatSignedShort4","cudaResViewFormatUnsignedBlockCompressed1","cudaResViewFormatUnsignedBlockCompressed2","cudaResViewFormatUnsignedBlockCompressed3","cudaResViewFormatUnsignedBlockCompressed4","cudaResViewFormatUnsignedBlockCompressed5","cudaResViewFormatUnsignedBlockCompressed6H","cudaResViewFormatUnsignedBlockCompressed7","cudaResViewFormatUnsignedChar1","cudaResViewFormatUnsignedChar2","cudaResViewFormatUnsignedChar4","cudaResViewFormatUnsignedInt1","cudaResViewFormatUnsignedInt2","cudaResViewFormatUnsignedInt4","cudaResViewFormatUnsignedShort1","cudaResViewFormatUnsignedShort2","cudaResViewFormatUnsignedShort4","cudaResourceDesc","cudaResourceDesc__bindgen_ty_1","cudaResourceDesc__bindgen_ty_1__bindgen_ty_1","cudaResourceDesc__bindgen_ty_1__bindgen_ty_2","cudaResourceDesc__bindgen_ty_1__bindgen_ty_3","cudaResourceDesc__bindgen_ty_1__bindgen_ty_4","cudaResourceType","cudaResourceTypeArray","cudaResourceTypeLinear","cudaResourceTypeMipmappedArray","cudaResourceTypePitch2D","cudaResourceViewDesc","cudaResourceViewFormat","cudaRoundMinInf","cudaRoundMode","cudaRoundNearest","cudaRoundPosInf","cudaRoundZero","cudaRuntimeGetVersion","cudaSetDevice","cudaSetDeviceFlags","cudaSetDoubleForDevice","cudaSetDoubleForHost","cudaSetValidDevices","cudaSharedCarveout","cudaSharedMemBankSizeDefault","cudaSharedMemBankSizeEightByte","cudaSharedMemBankSizeFourByte","cudaSharedMemConfig","cudaSharedmemCarveoutDefault","cudaSharedmemCarveoutMaxL1","cudaSharedmemCarveoutMaxShared","cudaSignalExternalSemaphoresAsync_v2","cudaStreamAddCallback","cudaStreamAddCaptureDependencies","cudaStreamAttachMemAsync","cudaStreamAttrID","cudaStreamAttrValue","cudaStreamAttributeAccessPolicyWindow","cudaStreamAttributeSynchronizationPolicy","cudaStreamBeginCapture","cudaStreamCallback_t","cudaStreamCaptureMode","cudaStreamCaptureModeGlobal","cudaStreamCaptureModeRelaxed","cudaStreamCaptureModeThreadLocal","cudaStreamCaptureStatus","cudaStreamCaptureStatusActive","cudaStreamCaptureStatusInvalidated","cudaStreamCaptureStatusNone","cudaStreamCopyAttributes","cudaStreamCreate","cudaStreamCreateWithFlags","cudaStreamCreateWithPriority","cudaStreamDestroy","cudaStreamEndCapture","cudaStreamGetAttribute","cudaStreamGetCaptureInfo","cudaStreamGetCaptureInfo_v2","cudaStreamGetFlags","cudaStreamGetPriority","cudaStreamIsCapturing","cudaStreamQuery","cudaStreamSetAttribute","cudaStreamSetCaptureDependencies","cudaStreamSynchronize","cudaStreamUpdateCaptureDependencies","cudaStreamUpdateCaptureDependenciesFlags","cudaStreamWaitEvent","cudaStream_t","cudaSuccess","cudaSuccess","cudaSurfaceBoundaryMode","cudaSurfaceFormatMode","cudaSurfaceObject_t","cudaSyncPolicyAuto","cudaSyncPolicyBlockingSync","cudaSyncPolicySpin","cudaSyncPolicyYield","cudaSynchronizationPolicy","cudaTextureAddressMode","cudaTextureDesc","cudaTextureFilterMode","cudaTextureObject_t","cudaTextureReadMode","cudaThreadExchangeStreamCaptureMode","cudaThreadExit","cudaThreadGetCacheConfig","cudaThreadGetLimit","cudaThreadSetCacheConfig","cudaThreadSetLimit","cudaThreadSynchronize","cudaUUID_t","cudaUnbindTexture","cudaUserObjectCreate","cudaUserObjectFlags","cudaUserObjectNoDestructorSync","cudaUserObjectRelease","cudaUserObjectRetain","cudaUserObjectRetainFlags","cudaUserObject_t","cudaWaitExternalSemaphoresAsync_v2","cudnnActivationBackward","cudnnActivationDescriptor_t","cudnnActivationForward","cudnnActivationMode_t","cudnnActivationStruct","cudnnAddTensor","cudnnAdvInferVersionCheck","cudnnAdvTrainVersionCheck","cudnnAlgorithmDescriptor_t","cudnnAlgorithmPerformanceStruct","cudnnAlgorithmPerformance_t","cudnnAlgorithmStruct","cudnnAlgorithmUnionStruct","cudnnAlgorithmUnionStruct_Algorithm","cudnnAlgorithm_t","cudnnAttnDescriptor_t","cudnnAttnQueryMap_t","cudnnAttnStruct","cudnnBackendAttributeName_t","cudnnBackendAttributeType_t","cudnnBackendBehaviorNote_t","cudnnBackendCreateDescriptor","cudnnBackendDescriptorType_t","cudnnBackendDescriptor_t","cudnnBackendDestroyDescriptor","cudnnBackendExecute","cudnnBackendFinalize","cudnnBackendGetAttribute","cudnnBackendHeurMode_t","cudnnBackendInitialize","cudnnBackendKnobType_t","cudnnBackendLayoutType_t","cudnnBackendNumericalNote_t","cudnnBackendSetAttribute","cudnnBatchNormMode_t","cudnnBatchNormOps_t","cudnnBatchNormalizationBackward","cudnnBatchNormalizationBackwardEx","cudnnBatchNormalizationForwardInference","cudnnBatchNormalizationForwardTraining","cudnnBatchNormalizationForwardTrainingEx","cudnnBnFinalizeStatsMode_t","cudnnBuildRNNDynamic","cudnnCTCLoss","cudnnCTCLossAlgo_t","cudnnCTCLossDescriptor_t","cudnnCTCLossStruct","cudnnCTCLoss_v8","cudnnCallback_t","cudnnCnnInferVersionCheck","cudnnCnnTrainVersionCheck","cudnnContext","cudnnConvolutionBackwardBias","cudnnConvolutionBackwardData","cudnnConvolutionBackwardFilter","cudnnConvolutionBiasActivationForward","cudnnConvolutionBwdDataAlgoPerfStruct","cudnnConvolutionBwdDataAlgoPerf_t","cudnnConvolutionBwdDataAlgo_t","cudnnConvolutionBwdFilterAlgoPerfStruct","cudnnConvolutionBwdFilterAlgoPerf_t","cudnnConvolutionBwdFilterAlgo_t","cudnnConvolutionDescriptor_t","cudnnConvolutionForward","cudnnConvolutionFwdAlgoPerfStruct","cudnnConvolutionFwdAlgoPerf_t","cudnnConvolutionFwdAlgo_t","cudnnConvolutionMode_t","cudnnConvolutionStruct","cudnnCopyAlgorithmDescriptor","cudnnCreate","cudnnCreateActivationDescriptor","cudnnCreateAlgorithmDescriptor","cudnnCreateAlgorithmPerformance","cudnnCreateAttnDescriptor","cudnnCreateCTCLossDescriptor","cudnnCreateConvolutionDescriptor","cudnnCreateDropoutDescriptor","cudnnCreateFilterDescriptor","cudnnCreateFusedOpsConstParamPack","cudnnCreateFusedOpsPlan","cudnnCreateFusedOpsVariantParamPack","cudnnCreateLRNDescriptor","cudnnCreateOpTensorDescriptor","cudnnCreatePersistentRNNPlan","cudnnCreatePoolingDescriptor","cudnnCreateRNNDataDescriptor","cudnnCreateRNNDescriptor","cudnnCreateReduceTensorDescriptor","cudnnCreateSeqDataDescriptor","cudnnCreateSpatialTransformerDescriptor","cudnnCreateTensorDescriptor","cudnnCreateTensorTransformDescriptor","cudnnDataType_t","cudnnDebugStruct","cudnnDebug_t","cudnnDeriveBNTensorDescriptor","cudnnDeriveNormTensorDescriptor","cudnnDestroy","cudnnDestroyActivationDescriptor","cudnnDestroyAlgorithmDescriptor","cudnnDestroyAlgorithmPerformance","cudnnDestroyAttnDescriptor","cudnnDestroyCTCLossDescriptor","cudnnDestroyConvolutionDescriptor","cudnnDestroyDropoutDescriptor","cudnnDestroyFilterDescriptor","cudnnDestroyFusedOpsConstParamPack","cudnnDestroyFusedOpsPlan","cudnnDestroyFusedOpsVariantParamPack","cudnnDestroyLRNDescriptor","cudnnDestroyOpTensorDescriptor","cudnnDestroyPersistentRNNPlan","cudnnDestroyPoolingDescriptor","cudnnDestroyRNNDataDescriptor","cudnnDestroyRNNDescriptor","cudnnDestroyReduceTensorDescriptor","cudnnDestroySeqDataDescriptor","cudnnDestroySpatialTransformerDescriptor","cudnnDestroyTensorDescriptor","cudnnDestroyTensorTransformDescriptor","cudnnDeterminism_t","cudnnDirectionMode_t","cudnnDivNormMode_t","cudnnDivisiveNormalizationBackward","cudnnDivisiveNormalizationForward","cudnnDropoutBackward","cudnnDropoutDescriptor_t","cudnnDropoutForward","cudnnDropoutGetReserveSpaceSize","cudnnDropoutGetStatesSize","cudnnDropoutStruct","cudnnErrQueryMode_t","cudnnFilterDescriptor_t","cudnnFilterStruct","cudnnFindConvolutionBackwardDataAlgorithm","cudnnFindConvolutionBackwardDataAlgorithmEx","cudnnFindConvolutionBackwardFilterAlgorithm","cudnnFindConvolutionBackwardFilterAlgorithmEx","cudnnFindConvolutionForwardAlgorithm","cudnnFindConvolutionForwardAlgorithmEx","cudnnFindRNNBackwardDataAlgorithmEx","cudnnFindRNNBackwardWeightsAlgorithmEx","cudnnFindRNNForwardInferenceAlgorithmEx","cudnnFindRNNForwardTrainingAlgorithmEx","cudnnFoldingDirection_t","cudnnForwardMode_t","cudnnFusedOpsConstParamLabel_t","cudnnFusedOpsConstParamPack_t","cudnnFusedOpsConstParamStruct","cudnnFusedOpsExecute","cudnnFusedOpsPlanStruct","cudnnFusedOpsPlan_t","cudnnFusedOpsPointerPlaceHolder_t","cudnnFusedOpsVariantParamLabel_t","cudnnFusedOpsVariantParamPack_t","cudnnFusedOpsVariantParamStruct","cudnnFusedOps_t","cudnnGenStatsMode_t","cudnnGetActivationDescriptor","cudnnGetActivationDescriptorSwishBeta","cudnnGetAlgorithmDescriptor","cudnnGetAlgorithmPerformance","cudnnGetAlgorithmSpaceSize","cudnnGetAttnDescriptor","cudnnGetBatchNormalizationBackwardExWorkspaceSize","cudnnGetBatchNormalizationForwardTrainingExWorkspaceSize","cudnnGetBatchNormalizationTrainingExReserveSpaceSize","cudnnGetCTCLossDescriptor","cudnnGetCTCLossDescriptorEx","cudnnGetCTCLossDescriptor_v8","cudnnGetCTCLossWorkspaceSize","cudnnGetCTCLossWorkspaceSize_v8","cudnnGetCallback","cudnnGetConvolution2dDescriptor","cudnnGetConvolution2dForwardOutputDim","cudnnGetConvolutionBackwardDataAlgorithmMaxCount","cudnnGetConvolutionBackwardDataAlgorithm_v7","cudnnGetConvolutionBackwardDataWorkspaceSize","cudnnGetConvolutionBackwardFilterAlgorithmMaxCount","cudnnGetConvolutionBackwardFilterAlgorithm_v7","cudnnGetConvolutionBackwardFilterWorkspaceSize","cudnnGetConvolutionForwardAlgorithmMaxCount","cudnnGetConvolutionForwardAlgorithm_v7","cudnnGetConvolutionForwardWorkspaceSize","cudnnGetConvolutionGroupCount","cudnnGetConvolutionMathType","cudnnGetConvolutionNdDescriptor","cudnnGetConvolutionNdForwardOutputDim","cudnnGetConvolutionReorderType","cudnnGetCudartVersion","cudnnGetDropoutDescriptor","cudnnGetErrorString","cudnnGetFilter4dDescriptor","cudnnGetFilterNdDescriptor","cudnnGetFilterSizeInBytes","cudnnGetFoldedConvBackwardDataDescriptors","cudnnGetFusedOpsConstParamPackAttribute","cudnnGetFusedOpsVariantParamPackAttribute","cudnnGetLRNDescriptor","cudnnGetMultiHeadAttnBuffers","cudnnGetMultiHeadAttnWeights","cudnnGetNormalizationBackwardWorkspaceSize","cudnnGetNormalizationForwardTrainingWorkspaceSize","cudnnGetNormalizationTrainingReserveSpaceSize","cudnnGetOpTensorDescriptor","cudnnGetPooling2dDescriptor","cudnnGetPooling2dForwardOutputDim","cudnnGetPoolingNdDescriptor","cudnnGetPoolingNdForwardOutputDim","cudnnGetProperty","cudnnGetRNNBackwardDataAlgorithmMaxCount","cudnnGetRNNBackwardWeightsAlgorithmMaxCount","cudnnGetRNNBiasMode","cudnnGetRNNDataDescriptor","cudnnGetRNNDescriptor_v6","cudnnGetRNNDescriptor_v8","cudnnGetRNNForwardInferenceAlgorithmMaxCount","cudnnGetRNNForwardTrainingAlgorithmMaxCount","cudnnGetRNNLinLayerBiasParams","cudnnGetRNNLinLayerMatrixParams","cudnnGetRNNMatrixMathType","cudnnGetRNNPaddingMode","cudnnGetRNNParamsSize","cudnnGetRNNProjectionLayers","cudnnGetRNNTempSpaceSizes","cudnnGetRNNTrainingReserveSize","cudnnGetRNNWeightParams","cudnnGetRNNWeightSpaceSize","cudnnGetRNNWorkspaceSize","cudnnGetReduceTensorDescriptor","cudnnGetReductionIndicesSize","cudnnGetReductionWorkspaceSize","cudnnGetSeqDataDescriptor","cudnnGetStream","cudnnGetTensor4dDescriptor","cudnnGetTensorNdDescriptor","cudnnGetTensorSizeInBytes","cudnnGetTensorTransformDescriptor","cudnnGetVersion","cudnnHandle_t","cudnnIm2Col","cudnnIndicesType_t","cudnnInitTransformDest","cudnnLRNCrossChannelBackward","cudnnLRNCrossChannelForward","cudnnLRNDescriptor_t","cudnnLRNMode_t","cudnnLRNStruct","cudnnLossNormalizationMode_t","cudnnMakeFusedOpsPlan","cudnnMathType_t","cudnnMultiHeadAttnBackwardData","cudnnMultiHeadAttnBackwardWeights","cudnnMultiHeadAttnForward","cudnnMultiHeadAttnWeightKind_t","cudnnNanPropagation_t","cudnnNormAlgo_t","cudnnNormMode_t","cudnnNormOps_t","cudnnNormalizationBackward","cudnnNormalizationForwardInference","cudnnNormalizationForwardTraining","cudnnOpTensor","cudnnOpTensorDescriptor_t","cudnnOpTensorOp_t","cudnnOpTensorStruct","cudnnOpsInferVersionCheck","cudnnOpsTrainVersionCheck","cudnnPersistentRNNPlan","cudnnPersistentRNNPlan_t","cudnnPointwiseMode_t","cudnnPoolingBackward","cudnnPoolingDescriptor_t","cudnnPoolingForward","cudnnPoolingMode_t","cudnnPoolingStruct","cudnnQueryRuntimeError","cudnnRNNAlgo_t","cudnnRNNBackwardData","cudnnRNNBackwardDataEx","cudnnRNNBackwardData_v8","cudnnRNNBackwardWeights","cudnnRNNBackwardWeightsEx","cudnnRNNBackwardWeights_v8","cudnnRNNBiasMode_t","cudnnRNNClipMode_t","cudnnRNNDataDescriptor_t","cudnnRNNDataLayout_t","cudnnRNNDataStruct","cudnnRNNDescriptor_t","cudnnRNNForward","cudnnRNNForwardInference","cudnnRNNForwardInferenceEx","cudnnRNNForwardTraining","cudnnRNNForwardTrainingEx","cudnnRNNGetClip","cudnnRNNGetClip_v8","cudnnRNNInputMode_t","cudnnRNNMode_t","cudnnRNNPaddingMode_t","cudnnRNNSetClip","cudnnRNNSetClip_v8","cudnnRNNStruct","cudnnReduceTensor","cudnnReduceTensorDescriptor_t","cudnnReduceTensorIndices_t","cudnnReduceTensorOp_t","cudnnReduceTensorStruct","cudnnReorderFilterAndBias","cudnnReorderType_t","cudnnRestoreAlgorithm","cudnnRestoreDropoutDescriptor","cudnnRuntimeTag_t","cudnnSamplerType_t","cudnnSaveAlgorithm","cudnnScaleTensor","cudnnSeqDataAxis_t","cudnnSeqDataDescriptor_t","cudnnSeqDataStruct","cudnnSetActivationDescriptor","cudnnSetActivationDescriptorSwishBeta","cudnnSetAlgorithmDescriptor","cudnnSetAlgorithmPerformance","cudnnSetAttnDescriptor","cudnnSetCTCLossDescriptor","cudnnSetCTCLossDescriptorEx","cudnnSetCTCLossDescriptor_v8","cudnnSetCallback","cudnnSetConvolution2dDescriptor","cudnnSetConvolutionGroupCount","cudnnSetConvolutionMathType","cudnnSetConvolutionNdDescriptor","cudnnSetConvolutionReorderType","cudnnSetDropoutDescriptor","cudnnSetFilter4dDescriptor","cudnnSetFilterNdDescriptor","cudnnSetFusedOpsConstParamPackAttribute","cudnnSetFusedOpsVariantParamPackAttribute","cudnnSetLRNDescriptor","cudnnSetOpTensorDescriptor","cudnnSetPersistentRNNPlan","cudnnSetPooling2dDescriptor","cudnnSetPoolingNdDescriptor","cudnnSetRNNAlgorithmDescriptor","cudnnSetRNNBiasMode","cudnnSetRNNDataDescriptor","cudnnSetRNNDescriptor_v6","cudnnSetRNNDescriptor_v8","cudnnSetRNNMatrixMathType","cudnnSetRNNPaddingMode","cudnnSetRNNProjectionLayers","cudnnSetReduceTensorDescriptor","cudnnSetSeqDataDescriptor","cudnnSetSpatialTransformerNdDescriptor","cudnnSetStream","cudnnSetTensor","cudnnSetTensor4dDescriptor","cudnnSetTensor4dDescriptorEx","cudnnSetTensorNdDescriptor","cudnnSetTensorNdDescriptorEx","cudnnSetTensorTransformDescriptor","cudnnSeverity_t","cudnnSoftmaxAlgorithm_t","cudnnSoftmaxBackward","cudnnSoftmaxForward","cudnnSoftmaxMode_t","cudnnSpatialTfGridGeneratorBackward","cudnnSpatialTfGridGeneratorForward","cudnnSpatialTfSamplerBackward","cudnnSpatialTfSamplerForward","cudnnSpatialTransformerDescriptor_t","cudnnSpatialTransformerStruct","cudnnStatus","cudnnStatus_t","cudnnTensorDescriptor_t","cudnnTensorFormat_t","cudnnTensorStruct","cudnnTensorTransformDescriptor_t","cudnnTensorTransformStruct","cudnnTransformFilter","cudnnTransformTensor","cudnnTransformTensorEx","cudnnWgradMode_t","cudnn_version","default","default","default","depth","depth","depth","desc","desc","determinism","determinism","determinism","devPtr","devPtr","device","deviceOverlap","devicePointer","dim3","directManagedMemAccessFromHost","disableTrilinearOptimization","disableTrilinearOptimization","dptr","dst","dstArray","dstArray","dstDevice","dstPos","dstPos","dstPtr","dstPtr","elementSize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extSemArray","extSemArray","extent","extent","extent","extra","f","fd","fd","fence","fence","fence","fence","filterMode","filterMode","firstLayer","firstMipmapLevel","flags","flags","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_","format","formatDesc","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","func","globalL1CacheSupported","gridDim","gridDim","handle","handle","handle","handle","handle","handleTypes","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","height","hitProp","hitRatio","hostNativeAtomicSupported","hostPointer","id","integrated","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","isMultiGpuBoard","kernelExecTimeoutEnabled","kernelParams","key","key","keyedMutex","keyedMutex","kind","l2CacheSize","lastLayer","lastMipmapLevel","libraryPropertyType","libraryPropertyType_t","libraryPropertyType_t_MAJOR_VERSION","libraryPropertyType_t_MINOR_VERSION","libraryPropertyType_t_PATCH_LEVEL","linear","localL1CacheSupported","localSizeBytes","location","location","luid","luidDeviceNodeMask","major","managedMemory","mathType","mathType","mathType","maxAnisotropy","maxAnisotropy","maxBlocksPerMultiProcessor","maxDynamicSharedSizeBytes","maxGridSize","maxMipmapLevelClamp","maxMipmapLevelClamp","maxSurface1D","maxSurface1DLayered","maxSurface2D","maxSurface2DLayered","maxSurface3D","maxSurfaceCubemap","maxSurfaceCubemapLayered","maxTexture1D","maxTexture1DLayered","maxTexture1DLinear","maxTexture1DMipmap","maxTexture2D","maxTexture2DGather","maxTexture2DLayered","maxTexture2DLinear","maxTexture2DMipmap","maxTexture3D","maxTexture3DAlt","maxTextureCubemap","maxTextureCubemapLayered","maxThreadsDim","maxThreadsPerBlock","maxThreadsPerBlock","maxThreadsPerMultiProcessor","memPitch","memory","memory","memory","memoryBusWidth","memoryClockRate","minMipmapLevelClamp","minMipmapLevelClamp","minor","mipmap","mipmap","mipmapFilterMode","mipmapFilterMode","mipmapLevelBias","mipmapLevelBias","miptailFirstLevel","miptailSize","missProp","multiGpuBoardGroupID","multiProcessorCount","name","name","name","normalized","normalizedCoords","numExtSems","numExtSems","numLevels","numRegs","num_bytes","nvSciBufObject","nvSciSync","nvSciSync","nvSciSyncObj","offset","offset","pageableMemoryAccess","pageableMemoryAccessUsesHostPageTables","params","params","paramsArray","paramsArray","pciBusID","pciDeviceID","pciDomainID","persistingL2CacheMaxSize","pid","pitch","pitch","pitch2D","pitchInBytes","poolProps","preferredShmemCarveout","ptr","ptxVersion","readMode","regsPerBlock","regsPerMultiprocessor","res","resType","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reservedSharedMemPerBlock","sRGB","sRGB","sharedMem","sharedMemBytes","sharedMemPerBlock","sharedMemPerBlockOptin","sharedMemPerMultiprocessor","sharedSizeBytes","singleToDoublePrecisionPerfRatio","size","size","sizeInBytes","srcArray","srcArray","srcDevice","srcPos","srcPos","srcPtr","srcPtr","status","status","status","stream","stream","streamPrioritiesSupported","surfaceAlignment","surfaceReference","syncPolicy","tccDriver","textureAlignment","texturePitchAlignment","textureReference","tid","tileExtent","time","time","time","time_delta","time_sec","time_usec","timeoutMs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","totalConstMem","totalGlobalMem","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unifiedAddressing","userData","uuid","value","value","value","w","warpSize","width","width","width","width","width","win32","win32","win32SecurityAttributes","x","x","x","xsize","y","y","y","ysize","z","z","z"],"q":["rcudnn_sysdlt; Device has ECC support enabled","","","","","","&lt; in: Number of <code>accessDescs</code>s","&lt; in: number of memory access descriptors.  Must not …","&lt; The maximum value of ::cudaAccessPolicyWindow::num_bytes.","","&lt; Attribute ::CUaccessPolicyWindow.","Texture address mode for up to 3 dimensions","Texture address mode for up to 3 dimensions","","","","","&lt; Allocation type. Currently must be specified as …","&lt; Arguments","","&lt; CUDA array","&lt; Number of asynchronous engines","&lt; Starting address of the access policy window. CUDA …","The binary architecture version for which the function was …","&lt; Block dimentions","&lt; Block dimensions","Texture Border Colorlt; in: size in bytes of the requested allocation","The attribute to indicate whether the function has been …","&lt; Device can map host memory with …","&lt; Device can access host registered memory at the same …","Channel descriptor for surface reference","Channel descriptor for the texture reference","&lt; Clock frequency in kilohertzlt; Compute mode (See ::cudaComputeMode)","&lt; Device supports Compute Preemption","&lt; Device can possibly execute multiple kernels concurrently","&lt; Device can coherently access managed memory concurrently …","The size in bytes of user-allocated constant memory …","","","","","&lt; Device supports launching cooperative kernels via …","&lt; Deprecated, cudaLaunchCooperativeKernelMultiDevice is …","Specifies an access policy for a window, a contiguous …","Specifies performance hint with ::cudaAccessPolicyWindow …","&lt; Normal cache persistence.","&lt; Persisting access is more likely to persist in cache.","&lt; Streaming access is less likely to persit from cache.","&lt; Border address mode","&lt; Clamp to edge address mode","&lt; Mirror address mode","&lt; Wrapping address mode","","\\\\brief Gets info about the specified cudaArray","\\\\brief Gets a CUDA array plane from a CUDA array","","Sparse CUDA array and CUDA mipmapped array properties","","CUDA array (as source copy argument)","CUDA array","\\\\brief Binds an array to a surface","\\\\brief Binds a memory area to a texture","\\\\brief Binds a 2D memory area to a texture","\\\\brief Binds an array to a texture","\\\\brief Binds a mipmapped array to a texture","&lt; Clamp boundary mode","&lt; Trap boundary mode","&lt; Zero boundary mode","CUDA cooperative group scope","&lt; Scope represented by a grid_group","&lt; Invalid cooperative group scope","&lt; Scope represented by a multi_grid_group","&lt; Output mode Comma separated values format.","&lt; Output mode Comma separated values format.","CUDA Channel format descriptor","Channel format kind","&lt; Float channel format","","&lt; No channel format","&lt; Signed channel format","&lt; Unsigned channel format","\\\\brief Select compute-device which best matches criteria","CUDA device compute modes","&lt; Default compute mode (Multiple threads can use …","&lt; Compute-exclusive-thread mode (Only one thread in one …","&lt; Compute-exclusive-process mode (Many threads in one …","&lt; Compute-prohibited mode (No threads can use …","\\\\brief Returns a channel descriptor using the specified …","\\\\brief Creates a surface object","\\\\brief Creates a texture object","\\\\brief Resets all persisting lines in cache to normal …","","","\\\\brief Destroys an external memory object.","\\\\brief Destroys an external semaphore","\\\\brief Destroys a surface object","\\\\brief Destroys a texture object","&lt; Number of asynchronous engines","&lt; Device supports flushing of outstanding remote writes.","&lt; Device can map host memory into CUDA address space","&lt; Device can access host registered memory at the same …","&lt; Peak clock frequency in kilohertz","&lt; Major compute capability version number","&lt; Minor compute capability version number","&lt; Compute mode (See ::cudaComputeMode for details)","&lt; Device supports Compute Preemption","&lt; Device can possibly execute multiple kernels concurrently","&lt; Device can coherently access managed memory concurrently …","&lt; Device supports launching cooperative kernels via …","&lt; Deprecated, cudaLaunchCooperativeKernelMultiDevice is …","&lt; Host can directly access managed memory on the device …","&lt; Device has ECC support enabled","&lt; The returned attribute shall be interpreted as a …","&lt; Device supports GPUDirect RDMA APIs, like …","&lt; GPUDirect RDMA writes to the device do not need to be …","&lt; Device supports caching globals in L1","&lt; Global memory bus width in bits","&lt; Device can possibly copy memory and execute a kernel …","&lt; Link between the device and the host supports native …","&lt; Device supports using the ::cudaHostRegister flag …","&lt; Device supports host memory registration via …","&lt; Device is integrated with host memory","&lt; Device is on a multi-GPU board","&lt; Specifies whether there is a run time limit on kernels","&lt; Size of L2 cache in bytes","&lt; Device supports caching locals in L1","&lt; Device can allocate managed memory on this system","","&lt; Maximum value of cudaAccessPolicyWindow::num_bytes.","&lt; Maximum block dimension X","&lt; Maximum block dimension Y","&lt; Maximum block dimension Z","&lt; Maximum number of blocks per multiprocessor","&lt; Maximum grid dimension X","&lt; Maximum grid dimension Y","&lt; Maximum grid dimension Z","&lt; Maximum L2 persisting lines capacity setting in bytes.","&lt; Maximum pitch in bytes allowed by memory copies","&lt; Maximum number of 32-bit registers available per block","&lt; Maximum number of 32-bit registers available per …","&lt; Maximum shared memory available per block in bytes","&lt; The maximum optin shared memory per block. This value …","&lt; Maximum shared memory available per multiprocessor in …","&lt; Maximum layers in a 1D layered surface","&lt; Maximum 1D layered surface width","&lt; Maximum 1D surface width","&lt; Maximum 2D surface height","&lt; Maximum 2D layered surface height","&lt; Maximum layers in a 2D layered surface","&lt; Maximum 2D layered surface width","&lt; Maximum 2D surface width","&lt; Maximum 3D surface depth","&lt; Maximum 3D surface height","&lt; Maximum 3D surface width","&lt; Maximum layers in a cubemap layered surface","&lt; Maximum cubemap layered surface width","&lt; Maximum cubemap surface width","&lt; Maximum layers in a 1D layered texture","&lt; Maximum 1D layered texture width","&lt; Maximum 1D linear texture width","&lt; Maximum mipmapped 1D texture width","&lt; Maximum 1D texture width","&lt; Maximum 2D texture height if cudaArrayTextureGather is …","&lt; Maximum 2D texture width if cudaArrayTextureGather is set","&lt; Maximum 2D texture height","&lt; Maximum 2D layered texture height","&lt; Maximum layers in a 2D layered texture","&lt; Maximum 2D layered texture width","&lt; Maximum 2D linear texture height","&lt; Maximum 2D linear texture pitch in bytes","&lt; Maximum 2D linear texture width","&lt; Maximum mipmapped 2D texture height","&lt; Maximum mipmapped 2D texture width","&lt; Maximum 2D texture width","&lt; Maximum 3D texture depth","&lt; Alternate maximum 3D texture depth","&lt; Maximum 3D texture height","&lt; Alternate maximum 3D texture height","&lt; Maximum 3D texture width","&lt; Alternate maximum 3D texture width","&lt; Maximum layers in a cubemap layered texture","&lt; Maximum cubemap layered texture width/height","&lt; Maximum cubemap texture width/height","&lt; Maximum number of threads per block","&lt; Maximum resident threads per multiprocessor","&lt; External timeline semaphore interop is supported on the …","&lt; Peak memory clock frequency in kilohertz","&lt; Handle types supported with mempool based IPC","&lt; Device supports using the ::cudaMallocAsync and …","&lt; Unique identifier for a group of devices on the same …","&lt; Number of multiprocessors on device","&lt; Device supports coherently accessing pageable memory …","&lt; Device accesses pageable memory via the host’s page …","&lt; PCI bus ID of the device","&lt; PCI device ID of the device","&lt; PCI domain ID of the device","","","","&lt; Shared memory reserved by CUDA driver per block in bytes","&lt; Ratio of single precision performance (in floating-point …","&lt; Device supports sparse CUDA arrays and sparse CUDA …","&lt; Device supports stream priorities","&lt; Alignment requirement for surfaces","&lt; Device is using TCC driver model","&lt; Alignment requirement for textures","&lt; Pitch alignment requirement for textures","&lt; Memory available on device for <strong>constant</strong> variables in a …","&lt; Device shares a unified address space with the host","&lt; Warp size in threads","&lt; Peer access is enabled","&lt; Accessing CUDA arrays over the link supported","&lt; Native atomic operation over the link supported","&lt; A relative value indicating the performance of the link …","CUDA device attributes","\\\\brief Queries if a device may directly access a peer …","\\\\brief Disables direct access to memory allocations on a …","\\\\brief Enables direct access to memory allocations on a …","","\\\\brief Returns information about the device","\\\\brief Returns a handle to a compute device","\\\\brief Returns the preferred cache configuration for the …","\\\\brief Returns the default mempool of a device","","\\\\brief Returns resource limits","\\\\brief Gets the current mempool for a device","\\\\brief Return NvSciSync attributes that this device can …","\\\\brief Queries attributes of the link between two devices.","\\\\brief Returns a PCI Bus Id string for the device","\\\\brief Returns the shared memory configuration for the …","\\\\brief Returns numerical values that correspond to the …","","","","CUDA device P2P attributes","CUDA device properties","\\\\brief Destroy all allocations and reset all state on the …","\\\\brief Sets the preferred cache configuration for the …","","\\\\brief Set resource limits","\\\\brief Sets the current memory pool of a device","\\\\brief Sets the shared memory configuration for the …","\\\\brief Wait for compute device to finish","\\\\brief Returns the latest version of CUDA supported by the …","&lt; Default search mode for driver symbols.","&lt; Search for legacy versions of driver symbols.","&lt; Search for per-thread versions of driver symbols.","CUDA error types","This indicated that the user has taken the address of a …","This indicated that the user has taken the address of a …","This indicates that a resource has already been acquired.","This indicates that a resource has already been acquired.","This indicates that the resource is already mapped.","This indicates that the resource is already mapped.","Any unhandled CUDA driver error is added to this value and …","Any unhandled CUDA driver error is added to this value and …","This indicates that the specified array is currently …","This indicates that the specified array is currently …","An assert triggered in device code during kernel …","An assert triggered in device code during kernel …","This indicates that the API call requires a newer CUDA …","This indicates that the API call requires a newer CUDA …","The operation is not permitted on an event which was last …","The operation is not permitted on an event which was last …","This error indicates that the system was upgraded to run …","This error indicates that the system was upgraded to run …","This error indicates that the context current to the …","This error indicates that the context current to the …","This error indicates that the number of blocks launched …","This error indicates that the number of blocks launched …","This indicates that a CUDA Runtime API call cannot be …","This indicates that a CUDA Runtime API call cannot be …","This indicates that a call tried to access an …","This indicates that a call tried to access an …","This indicates that the device doesn’t have a valid Grid …","This indicates that the device doesn’t have a valid Grid …","This most frequently indicates that there is no context …","This most frequently indicates that there is no context …","This indicates that all CUDA devices are busy or …","This indicates that all CUDA devices are busy or …","This indicates that multiple surfaces (across separate …","This indicates that multiple surfaces (across separate …","This indicates that multiple textures (across separate …","This indicates that multiple textures (across separate …","This indicates that multiple global or constant variables …","This indicates that multiple global or constant variables …","This indicates that an uncorrectable ECC error was …","This indicates that an uncorrectable ECC error was …","This indicates that the file specified was not found.","This indicates that the file specified was not found.","This error indicates that the graph update was not …","This error indicates that the graph update was not …","Device encountered an error in the call stack during …","Device encountered an error in the call stack during …","This error indicates that the memory range passed to …","This error indicates that the memory range passed to …","This error indicates that the pointer passed to …","This error indicates that the pointer passed to …","The device encountered a load or store instruction on an …","The device encountered a load or store instruction on an …","The device encountered an illegal instruction during …","The device encountered an illegal instruction during …","This indicates that a resource required by the API call is …","This indicates that a resource required by the API call is …","This indicates that the current context is not compatible …","This indicates that the current context is not compatible …","The API call failed because the CUDA driver and runtime …","The API call failed because the CUDA driver and runtime …","This indicates that the installed NVIDIA CUDA driver is …","This indicates that the installed NVIDIA CUDA driver is …","While executing a kernel, the device encountered an …","While executing a kernel, the device encountered an …","This indicates that the channel descriptor passed to the …","This indicates that the channel descriptor passed to the …","This indicates that a kernel launch is requesting …","This indicates that a kernel launch is requesting …","This indicates that the device ordinal supplied by the …","This indicates that the device ordinal supplied by the …","The requested device function does not exist or is not …","The requested device function does not exist or is not …","This indicates that at least one device pointer passed to …","This indicates that at least one device pointer passed to …","This indicates that a non-float texture was being accessed …","This indicates that a non-float texture was being accessed …","This indicates an error with the OpenGL or DirectX context.","This indicates an error with the OpenGL or DirectX context.","This indicates that at least one host pointer passed to …","This indicates that at least one host pointer passed to …","This indicates that the device kernel image is invalid.","This indicates that the device kernel image is invalid.","This indicates that the direction of the memcpy passed to …","This indicates that the direction of the memcpy passed to …","This indicates that an attempt was made to read a …","This indicates that an attempt was made to read a …","The device encountered an invalid program counter. This …","The device encountered an invalid program counter. This …","This indicates that one or more of the pitch-related …","This indicates that one or more of the pitch-related …","A PTX compilation failed. The runtime may fall back to …","A PTX compilation failed. The runtime may fall back to …","This indicates that a resource handle passed to the API …","This indicates that a resource handle passed to the API …","This indicates that the device kernel source is invalid.","This indicates that the device kernel source is invalid.","This indicates that the surface passed to the API call is …","This indicates that the surface passed to the API call is …","This indicates that the symbol name/identifier passed to …","This indicates that the symbol name/identifier passed to …","This indicates that the texture passed to the API call is …","This indicates that the texture passed to the API call is …","This indicates that the texture binding is not valid. This …","This indicates that the texture binding is not valid. This …","This indicates that one or more of the parameters passed …","This indicates that one or more of the parameters passed …","This indicates that the JIT compilation was disabled. The …","This indicates that the JIT compilation was disabled. The …","This indicates that the PTX JIT compiler library was not …","This indicates that the PTX JIT compiler library was not …","An exception occurred on the device while executing a …","An exception occurred on the device while executing a …","This error indicates that a grid launch did not occur …","This error indicates that a grid launch did not occur …","This error indicates that a grid launch did not occur …","This error indicates that a grid launch did not occur …","This error indicates a kernel launch that uses an …","This error indicates a kernel launch that uses an …","This error indicates that a device runtime grid launch did …","This error indicates that a device runtime grid launch did …","This indicates that a launch did not occur because it did …","This indicates that a launch did not occur because it did …","This error indicates that a device runtime grid launch …","This error indicates that a device runtime grid launch …","This indicates that the device kernel took too long to …","This indicates that the device kernel took too long to …","This indicates that the buffer object could not be mapped.","This indicates that the buffer object could not be mapped.","The API call failed because it was unable to allocate …","The API call failed because it was unable to allocate …","This indicated that an emulated device pointer exceeded …","This indicated that an emulated device pointer exceeded …","The device encountered a load or store instruction on a …","The device encountered a load or store instruction on a …","The device function being invoked (usually via …","The device function being invoked (usually via …","Mixing of device and device emulation code was not allowed.","Mixing of device and device emulation code was not allowed.","This error indicates that the MPS client failed to connect …","This error indicates that the MPS client failed to connect …","This error indicates that the hardware resources required …","This error indicates that the hardware resources required …","This error indicates the the hardware resources required …","This error indicates the the hardware resources required …","This error indicates that the remote procedural call …","This error indicates that the remote procedural call …","This error indicates that the MPS server is not ready to …","This error indicates that the MPS server is not ready to …","This indicates that no CUDA-capable devices were detected …","This indicates that no CUDA-capable devices were detected …","This indicates that there is no kernel image available …","This indicates that there is no kernel image available …","This indicates that a resource is not mapped.","This indicates that a resource is not mapped.","This indicates that a mapped resource is not available for …","This indicates that a mapped resource is not available for …","This indicates that a mapped resource is not available for …","This indicates that a mapped resource is not available for …","This error indicates the attempted operation is not …","This error indicates the attempted operation is not …","This indicates that asynchronous operations issued …","This indicates that asynchronous operations issued …","This error indicates the attempted operation is not …","This error indicates the attempted operation is not …","This indicates that the API call is not yet implemented. …","This indicates that the API call is not yet implemented. …","This indicates that an uncorrectable NVLink error was …","This indicates that an uncorrectable NVLink error was …","This error indicates that an OS call failed.","This error indicates that an OS call failed.","This error indicates that a call to …","This error indicates that a call to …","This error indicates that ::cudaDeviceDisablePeerAccess() …","This error indicates that ::cudaDeviceDisablePeerAccess() …","This error indicates that P2P access is not supported …","This error indicates that P2P access is not supported …","This indicated that a previous kernel launch failed. This …","This indicated that a previous kernel launch failed. This …","\\\\deprecated This error return is deprecated as of CUDA …","\\\\deprecated This error return is deprecated as of CUDA …","\\\\deprecated This error return is deprecated as of CUDA …","\\\\deprecated This error return is deprecated as of CUDA …","This indicates profiler is not initialized for this run. …","This indicates profiler is not initialized for this run. …","\\\\deprecated This error return is deprecated as of CUDA …","\\\\deprecated This error return is deprecated as of CUDA …","This indicates that the user has called …","This indicates that the user has called …","This indicates that initialization of a shared object …","This indicates that initialization of a shared object …","This indicates that a link to a shared object failed to …","This indicates that a link to a shared object failed to …","By default, the CUDA runtime may perform a minimal set of …","By default, the CUDA runtime may perform a minimal set of …","This indicates an internal startup failure in the CUDA …","This indicates an internal startup failure in the CUDA …","The operation would have resulted in a disallowed implicit …","The operation would have resulted in a disallowed implicit …","The current capture sequence on the stream has been …","The current capture sequence on the stream has been …","A dependency would have been created which crosses the …","A dependency would have been created which crosses the …","The operation would have resulted in a merge of two …","The operation would have resulted in a merge of two …","The capture sequence contains a fork that was not joined …","The capture sequence contains a fork that was not joined …","The capture was not initiated in this stream.","The capture was not initiated in this stream.","The operation is not permitted when the stream is …","The operation is not permitted when the stream is …","A stream capture sequence not initiated with the …","A stream capture sequence not initiated with the …","This indicates that the CUDA driver that the application …","This indicates that the CUDA driver that the application …","This indicates that a named symbol was not found. Examples …","This indicates that a named symbol was not found. Examples …","This error indicates that a call to …","This error indicates that a call to …","This indicated that a synchronization operation had failed.","This indicated that a synchronization operation had failed.","This error indicates that there is a mismatch between the …","This error indicates that there is a mismatch between the …","This error indicates that the system is not yet ready to …","This error indicates that the system is not yet ready to …","This indicated that a texture fetch was not able to be …","This indicated that a texture fetch was not able to be …","This indicated that a texture was not bound for access. …","This indicated that a texture was not bound for access. …","This indicates that the wait operation has timed out.","This indicates that the wait operation has timed out.","This error indicates that the hardware resources required …","This error indicates that the hardware resources required …","This indicates that an unknown internal error has occurred.","This indicates that an unknown internal error has occurred.","This indicates that the buffer object could not be …","This indicates that the buffer object could not be …","This indicates that the provided execution affinity is not …","This indicates that the provided execution affinity is not …","This indicates that the ::cudaLimit passed to the API call …","This indicates that the ::cudaLimit passed to the API call …","This indicates that the provided PTX was compiled with an …","This indicates that the provided PTX was compiled with an …","CUDA error types","\\\\brief Creates an event object","\\\\brief Creates an event object with the specified flags","\\\\brief Destroys an event object","\\\\brief Computes the elapsed time between events","\\\\brief Queries an event’s status","\\\\brief Records an event","","\\\\brief Waits for an event to complete","CUDA event types","CUDA extent","External memory buffer descriptor","\\\\brief Maps a buffer onto an imported memory object","\\\\brief Maps a CUDA mipmapped array onto an external memory …","External memory handle descriptor","","Win32 handle referencing the semaphore object. Valid when …","External memory handle types","Handle is a shared NT handle to a D3D11 resource","Handle is a globally shared handle to a D3D11 resource","Handle is a D3D12 heap object","Handle is a D3D12 committed resource","Handle is an NvSciBuf object","Handle is an opaque file descriptor","Handle is an opaque shared NT handle","Handle is an opaque, globally shared handle","External memory mipmap descriptor","CUDA external memory","External semaphore handle descriptor","","Win32 handle referencing the semaphore object. Valid when …","External semaphore handle types","Handle is a shared NT handle referencing a D3D11 fence …","Handle is a shared NT handle referencing a D3D12 fence …","Handle is a shared NT handle referencing a D3D11 keyed …","Handle is a shared KMT handle referencing a D3D11 keyed …","Opaque handle to NvSciSync Object","Handle is an opaque file descriptor","Handle is an opaque shared NT handle","Handle is an opaque, globally shared handle","Handle is an opaque handle file descriptor referencing a …","Handle is an opaque handle file descriptor referencing a …","External semaphore signal node parameters","External semaphore signal parameters, compatible with …","","Parameters for fence objects","","Parameters for keyed mutex objects","External semaphore wait node parameters","External semaphore wait parameters, compatible with driver …","","Parameters for fence objects","","Parameters for keyed mutex objects","CUDA external semaphore","&lt; Linear filter mode","&lt; Point filter mode","&lt; ::cudaDeviceFlushGPUDirectRDMAWrites() and its CUDA …","&lt; The ::CU_STREAM_WAIT_VALUE_FLUSH flag and the …","CUDA GPUDirect RDMA flush writes APIs supported on the …","CUDA GPUDirect RDMA flush writes scopes","CUDA GPUDirect RDMA flush writes targets","&lt; Sets the target for …","&lt; Blocks until remote writes are visible to all CUDA …","&lt; Blocks until remote writes are visible to the CUDA …","&lt; Auto format mode","&lt; Forced format mode","\\\\brief Frees memory on the device","\\\\brief Frees an array on the device","\\\\brief Frees memory with stream ordered semantics","\\\\brief Frees page-locked memory","\\\\brief Frees a mipmapped array on the device","CUDA function attributes that can be set using …","","&lt; Maximum dynamic shared memory size","&lt; Preferred shared memory-L1 cache split","CUDA function attributes","CUDA function cache configurations","&lt; Prefer equal size L1 cache and shared memory","&lt; Prefer larger L1 cache and smaller shared memory","&lt; Default function cache configuration, no preference","&lt; Prefer larger shared memory and smaller L1 cache","\\\\brief Find out attributes for a given function","\\\\brief Set attributes for a given function","\\\\brief Sets the preferred cache configuration for a device …","\\\\brief Sets the shared memory configuration for a device …","CUDA function","CUDA GPUDirect RDMA flush writes ordering features of the …","&lt; Any CUDA device in the system can consistently consume …","&lt; The device does not natively support ordering of …","&lt; Natively, the device can consistently consume GPUDirect …","\\\\brief Get the channel descriptor of an array","\\\\brief Returns which device is currently being used","\\\\brief Returns the number of compute-capable devices","\\\\brief Gets the flags for the current device","\\\\brief Returns information about the compute-device","\\\\brief Returns the requested driver API function pointer","Flags to specify search options to be used with …","\\\\brief Returns the string representation of an error code …","\\\\brief Returns the description string for an error code","\\\\cond impl_private","\\\\brief Get pointer to device entry function that matches …","\\\\brief Returns the last error from a runtime call","\\\\brief Gets a mipmap level of a CUDA mipmapped array","\\\\brief Returns a surface object’s resource descriptor …","\\\\brief Get the surface reference associated with a symbol","\\\\brief Finds the address associated with a CUDA symbol","\\\\brief Finds the size of the object associated with a CUDA …","\\\\brief Get the alignment offset of a texture","\\\\brief Returns a texture object’s resource descriptor","\\\\brief Returns a texture object’s resource view …","\\\\brief Returns a texture object’s texture descriptor","\\\\brief Get the texture reference associated with a symbol","\\\\brief Creates a child graph node and adds it to a graph","\\\\brief Adds dependency edges to a graph.","\\\\brief Creates an empty node and adds it to a graph","","","","","\\\\brief Creates a host execution node and adds it to a graph","\\\\brief Creates a kernel execution node and adds it to a …","","","\\\\brief Creates a memcpy node and adds it to a graph","","","","\\\\brief Creates a memset node and adds it to a graph","\\\\brief Gets a handle to the embedded graph of a child …","\\\\brief Clones a graph","\\\\brief Creates a graph","CUDA Graph debug write options","Adds cudaHostNodeParams to output","Adds cudaEvent_t handle from record and wait nodes to …","Adds cudaExternalSemaphoreSignalNodeParams values to output","Adds cudaKernelNodeAttrID values to output","Adds cudaMemsetParams to output","Adds cudaExternalSemaphoreWaitNodeParams to output","Output all debug data as if every debug flag is enabled","Adds cudaKernelNodeParams to output","Adds cudaMemcpy3DParms to output","","\\\\brief Write a DOT file describing graph structure","\\\\brief Destroys a graph","\\\\brief Remove a node from the graph","","","","","","\\\\brief Destroys an executable graph","","","","","\\\\brief Sets the parameters for a host node in the given …","\\\\brief Sets the parameters for a kernel node in the given …","\\\\brief Sets the parameters for a memcpy node in the given …","","","","\\\\brief Sets the parameters for a memset node in the given …","\\\\brief Check whether an executable graph can be updated …","&lt; The update failed for an unexpected reason which is …","&lt; The update failed because the function of a kernel node …","&lt; The update failed because a node type changed","&lt; The update failed because something about the node is …","&lt; The update failed because the parameters changed in a …","&lt; The update failed because the topology changed","&lt; The update failed because the function of a kernel node …","CUDA Graph Update error types","&lt; The update succeeded","CUDA executable (launchable) graph","","","","","\\\\brief Returns a graph’s dependency edges","\\\\brief Returns a graph’s nodes","\\\\brief Returns a graph’s root nodes","\\\\brief Returns a host node’s parameters","\\\\brief Sets a host node’s parameters","\\\\brief Creates an executable graph from a graph","&lt; Automatically free memory allocated in a graph before …","Flags for instantiating a graph","","\\\\brief Copies attributes from source node to destination …","\\\\brief Queries node attribute.","\\\\brief Returns a kernel node’s parameters","\\\\brief Sets node attribute.","\\\\brief Sets a kernel node’s parameters","\\\\brief Launches an executable graph in a stream","","(value type = cuuint64_t) Amount of memory, in bytes, …","(value type = cuuint64_t) High watermark of memory, in …","(value type = cuuint64_t) Amount of memory, in bytes, …","(value type = cuuint64_t) High watermark of memory, in …","Graph memory attributes","","\\\\brief Returns a memcpy node’s parameters","\\\\brief Sets a memcpy node’s parameters","","","","\\\\brief Returns a memset node’s parameters","\\\\brief Sets a memset node’s parameters","\\\\brief Finds a cloned version of a node","\\\\brief Returns a node’s dependencies","\\\\brief Returns a node’s dependent nodes","\\\\brief Returns a node’s type","CUDA Graph node types","","&lt; Empty (no-op) node","&lt; External event record node","&lt; External semaphore signal node","&lt; External semaphore wait node","&lt; Node which executes an embedded graph","&lt; Host (executable) node","&lt; GPU kernel node","&lt; Memory allocation node","&lt; Memory free node","&lt; Memcpy node","&lt; Memset node","&lt; External event wait node","CUDA graph node.","\\\\brief Release a user object reference from a graph","\\\\brief Removes dependency edges from a graph.","\\\\brief Retain a reference to a user object from a graph","","&lt; Transfer references from the caller rather than creating …","CUDA graph","CUDA graphics interop array indices for cube maps","&lt; Negative X face of cubemap","&lt; Negative Y face of cubemap","&lt; Negative Z face of cubemap","&lt; Positive X face of cubemap","&lt; Positive Y face of cubemap","&lt; Positive Z face of cubemap","CUDA graphics interop map flags","&lt; Default; Assume resource can be read/written","&lt; CUDA will not write to this resource","&lt; CUDA will only write to and will not read from this …","\\\\brief Map graphics resources for access by CUDA","CUDA graphics interop register flags","&lt; Default","&lt; CUDA will not write to this resource","&lt; CUDA will bind this resource to a surface reference","&lt; CUDA will perform texture gather operations on this …","&lt; CUDA will only write to and will not read from this …","CUDA graphics interop resource","\\\\brief Get a mipmapped array through which to access a …","\\\\brief Get an device pointer through which to access a …","\\\\brief Set usage flags for mapping a graphics resource","CUDA graphics resource types","\\\\brief Get an array through which to access a subresource …","\\\\brief Unmap graphics resources.","\\\\brief Unregisters a graphics resource for access by CUDA","\\\\brief Allocates page-locked memory on the host","CUDA host function \\\\param userData Argument value passed …","\\\\brief Passes back device pointer of mapped host memory …","\\\\brief Passes back flags used to allocate pinned host …","CUDA host node parameters","\\\\brief Registers an existing host memory range for use by …","\\\\brief Unregisters a memory range that was registered with …","\\\\brief Imports an external memory object","\\\\brief Imports an external semaphore","\\\\brief Attempts to close memory mapped with …","CUDA IPC event handle","CUDA IPC event handle","\\\\brief Gets an interprocess handle for a previously …","\\\\brief Gets an interprocess memory handle for an existing …","CUDA IPC memory handle","CUDA IPC memory handle","\\\\brief Opens an interprocess event handle for use in the …","\\\\brief Opens an interprocess memory handle exported from …","Graph kernel node Attributes","Graph kernel node attributes union, used with …","&lt; Identifier for …","&lt; Allows a kernel node to be cooperative (see …","CUDA GPU kernel node parameters","&lt; Output mode Key-Value pair format.","&lt; Output mode Key-Value pair format.","\\\\brief Launches a device function where thread blocks can …","\\\\brief Launches device functions on multiple devices where …","\\\\brief Enqueues a host function call in a stream","\\\\brief Launches a device function","CUDA launch parameters","CUDA Limits","&lt; GPU device runtime pending launch count","&lt; GPU device runtime synchronize depth","&lt; GPU malloc heap size","&lt; A value between 0 and 128 that indicates the maximum …","&lt; A size in bytes for L2 persisting lines cache size","&lt; GPU printf FIFO size","&lt; GPU thread stack size","\\\\brief Allocate memory on the device","\\\\brief Allocates logical 1D, 2D, or 3D memory objects on …","\\\\brief Allocate an array on the device","\\\\brief Allocate an array on the device","\\\\brief Allocates memory with stream ordered semantics","\\\\brief Allocates memory from a specified pool with stream …","\\\\brief Allocates page-locked memory on the host","","\\\\brief Allocate a mipmapped array on the device","\\\\brief Allocates pitched memory on the device","Memory access descriptor","Specifies the memory protection flags for mapping.","&lt; Default, make the address range not accessible","&lt; Make the address range read accessible","&lt; Make the address range read-write accessible","\\\\brief Advise about the usage of a given memory range","&lt; Data will be accessed by the specified device, so …","&lt; Set the preferred location for the data as the specified …","&lt; Data will mostly be read and only occassionally be …","&lt; Let the Unified Memory subsystem decide on the page …","&lt; Clear the preferred location for the data","&lt; Undo the effect of ::cudaMemAdviseSetReadMostly","Memory allocation node parameters","Flags for specifying particular handle types","Defines the allocation types available","","This allocation type is ‘pinned’, i.e. cannot migrate …","This allocation type is ‘pinned’, i.e. cannot migrate …","\\\\brief Gets free and total device memory","&lt; Does not allow any export mechanism. &gt;","&lt; Allows a file descriptor to be used for exporting. …","&lt; Allows a Win32 NT handle to be used for exporting. …","&lt; Allows a Win32 KMT handle to be used for exporting. …","Specifies a memory location.","Specifies the type of location","&lt; Location is a device location, thus id is a device …","","CUDA memory pool attributes","(value type = cuuint64_t) Amount of reserved memory in …","(value type = cuuint64_t) Amount of backing memory …","(value type = cuuint64_t) High watermark of backing memory …","(value type = cuuint64_t) Amount of memory from the pool …","(value type = cuuint64_t) High watermark of the amount of …","\\\\brief Creates a memory pool","\\\\brief Destroys the specified memory pool","\\\\brief Export data to share a memory pool allocation …","\\\\brief Exports a memory pool to the requested handle type.","\\\\brief Returns the accessibility of a pool from a device","\\\\brief Gets attributes of a memory pool","\\\\brief imports a memory pool from a shared handle.","\\\\brief Import a memory pool allocation from another …","Specifies the properties of allocations made from the pool.","Opaque data for exporting a pool allocation","(value type = int) Allow cuMemAllocAsync to insert new …","(value type = int) Allow reuse of already completed frees …","(value type = int) Allow cuMemAllocAsync to use memory …","\\\\brief Controls visibility of pools between devices","\\\\brief Sets attributes of a memory pool","\\\\brief Tries to release memory back to the OS","CUDA memory pool","\\\\brief Prefetches memory to the specified destination …","CUDA range attributes","&lt; Memory range has ::cudaMemAdviseSetAccessedBy set for …","&lt; The last location to which the range was prefetched","&lt; The preferred location of the range","&lt; Whether the range will mostly be read and only …","\\\\brief Query an attribute of a given memory range","\\\\brief Query attributes of a given memory range.","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data between 3D objects","\\\\brief Copies data between 3D objects","CUDA 3D memory copying parameters","\\\\brief Copies memory between devices","\\\\brief Copies memory between devices asynchronously.","CUDA 3D cross-device memory copying parameters","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","&lt; Direction of the transfer is inferred from the pointer …","&lt; Device -&gt; Device","&lt; Device -&gt; Host","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data from the given symbol on the device","\\\\brief Copies data from the given symbol on the device","&lt; Host   -&gt; Device","&lt; Host   -&gt; Host","CUDA memory copy types","\\\\brief Copies memory between two devices","\\\\brief Copies memory between two devices asynchronously.","\\\\brief Copies data between host and device","\\\\brief Copies data between host and device","\\\\brief Copies data to the given symbol on the device","\\\\brief Copies data to the given symbol on the device","CUDA Memory Advise values","CUDA memory types","&lt; Device memory","&lt; Host memory","&lt; Managed memory","&lt; Unregistered memory","\\\\brief Initializes or sets device memory to a value","\\\\brief Initializes or sets device memory to a value","\\\\brief Initializes or sets device memory to a value","\\\\brief Initializes or sets device memory to a value","\\\\brief Initializes or sets device memory to a value","\\\\brief Initializes or sets device memory to a value","CUDA Memset node parameters","","","CUDA mipmapped array (as source argument)","CUDA mipmapped array","\\\\brief Returns dynamic shared memory available per block …","\\\\brief Returns occupancy for a device function","\\\\brief Returns occupancy for a device function with the …","CUDA Profiler Output modes","CUDA Profiler Output modes","\\\\brief Returns the last error from a runtime call","CUDA Pitched memory pointer","CUDA pointer attributes","\\\\brief Returns attributes about a specified pointer","CUDA 3D position","&lt; Read texture as specified element type","&lt; Read texture as normalized float","&lt; 1 channel 32-bit floating point","&lt; 2 channel 32-bit floating point","&lt; 4 channel 32-bit floating point","&lt; 1 channel 16-bit floating point","&lt; 2 channel 16-bit floating point","&lt; 4 channel 16-bit floating point","&lt; No resource view format (use underlying resource format)","&lt; Block compressed 4 signed","&lt; Block compressed 5 signed","&lt; Block compressed 6 signed half-float","&lt; 1 channel signed 8-bit integers","&lt; 2 channel signed 8-bit integers","&lt; 4 channel signed 8-bit integers","&lt; 1 channel signed 32-bit integers","&lt; 2 channel signed 32-bit integers","&lt; 4 channel signed 32-bit integers","&lt; 1 channel signed 16-bit integers","&lt; 2 channel signed 16-bit integers","&lt; 4 channel signed 16-bit integers","&lt; Block compressed 1","&lt; Block compressed 2","&lt; Block compressed 3","&lt; Block compressed 4 unsigned","&lt; Block compressed 5 unsigned","&lt; Block compressed 6 unsigned half-float","&lt; Block compressed 7","&lt; 1 channel unsigned 8-bit integers","&lt; 2 channel unsigned 8-bit integers","&lt; 4 channel unsigned 8-bit integers","&lt; 1 channel unsigned 32-bit integers","&lt; 2 channel unsigned 32-bit integers","&lt; 4 channel unsigned 32-bit integers","&lt; 1 channel unsigned 16-bit integers","&lt; 2 channel unsigned 16-bit integers","&lt; 4 channel unsigned 16-bit integers","CUDA resource descriptor","","","","","","CUDA resource types","&lt; Array resource","&lt; Linear resource","&lt; Mipmapped array resource","&lt; Pitch 2D resource","CUDA resource view descriptor","CUDA texture resource view formats","","","","","","\\\\brief Returns the CUDA Runtime version","\\\\brief Set device to be used for GPU executions","\\\\brief Sets flags to be used for device executions","\\\\brief Converts a double argument to be executed on a …","\\\\brief Converts a double argument after execution on a …","\\\\brief Set a list of devices that can be used for CUDA","Shared memory carveout configurations. These may be passed …","","","","CUDA shared memory configuration","&lt; No preference for shared memory or L1 (default)","&lt; Prefer maximum available L1 cache, minimum shared memory","&lt; Prefer maximum available shared memory, minimum L1 cache","","\\\\brief Add a callback to a compute stream","&lt; Add new nodes to the dependency set","","Stream Attributes","Stream attributes union used with …","&lt; Identifier for ::cudaStreamAttrValue::accessPolicyWindow.","&lt; ::cudaSynchronizationPolicy for work queued up in this …","\\\\brief Begins graph capture on a stream","Type of stream callback functions. \\\\param stream The …","Possible modes for stream capture thread interactions. For …","","","","Possible stream capture statuses returned by …","&lt; Stream is actively capturing","&lt; Stream is part of a capture sequence that has been …","&lt; Stream is not capturing","\\\\brief Copies attributes from source stream to destination …","\\\\brief Create an asynchronous stream","\\\\brief Create an asynchronous stream","\\\\brief Create an asynchronous stream with the specified …","\\\\brief Destroys and cleans up an asynchronous stream","\\\\brief Ends capture on a stream, returning the captured …","\\\\brief Queries stream attribute.","\\\\brief Query capture status of a stream","\\\\brief Query a stream’s capture state (11.3+)","\\\\brief Query the flags of a stream","\\\\brief Query the priority of a stream","\\\\brief Returns a stream’s capture status","\\\\brief Queries an asynchronous stream for completion status","\\\\brief Sets stream attribute.","&lt; Replace the dependency set with the new nodes","\\\\brief Waits for stream tasks to complete","\\\\brief Update the set of dependencies in a capturing …","Flags for ::cudaStreamUpdateCaptureDependencies","\\\\brief Make a compute stream wait on an event","CUDA stream","The API call returned with no errors. In the case of query …","The API call returned with no errors. In the case of query …","CUDA Surface boundary modes","CUDA Surface format modes","An opaque value that represents a CUDA Surface object","","","","","","CUDA texture address modes","CUDA texture descriptor","CUDA texture filter modes","An opaque value that represents a CUDA texture object","CUDA texture read modes","\\\\brief Swaps the stream capture interaction mode for a …","\\\\brief Exit and clean up from CUDA launches","\\\\brief Returns the preferred cache configuration for the …","\\\\brief Returns resource limits","\\\\brief Sets the preferred cache configuration for the …","\\\\brief Set resource limits","\\\\brief Wait for compute device to finish","","\\\\brief Unbinds a texture","\\\\brief Create a user object","Flags for user objects for graphs","&lt; Indicates the destructor execution is not synchronized …","\\\\brief Release a reference to a user object","\\\\brief Retain a reference to a user object","Flags for retaining user object references for graphs","CUDA user object for graphs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an empty tensor transform descriptor","","","","","","","","","","","","","","","","","","","","","","","","","","","","Destroys a previously created tensor transform descriptor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the values stored in a previously initialized …","","","","","Create a destination descriptor for cudnnTransformTensor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize a previously created tensor transform …","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Tile depth in elements","&lt; Depth in elements","&lt; Depth of the resource view","&lt; Channel descriptor","&lt; Channel descriptor","","","","&lt; Device pointer","&lt; Device pointer","The device against which the memory was allocated or …","&lt; Device can concurrently copy memory and execute a …","The address which may be dereferenced on the current …","","&lt; Host can directly access managed memory on the device …","Disable any trilinear filtering optimizations.","Disable any trilinear filtering optimizations.","&lt; out: address of the allocation returned by CUDA","&lt; Destination device pointer","&lt; Destination memory address","&lt; Destination memory address","&lt; Destination device","&lt; Destination position offset","&lt; Destination position offset","&lt; Pitched destination memory address","&lt; Pitched destination memory address","&lt; Size of each element in bytes. Must be 1, 2, or 4.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Array of external semaphore handles.","&lt; Array of external semaphore handles.","&lt; Requested memory copy size","&lt; Requested memory copy size","Dimensions of base level of the mipmap chain","&lt; Pointer to kernel arguments in the “extra” format","&lt; Channel format kind","File descriptor referencing the memory object. Valid when …","File descriptor referencing the semaphore object. Valid …","","Pointer to NvSciSyncFence. Valid if …","","Pointer to NvSciSyncFence. Valid if …","Texture filter mode","Texture filter mode","&lt; First layer index","&lt; First defined mipmap level","&lt; Flags will either be zero or …","&lt; ::CUmemProt accessibility flags to set on the request","Flags must either be zero or ::cudaExternalMemoryDedicated","Flags reserved for future use. Must be zero.","Flags associated with CUDA mipmapped arrays. See …","Flags reserved for the future. Must be zero.","Only when ::cudaExternalSemaphoreSignalParams is used to …","Only when ::cudaExternalSemaphoreSignalParams is used to …lt; The function to call when the node executes","&lt; Resource view format","Format of base level of the mipmap chain","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","&lt; Device function symbol","&lt; Kernel to launch","&lt; Device supports caching globals in L1","&lt; Grid dimentions","&lt; Grid dimensions","","Valid NT handle. Must be NULL if ‘name’ is non-NULL","","Valid NT handle. Must be NULL if ‘name’ is non-NULL","","&lt; Handle types that will be supported by allocations from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Tile height in elements","&lt; Height in elements","&lt; Number of rows","&lt; Height of the array in elements","&lt; Height of the resource view","&lt; ::CUaccessProperty set for hit.","&lt; hitRatio specifies percentage of lines assigned hitProp, …","&lt; Link between the device and the host supports native …","The address which may be dereferenced on the host to …","&lt; identifier for a given this location’s …","&lt; Device is integrated as opposed to discrete","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","&lt; Device is on a multi-GPU board","&lt; Specified whether there is a run time limit on kernels","&lt; Array of pointers to individual kernel arguments","","Value of key to acquire the mutex with","","","&lt; Type of transfer","&lt; Size of L2 cache in bytes","&lt; Last layer index","&lt; Last defined mipmap level","","","","","","","&lt; Device supports caching locals in L1","The size in bytes of local memory used by each thread of …","&lt; Location on which the request is to change it’s …","&lt; Location allocations should reside.","&lt; 8-byte locally unique identifier. Value is undefined on …","&lt; LUID device node mask. Value is undefined on TCC and …","&lt; Major compute capability","&lt; Device supports allocating managed memory on this system","","","","Limit to the anisotropy ratio","Limit to the anisotropy ratio","&lt; Maximum number of resident blocks per multiprocessor","The maximum size in bytes of dynamic shared memory per …","&lt; Maximum size of each dimension of a grid","Upper end of the mipmap level range to clamp access to","Upper end of the mipmap level range to clamp access to","&lt; Maximum 1D surface size","&lt; Maximum 1D layered surface dimensions","&lt; Maximum 2D surface dimensions","&lt; Maximum 2D layered surface dimensions","&lt; Maximum 3D surface dimensions","&lt; Maximum Cubemap surface dimensions","&lt; Maximum Cubemap layered surface dimensions","&lt; Maximum 1D texture size","&lt; Maximum 1D layered texture dimensions","&lt; Deprecated, do not use. Use …","&lt; Maximum 1D mipmapped texture size","&lt; Maximum 2D texture dimensions","&lt; Maximum 2D texture dimensions if texture gather …","&lt; Maximum 2D layered texture dimensions","&lt; Maximum dimensions (width, height, pitch) for 2D …","&lt; Maximum 2D mipmapped texture dimensions","&lt; Maximum 3D texture dimensions","&lt; Maximum alternate 3D texture dimensions","&lt; Maximum Cubemap texture dimensions","&lt; Maximum Cubemap layered texture dimensions","&lt; Maximum size of each dimension of a block","The maximum number of threads per block, beyond which a …","&lt; Maximum number of threads per block","&lt; Maximum resident threads per multiprocessor","&lt; Maximum pitch in bytes allowed by memory copies","","","","&lt; Global memory bus width in bits","&lt; Peak memory clock frequency in kilohertz","Lower end of the mipmap level range to clamp access to","Lower end of the mipmap level range to clamp access to","&lt; Minor compute capability","","&lt; CUDA mipmapped array","Mipmap filter mode","Mipmap filter mode","Offset applied to the supplied mipmap level","Offset applied to the supplied mipmap level","&lt; First mip level at which the mip tail begins","&lt; Total size of the mip tail.","&lt; ::CUaccessProperty set for miss. Must be either NORMAL …","&lt; Unique identifier for a group of devices on the same …","&lt; Number of multiprocessors on device","&lt; ASCII string identifying device","Name of a valid memory object. Must be NULL if ‘handle’…","Name of a valid synchronization primitive. Must be NULL if …","Indicates whether texture reads are normalized or not","Indicates whether texture reads are normalized or not","&lt; Number of handles and parameters supplied in extSemArray …","&lt; Number of handles and parameters supplied in extSemArray …","Total number of levels in the mipmap chain","The number of registers used by each thread of this …","&lt; Size in bytes of the window policy. CUDA driver may …","A handle representing NvSciBuf Object. Valid when type is …","","","Valid NvSciSyncObj. Must be non NULL","Offset into the memory object where the buffer’s base is","Offset into the memory object where the base level of the …","&lt; Device supports coherently accessing pageable memory …","&lt; Device accesses pageable memory via the host’s page …","","","&lt; Array of external semaphore signal parameters.","&lt; Array of external semaphore wait parameters.","&lt; PCI bus ID of the device","&lt; PCI device ID of the device","&lt; PCI domain ID of the device","&lt; Device’s maximum l2 persisting lines capacity setting …","","&lt; Pitch of allocated memory in bytes","&lt; Pitch of destination device pointer. Unused if height is …","","&lt; Pitch between two rows in bytes","&lt; in: array of memory access descriptors. Used to describe …","On devices where the L1 cache and shared memory use the …","&lt; Pointer to allocated memory","The PTX virtual architecture version for which the …","Texture read mode","&lt; 32-bit registers available per block","&lt; 32-bit registers available per multiprocessor","","&lt; Resource type","","&lt; reserved for future use, must be 0","","","","","","","","","","","","","","&lt; Shared memory reserved by CUDA driver per block in bytes","Perform sRGB-&gt;linear conversion during texture read","Perform sRGB-&gt;linear conversion during texture read","&lt; Shared memory","&lt; Dynamic shared-memory size per thread block in bytes","&lt; Shared memory available per block in bytes","&lt; Per device maximum shared memory per block usable by …","&lt; Shared memory available per multiprocessor in bytes","The size in bytes of statically-allocated shared memory …","&lt; Ratio of single precision performance (in floating-point …","Size of the memory allocation","Size of the buffer","&lt; Size in bytes","&lt; Source memory address","&lt; Source memory address","&lt; Source device","&lt; Source position offset","&lt; Source position offset","&lt; Pitched source memory address","&lt; Pitched source memory address","","","","&lt; Stream identifier","","&lt; Device supports stream priorities","&lt; Alignment requirements for surfaces","CUDA Surface reference","","&lt; 1 if device is a Tesla device using TCC driver, 0 …","&lt; Alignment requirement for textures","&lt; Pitch alignment requirement for texture references bound …","CUDA texture reference","","","","","","","","","Timeout in milliseconds to wait to acquire the mutexlt; Constant memory available on device in bytes","&lt; Global memory available on device in byteshe type of memory - ::cudaMemoryTypeUnregistered, …","&lt; Specifies the location type, which modifies the meaning …","Type of the handle","Type of the handlelt; Device shares a unified address space with the host","&lt; Argument to pass to the function","&lt; 16-byte unique identifier","&lt; Value to be set","Value of fence to be signaled","Value of fence to be waited on","&lt; w","&lt; Warp size in threads","&lt; Tile width in elements","&lt; Width in elements when referring to array memory, in …","&lt; Width of the row in elements","&lt; Width of the array in elements","&lt; Width of the resource view","","","Windows-specific LPSECURITYATTRIBUTES required when …","","&lt; x","&lt; x","&lt; Logical width of allocation in elements","","&lt; y","&lt; y","&lt; Logical height of allocation in elements","","&lt; z","&lt; z"],"i":[1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,8,8,8,9,9,10,11,11,0,0,0,0,0,0,0,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,12,16,16,17,17,17,17,17,17,17,17,17,17,17,18,19,20,0,21,22,22,22,18,23,23,23,23,23,23,23,24,24,25,26,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,30,31,31,32,0,0,0,0,26,0,33,33,33,33,33,33,33,33,0,20,34,34,35,35,35,36,36,37,19,38,38,38,38,38,38,38,0,0,0,0,0,0,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,42,42,42,37,43,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,43,43,44,44,44,44,44,44,44,45,45,45,46,45,45,45,45,45,45,46,47,47,47,47,47,48,48,49,49,49,50,50,0,0,26,50,50,26,51,44,44,44,44,52,52,0,52,52,53,53,53,53,30,54,54,54,55,55,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,57,57,57,18,18,58,58,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,10,0,60,60,0,0,0,0,0,0,0,0,0,0,0,0,61,1,62,0,0,0,63,63,61,64,65,62,66,67,68,69,70,71,72,73,74,61,75,76,72,77,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,75,96,97,98,99,100,64,101,102,103,104,105,106,107,108,65,109,110,111,73,74,112,113,114,115,116,76,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,71,138,63,139,140,141,61,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,72,77,174,175,176,177,178,179,180,181,182,183,184,185,186,187,62,66,2,188,56,189,22,190,191,192,193,194,195,196,197,198,199,17,18,37,20,57,58,39,45,46,3,54,55,42,4,32,21,8,7,36,34,35,51,200,201,202,15,14,13,47,16,67,1,53,203,24,26,50,10,30,48,49,204,205,206,52,207,208,33,60,31,209,12,19,68,69,210,211,212,23,40,43,44,70,41,25,11,5,59,6,38,9,28,29,27,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,75,96,97,98,99,100,64,101,102,103,104,105,106,107,108,65,109,110,111,73,74,112,113,114,115,116,76,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,71,138,63,139,140,141,61,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,72,77,174,175,176,177,178,179,180,181,182,183,184,185,186,187,62,66,2,188,56,189,22,190,191,192,193,194,195,196,197,198,199,17,18,37,20,57,58,39,45,46,3,54,55,42,4,32,21,8,7,36,34,35,51,200,201,202,15,14,13,47,16,67,1,53,203,24,26,50,10,30,48,49,204,205,206,52,207,208,33,60,31,209,12,19,68,69,210,211,212,23,40,43,44,70,41,25,11,5,59,6,38,9,28,29,27,141,63,76,61,61,184,62,61,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,75,96,97,98,99,100,64,101,102,103,104,105,106,107,108,65,109,110,111,73,74,112,113,114,115,116,76,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,71,138,63,139,140,141,61,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,72,77,174,175,176,177,178,179,180,181,182,183,184,185,186,187,62,66,2,188,56,189,22,190,191,192,193,194,195,196,197,198,199,17,18,37,20,57,58,39,45,46,3,54,55,42,4,32,21,8,7,36,34,35,51,200,201,202,15,14,13,47,16,67,1,53,203,24,26,50,10,30,48,49,204,205,206,52,207,208,33,60,31,209,12,19,68,69,210,211,212,23,40,43,44,70,41,25,11,5,59,6,38,9,28,29,27,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,75,96,97,98,99,100,64,101,102,103,104,105,106,107,108,65,109,110,111,73,74,112,113,114,115,116,76,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,71,138,63,139,140,141,61,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,72,77,174,175,176,177,178,179,180,181,182,183,184,185,186,187,62,66,2,188,56,189,22,190,191,192,193,194,195,196,197,198,199,17,18,37,20,57,58,39,45,46,3,54,55,42,4,32,21,8,7,36,34,35,51,200,201,202,15,14,13,47,16,67,1,53,203,24,26,50,10,30,48,49,204,205,206,52,207,208,33,60,31,209,12,19,68,69,210,211,212,23,40,43,44,70,41,25,11,5,59,6,38,9,28,29,27,61,61,61,61,76,1,1,1,65,61,61,0,0,95,95,95,185,185,185,185,0,0,0,0,0,0,0,0,0,0,0,0,0,182,182,182,0,173,173,173,125,125,0,0,81,81,81,81,81,0,0,121,121,121,121,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,140,140,140,140,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,203,0,0,0,0,0,0,0,0,0,0,179,179,179,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,144,144,144,144,144,144,144,0,0,0,0,0,0,150,150,150,150,150,150,150,150,150,150,0,0,0,0,0,0,0,0,0,0,0,0,0,186,186,126,126,0,0,0,129,128,128,183,183,0,0,0,0,0,0,117,117,117,0,0,118,118,118,118,0,0,0,0,0,0,127,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,180,180,180,180,180,180,180,180,180,180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,178,178,178,178,178,178,0,178,0,0,0,0,0,0,0,0,0,0,0,181,0,0,0,0,0,0,0,0,0,139,139,139,139,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,176,176,176,176,176,176,176,176,176,176,176,176,0,0,0,0,0,103,0,0,107,107,107,107,107,107,0,106,106,106,0,0,105,105,105,105,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,108,0,125,125,0,0,0,0,0,0,122,122,122,122,122,122,122,0,0,0,0,0,0,0,0,0,0,0,0,134,134,134,0,123,123,123,123,123,123,0,0,0,136,136,136,0,137,137,137,137,0,0,132,132,0,131,131,131,131,131,0,0,0,0,0,0,0,0,0,0,131,131,131,0,0,0,0,0,0,124,124,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,88,88,0,0,0,0,88,88,0,0,0,0,0,0,0,0,0,87,87,87,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,187,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,0,0,0,0,0,0,0,109,109,109,109,0,0,78,0,78,78,78,0,0,0,0,0,0,0,119,119,119,0,120,120,120,0,0,101,0,0,0,100,100,0,0,0,98,98,98,0,97,97,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,0,0,0,0,0,80,80,0,0,0,99,99,99,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,203,0,0,0,0,0,0,0,0,0,0,203,213,214,215,86,90,115,113,114,68,69,70,113,114,116,61,116,0,61,62,66,63,94,92,93,93,92,93,92,93,94,78,80,81,87,88,95,97,98,99,100,101,102,103,105,106,107,108,109,110,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,136,137,139,140,144,150,173,176,178,179,180,181,182,183,185,186,187,2,56,22,17,18,37,20,57,58,39,45,46,3,54,55,42,4,32,21,8,7,36,34,35,51,15,14,13,47,16,53,24,26,50,10,30,48,49,52,33,60,31,12,19,23,40,43,44,41,25,11,5,59,6,38,9,28,29,27,174,175,92,93,149,77,82,146,152,155,157,160,162,62,66,115,115,85,135,145,148,149,151,154,159,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,75,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,74,112,113,114,115,116,76,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,144,147,148,149,150,153,156,158,161,163,164,165,166,167,168,169,170,171,172,173,72,77,174,175,176,177,178,179,180,181,182,183,184,185,186,187,62,66,2,188,56,189,22,190,191,192,193,194,195,196,197,198,199,17,18,37,20,57,58,39,45,46,3,54,55,42,4,32,21,8,7,36,34,35,51,200,201,202,15,14,13,47,16,53,203,24,26,50,10,30,48,49,204,205,206,52,207,208,33,60,31,209,12,19,68,69,210,211,212,23,40,43,44,70,41,25,11,5,59,6,38,9,28,29,27,96,115,149,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,75,96,97,98,99,100,64,101,102,103,104,105,106,107,108,65,109,110,111,73,74,112,113,114,115,116,76,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,71,138,63,139,140,141,61,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,72,77,174,175,176,177,178,179,180,181,182,183,184,185,186,187,62,66,2,188,56,189,22,190,191,192,193,194,195,196,197,198,199,17,18,37,20,57,58,39,45,46,3,54,55,42,4,32,21,8,7,36,34,35,51,200,201,202,15,14,13,47,16,67,1,53,203,24,26,50,10,30,48,49,204,205,206,52,207,208,33,60,31,209,12,19,68,69,210,211,212,23,40,43,44,70,41,25,11,5,59,6,38,9,28,29,27,72,77,61,72,77,145,147,151,153,203,71,78,80,81,87,88,95,97,98,99,100,101,102,103,105,106,107,108,109,110,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,136,137,139,140,144,150,173,176,178,179,180,181,182,183,185,186,187,2,56,22,17,18,37,20,57,58,39,45,46,3,54,55,42,4,32,21,8,7,36,34,35,51,15,14,13,47,16,53,24,26,50,10,30,48,49,52,33,60,31,12,19,23,40,43,44,41,25,11,5,59,6,38,9,28,29,27,86,90,94,114,115,75,75,61,116,133,61,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,75,96,97,98,99,100,64,101,102,103,104,105,106,107,108,65,109,110,111,73,74,112,113,114,115,116,76,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,71,138,63,139,140,141,61,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,72,77,174,175,176,177,178,179,180,181,182,183,184,185,186,187,62,66,2,188,56,189,22,190,191,192,193,194,195,196,197,198,199,17,18,37,20,57,58,39,45,46,3,54,55,42,4,32,21,8,7,36,34,35,51,200,201,202,15,14,13,47,16,67,1,53,203,24,26,50,10,30,48,49,204,205,206,52,207,208,33,60,31,209,12,19,68,69,210,211,212,23,40,43,44,70,41,25,11,5,59,6,38,9,28,29,27,61,61,77,158,163,155,160,92,61,115,115,0,0,0,0,0,73,61,76,135,71,61,61,61,61,68,69,70,62,66,61,76,61,62,66,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,76,61,61,61,68,69,70,61,61,62,66,61,73,112,62,66,62,66,85,85,75,61,61,61,147,153,62,66,174,175,149,76,75,146,155,160,152,148,149,61,61,154,159,174,175,61,61,61,61,203,89,94,73,114,63,76,89,76,66,61,61,111,111,85,71,138,142,143,154,155,157,159,160,162,203,68,69,70,61,62,66,72,77,61,61,61,76,61,145,148,113,92,93,93,92,93,92,93,68,69,70,72,203,61,61,0,64,61,61,61,0,203,85,68,69,70,203,203,203,163,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,75,96,97,98,99,100,64,101,102,103,104,105,106,107,108,65,109,110,111,73,74,112,113,114,115,116,76,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,71,138,63,139,140,141,61,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,72,77,174,175,176,177,178,179,180,181,182,183,184,185,186,187,62,66,2,188,56,189,22,190,191,192,193,194,195,196,197,198,199,17,18,37,20,57,58,39,45,46,3,54,55,42,4,32,21,8,7,36,34,35,51,200,201,202,15,14,13,47,16,67,1,53,203,24,26,50,10,30,48,49,204,205,206,52,207,208,33,60,31,209,12,19,68,69,210,211,212,23,40,43,44,70,41,25,11,5,59,6,38,9,28,29,27,61,61,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,75,96,97,98,99,100,64,101,102,103,104,105,106,107,108,65,109,110,111,73,74,112,113,114,115,116,76,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,71,138,63,139,140,141,61,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,72,77,174,175,176,177,178,179,180,181,182,183,184,185,186,187,62,66,2,188,56,189,22,190,191,192,193,194,195,196,197,198,199,17,18,37,20,57,58,39,45,46,3,54,55,42,4,32,21,8,7,36,34,35,51,200,201,202,15,14,13,47,16,67,1,53,203,24,26,50,10,30,48,49,204,205,206,52,207,208,33,60,31,209,12,19,68,69,210,211,212,23,40,43,44,70,41,25,11,5,59,6,38,9,28,29,27,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,75,96,97,98,99,100,64,101,102,103,104,105,106,107,108,65,109,110,111,73,74,112,113,114,115,116,76,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,71,138,63,139,140,141,61,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,72,77,174,175,176,177,178,179,180,181,182,183,184,185,186,187,62,66,2,188,56,189,22,190,191,192,193,194,195,196,197,198,199,17,18,37,20,57,58,39,45,46,3,54,55,42,4,32,21,8,7,36,34,35,51,200,201,202,15,14,13,47,16,67,1,53,203,24,26,50,10,30,48,49,204,205,206,52,207,208,33,60,31,209,12,19,68,69,210,211,212,23,40,43,44,70,41,25,11,5,59,6,38,9,28,29,27,116,133,145,151,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,75,96,97,98,99,100,64,101,102,103,104,105,106,107,108,65,109,110,111,73,74,112,113,114,115,116,76,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,71,138,63,139,140,141,61,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,72,77,174,175,176,177,178,179,180,181,182,183,184,185,186,187,62,66,2,188,56,189,22,190,191,192,193,194,195,196,197,198,199,17,18,37,20,57,58,39,45,46,3,54,55,42,4,32,21,8,7,36,34,35,51,200,201,202,15,14,13,47,16,67,1,53,203,24,26,50,10,30,48,49,204,205,206,52,207,208,33,60,31,209,12,19,68,69,210,211,212,23,40,43,44,70,41,25,11,5,59,6,38,9,28,29,27,61,96,61,94,156,161,82,61,86,90,94,114,115,146,152,71,79,82,91,89,79,82,91,89,79,82,91],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,[[["cudaroundmode",4]],["cudaroundmode",4]],[[["dim3",3]],["dim3",3]],[[["cudaerror",4]],["cudaerror",4]],[[["cudachannelformatkind",4]],["cudachannelformatkind",4]],[[["cudachannelformatdesc",3]],["cudachannelformatdesc",3]],[[["cudaarray",3]],["cudaarray",3]],[[["cudamipmappedarray",3]],["cudamipmappedarray",3]],[[["cudaarraysparseproperties",3]],["cudaarraysparseproperties",3]],[[["cudaarraysparseproperties__bindgen_ty_1",3]],["cudaarraysparseproperties__bindgen_ty_1",3]],[[["cudamemorytype",4]],["cudamemorytype",4]],[[["cudamemcpykind",4]],["cudamemcpykind",4]],[[["cudapitchedptr",3]],["cudapitchedptr",3]],[[["cudaextent",3]],["cudaextent",3]],[[["cudapos",3]],["cudapos",3]],[[["cudamemcpy3dparms",3]],["cudamemcpy3dparms",3]],[[["cudamemcpy3dpeerparms",3]],["cudamemcpy3dpeerparms",3]],[[["cudamemsetparams",3]],["cudamemsetparams",3]],[[["cudaaccessproperty",4]],["cudaaccessproperty",4]],[[["cudaaccesspolicywindow",3]],["cudaaccesspolicywindow",3]],[[["cudahostnodeparams",3]],["cudahostnodeparams",3]],[[["cudastreamcapturestatus",4]],["cudastreamcapturestatus",4]],[[["cudastreamcapturemode",4]],["cudastreamcapturemode",4]],[[["cudasynchronizationpolicy",4]],["cudasynchronizationpolicy",4]],[[["cudastreamattrid",4]],["cudastreamattrid",4]],[[["cudastreamattrvalue",19]],["cudastreamattrvalue",19]],[[["cudastreamupdatecapturedependenciesflags",4]],["cudastreamupdatecapturedependenciesflags",4]],[[["cudauserobjectflags",4]],["cudauserobjectflags",4]],[[["cudauserobjectretainflags",4]],["cudauserobjectretainflags",4]],[[["cudagraphicsresource",3]],["cudagraphicsresource",3]],[[["cudagraphicsregisterflags",4]],["cudagraphicsregisterflags",4]],[[["cudagraphicsmapflags",4]],["cudagraphicsmapflags",4]],[[["cudagraphicscubeface",4]],["cudagraphicscubeface",4]],[[["cudakernelnodeattrid",4]],["cudakernelnodeattrid",4]],[[["cudakernelnodeattrvalue",19]],["cudakernelnodeattrvalue",19]],[[["cudaresourcetype",4]],["cudaresourcetype",4]],[[["cudaresourceviewformat",4]],["cudaresourceviewformat",4]],[[["cudaresourcedesc",3]],["cudaresourcedesc",3]],[[["cudaresourcedesc__bindgen_ty_1",19]],["cudaresourcedesc__bindgen_ty_1",19]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1",3]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1",3]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2",3]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2",3]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3",3]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3",3]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4",3]],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4",3]],[[["cudaresourceviewdesc",3]],["cudaresourceviewdesc",3]],[[["cudapointerattributes",3]],["cudapointerattributes",3]],[[["cudafuncattributes",3]],["cudafuncattributes",3]],[[["cudafuncattribute",4]],["cudafuncattribute",4]],[[["cudafunccache",4]],["cudafunccache",4]],[[["cudasharedmemconfig",4]],["cudasharedmemconfig",4]],[[["cudasharedcarveout",4]],["cudasharedcarveout",4]],[[["cudacomputemode",4]],["cudacomputemode",4]],[[["cudalimit",4]],["cudalimit",4]],[[["cudamemoryadvise",4]],["cudamemoryadvise",4]],[[["cudamemrangeattribute",4]],["cudamemrangeattribute",4]],[[["cudaoutputmode",4]],["cudaoutputmode",4]],[[["cudaflushgpudirectrdmawritesoptions",4]],["cudaflushgpudirectrdmawritesoptions",4]],[[["cudagpudirectrdmawritesordering",4]],["cudagpudirectrdmawritesordering",4]],[[["cudaflushgpudirectrdmawritesscope",4]],["cudaflushgpudirectrdmawritesscope",4]],[[["cudaflushgpudirectrdmawritestarget",4]],["cudaflushgpudirectrdmawritestarget",4]],[[["cudadeviceattr",4]],["cudadeviceattr",4]],[[["cudamempoolattr",4]],["cudamempoolattr",4]],[[["cudamemlocationtype",4]],["cudamemlocationtype",4]],[[["cudamemlocation",3]],["cudamemlocation",3]],[[["cudamemaccessflags",4]],["cudamemaccessflags",4]],[[["cudamemaccessdesc",3]],["cudamemaccessdesc",3]],[[["cudamemallocationtype",4]],["cudamemallocationtype",4]],[[["cudamemallocationhandletype",4]],["cudamemallocationhandletype",4]],[[["cudamempoolprops",3]],["cudamempoolprops",3]],[[["cudamempoolptrexportdata",3]],["cudamempoolptrexportdata",3]],[[["cudamemallocnodeparams",3]],["cudamemallocnodeparams",3]],[[["cudagraphmemattributetype",4]],["cudagraphmemattributetype",4]],[[["cudadevicep2pattr",4]],["cudadevicep2pattr",4]],[[["cuuuid_st",3]],["cuuuid_st",3]],[[["cudadeviceprop",3]],["cudadeviceprop",3]],[[["cudaipceventhandle_st",3]],["cudaipceventhandle_st",3]],[[["cudaipcmemhandle_st",3]],["cudaipcmemhandle_st",3]],[[["cudaexternalmemoryhandletype",4]],["cudaexternalmemoryhandletype",4]],[[["cudaexternalmemoryhandledesc",3]],["cudaexternalmemoryhandledesc",3]],[[["cudaexternalmemoryhandledesc__bindgen_ty_1",19]],["cudaexternalmemoryhandledesc__bindgen_ty_1",19]],[[["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1",3]],["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1",3]],[[["cudaexternalmemorybufferdesc",3]],["cudaexternalmemorybufferdesc",3]],[[["cudaexternalmemorymipmappedarraydesc",3]],["cudaexternalmemorymipmappedarraydesc",3]],[[["cudaexternalsemaphorehandletype",4]],["cudaexternalsemaphorehandletype",4]],[[["cudaexternalsemaphorehandledesc",3]],["cudaexternalsemaphorehandledesc",3]],[[["cudaexternalsemaphorehandledesc__bindgen_ty_1",19]],["cudaexternalsemaphorehandledesc__bindgen_ty_1",19]],[[["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1",3]],["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1",3]],[[["cudaexternalsemaphoresignalparams",3]],["cudaexternalsemaphoresignalparams",3]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1",3]],["cudaexternalsemaphoresignalparams__bindgen_ty_1",3]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1",3]],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1",3]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_2",19]],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_2",19]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3",3]],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3",3]],[[["cudaexternalsemaphorewaitparams",3]],["cudaexternalsemaphorewaitparams",3]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1",3]],["cudaexternalsemaphorewaitparams__bindgen_ty_1",3]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1",3]],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1",3]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_2",19]],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_2",19]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3",3]],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3",3]],[[["custream_st",3]],["custream_st",3]],[[["cuevent_st",3]],["cuevent_st",3]],[[["cuexternalmemory_st",3]],["cuexternalmemory_st",3]],[[["cuexternalsemaphore_st",3]],["cuexternalsemaphore_st",3]],[[["cugraph_st",3]],["cugraph_st",3]],[[["cugraphnode_st",3]],["cugraphnode_st",3]],[[["cuuserobject_st",3]],["cuuserobject_st",3]],[[["cufunc_st",3]],["cufunc_st",3]],[[["cumempoolhandle_st",3]],["cumempoolhandle_st",3]],[[["cudacgscope",4]],["cudacgscope",4]],[[["cudalaunchparams",3]],["cudalaunchparams",3]],[[["cudakernelnodeparams",3]],["cudakernelnodeparams",3]],[[["cudaexternalsemaphoresignalnodeparams",3]],["cudaexternalsemaphoresignalnodeparams",3]],[[["cudaexternalsemaphorewaitnodeparams",3]],["cudaexternalsemaphorewaitnodeparams",3]],[[["cudagraphnodetype",4]],["cudagraphnodetype",4]],[[["cugraphexec_st",3]],["cugraphexec_st",3]],[[["cudagraphexecupdateresult",4]],["cudagraphexecupdateresult",4]],[[["cudagetdriverentrypointflags",4]],["cudagetdriverentrypointflags",4]],[[["cudagraphdebugdotflags",4]],["cudagraphdebugdotflags",4]],[[["cudagraphinstantiateflags",4]],["cudagraphinstantiateflags",4]],[[["cudasurfaceboundarymode",4]],["cudasurfaceboundarymode",4]],[[["cudasurfaceformatmode",4]],["cudasurfaceformatmode",4]],[[["surfacereference",3]],["surfacereference",3]],[[["cudatextureaddressmode",4]],["cudatextureaddressmode",4]],[[["cudatexturefiltermode",4]],["cudatexturefiltermode",4]],[[["cudatexturereadmode",4]],["cudatexturereadmode",4]],[[["texturereference",3]],["texturereference",3]],[[["cudatexturedesc",3]],["cudatexturedesc",3]],[[["cudadatatype_t",4]],["cudadatatype_t",4]],[[["cudnncontext",3]],["cudnncontext",3]],[[["cudnnstatus_t",4]],["cudnnstatus_t",4]],[[["cudnnruntimetag_t",3]],["cudnnruntimetag_t",3]],[[["cudnnerrquerymode_t",4]],["cudnnerrquerymode_t",4]],[[["cudnntensorstruct",3]],["cudnntensorstruct",3]],[[["cudnnpoolingstruct",3]],["cudnnpoolingstruct",3]],[[["cudnnfilterstruct",3]],["cudnnfilterstruct",3]],[[["cudnnlrnstruct",3]],["cudnnlrnstruct",3]],[[["cudnnactivationstruct",3]],["cudnnactivationstruct",3]],[[["cudnnspatialtransformerstruct",3]],["cudnnspatialtransformerstruct",3]],[[["cudnnoptensorstruct",3]],["cudnnoptensorstruct",3]],[[["cudnnreducetensorstruct",3]],["cudnnreducetensorstruct",3]],[[["cudnnctclossstruct",3]],["cudnnctclossstruct",3]],[[["cudnntensortransformstruct",3]],["cudnntensortransformstruct",3]],[[["cudnndatatype_t",4]],["cudnndatatype_t",4]],[[["cudnnmathtype_t",4]],["cudnnmathtype_t",4]],[[["cudnnnanpropagation_t",4]],["cudnnnanpropagation_t",4]],[[["cudnndeterminism_t",4]],["cudnndeterminism_t",4]],[[["cudnntensorformat_t",4]],["cudnntensorformat_t",4]],[[["cudnnfoldingdirection_t",4]],["cudnnfoldingdirection_t",4]],[[["cudnnoptensorop_t",4]],["cudnnoptensorop_t",4]],[[["cudnnreducetensorop_t",4]],["cudnnreducetensorop_t",4]],[[["cudnnreducetensorindices_t",4]],["cudnnreducetensorindices_t",4]],[[["cudnnindicestype_t",4]],["cudnnindicestype_t",4]],[[["cudnnsoftmaxalgorithm_t",4]],["cudnnsoftmaxalgorithm_t",4]],[[["cudnnsoftmaxmode_t",4]],["cudnnsoftmaxmode_t",4]],[[["cudnnpoolingmode_t",4]],["cudnnpoolingmode_t",4]],[[["cudnnactivationmode_t",4]],["cudnnactivationmode_t",4]],[[["cudnnlrnmode_t",4]],["cudnnlrnmode_t",4]],[[["cudnndivnormmode_t",4]],["cudnndivnormmode_t",4]],[[["cudnnbatchnormmode_t",4]],["cudnnbatchnormmode_t",4]],[[["cudnnbatchnormops_t",4]],["cudnnbatchnormops_t",4]],[[["cudnnnormmode_t",4]],["cudnnnormmode_t",4]],[[["cudnnnormalgo_t",4]],["cudnnnormalgo_t",4]],[[["cudnnnormops_t",4]],["cudnnnormops_t",4]],[[["cudnnsamplertype_t",4]],["cudnnsamplertype_t",4]],[[["cudnndropoutstruct",3]],["cudnndropoutstruct",3]],[[["cudnnalgorithmstruct",3]],["cudnnalgorithmstruct",3]],[[["cudnnalgorithmperformancestruct",3]],["cudnnalgorithmperformancestruct",3]],[[["cudnnconvolutionfwdalgo_t",4]],["cudnnconvolutionfwdalgo_t",4]],[[["cudnnconvolutionbwdfilteralgo_t",4]],["cudnnconvolutionbwdfilteralgo_t",4]],[[["cudnnconvolutionbwddataalgo_t",4]],["cudnnconvolutionbwddataalgo_t",4]],[[["cudnnrnnalgo_t",4]],["cudnnrnnalgo_t",4]],[[["cudnnctclossalgo_t",4]],["cudnnctclossalgo_t",4]],[[["cudnnalgorithmunionstruct",3]],["cudnnalgorithmunionstruct",3]],[[["cudnnalgorithmunionstruct_algorithm",19]],["cudnnalgorithmunionstruct_algorithm",19]],[[["cudnnseverity_t",4]],["cudnnseverity_t",4]],[[["cudnndebugstruct",3]],["cudnndebugstruct",3]],[[["cudnnforwardmode_t",4]],["cudnnforwardmode_t",4]],[[["cudnnrnnmode_t",4]],["cudnnrnnmode_t",4]],[[["cudnnrnnbiasmode_t",4]],["cudnnrnnbiasmode_t",4]],[[["cudnndirectionmode_t",4]],["cudnndirectionmode_t",4]],[[["cudnnrnninputmode_t",4]],["cudnnrnninputmode_t",4]],[[["cudnnrnnclipmode_t",4]],["cudnnrnnclipmode_t",4]],[[["cudnnrnndatalayout_t",4]],["cudnnrnndatalayout_t",4]],[[["cudnnrnnstruct",3]],["cudnnrnnstruct",3]],[[["cudnnpersistentrnnplan",3]],["cudnnpersistentrnnplan",3]],[[["cudnnrnndatastruct",3]],["cudnnrnndatastruct",3]],[[["cudnnseqdataaxis_t",4]],["cudnnseqdataaxis_t",4]],[[["cudnnseqdatastruct",3]],["cudnnseqdatastruct",3]],[[["cudnnattnstruct",3]],["cudnnattnstruct",3]],[[["cudnnmultiheadattnweightkind_t",4]],["cudnnmultiheadattnweightkind_t",4]],[[["cudnnwgradmode_t",4]],["cudnnwgradmode_t",4]],[[["cudnnlossnormalizationmode_t",4]],["cudnnlossnormalizationmode_t",4]],[[["cudnnconvolutionstruct",3]],["cudnnconvolutionstruct",3]],[[["cudnnconvolutionmode_t",4]],["cudnnconvolutionmode_t",4]],[[["cudnnreordertype_t",4]],["cudnnreordertype_t",4]],[[["cudnnconvolutionfwdalgoperfstruct",3]],["cudnnconvolutionfwdalgoperfstruct",3]],[[["cudnnconvolutionbwddataalgoperfstruct",3]],["cudnnconvolutionbwddataalgoperfstruct",3]],[[["cudnnfusedopsconstparamstruct",3]],["cudnnfusedopsconstparamstruct",3]],[[["cudnnfusedopsvariantparamstruct",3]],["cudnnfusedopsvariantparamstruct",3]],[[["cudnnfusedopsplanstruct",3]],["cudnnfusedopsplanstruct",3]],[[["cudnnfusedops_t",4]],["cudnnfusedops_t",4]],[[["cudnnfusedopsconstparamlabel_t",4]],["cudnnfusedopsconstparamlabel_t",4]],[[["cudnnfusedopspointerplaceholder_t",4]],["cudnnfusedopspointerplaceholder_t",4]],[[["cudnnfusedopsvariantparamlabel_t",4]],["cudnnfusedopsvariantparamlabel_t",4]],[[["cudnnconvolutionbwdfilteralgoperfstruct",3]],["cudnnconvolutionbwdfilteralgoperfstruct",3]],[[["cudnnpointwisemode_t",4]],["cudnnpointwisemode_t",4]],[[["cudnngenstatsmode_t",4]],["cudnngenstatsmode_t",4]],[[["cudnnbnfinalizestatsmode_t",4]],["cudnnbnfinalizestatsmode_t",4]],[[["cudnnbackendattributename_t",4]],["cudnnbackendattributename_t",4]],[[["cudnnbackendattributetype_t",4]],["cudnnbackendattributetype_t",4]],[[["cudnnbackenddescriptortype_t",4]],["cudnnbackenddescriptortype_t",4]],[[["cudnnbackendnumericalnote_t",4]],["cudnnbackendnumericalnote_t",4]],[[["cudnnbackendbehaviornote_t",4]],["cudnnbackendbehaviornote_t",4]],[[["cudnnbackendknobtype_t",4]],["cudnnbackendknobtype_t",4]],[[["cudnnbackendlayouttype_t",4]],["cudnnbackendlayouttype_t",4]],[[["cudnnbackendheurmode_t",4]],["cudnnbackendheurmode_t",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["cudnnconvolutionfwdalgoperf_t",6]],[[],["cudnnconvolutionbwddataalgoperf_t",6]],[[],["cudnnconvolutionbwdfilteralgoperf_t",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cudaroundmode",4],["cudaroundmode",4]],["bool",0]],[[["cudaerror",4],["cudaerror",4]],["bool",0]],[[["cudachannelformatkind",4],["cudachannelformatkind",4]],["bool",0]],[[["cudamemorytype",4],["cudamemorytype",4]],["bool",0]],[[["cudamemcpykind",4],["cudamemcpykind",4]],["bool",0]],[[["cudaaccessproperty",4],["cudaaccessproperty",4]],["bool",0]],[[["cudastreamcapturestatus",4],["cudastreamcapturestatus",4]],["bool",0]],[[["cudastreamcapturemode",4],["cudastreamcapturemode",4]],["bool",0]],[[["cudasynchronizationpolicy",4],["cudasynchronizationpolicy",4]],["bool",0]],[[["cudastreamattrid",4],["cudastreamattrid",4]],["bool",0]],[[["cudastreamupdatecapturedependenciesflags",4],["cudastreamupdatecapturedependenciesflags",4]],["bool",0]],[[["cudauserobjectflags",4],["cudauserobjectflags",4]],["bool",0]],[[["cudauserobjectretainflags",4],["cudauserobjectretainflags",4]],["bool",0]],[[["cudagraphicsregisterflags",4],["cudagraphicsregisterflags",4]],["bool",0]],[[["cudagraphicsmapflags",4],["cudagraphicsmapflags",4]],["bool",0]],[[["cudagraphicscubeface",4],["cudagraphicscubeface",4]],["bool",0]],[[["cudakernelnodeattrid",4],["cudakernelnodeattrid",4]],["bool",0]],[[["cudaresourcetype",4],["cudaresourcetype",4]],["bool",0]],[[["cudaresourceviewformat",4],["cudaresourceviewformat",4]],["bool",0]],[[["cudafuncattribute",4],["cudafuncattribute",4]],["bool",0]],[[["cudafunccache",4],["cudafunccache",4]],["bool",0]],[[["cudasharedmemconfig",4],["cudasharedmemconfig",4]],["bool",0]],[[["cudasharedcarveout",4],["cudasharedcarveout",4]],["bool",0]],[[["cudacomputemode",4],["cudacomputemode",4]],["bool",0]],[[["cudalimit",4],["cudalimit",4]],["bool",0]],[[["cudamemoryadvise",4],["cudamemoryadvise",4]],["bool",0]],[[["cudamemrangeattribute",4],["cudamemrangeattribute",4]],["bool",0]],[[["cudaoutputmode",4],["cudaoutputmode",4]],["bool",0]],[[["cudaflushgpudirectrdmawritesoptions",4],["cudaflushgpudirectrdmawritesoptions",4]],["bool",0]],[[["cudagpudirectrdmawritesordering",4],["cudagpudirectrdmawritesordering",4]],["bool",0]],[[["cudaflushgpudirectrdmawritesscope",4],["cudaflushgpudirectrdmawritesscope",4]],["bool",0]],[[["cudaflushgpudirectrdmawritestarget",4],["cudaflushgpudirectrdmawritestarget",4]],["bool",0]],[[["cudadeviceattr",4],["cudadeviceattr",4]],["bool",0]],[[["cudamempoolattr",4],["cudamempoolattr",4]],["bool",0]],[[["cudamemlocationtype",4],["cudamemlocationtype",4]],["bool",0]],[[["cudamemaccessflags",4],["cudamemaccessflags",4]],["bool",0]],[[["cudamemallocationtype",4],["cudamemallocationtype",4]],["bool",0]],[[["cudamemallocationhandletype",4],["cudamemallocationhandletype",4]],["bool",0]],[[["cudagraphmemattributetype",4],["cudagraphmemattributetype",4]],["bool",0]],[[["cudadevicep2pattr",4],["cudadevicep2pattr",4]],["bool",0]],[[["cudaexternalmemoryhandletype",4],["cudaexternalmemoryhandletype",4]],["bool",0]],[[["cudaexternalsemaphorehandletype",4],["cudaexternalsemaphorehandletype",4]],["bool",0]],[[["cudacgscope",4],["cudacgscope",4]],["bool",0]],[[["cudagraphnodetype",4],["cudagraphnodetype",4]],["bool",0]],[[["cudagraphexecupdateresult",4],["cudagraphexecupdateresult",4]],["bool",0]],[[["cudagetdriverentrypointflags",4],["cudagetdriverentrypointflags",4]],["bool",0]],[[["cudagraphdebugdotflags",4],["cudagraphdebugdotflags",4]],["bool",0]],[[["cudagraphinstantiateflags",4],["cudagraphinstantiateflags",4]],["bool",0]],[[["cudasurfaceboundarymode",4],["cudasurfaceboundarymode",4]],["bool",0]],[[["cudasurfaceformatmode",4],["cudasurfaceformatmode",4]],["bool",0]],[[["cudatextureaddressmode",4],["cudatextureaddressmode",4]],["bool",0]],[[["cudatexturefiltermode",4],["cudatexturefiltermode",4]],["bool",0]],[[["cudatexturereadmode",4],["cudatexturereadmode",4]],["bool",0]],[[["cudadatatype_t",4],["cudadatatype_t",4]],["bool",0]],[[["cudnnstatus_t",4],["cudnnstatus_t",4]],["bool",0]],[[["cudnnerrquerymode_t",4],["cudnnerrquerymode_t",4]],["bool",0]],[[["cudnndatatype_t",4],["cudnndatatype_t",4]],["bool",0]],[[["cudnnmathtype_t",4],["cudnnmathtype_t",4]],["bool",0]],[[["cudnnnanpropagation_t",4],["cudnnnanpropagation_t",4]],["bool",0]],[[["cudnndeterminism_t",4],["cudnndeterminism_t",4]],["bool",0]],[[["cudnntensorformat_t",4],["cudnntensorformat_t",4]],["bool",0]],[[["cudnnfoldingdirection_t",4],["cudnnfoldingdirection_t",4]],["bool",0]],[[["cudnnoptensorop_t",4],["cudnnoptensorop_t",4]],["bool",0]],[[["cudnnreducetensorop_t",4],["cudnnreducetensorop_t",4]],["bool",0]],[[["cudnnreducetensorindices_t",4],["cudnnreducetensorindices_t",4]],["bool",0]],[[["cudnnindicestype_t",4],["cudnnindicestype_t",4]],["bool",0]],[[["cudnnsoftmaxalgorithm_t",4],["cudnnsoftmaxalgorithm_t",4]],["bool",0]],[[["cudnnsoftmaxmode_t",4],["cudnnsoftmaxmode_t",4]],["bool",0]],[[["cudnnpoolingmode_t",4],["cudnnpoolingmode_t",4]],["bool",0]],[[["cudnnactivationmode_t",4],["cudnnactivationmode_t",4]],["bool",0]],[[["cudnnlrnmode_t",4],["cudnnlrnmode_t",4]],["bool",0]],[[["cudnndivnormmode_t",4],["cudnndivnormmode_t",4]],["bool",0]],[[["cudnnbatchnormmode_t",4],["cudnnbatchnormmode_t",4]],["bool",0]],[[["cudnnbatchnormops_t",4],["cudnnbatchnormops_t",4]],["bool",0]],[[["cudnnnormmode_t",4],["cudnnnormmode_t",4]],["bool",0]],[[["cudnnnormalgo_t",4],["cudnnnormalgo_t",4]],["bool",0]],[[["cudnnnormops_t",4],["cudnnnormops_t",4]],["bool",0]],[[["cudnnsamplertype_t",4],["cudnnsamplertype_t",4]],["bool",0]],[[["cudnnconvolutionfwdalgo_t",4],["cudnnconvolutionfwdalgo_t",4]],["bool",0]],[[["cudnnconvolutionbwdfilteralgo_t",4],["cudnnconvolutionbwdfilteralgo_t",4]],["bool",0]],[[["cudnnconvolutionbwddataalgo_t",4],["cudnnconvolutionbwddataalgo_t",4]],["bool",0]],[[["cudnnrnnalgo_t",4],["cudnnrnnalgo_t",4]],["bool",0]],[[["cudnnctclossalgo_t",4],["cudnnctclossalgo_t",4]],["bool",0]],[[["cudnnseverity_t",4],["cudnnseverity_t",4]],["bool",0]],[[["cudnnforwardmode_t",4],["cudnnforwardmode_t",4]],["bool",0]],[[["cudnnrnnmode_t",4],["cudnnrnnmode_t",4]],["bool",0]],[[["cudnnrnnbiasmode_t",4],["cudnnrnnbiasmode_t",4]],["bool",0]],[[["cudnndirectionmode_t",4],["cudnndirectionmode_t",4]],["bool",0]],[[["cudnnrnninputmode_t",4],["cudnnrnninputmode_t",4]],["bool",0]],[[["cudnnrnnclipmode_t",4],["cudnnrnnclipmode_t",4]],["bool",0]],[[["cudnnrnndatalayout_t",4],["cudnnrnndatalayout_t",4]],["bool",0]],[[["cudnnseqdataaxis_t",4],["cudnnseqdataaxis_t",4]],["bool",0]],[[["cudnnmultiheadattnweightkind_t",4],["cudnnmultiheadattnweightkind_t",4]],["bool",0]],[[["cudnnwgradmode_t",4],["cudnnwgradmode_t",4]],["bool",0]],[[["cudnnlossnormalizationmode_t",4],["cudnnlossnormalizationmode_t",4]],["bool",0]],[[["cudnnconvolutionmode_t",4],["cudnnconvolutionmode_t",4]],["bool",0]],[[["cudnnreordertype_t",4],["cudnnreordertype_t",4]],["bool",0]],[[["cudnnfusedops_t",4],["cudnnfusedops_t",4]],["bool",0]],[[["cudnnfusedopsconstparamlabel_t",4],["cudnnfusedopsconstparamlabel_t",4]],["bool",0]],[[["cudnnfusedopspointerplaceholder_t",4],["cudnnfusedopspointerplaceholder_t",4]],["bool",0]],[[["cudnnfusedopsvariantparamlabel_t",4],["cudnnfusedopsvariantparamlabel_t",4]],["bool",0]],[[["cudnnpointwisemode_t",4],["cudnnpointwisemode_t",4]],["bool",0]],[[["cudnngenstatsmode_t",4],["cudnngenstatsmode_t",4]],["bool",0]],[[["cudnnbnfinalizestatsmode_t",4],["cudnnbnfinalizestatsmode_t",4]],["bool",0]],[[["cudnnbackendattributename_t",4],["cudnnbackendattributename_t",4]],["bool",0]],[[["cudnnbackendattributetype_t",4],["cudnnbackendattributetype_t",4]],["bool",0]],[[["cudnnbackenddescriptortype_t",4],["cudnnbackenddescriptortype_t",4]],["bool",0]],[[["cudnnbackendnumericalnote_t",4],["cudnnbackendnumericalnote_t",4]],["bool",0]],[[["cudnnbackendbehaviornote_t",4],["cudnnbackendbehaviornote_t",4]],["bool",0]],[[["cudnnbackendknobtype_t",4],["cudnnbackendknobtype_t",4]],["bool",0]],[[["cudnnbackendlayouttype_t",4],["cudnnbackendlayouttype_t",4]],["bool",0]],[[["cudnnbackendheurmode_t",4],["cudnnbackendheurmode_t",4]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cudaroundmode",4],["formatter",3]],["result",6]],[[["dim3",3],["formatter",3]],["result",6]],[[["cudaerror",4],["formatter",3]],["result",6]],[[["cudachannelformatkind",4],["formatter",3]],["result",6]],[[["cudachannelformatdesc",3],["formatter",3]],["result",6]],[[["cudaarray",3],["formatter",3]],["result",6]],[[["cudamipmappedarray",3],["formatter",3]],["result",6]],[[["cudaarraysparseproperties",3],["formatter",3]],["result",6]],[[["cudaarraysparseproperties__bindgen_ty_1",3],["formatter",3]],["result",6]],[[["cudamemorytype",4],["formatter",3]],["result",6]],[[["cudamemcpykind",4],["formatter",3]],["result",6]],[[["cudapitchedptr",3],["formatter",3]],["result",6]],[[["cudaextent",3],["formatter",3]],["result",6]],[[["cudapos",3],["formatter",3]],["result",6]],[[["cudamemcpy3dparms",3],["formatter",3]],["result",6]],[[["cudamemcpy3dpeerparms",3],["formatter",3]],["result",6]],[[["cudamemsetparams",3],["formatter",3]],["result",6]],[[["cudaaccessproperty",4],["formatter",3]],["result",6]],[[["cudaaccesspolicywindow",3],["formatter",3]],["result",6]],[[["cudahostnodeparams",3],["formatter",3]],["result",6]],[[["cudastreamcapturestatus",4],["formatter",3]],["result",6]],[[["cudastreamcapturemode",4],["formatter",3]],["result",6]],[[["cudasynchronizationpolicy",4],["formatter",3]],["result",6]],[[["cudastreamattrid",4],["formatter",3]],["result",6]],[[["cudastreamupdatecapturedependenciesflags",4],["formatter",3]],["result",6]],[[["cudauserobjectflags",4],["formatter",3]],["result",6]],[[["cudauserobjectretainflags",4],["formatter",3]],["result",6]],[[["cudagraphicsresource",3],["formatter",3]],["result",6]],[[["cudagraphicsregisterflags",4],["formatter",3]],["result",6]],[[["cudagraphicsmapflags",4],["formatter",3]],["result",6]],[[["cudagraphicscubeface",4],["formatter",3]],["result",6]],[[["cudakernelnodeattrid",4],["formatter",3]],["result",6]],[[["cudaresourcetype",4],["formatter",3]],["result",6]],[[["cudaresourceviewformat",4],["formatter",3]],["result",6]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",6]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2",3],["formatter",3]],["result",6]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3",3],["formatter",3]],["result",6]],[[["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4",3],["formatter",3]],["result",6]],[[["cudaresourceviewdesc",3],["formatter",3]],["result",6]],[[["cudapointerattributes",3],["formatter",3]],["result",6]],[[["cudafuncattributes",3],["formatter",3]],["result",6]],[[["cudafuncattribute",4],["formatter",3]],["result",6]],[[["cudafunccache",4],["formatter",3]],["result",6]],[[["cudasharedmemconfig",4],["formatter",3]],["result",6]],[[["cudasharedcarveout",4],["formatter",3]],["result",6]],[[["cudacomputemode",4],["formatter",3]],["result",6]],[[["cudalimit",4],["formatter",3]],["result",6]],[[["cudamemoryadvise",4],["formatter",3]],["result",6]],[[["cudamemrangeattribute",4],["formatter",3]],["result",6]],[[["cudaoutputmode",4],["formatter",3]],["result",6]],[[["cudaflushgpudirectrdmawritesoptions",4],["formatter",3]],["result",6]],[[["cudagpudirectrdmawritesordering",4],["formatter",3]],["result",6]],[[["cudaflushgpudirectrdmawritesscope",4],["formatter",3]],["result",6]],[[["cudaflushgpudirectrdmawritestarget",4],["formatter",3]],["result",6]],[[["cudadeviceattr",4],["formatter",3]],["result",6]],[[["cudamempoolattr",4],["formatter",3]],["result",6]],[[["cudamemlocationtype",4],["formatter",3]],["result",6]],[[["cudamemlocation",3],["formatter",3]],["result",6]],[[["cudamemaccessflags",4],["formatter",3]],["result",6]],[[["cudamemaccessdesc",3],["formatter",3]],["result",6]],[[["cudamemallocationtype",4],["formatter",3]],["result",6]],[[["cudamemallocationhandletype",4],["formatter",3]],["result",6]],[[["cudagraphmemattributetype",4],["formatter",3]],["result",6]],[[["cudadevicep2pattr",4],["formatter",3]],["result",6]],[[["cuuuid_st",3],["formatter",3]],["result",6]],[[["cudaexternalmemoryhandletype",4],["formatter",3]],["result",6]],[[["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",6]],[[["cudaexternalmemorybufferdesc",3],["formatter",3]],["result",6]],[[["cudaexternalmemorymipmappedarraydesc",3],["formatter",3]],["result",6]],[[["cudaexternalsemaphorehandletype",4],["formatter",3]],["result",6]],[[["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",6]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",6]],[[["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3",3],["formatter",3]],["result",6]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1",3],["formatter",3]],["result",6]],[[["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3",3],["formatter",3]],["result",6]],[[["custream_st",3],["formatter",3]],["result",6]],[[["cuevent_st",3],["formatter",3]],["result",6]],[[["cuexternalmemory_st",3],["formatter",3]],["result",6]],[[["cuexternalsemaphore_st",3],["formatter",3]],["result",6]],[[["cugraph_st",3],["formatter",3]],["result",6]],[[["cugraphnode_st",3],["formatter",3]],["result",6]],[[["cuuserobject_st",3],["formatter",3]],["result",6]],[[["cufunc_st",3],["formatter",3]],["result",6]],[[["cumempoolhandle_st",3],["formatter",3]],["result",6]],[[["cudacgscope",4],["formatter",3]],["result",6]],[[["cudalaunchparams",3],["formatter",3]],["result",6]],[[["cudakernelnodeparams",3],["formatter",3]],["result",6]],[[["cudaexternalsemaphoresignalnodeparams",3],["formatter",3]],["result",6]],[[["cudaexternalsemaphorewaitnodeparams",3],["formatter",3]],["result",6]],[[["cudagraphnodetype",4],["formatter",3]],["result",6]],[[["cugraphexec_st",3],["formatter",3]],["result",6]],[[["cudagraphexecupdateresult",4],["formatter",3]],["result",6]],[[["cudagetdriverentrypointflags",4],["formatter",3]],["result",6]],[[["cudagraphdebugdotflags",4],["formatter",3]],["result",6]],[[["cudagraphinstantiateflags",4],["formatter",3]],["result",6]],[[["cudasurfaceboundarymode",4],["formatter",3]],["result",6]],[[["cudasurfaceformatmode",4],["formatter",3]],["result",6]],[[["surfacereference",3],["formatter",3]],["result",6]],[[["cudatextureaddressmode",4],["formatter",3]],["result",6]],[[["cudatexturefiltermode",4],["formatter",3]],["result",6]],[[["cudatexturereadmode",4],["formatter",3]],["result",6]],[[["texturereference",3],["formatter",3]],["result",6]],[[["cudatexturedesc",3],["formatter",3]],["result",6]],[[["cudadatatype_t",4],["formatter",3]],["result",6]],[[["cudnncontext",3],["formatter",3]],["result",6]],[[["cudnnstatus_t",4],["formatter",3]],["result",6]],[[["cudnnruntimetag_t",3],["formatter",3]],["result",6]],[[["cudnnerrquerymode_t",4],["formatter",3]],["result",6]],[[["cudnntensorstruct",3],["formatter",3]],["result",6]],[[["cudnnpoolingstruct",3],["formatter",3]],["result",6]],[[["cudnnfilterstruct",3],["formatter",3]],["result",6]],[[["cudnnlrnstruct",3],["formatter",3]],["result",6]],[[["cudnnactivationstruct",3],["formatter",3]],["result",6]],[[["cudnnspatialtransformerstruct",3],["formatter",3]],["result",6]],[[["cudnnoptensorstruct",3],["formatter",3]],["result",6]],[[["cudnnreducetensorstruct",3],["formatter",3]],["result",6]],[[["cudnnctclossstruct",3],["formatter",3]],["result",6]],[[["cudnntensortransformstruct",3],["formatter",3]],["result",6]],[[["cudnndatatype_t",4],["formatter",3]],["result",6]],[[["cudnnmathtype_t",4],["formatter",3]],["result",6]],[[["cudnnnanpropagation_t",4],["formatter",3]],["result",6]],[[["cudnndeterminism_t",4],["formatter",3]],["result",6]],[[["cudnntensorformat_t",4],["formatter",3]],["result",6]],[[["cudnnfoldingdirection_t",4],["formatter",3]],["result",6]],[[["cudnnoptensorop_t",4],["formatter",3]],["result",6]],[[["cudnnreducetensorop_t",4],["formatter",3]],["result",6]],[[["cudnnreducetensorindices_t",4],["formatter",3]],["result",6]],[[["cudnnindicestype_t",4],["formatter",3]],["result",6]],[[["cudnnsoftmaxalgorithm_t",4],["formatter",3]],["result",6]],[[["cudnnsoftmaxmode_t",4],["formatter",3]],["result",6]],[[["cudnnpoolingmode_t",4],["formatter",3]],["result",6]],[[["cudnnactivationmode_t",4],["formatter",3]],["result",6]],[[["cudnnlrnmode_t",4],["formatter",3]],["result",6]],[[["cudnndivnormmode_t",4],["formatter",3]],["result",6]],[[["cudnnbatchnormmode_t",4],["formatter",3]],["result",6]],[[["cudnnbatchnormops_t",4],["formatter",3]],["result",6]],[[["cudnnnormmode_t",4],["formatter",3]],["result",6]],[[["cudnnnormalgo_t",4],["formatter",3]],["result",6]],[[["cudnnnormops_t",4],["formatter",3]],["result",6]],[[["cudnnsamplertype_t",4],["formatter",3]],["result",6]],[[["cudnndropoutstruct",3],["formatter",3]],["result",6]],[[["cudnnalgorithmstruct",3],["formatter",3]],["result",6]],[[["cudnnalgorithmperformancestruct",3],["formatter",3]],["result",6]],[[["cudnnconvolutionfwdalgo_t",4],["formatter",3]],["result",6]],[[["cudnnconvolutionbwdfilteralgo_t",4],["formatter",3]],["result",6]],[[["cudnnconvolutionbwddataalgo_t",4],["formatter",3]],["result",6]],[[["cudnnrnnalgo_t",4],["formatter",3]],["result",6]],[[["cudnnctclossalgo_t",4],["formatter",3]],["result",6]],[[["cudnnseverity_t",4],["formatter",3]],["result",6]],[[["cudnndebugstruct",3],["formatter",3]],["result",6]],[[["cudnnforwardmode_t",4],["formatter",3]],["result",6]],[[["cudnnrnnmode_t",4],["formatter",3]],["result",6]],[[["cudnnrnnbiasmode_t",4],["formatter",3]],["result",6]],[[["cudnndirectionmode_t",4],["formatter",3]],["result",6]],[[["cudnnrnninputmode_t",4],["formatter",3]],["result",6]],[[["cudnnrnnclipmode_t",4],["formatter",3]],["result",6]],[[["cudnnrnndatalayout_t",4],["formatter",3]],["result",6]],[[["cudnnrnnstruct",3],["formatter",3]],["result",6]],[[["cudnnpersistentrnnplan",3],["formatter",3]],["result",6]],[[["cudnnrnndatastruct",3],["formatter",3]],["result",6]],[[["cudnnseqdataaxis_t",4],["formatter",3]],["result",6]],[[["cudnnseqdatastruct",3],["formatter",3]],["result",6]],[[["cudnnattnstruct",3],["formatter",3]],["result",6]],[[["cudnnmultiheadattnweightkind_t",4],["formatter",3]],["result",6]],[[["cudnnwgradmode_t",4],["formatter",3]],["result",6]],[[["cudnnlossnormalizationmode_t",4],["formatter",3]],["result",6]],[[["cudnnconvolutionstruct",3],["formatter",3]],["result",6]],[[["cudnnconvolutionmode_t",4],["formatter",3]],["result",6]],[[["cudnnreordertype_t",4],["formatter",3]],["result",6]],[[["cudnnconvolutionfwdalgoperfstruct",3],["formatter",3]],["result",6]],[[["cudnnconvolutionbwddataalgoperfstruct",3],["formatter",3]],["result",6]],[[["cudnnfusedopsconstparamstruct",3],["formatter",3]],["result",6]],[[["cudnnfusedopsvariantparamstruct",3],["formatter",3]],["result",6]],[[["cudnnfusedopsplanstruct",3],["formatter",3]],["result",6]],[[["cudnnfusedops_t",4],["formatter",3]],["result",6]],[[["cudnnfusedopsconstparamlabel_t",4],["formatter",3]],["result",6]],[[["cudnnfusedopspointerplaceholder_t",4],["formatter",3]],["result",6]],[[["cudnnfusedopsvariantparamlabel_t",4],["formatter",3]],["result",6]],[[["cudnnconvolutionbwdfilteralgoperfstruct",3],["formatter",3]],["result",6]],[[["cudnnpointwisemode_t",4],["formatter",3]],["result",6]],[[["cudnngenstatsmode_t",4],["formatter",3]],["result",6]],[[["cudnnbnfinalizestatsmode_t",4],["formatter",3]],["result",6]],[[["cudnnbackendattributename_t",4],["formatter",3]],["result",6]],[[["cudnnbackendattributetype_t",4],["formatter",3]],["result",6]],[[["cudnnbackenddescriptortype_t",4],["formatter",3]],["result",6]],[[["cudnnbackendnumericalnote_t",4],["formatter",3]],["result",6]],[[["cudnnbackendbehaviornote_t",4],["formatter",3]],["result",6]],[[["cudnnbackendknobtype_t",4],["formatter",3]],["result",6]],[[["cudnnbackendlayouttype_t",4],["formatter",3]],["result",6]],[[["cudnnbackendheurmode_t",4],["formatter",3]],["result",6]],null,null,nullnull,null,null,null,null,null,null,null,null,null,null,[[["cudaroundmode",4],["",0]]],[[["cudaerror",4],["",0]]],[[["cudachannelformatkind",4],["",0]]],[[["cudamemorytype",4],["",0]]],[[["cudamemcpykind",4],["",0]]],[[["cudaaccessproperty",4],["",0]]],[[["cudastreamcapturestatus",4],["",0]]],[[["cudastreamcapturemode",4],["",0]]],[[["cudasynchronizationpolicy",4],["",0]]],[[["cudastreamattrid",4],["",0]]],[[["cudastreamupdatecapturedependenciesflags",4],["",0]]],[[["cudauserobjectflags",4],["",0]]],[[["cudauserobjectretainflags",4],["",0]]],[[["cudagraphicsregisterflags",4],["",0]]],[[["cudagraphicsmapflags",4],["",0]]],[[["cudagraphicscubeface",4],["",0]]],[[["cudakernelnodeattrid",4],["",0]]],[[["cudaresourcetype",4],["",0]]],[[["cudaresourceviewformat",4],["",0]]],[[["cudafuncattribute",4],["",0]]],[[["cudafunccache",4],["",0]]],[[["cudasharedmemconfig",4],["",0]]],[[["cudasharedcarveout",4],["",0]]],[[["cudacomputemode",4],["",0]]],[[["cudalimit",4],["",0]]],[[["cudamemoryadvise",4],["",0]]],[[["cudamemrangeattribute",4],["",0]]],[[["cudaoutputmode",4],["",0]]],[[["cudaflushgpudirectrdmawritesoptions",4],["",0]]],[[["cudagpudirectrdmawritesordering",4],["",0]]],[[["cudaflushgpudirectrdmawritesscope",4],["",0]]],[[["cudaflushgpudirectrdmawritestarget",4],["",0]]],[[["cudadeviceattr",4],["",0]]],[[["cudamempoolattr",4],["",0]]],[[["cudamemlocationtype",4],["",0]]],[[["cudamemaccessflags",4],["",0]]],[[["cudamemallocationtype",4],["",0]]],[[["cudamemallocationhandletype",4],["",0]]],[[["cudagraphmemattributetype",4],["",0]]],[[["cudadevicep2pattr",4],["",0]]],[[["cudaexternalmemoryhandletype",4],["",0]]],[[["cudaexternalsemaphorehandletype",4],["",0]]],[[["cudacgscope",4],["",0]]],[[["cudagraphnodetype",4],["",0]]],[[["cudagraphexecupdateresult",4],["",0]]],[[["cudagetdriverentrypointflags",4],["",0]]],[[["cudagraphdebugdotflags",4],["",0]]],[[["cudagraphinstantiateflags",4],["",0]]],[[["cudasurfaceboundarymode",4],["",0]]],[[["cudasurfaceformatmode",4],["",0]]],[[["cudatextureaddressmode",4],["",0]]],[[["cudatexturefiltermode",4],["",0]]],[[["cudatexturereadmode",4],["",0]]],[[["cudadatatype_t",4],["",0]]],[[["cudnnstatus_t",4],["",0]]],[[["cudnnerrquerymode_t",4],["",0]]],[[["cudnndatatype_t",4],["",0]]],[[["cudnnmathtype_t",4],["",0]]],[[["cudnnnanpropagation_t",4],["",0]]],[[["cudnndeterminism_t",4],["",0]]],[[["cudnntensorformat_t",4],["",0]]],[[["cudnnfoldingdirection_t",4],["",0]]],[[["cudnnoptensorop_t",4],["",0]]],[[["cudnnreducetensorop_t",4],["",0]]],[[["cudnnreducetensorindices_t",4],["",0]]],[[["cudnnindicestype_t",4],["",0]]],[[["cudnnsoftmaxalgorithm_t",4],["",0]]],[[["cudnnsoftmaxmode_t",4],["",0]]],[[["cudnnpoolingmode_t",4],["",0]]],[[["cudnnactivationmode_t",4],["",0]]],[[["cudnnlrnmode_t",4],["",0]]],[[["cudnndivnormmode_t",4],["",0]]],[[["cudnnbatchnormmode_t",4],["",0]]],[[["cudnnbatchnormops_t",4],["",0]]],[[["cudnnnormmode_t",4],["",0]]],[[["cudnnnormalgo_t",4],["",0]]],[[["cudnnnormops_t",4],["",0]]],[[["cudnnsamplertype_t",4],["",0]]],[[["cudnnconvolutionfwdalgo_t",4],["",0]]],[[["cudnnconvolutionbwdfilteralgo_t",4],["",0]]],[[["cudnnconvolutionbwddataalgo_t",4],["",0]]],[[["cudnnrnnalgo_t",4],["",0]]],[[["cudnnctclossalgo_t",4],["",0]]],[[["cudnnseverity_t",4],["",0]]],[[["cudnnforwardmode_t",4],["",0]]],[[["cudnnrnnmode_t",4],["",0]]],[[["cudnnrnnbiasmode_t",4],["",0]]],[[["cudnndirectionmode_t",4],["",0]]],[[["cudnnrnninputmode_t",4],["",0]]],[[["cudnnrnnclipmode_t",4],["",0]]],[[["cudnnrnndatalayout_t",4],["",0]]],[[["cudnnseqdataaxis_t",4],["",0]]],[[["cudnnmultiheadattnweightkind_t",4],["",0]]],[[["cudnnwgradmode_t",4],["",0]]],[[["cudnnlossnormalizationmode_t",4],["",0]]],[[["cudnnconvolutionmode_t",4],["",0]]],[[["cudnnreordertype_t",4],["",0]]],[[["cudnnfusedops_t",4],["",0]]],[[["cudnnfusedopsconstparamlabel_t",4],["",0]]],[[["cudnnfusedopspointerplaceholder_t",4],["",0]]],[[["cudnnfusedopsvariantparamlabel_t",4],["",0]]],[[["cudnnpointwisemode_t",4],["",0]]],[[["cudnngenstatsmode_t",4],["",0]]],[[["cudnnbnfinalizestatsmode_t",4],["",0]]],[[["cudnnbackendattributename_t",4],["",0]]],[[["cudnnbackendattributetype_t",4],["",0]]],[[["cudnnbackenddescriptortype_t",4],["",0]]],[[["cudnnbackendnumericalnote_t",4],["",0]]],[[["cudnnbackendbehaviornote_t",4],["",0]]],[[["cudnnbackendknobtype_t",4],["",0]]],[[["cudnnbackendlayouttype_t",4],["",0]]],[[["cudnnbackendheurmode_t",4],["",0]]],null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[19,"cudnnAlgorithmUnionStruct_Algorithm"],[4,"cudaDataType_t"],[4,"cudnnIndicesType_t"],[4,"cudnnActivationMode_t"],[4,"cudnnBackendAttributeName_t"],[4,"cudnnBackendDescriptorType_t"],[4,"cudnnBatchNormOps_t"],[4,"cudnnBatchNormMode_t"],[4,"cudnnBackendBehaviorNote_t"],[4,"cudnnDirectionMode_t"],[4,"cudnnBnFinalizeStatsMode_t"],[4,"cudnnConvolutionMode_t"],[4,"cudnnConvolutionBwdDataAlgo_t"],[4,"cudnnConvolutionBwdFilterAlgo_t"],[4,"cudnnConvolutionFwdAlgo_t"],[4,"cudnnCTCLossAlgo_t"],[4,"cudnnDataType_t"],[4,"cudnnMathType_t"],[4,"cudnnReorderType_t"],[4,"cudnnDeterminism_t"],[4,"cudnnDivNormMode_t"],[4,"cudnnErrQueryMode_t"],[4,"cudnnFusedOps_t"],[4,"cudnnForwardMode_t"],[4,"cudnnGenStatsMode_t"],[4,"cudnnRNNMode_t"],[4,"cudnnBackendHeurMode_t"],[4,"cudnnBackendKnobType_t"],[4,"cudnnBackendLayoutType_t"],[4,"cudnnRNNInputMode_t"],[4,"cudnnLossNormalizationMode_t"],[4,"cudnnLRNMode_t"],[4,"cudnnMultiHeadAttnWeightKind_t"],[4,"cudnnNormAlgo_t"],[4,"cudnnNormOps_t"],[4,"cudnnNormMode_t"],[4,"cudnnNanPropagation_t"],[4,"cudnnBackendNumericalNote_t"],[4,"cudnnOpTensorOp_t"],[4,"cudnnFusedOpsConstParamLabel_t"],[4,"cudnnPointwiseMode_t"],[4,"cudnnPoolingMode_t"],[4,"cudnnFusedOpsPointerPlaceHolder_t"],[4,"cudnnFusedOpsVariantParamLabel_t"],[4,"cudnnReduceTensorOp_t"],[4,"cudnnReduceTensorIndices_t"],[4,"cudnnRNNAlgo_t"],[4,"cudnnRNNClipMode_t"],[4,"cudnnRNNDataLayout_t"],[4,"cudnnRNNBiasMode_t"],[4,"cudnnSamplerType_t"],[4,"cudnnSeqDataAxis_t"],[4,"cudnnSeverity_t"],[4,"cudnnSoftmaxAlgorithm_t"],[4,"cudnnSoftmaxMode_t"],[4,"cudnnStatus_t"],[4,"cudnnTensorFormat_t"],[4,"cudnnFoldingDirection_t"],[4,"cudnnBackendAttributeType_t"],[4,"cudnnWgradMode_t"],[3,"cudaDeviceProp"],[3,"textureReference"],[3,"cudaMemAllocNodeParams"],[19,"cudaStreamAttrValue"],[19,"cudaKernelNodeAttrValue"],[3,"cudaTextureDesc"],[3,"cudnnAlgorithmUnionStruct"],[3,"cudnnConvolutionFwdAlgoPerfStruct"],[3,"cudnnConvolutionBwdDataAlgoPerfStruct"],[3,"cudnnConvolutionBwdFilterAlgoPerfStruct"],[3,"cudaMemPoolProps"],[3,"cudaLaunchParams"],[19,"cudaResourceDesc__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaAccessPolicyWindow"],[3,"cudaFuncAttributes"],[3,"cudaKernelNodeParams"],[4,"cudaRoundMode"],[3,"dim3"],[4,"cudaError"],[4,"cudaChannelFormatKind"],[3,"cudaChannelFormatDesc"],[3,"cudaArray"],[3,"cudaMipmappedArray"],[3,"cudaArraySparseProperties"],[3,"cudaArraySparseProperties__bindgen_ty_1"],[4,"cudaMemoryType"],[4,"cudaMemcpyKind"],[3,"cudaPitchedPtr"],[3,"cudaExtent"],[3,"cudaPos"],[3,"cudaMemcpy3DParms"],[3,"cudaMemcpy3DPeerParms"],[3,"cudaMemsetParams"],[4,"cudaAccessProperty"],[3,"cudaHostNodeParams"],[4,"cudaStreamCaptureStatus"],[4,"cudaStreamCaptureMode"],[4,"cudaSynchronizationPolicy"],[4,"cudaStreamAttrID"],[4,"cudaStreamUpdateCaptureDependenciesFlags"],[4,"cudaUserObjectFlags"],[4,"cudaUserObjectRetainFlags"],[3,"cudaGraphicsResource"],[4,"cudaGraphicsRegisterFlags"],[4,"cudaGraphicsMapFlags"],[4,"cudaGraphicsCubeFace"],[4,"cudaKernelNodeAttrID"],[4,"cudaResourceType"],[4,"cudaResourceViewFormat"],[3,"cudaResourceDesc"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4"],[3,"cudaResourceViewDesc"],[3,"cudaPointerAttributes"],[4,"cudaFuncAttribute"],[4,"cudaFuncCache"],[4,"cudaSharedMemConfig"],[4,"cudaSharedCarveout"],[4,"cudaComputeMode"],[4,"cudaLimit"],[4,"cudaMemoryAdvise"],[4,"cudaMemRangeAttribute"],[4,"cudaOutputMode"],[4,"cudaFlushGPUDirectRDMAWritesOptions"],[4,"cudaGPUDirectRDMAWritesOrdering"],[4,"cudaFlushGPUDirectRDMAWritesScope"],[4,"cudaFlushGPUDirectRDMAWritesTarget"],[4,"cudaDeviceAttr"],[4,"cudaMemPoolAttr"],[4,"cudaMemLocationType"],[3,"cudaMemLocation"],[4,"cudaMemAccessFlags"],[3,"cudaMemAccessDesc"],[4,"cudaMemAllocationType"],[4,"cudaMemAllocationHandleType"],[3,"cudaMemPoolPtrExportData"],[4,"cudaGraphMemAttributeType"],[4,"cudaDeviceP2PAttr"],[3,"CUuuid_st"],[3,"cudaIpcEventHandle_st"],[3,"cudaIpcMemHandle_st"],[4,"cudaExternalMemoryHandleType"],[3,"cudaExternalMemoryHandleDesc"],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1"],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalMemoryBufferDesc"],[3,"cudaExternalMemoryMipmappedArrayDesc"],[4,"cudaExternalSemaphoreHandleType"],[3,"cudaExternalSemaphoreHandleDesc"],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1"],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3"],[3,"cudaExternalSemaphoreWaitParams"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3"],[3,"CUstream_st"],[3,"CUevent_st"],[3,"CUexternalMemory_st"],[3,"CUexternalSemaphore_st"],[3,"CUgraph_st"],[3,"CUgraphNode_st"],[3,"CUuserObject_st"],[3,"CUfunc_st"],[3,"CUmemPoolHandle_st"],[4,"cudaCGScope"],[3,"cudaExternalSemaphoreSignalNodeParams"],[3,"cudaExternalSemaphoreWaitNodeParams"],[4,"cudaGraphNodeType"],[3,"CUgraphExec_st"],[4,"cudaGraphExecUpdateResult"],[4,"cudaGetDriverEntryPointFlags"],[4,"cudaGraphDebugDotFlags"],[4,"cudaGraphInstantiateFlags"],[4,"cudaSurfaceBoundaryMode"],[4,"cudaSurfaceFormatMode"],[3,"surfaceReference"],[4,"cudaTextureAddressMode"],[4,"cudaTextureFilterMode"],[4,"cudaTextureReadMode"],[3,"cudnnContext"],[3,"cudnnRuntimeTag_t"],[3,"cudnnTensorStruct"],[3,"cudnnPoolingStruct"],[3,"cudnnFilterStruct"],[3,"cudnnLRNStruct"],[3,"cudnnActivationStruct"],[3,"cudnnSpatialTransformerStruct"],[3,"cudnnOpTensorStruct"],[3,"cudnnReduceTensorStruct"],[3,"cudnnCTCLossStruct"],[3,"cudnnTensorTransformStruct"],[3,"cudnnDropoutStruct"],[3,"cudnnAlgorithmStruct"],[3,"cudnnAlgorithmPerformanceStruct"],[3,"cudnnDebugStruct"],[3,"cudnnRNNStruct"],[3,"cudnnPersistentRNNPlan"],[3,"cudnnRNNDataStruct"],[3,"cudnnSeqDataStruct"],[3,"cudnnAttnStruct"],[3,"cudnnConvolutionStruct"],[3,"cudnnFusedOpsConstParamStruct"],[3,"cudnnFusedOpsVariantParamStruct"],[3,"cudnnFusedOpsPlanStruct"],[6,"cudnnConvolutionFwdAlgoPerf_t"],[6,"cudnnConvolutionBwdDataAlgoPerf_t"],[6,"cudnnConvolutionBwdFilterAlgoPerf_t"]]},\
"rust_blas":{"doc":"BLAS bindings and wrappers.","t":[2,2,2,0,0,14,0,0,0,0,13,13,4,13,13,13,13,4,13,13,4,4,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,10,10,13,13,4,2,13,13,4,0,11,11,11,11,11,11,11,11,11,0,0,0,11,11,11,11,11,11,11,11,11,0,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,11,10,10,10,11,10,11,0,11,11,11,11,0,11,10,10,10,0,0,0,0,5,5,5,5,5,5,5,5,5,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,2,2,2,2,2,2,5,5,5,5,5,5,2,2,2,2,2,2,5,5,5,5,5,5,5,5,5,2,2,2,2,2,2,2,2,2,8,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,8,11,11,10,10,11,11,11,11,11,10,0,11,11,11,11,0,11,11,0,0,0,0,0,2,5,5,5,5,5,5,5,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,2,2,2,2,2,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,2,2,2,2,2,2,8,8,8,8,8,8,8,8,8,8,10,10,10,10,10,10,11,10,10,10,10,10,10],"n":["Matrix","Vector","VectorOperations","attribute","default","mat","math","matrix","matrix_vector","vector","ColMajor","ConjTrans","Diagonal","Left","Lower","NoTrans","NonUnit","Order","Right","RowMajor","Side","Symmetry","Trans","Transpose","Unit","Upper","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","from","from","from","from","from","into","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Default","neg_one","one","zero","H","H","Marker","Mat","T","T","Trans","bandmat","borrow","borrow","borrow_mut","borrow_mut","deref","from","from","into","into","mat","matrix","matrix_vector","mul","mul","mul","try_from","try_from","try_into","try_into","type_id","type_id","vector","0","0","BandMat","as_matrix","as_mut_ptr","as_ptr","borrow","borrow_mut","cols","cols","eq","fill","fmt","fmt","from","from","from_matrix","index","into","lead_dim","ne","new","push","rows","rows","set_cols","set_rows","set_sub_diagonals","set_sup_diagonals","sub_diagonals","sup_diagonals","to_matrix","to_string","try_from","try_into","type_id","Mat","as_mut_ptr","as_ptr","borrow","borrow_mut","cols","cols","eq","fill","fmt","fmt","from","from","index","into","ne","new","new_from_data","push","rows","rows","set_cols","set_rows","to_string","try_from","try_into","type_id","BandMatrix","Matrix","add","as_matrix","as_mut_ptr","as_ptr","bitxor","cols","lead_dim","ll","mul","mul","mul","mul","ops","order","rows","sub_diagonals","sup_diagonals","cblas_c","cblas_d","cblas_s","cblas_z","cblas_cgemm","cblas_chemm","cblas_cher2k","cblas_cherk","cblas_csymm","cblas_csyr2k","cblas_csyrk","cblas_ctrmm","cblas_ctrsm","gemm","hemm","her2k","herk","symm","syr2k","syrk","trmm","trsm","cblas_dgemm","cblas_dsymm","cblas_dsyr2k","cblas_dsyrk","cblas_dtrmm","cblas_dtrsm","gemm","strsm","symm","syr2k","syrk","trmm","cblas_sgemm","cblas_ssymm","cblas_ssyr2k","cblas_ssyrk","cblas_strmm","cblas_strsm","gemm","strsm","symm","syr2k","syrk","trmm","cblas_zgemm","cblas_zhemm","cblas_zher2k","cblas_zherk","cblas_zsymm","cblas_zsyr2k","cblas_zsyrk","cblas_ztrmm","cblas_ztrsm","gemm","hemm","her2k","herk","symm","syr2k","syrk","trmm","trsm","Gemm","Hemm","Her2k","Herk","Symm","Syr2k","Syrk","Trmm","Trsm","gemm","hemm","her2k","herk","symm","syr2k","syrk","trmm","trsm","ll","ops","cblas_c","cblas_d","cblas_s","cblas_z","cblas_cgbmv","cblas_cgemv","cblas_cgerc","cblas_cgeru","cblas_chbmv","cblas_chemv","cblas_cher","cblas_cher2","cblas_chpmv","cblas_chpr","cblas_chpr2","cblas_csymv","cblas_ctbmv","cblas_ctbsv","cblas_ctpmv","cblas_ctpsv","cblas_ctrmv","cblas_ctrsv","gbmv","gemv","gerc","geru","hbmv","hemv","her","her2","hpmv","hpr","hpr2","symv","tbmv","tbsv","tpmv","tpsv","trmv","trsv","cblas_dgbmv","cblas_dgemv","cblas_dger","cblas_dsbmv","cblas_dspmv","cblas_dspr","cblas_dspr2","cblas_dsymv","cblas_dsyr","cblas_dsyr2","cblas_dtbmv","cblas_dtbsv","cblas_dtpmv","cblas_dtpsv","cblas_dtrmv","cblas_dtrsv","gbmv","gemv","ger","sbmv","spmv","spr","spr2","symv","syr","syr2","tbmv","tbsv","tpmv","tpsv","trmv","trsv","cblas_sgbmv","cblas_sgemv","cblas_sger","cblas_ssbmv","cblas_sspmv","cblas_sspr","cblas_sspr2","cblas_ssymv","cblas_ssyr","cblas_ssyr2","cblas_stbmv","cblas_stbsv","cblas_stpmv","cblas_stpsv","cblas_strmv","cblas_strsv","gbmv","gemv","ger","sbmv","spmv","spr","spr2","symv","syr","syr2","tbmv","tbsv","tpmv","tpsv","trmv","trsv","cblas_zgbmv","cblas_zgemv","cblas_zgerc","cblas_zgeru","cblas_zhbmv","cblas_zhemv","cblas_zher","cblas_zher2","cblas_zhpmv","cblas_zhpr","cblas_zhpr2","cblas_zsymv","cblas_ztbmv","cblas_ztbsv","cblas_ztpmv","cblas_ztpsv","cblas_ztrmv","cblas_ztrsv","gbmv","gemv","gerc","geru","hbmv","hemv","her","her2","hpmv","hpr","hpr2","symv","tbmv","tbsv","tpmv","tpsv","trmv","trsv","Gbmv","Gemv","Ger","Gerc","Hbmv","Hemv","Her","Her2","Hpmv","Hpr","Hpr2","Sbmv","Spmv","Spr","Spr2","Symv","Syr","Syr2","Tbmv","Tbsv","Tpmv","Tpsv","gbmv","gemv","ger","gerc","hbmv","hemv","her","her2","hpmv","hpr","hpr2","sbmv","spmv","spr","spr2","symv","syr","syr2","tbmv","tbsv","tpmv","tpsv","Vector","VectorOperations","abs_sum","add","as_mut_ptr","as_ptr","bitxor","dot","inc","into","is_empty","len","ll","max_index","mul","mul","norm","ops","scale","update","cblas_c","cblas_d","cblas_i","cblas_s","cblas_z","axpy","cblas_caxpy","cblas_ccopy","cblas_cdotc_sub","cblas_cdotu_sub","cblas_cscal","cblas_csscal","cblas_cswap","copy","dotc_sub","dotu_sub","scal","sscal","swap","asum","axpy","cblas_dasum","cblas_daxpy","cblas_dcopy","cblas_ddot","cblas_dnrm2","cblas_drot","cblas_drotg","cblas_drotm","cblas_drotmg","cblas_dscal","cblas_dsdot","cblas_dswap","cblas_dzasum","cblas_dznrm2","copy","dot","dsdot","nrm2","rot","rotg","rotm","rotmg","scal","swap","zasum","znrm2","camax","cblas_icamax","cblas_idamax","cblas_isamax","cblas_izamax","damax","samax","zamax","asum","axpy","casum","cblas_sasum","cblas_saxpy","cblas_scasum","cblas_scnrm2","cblas_scopy","cblas_sdot","cblas_sdsdot","cblas_snrm2","cblas_srot","cblas_srotg","cblas_srotm","cblas_srotmg","cblas_sscal","cblas_sswap","cnrm2","copy","dot","dsdot","nrm2","rot","rotg","rotm","rotmg","scal","swap","axpy","cblas_zaxpy","cblas_zcopy","cblas_zdotc_sub","cblas_zdotu_sub","cblas_zdscal","cblas_zscal","cblas_zswap","copy","dotc_sub","dotu_sub","dscal","scal","swap","Asum","Axpy","Copy","Dot","Dotc","Iamax","Nrm2","Rot","Scal","Swap","asum","axpy","axpy_mat","copy","copy_mat","dot","dotc","iamax","nrm2","rot","scal","scal_mat","swap"],"q":["rust_blas","","","","","","","","","","rust_blas::attribute","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_blas::default","","","","rust_blas::math","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_blas::math::Trans","","rust_blas::math::bandmat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_blas::math::mat","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_blas::matrix","","","","","","","","","","","","","","","","","","","rust_blas::matrix::ll","","","","rust_blas::matrix::ll::cblas_c","","","","","","","","","","","","","","","","","","rust_blas::matrix::ll::cblas_d","","","","","","","","","","","","rust_blas::matrix::ll::cblas_s","","","","","","","","","","","","rust_blas::matrix::ll::cblas_z","","","","","","","","","","","","","","","","","","rust_blas::matrix::ops","","","","","","","","","","","","","","","","","","rust_blas::matrix_vector","","rust_blas::matrix_vector::ll","","","","rust_blas::matrix_vector::ll::cblas_c","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_blas::matrix_vector::ll::cblas_d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_blas::matrix_vector::ll::cblas_s","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_blas::matrix_vector::ll::cblas_z","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_blas::matrix_vector::ops","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_blas::vector","","","","","","","","","","","","","","","","","","","","rust_blas::vector::ll","","","","","rust_blas::vector::ll::cblas_c","","","","","","","","","","","","","","rust_blas::vector::ll::cblas_d","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_blas::vector::ll::cblas_i","","","","","","","","rust_blas::vector::ll::cblas_s","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_blas::vector::ll::cblas_z","","","","","","","","","","","","","","rust_blas::vector::ops","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Various attributes of vectors and matrices.","","","","Matrix operations.","Matrix-vector operations.","Vector operations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Banded Matrix A banded matrix is a matrix where only the …","","","","","","","","","","","","","Returns the argument unchanged.","Converts a <code>Mat</code> into a <code>BandMat</code>.","","Calls <code>U::from(self)</code>.","","","","","","","Set Columns Manually","Set Rows Manually","","","","","Converts a <code>BandMat</code> back into a <code>Mat</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Push a single value to matrix data backing","","","Set Matrix Columns Manually","Set Matrix Rows Manually","","","","","","Methods that allow a type to be used in BLAS functions as …","","","An unsafe pointer to a contiguous block of memory.","An unsafe pointer to a contiguous block of memory.","","Returns the number of columns.","The leading dimension of the matrix. Defaults to <code>cols</code> for …","Bindings for matrix functions.","","","","","Wrappers for matrix functions.","The order of the matrix. Defaults to <code>RowMajor</code>.","Returns the number of rows.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bindings for matrix-vector functions.","Wrappers for matrix-vector functions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","General band matrix multiply with vector.","General multiply with vector","General rank-1 update","General rank-1 update (using hermitian conjugate)","Hermitian band matrix multiply with vector","Hermitian multiply with vector","Hermitian rank-1 update","Hermitian rank-2 update","Hermitian packed matrix multiply with vector","Hermitian packed matrix rank-1 update","Hermitian packed matrix rank-2 update","Symmetric band matrix multiply with vector","Symmetric packed matrix multiply with vector","Symmetric packed matrix rank-1 update","Symmetric packed matrix rank-2 update","Symmetric multiply with vector","Symmetric rank-1 update","Symmetric rank-2 update","Triangular band matrix multiply with vector","Solve triangular band matrix system","Triangular packed matrix multiply with vector","Solve triangular packed matrix system","","","","","","","","","","","","","","","","","","","","","","","Methods that allow a type to be used in BLAS functions as …","","","","An unsafe mutable pointer to a contiguous block of memory.","An unsafe pointer to a contiguous block of memory.","","","The stride within the vector. For example, if <code>inc</code> returns …","","Check if Vector is empty","The number of elements in the vector.","Bindings for vector functions.","","","","","Wrappers for vector functions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the sum of the absolute values of elements in a …","Computes <code>a * x + y</code> and stores the result in <code>y</code>.","","Computes <code>x^T * y</code>.","Computes <code>x^H * y</code>.","Finds the index of the element with maximum absolute value …","Computes the L2 norm (Euclidian length) of a vector.","Applies a Givens rotation matrix to a pair of vectors, …","Computes <code>a * x</code> and stores the result in <code>x</code>.","Swaps the content of <code>x</code> and <code>y</code>.","","","","Copies <code>src.len()</code> elements of <code>src</code> into <code>dst</code>.","Copies the entire matrix <code>dst</code> into <code>src</code>.","","","","","","","","If they are different lengths, the shorter length is used."],"i":[0,0,0,0,0,0,0,0,0,0,1,2,0,3,4,2,5,0,3,1,0,0,2,0,5,4,1,2,4,5,3,1,2,4,5,3,1,2,4,5,3,1,2,4,5,3,1,2,4,5,3,1,2,4,5,3,1,2,4,5,3,1,2,4,5,3,1,2,4,5,3,1,2,4,5,3,0,6,6,6,7,8,0,0,7,8,0,0,7,8,7,8,7,7,8,7,8,0,0,0,7,7,7,7,8,7,8,7,8,0,9,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,13,14,13,13,13,13,13,0,13,13,13,13,0,13,13,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,16,17,18,19,20,21,22,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,0,0,46,47,47,47,47,46,47,47,47,47,0,46,47,47,46,0,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,49,50,50,51,52,53,54,55,56,56,57],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["order",4]],["order",4]],[[["transpose",4]],["transpose",4]],[[["symmetry",4]],["symmetry",4]],[[["diagonal",4]],["diagonal",4]],[[["side",4]],["side",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["trans",4]],["",0]],[[]],[[]],[[]],[[]],null,null,null,[[["trans",4,[["matrix",8]]],["matrix",8]],["mat",3]],[[["trans",4,[["vector",8]]],["vector",8]]],[[["trans",4,[["matrix",8]]],["trans",4,[["matrix",8]]]],["mat",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,[[["bandmat",3]],["matrix",8]],[[["bandmat",3]],["",0]],[[["bandmat",3]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["bandmat",3]],["u32",0]],[[["bandmat",3]],["usize",0]],[[["bandmat",3,[["partialeq",8]]],["bandmat",3]],["bool",0]],[[["clone",8],["usize",0],["usize",0]],["bandmat",3,[["clone",8]]]],[[["bandmat",3,[["debug",8]]],["formatter",3]],["result",6]],[[["bandmat",3,[["display",8]]],["formatter",3]],["result",6]],[[["bandmatrix",8]],["bandmat",3]],[[]],[[["mat",3,[["copy",8]]],["u32",0],["u32",0]],["bandmat",3,[["copy",8]]]],[[["bandmat",3],["usize",0]]],[[]],[[["bandmat",3]],["u32",0]],[[["bandmat",3,[["partialeq",8]]],["bandmat",3]],["bool",0]],[[["usize",0],["usize",0],["u32",0],["u32",0]],["bandmat",3]],[[["bandmat",3]]],[[["bandmat",3]],["u32",0]],[[["bandmat",3]],["usize",0]],[[["bandmat",3],["usize",0]]],[[["bandmat",3],["usize",0]]],[[["bandmat",3],["u32",0]]],[[["bandmat",3],["u32",0]]],[[["bandmat",3]],["u32",0]],[[["bandmat",3]],["u32",0]],[[["bandmat",3,[["",26,[["copy",8],["default",8]]]]]],["mat",3,[["",26,[["copy",8],["default",8]]]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["mat",3]],["",0]],[[["mat",3]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["mat",3]],["usize",0]],[[["mat",3]],["u32",0]],[[["mat",3,[["partialeq",8]]],["mat",3]],["bool",0]],[[["clone",8],["usize",0],["usize",0]],["mat",3,[["clone",8]]]],[[["mat",3,[["display",8]]],["formatter",3]],["result",6]],[[["mat",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[["matrix",8]],["mat",3]],[[["mat",3],["usize",0]]],[[]],[[["mat",3,[["partialeq",8]]],["mat",3]],["bool",0]],[[["usize",0],["usize",0]],["mat",3]],[[["usize",0],["usize",0],["vec",3]],["mat",3]],[[["mat",3]]],[[["mat",3]],["u32",0]],[[["mat",3]],["usize",0]],[[["mat",3],["usize",0]]],[[["mat",3],["usize",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["matrix",8],["matrix",8]],["mat",3]],[[["",0]],["matrix",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["matrix",8],["marker",4]],["trans",4,[["matrix",8]]]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,[[["matrix",8]],["mat",3]],[[["matrix",8],["vector",8]],["vec",3]],[[["matrix",8],["trans",4,[["matrix",8]]]],["mat",3]],[[["matrix",8],["matrix",8]],["mat",3]],null,[[["",0]],["order",4]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["transpose",4],["matrix",8],["transpose",4],["matrix",8],["",0],["matrix",8]]],[[["side",4],["symmetry",4],["",0],["matrix",8],["matrix",8],["",0],["matrix",8]]],[[["symmetry",4],["transpose",4],["complex",3],["matrix",8],["matrix",8],["",0],["matrix",8]]],[[["symmetry",4],["transpose",4],["",0],["matrix",8],["",0],["matrix",8]]],[[["side",4],["symmetry",4],["",0],["matrix",8],["matrix",8],["",0],["matrix",8]]],[[["symmetry",4],["transpose",4],["",0],["matrix",8],["matrix",8],["",0],["matrix",8]]],[[["symmetry",4],["transpose",4],["",0],["matrix",8],["",0],["matrix",8]]],[[["side",4],["symmetry",4],["transpose",4],["diagonal",4],["",0],["matrix",8],["matrix",8]]],[[["side",4],["symmetry",4],["transpose",4],["diagonal",4],["",0],["matrix",8],["matrix",8]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["transpose",4],["",0],["bandmatrix",8],["",0],["",0],["",0]]],[[["transpose",4],["",0],["matrix",8],["",0],["",0],["",0]]],[[["",0],["",0],["",0],["matrix",8]]],[[["",0],["",0],["",0],["matrix",8]]],[[["symmetry",4],["",0],["bandmatrix",8],["",0],["",0],["",0]]],[[["symmetry",4],["",0],["matrix",8],["",0],["",0],["",0]]],[[["symmetry",4],["",0],["",0],["matrix",8]]],[[["symmetry",4],["",0],["",0],["",0],["matrix",8]]],[[["symmetry",4],["",0],["matrix",8],["",0],["",0],["",0]]],[[["symmetry",4],["",0],["",0],["matrix",8]]],[[["symmetry",4],["",0],["",0],["",0],["matrix",8]]],[[["symmetry",4],["",0],["bandmatrix",8],["",0],["",0],["",0]]],[[["symmetry",4],["",0],["matrix",8],["",0],["",0],["",0]]],[[["symmetry",4],["",0],["",0],["matrix",8]]],[[["symmetry",4],["",0],["",0],["",0],["matrix",8]]],[[["symmetry",4],["",0],["matrix",8],["",0],["",0],["",0]]],[[["symmetry",4],["",0],["",0],["matrix",8]]],[[["symmetry",4],["",0],["",0],["",0],["matrix",8]]],[[["symmetry",4],["transpose",4],["diagonal",4],["bandmatrix",8],["",0]]],[[["symmetry",4],["transpose",4],["diagonal",4],["bandmatrix",8],["",0]]],[[["symmetry",4],["transpose",4],["diagonal",4],["matrix",8],["",0]]],[[["symmetry",4],["transpose",4],["diagonal",4],["matrix",8],["",0]]],null,null,[[["",0]]],[[["vector",8],["vector",8]],["vec",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["vector",8],["marker",4]],["trans",4,[["vector",8]]]],[[["",0],["vector",8]]],[[["",0]],["u32",0]],[[["vector",8]],["vec",3]],[[["",0]],["bool",0]],[[["",0]],["u32",0]],null,[[["",0]],["usize",0]],[[["vector",8],["trans",4,[["vector",8]]]],["mat",3]],[[["vector",8]],["vec",3]],[[["",0]]],null,[[["",0],["",0]],["",0]],[[["",0],["",0],["vector",8]],["",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0],["",0],["",0]]],[[["",0],["matrix",8],["matrix",8]]],[[["",0],["",0]]],[[["matrix",8],["matrix",8]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["usize",0]],[[["",0]]],[[["",0],["",0],["",0],["",0]]],[[["",0],["",0]]],[[["",0],["matrix",8]]],[[["",0],["",0]]]],"p":[[4,"Order"],[4,"Transpose"],[4,"Side"],[4,"Symmetry"],[4,"Diagonal"],[8,"Default"],[4,"Trans"],[4,"Marker"],[13,"T"],[13,"H"],[3,"BandMat"],[3,"Mat"],[8,"Matrix"],[8,"BandMatrix"],[8,"Gemm"],[8,"Hemm"],[8,"Her2k"],[8,"Herk"],[8,"Symm"],[8,"Syr2k"],[8,"Syrk"],[8,"Trmm"],[8,"Trsm"],[8,"Gbmv"],[8,"Gemv"],[8,"Ger"],[8,"Gerc"],[8,"Hbmv"],[8,"Hemv"],[8,"Her"],[8,"Her2"],[8,"Hpmv"],[8,"Hpr"],[8,"Hpr2"],[8,"Sbmv"],[8,"Spmv"],[8,"Spr"],[8,"Spr2"],[8,"Symv"],[8,"Syr"],[8,"Syr2"],[8,"Tbmv"],[8,"Tbsv"],[8,"Tpmv"],[8,"Tpsv"],[8,"VectorOperations"],[8,"Vector"],[8,"Asum"],[8,"Axpy"],[8,"Copy"],[8,"Dot"],[8,"Dotc"],[8,"Iamax"],[8,"Nrm2"],[8,"Rot"],[8,"Scal"],[8,"Swap"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
