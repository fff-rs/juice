//! Defines the FFI for CUDA cuBLAS.
//!
// The lower part of the file is automatically generated by bindgen (see README).
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]

// CUDA types
pub type size_t = ::libc::c_ulong;
pub type cuFloatComplex = float2;
pub type cuComplex = cuFloatComplex;
pub type cuDoubleComplex = double2;

pub type cudaStream_t = *mut Struct_CUstream_st;

#[repr(C)]
#[derive(Copy)]
pub struct Struct_float2 {
    pub x: ::libc::c_float,
    pub y: ::libc::c_float,
}
impl ::std::clone::Clone for Struct_float2 {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_float2 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type float2 = Struct_float2;

#[repr(C)]
#[derive(Copy)]
pub struct Struct_double2 {
    pub x: ::libc::c_double,
    pub y: ::libc::c_double,
}
impl ::std::clone::Clone for Struct_double2 {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_double2 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type double2 = Struct_double2;

#[repr(C)]
#[derive(Copy)]
pub struct Struct_Unnamed6 {
    pub x: ::libc::c_ushort,
}
impl ::std::clone::Clone for Struct_Unnamed6 {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_Unnamed6 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type __half = Struct_Unnamed6;

pub enum Struct_CUstream_st { }

pub type cublasHandle_t = *mut Struct_cublasContext;

pub use self::Enum_Unnamed1 as cublasStatus_t;
pub use self::Enum_Unnamed2 as cublasFillMode_t;
pub use self::Enum_Unnamed3 as cublasDiagType_t;
pub use self::Enum_Unnamed4 as cublasSideMode_t;
pub use self::Enum_Unnamed5 as cublasOperation_t;
pub use self::Enum_Unnamed6 as cublasPointerMode_t;
pub use self::Enum_Unnamed7 as cublasAtomicsMode_t;
pub use self::Enum_Unnamed8 as cublasDataType_t;
// end of generated.header.rs
