window.SIDEBAR_ITEMS = {"enum":[["ConvBackwardDataAlgo","Different algorithms to compute the gradient with respect to the filter."],["ConvBackwardFilterAlgo","Different algorithms to compute the gradient with respect to the filter."],["ConvForwardAlgo","Different algorithms to compute the convolution forward algorithm."],["DirectionMode","Direction Mode for RNN [cudnnDirectionMode_t][1] [1]: https://docs.nvidia.com/deeplearning/sdk/cudnn-api/index.html#cudnnDirectionMode_t"],["MathType","Indicate if Tensor Core Operations are permitted [cudnnMathType_t][1] [1]: https://docs.nvidia.com/deeplearning/sdk/cudnn-api/index.html#cudnnMathType_t"],["RnnAlgorithm","Algorithm for RNN [cudnnRNNAlgo_t][1] [1]: https://docs.nvidia.com/deeplearning/sdk/cudnn-api/index.html#cudnnRNNAlgo_t"],["RnnInputMode","Input Modes for RNN [cudnnRNNInputMode_t][1] [1]: https://docs.nvidia.com/deeplearning/sdk/cudnn-api/index.html#cudnnRNNInputMode_t"],["RnnNetworkMode","Network Type for RNN Networks [cudnnRNNMOde_t][1] [1]: https://docs.nvidia.com/deeplearning/sdk/cudnn-api/index.html#cudnnRNNMode_t"],["RnnPaddingMode","Enables/Disables the padded input/output [cudnnRNNPaddingMode_t][1] [1]: https://docs.nvidia.com/deeplearning/sdk/cudnn-api/index.html#cudnnRNNPaddingMode_t"]],"macro":[["impl_ops_log_softmax_for","log softmax impl generation macro"],["impl_ops_lrn_for","lrn impl generation macro TODO itâ€™s all unimplemented!() right now"],["impl_ops_relu_for","relu impl generation macro"],["impl_ops_sigmoid_for","sigmoid impl generation macro"],["impl_ops_softmax_for","softmax impl generation macro"],["impl_ops_tanh_for","tanh impl generation macro"]],"mod":[["frameworks","Provides the specific Framework implementations for the Library Operations."]],"trait":[["Convolution","Provides the functionality for a Backend to support Convolution operations."],["ConvolutionConfig","Provides Convolution Config functionality."],["Dropout","Provides the functionality for a Backend to support Dropout operations."],["LRN","Provides the functionality for a Backend to support Local Response Normalization operations."],["LogSoftmax","Provides the functionality for a Backend to support LogSoftmax operations."],["NN","Provides the functionality for a backend to support Neural Network related operations."],["NNOperationConfig","Provides generic NN Operation Config functionality."],["Pooling","Provides the functionality for a Backend to support Pooling operations."],["Relu","Provides the functionality for a Backend to support ReLU operations."],["ReluPointwise","Provides the functionality for pointwise ReLU operations (overwrites the input with the result of the operation)."],["Rnn","Provide the functionality for a Backend to support RNN operations"],["RnnConfig","Provides Rnn Config functionality."],["Sigmoid","Provides the functionality for a Backend to support Sigmoid operations."],["SigmoidPointwise","Provides the functionality for pointwise Sigmoid operations (overwrites the input with the result of the operation)."],["Softmax","Provides the functionality for a Backend to support Softmax operations."],["Tanh","Provides the functionality for a Backend to support TanH operations."],["TanhPointwise","Provides the functionality for pointwise ReLU operations (overwrites the input with the result of the operation)."]]};