(function() {var implementors = {};
implementors["coaster_nn"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"coaster/plugin/enum.Error.html\" title=\"enum coaster::plugin::Error\">Error</a>&gt; for <a class=\"enum\" href=\"coaster_nn/frameworks/cuda/enum.WrappingError.html\" title=\"enum coaster_nn::frameworks::cuda::WrappingError\">WrappingError</a>","synthetic":false,"types":["coaster_nn::frameworks::cuda::WrappingError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"coaster/error/enum.Error.html\" title=\"enum coaster::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"coaster_nn/frameworks/cuda/enum.WrappingError.html\" title=\"enum coaster_nn::frameworks::cuda::WrappingError\">WrappingError</a>","synthetic":false,"types":["coaster_nn::frameworks::cuda::WrappingError"]}];
implementors["juice"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"juice/layer/enum.LayerType.html\" title=\"enum juice::layer::LayerType\">LayerType</a>&gt; for <a class=\"struct\" href=\"juice/layers/common/convolution/struct.ConvolutionConfig.html\" title=\"struct juice::layers::common::convolution::ConvolutionConfig\">ConvolutionConfig</a>","synthetic":false,"types":["juice::layers::common::convolution::ConvolutionConfig"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"juice/layer/enum.LayerType.html\" title=\"enum juice::layer::LayerType\">LayerType</a>&gt; for <a class=\"struct\" href=\"juice/layers/common/dropout/struct.DropoutConfig.html\" title=\"struct juice::layers::common::dropout::DropoutConfig\">DropoutConfig</a>","synthetic":false,"types":["juice::layers::common::dropout::DropoutConfig"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"juice/layer/enum.LayerType.html\" title=\"enum juice::layer::LayerType\">LayerType</a>&gt; for <a class=\"struct\" href=\"juice/layers/common/linear/struct.LinearConfig.html\" title=\"struct juice::layers::common::linear::LinearConfig\">LinearConfig</a>","synthetic":false,"types":["juice::layers::common::linear::LinearConfig"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"juice/layer/enum.LayerType.html\" title=\"enum juice::layer::LayerType\">LayerType</a>&gt; for <a class=\"struct\" href=\"juice/layers/common/pooling/struct.PoolingConfig.html\" title=\"struct juice::layers::common::pooling::PoolingConfig\">PoolingConfig</a>","synthetic":false,"types":["juice::layers::common::pooling::PoolingConfig"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"juice/layer/enum.LayerType.html\" title=\"enum juice::layer::LayerType\">LayerType</a>&gt; for <a class=\"struct\" href=\"juice/layers/common/rnn/struct.RnnConfig.html\" title=\"struct juice::layers::common::rnn::RnnConfig\">RnnConfig</a>","synthetic":false,"types":["juice::layers::common::rnn::RnnConfig"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"juice/layer/enum.LayerType.html\" title=\"enum juice::layer::LayerType\">LayerType</a>&gt; for <a class=\"struct\" href=\"juice/layers/container/sequential/struct.SequentialConfig.html\" title=\"struct juice::layers::container::sequential::SequentialConfig\">SequentialConfig</a>","synthetic":false,"types":["juice::layers::container::sequential::SequentialConfig"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"juice/layer/enum.LayerType.html\" title=\"enum juice::layer::LayerType\">LayerType</a>&gt; for <a class=\"struct\" href=\"juice/layers/loss/negative_log_likelihood/struct.NegativeLogLikelihoodConfig.html\" title=\"struct juice::layers::loss::negative_log_likelihood::NegativeLogLikelihoodConfig\">NegativeLogLikelihoodConfig</a>","synthetic":false,"types":["juice::layers::loss::negative_log_likelihood::NegativeLogLikelihoodConfig"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"juice/layer/enum.LayerType.html\" title=\"enum juice::layer::LayerType\">LayerType</a>&gt; for <a class=\"struct\" href=\"juice/layers/utility/reshape/struct.ReshapeConfig.html\" title=\"struct juice::layers::utility::reshape::ReshapeConfig\">ReshapeConfig</a>","synthetic":false,"types":["juice::layers::utility::reshape::ReshapeConfig"]}];
implementors["rust_blas"] = [{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.63.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.63.0/alloc/alloc/struct.Global.html\" title=\"struct alloc::alloc::Global\">Global</a>&gt;&gt; for &amp;'a dyn <a class=\"trait\" href=\"rust_blas/vector/trait.Vector.html\" title=\"trait rust_blas::vector::Vector\">Vector</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"rust_blas/vector/ops/trait.Copy.html\" title=\"trait rust_blas::vector::ops::Copy\">Copy</a>,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()